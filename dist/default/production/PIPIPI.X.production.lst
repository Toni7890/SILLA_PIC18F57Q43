

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Jul 19 10:22:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK7,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	nvBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,inline
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1,group=2
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1,group=2
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1,group=3
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1,group=3
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1,group=3
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1,group=3
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1,group=2
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1,group=3
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1,group=2
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1,group=2
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1,group=2
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1,inline
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1,group=2
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1,group=2
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1,group=2
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,group=2
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,group=2
   119                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1,group=2
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=4,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1,inline
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1,inline
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1,inline
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1,inline
   136                           	psect	text117,global,reloc=4,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1,inline
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1,inline
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1,inline
   145                           	psect	text126,global,reloc=4,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=4,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=4,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=4,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=4,class=CODE,space=0,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,space=0,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,space=0,delta=1
   155                           	psect	text136,global,reloc=4,class=CODE,space=0,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,space=0,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,space=0,delta=1
   158                           	psect	text139,global,reloc=4,class=CODE,space=0,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,space=0,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,space=0,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,space=0,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,space=0,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,space=0,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,space=0,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,space=0,delta=1
   166                           	psect	text147,global,reloc=4,class=CODE,space=0,delta=1
   167                           	psect	text148,global,reloc=2,class=CODE,space=0,delta=1
   168                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
   169                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   170                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   171                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   172   000000                     
   173                           ; Generated 24/03/2025 GMT
   174                           ; 
   175                           ; Copyright © 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
   176                           ; All rights reserved.
   177                           ; 
   178                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   179                           ; 
   180                           ; Redistribution and use in source and binary forms, with or without modification, are
   181                           ; permitted provided that the following conditions are met:
   182                           ; 
   183                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   184                           ;        conditions and the following disclaimer.
   185                           ; 
   186                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   187                           ;        of conditions and the following disclaimer in the documentation and/or other
   188                           ;        materials provided with the distribution. Publication is not required when
   189                           ;        this file is used in an embedded application.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F57Q43 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207   0004E0                     bsr             equ	1248
   208   0004E9                     fsr0            equ	1257
   209   0004EA                     fsr0h           equ	1258
   210   0004E9                     fsr0l           equ	1257
   211   0004E1                     fsr1            equ	1249
   212   0004E2                     fsr1h           equ	1250
   213   0004E1                     fsr1l           equ	1249
   214   0004D9                     fsr2            equ	1241
   215   0004DA                     fsr2h           equ	1242
   216   0004D9                     fsr2l           equ	1241
   217   0004EF                     indf0           equ	1263
   218   0004E7                     indf1           equ	1255
   219   0004DF                     indf2           equ	1247
   220   0004D6                     intcon          equ	1238
   221   000041                     nvmcon          equ	65
   222   0004F9                     pcl             equ	1273
   223   0004FA                     pclath          equ	1274
   224   0004FB                     pclatu          equ	1275
   225   0004EB                     plusw0          equ	1259
   226   0004E3                     plusw1          equ	1251
   227   0004DB                     plusw2          equ	1243
   228   0004ED                     postdec0        equ	1261
   229   0004E5                     postdec1        equ	1253
   230   0004DD                     postdec2        equ	1245
   231   0004EE                     postinc0        equ	1262
   232   0004E6                     postinc1        equ	1254
   233   0004DE                     postinc2        equ	1246
   234   0004EC                     preinc0         equ	1260
   235   0004E4                     preinc1         equ	1252
   236   0004DC                     preinc2         equ	1244
   237   0004F3                     prod            equ	1267
   238   0004F4                     prodh           equ	1268
   239   0004F3                     prodl           equ	1267
   240   0004D8                     status          equ	1240
   241   0004F5                     tablat          equ	1269
   242   0004F6                     tblptr          equ	1270
   243   0004F7                     tblptrh         equ	1271
   244   0004F6                     tblptrl         equ	1270
   245   0004F8                     tblptru         equ	1272
   246   0004FD                     tosl            equ	1277
   247   0004E8                     wreg            equ	1256
   248   000039                     CLKRCON         equ	57	;# 
   249   00003A                     CLKRCLK         equ	58	;# 
   250   000040                     NVMCON0         equ	64	;# 
   251   000041                     NVMCON1         equ	65	;# 
   252   000042                     NVMLOCK         equ	66	;# 
   253   000043                     NVMADR          equ	67	;# 
   254   000043                     NVMADRL         equ	67	;# 
   255   000044                     NVMADRH         equ	68	;# 
   256   000045                     NVMADRU         equ	69	;# 
   257   000046                     NVMDAT          equ	70	;# 
   258   000046                     NVMDATL         equ	70	;# 
   259   000047                     NVMDATH         equ	71	;# 
   260   000048                     VREGCON         equ	72	;# 
   261   000049                     BORCON          equ	73	;# 
   262   00004A                     HLVDCON0        equ	74	;# 
   263   00004B                     HLVDCON1        equ	75	;# 
   264   00004C                     ZCDCON          equ	76	;# 
   265   000060                     PMD0            equ	96	;# 
   266   000061                     PMD1            equ	97	;# 
   267   000063                     PMD3            equ	99	;# 
   268   000064                     PMD4            equ	100	;# 
   269   000065                     PMD5            equ	101	;# 
   270   000066                     PMD6            equ	102	;# 
   271   000067                     PMD7            equ	103	;# 
   272   000068                     PMD8            equ	104	;# 
   273   00006A                     MD1CON0         equ	106	;# 
   274   00006B                     MD1CON1         equ	107	;# 
   275   00006C                     MD1SRC          equ	108	;# 
   276   00006D                     MD1CARL         equ	109	;# 
   277   00006E                     MD1CARH         equ	110	;# 
   278   00006F                     CMOUT           equ	111	;# 
   279   000070                     CM1CON0         equ	112	;# 
   280   000071                     CM1CON1         equ	113	;# 
   281   000072                     CM1NCH          equ	114	;# 
   282   000073                     CM1PCH          equ	115	;# 
   283   000074                     CM2CON0         equ	116	;# 
   284   000075                     CM2CON1         equ	117	;# 
   285   000076                     CM2NCH          equ	118	;# 
   286   000077                     CM2PCH          equ	119	;# 
   287   000078                     WDTCON0         equ	120	;# 
   288   000079                     WDTCON1         equ	121	;# 
   289   00007A                     WDTPS           equ	122	;# 
   290   00007A                     WDTPSL          equ	122	;# 
   291   00007B                     WDTPSH          equ	123	;# 
   292   00007C                     WDTTMR          equ	124	;# 
   293   00007D                     DAC1DAT         equ	125	;# 
   294   00007D                     DAC1DATL        equ	125	;# 
   295   00007F                     DAC1CON         equ	127	;# 
   296   000080                     SPI1RXB         equ	128	;# 
   297   000081                     SPI1TXB         equ	129	;# 
   298   000082                     SPI1TCNT        equ	130	;# 
   299   000082                     SPI1TCNTL       equ	130	;# 
   300   000083                     SPI1TCNTH       equ	131	;# 
   301   000084                     SPI1CON0        equ	132	;# 
   302   000085                     SPI1CON1        equ	133	;# 
   303   000086                     SPI1CON2        equ	134	;# 
   304   000087                     SPI1STATUS      equ	135	;# 
   305   000088                     SPI1TWIDTH      equ	136	;# 
   306   000089                     SPI1BAUD        equ	137	;# 
   307   00008A                     SPI1INTF        equ	138	;# 
   308   00008B                     SPI1INTE        equ	139	;# 
   309   00008C                     SPI1CLK         equ	140	;# 
   310   00008D                     SPI2RXB         equ	141	;# 
   311   00008E                     SPI2TXB         equ	142	;# 
   312   00008F                     SPI2TCNT        equ	143	;# 
   313   00008F                     SPI2TCNTL       equ	143	;# 
   314   000090                     SPI2TCNTH       equ	144	;# 
   315   000091                     SPI2CON0        equ	145	;# 
   316   000092                     SPI2CON1        equ	146	;# 
   317   000093                     SPI2CON2        equ	147	;# 
   318   000094                     SPI2STATUS      equ	148	;# 
   319   000095                     SPI2TWIDTH      equ	149	;# 
   320   000096                     SPI2BAUD        equ	150	;# 
   321   000097                     SPI2INTF        equ	151	;# 
   322   000098                     SPI2INTE        equ	152	;# 
   323   000099                     SPI2CLK         equ	153	;# 
   324   0000AC                     ACTCON          equ	172	;# 
   325   0000AD                     OSCCON1         equ	173	;# 
   326   0000AE                     OSCCON2         equ	174	;# 
   327   0000AF                     OSCCON3         equ	175	;# 
   328   0000B0                     OSCTUNE         equ	176	;# 
   329   0000B1                     OSCFRQ          equ	177	;# 
   330   0000B1                     OSCFREQ         equ	177	;# 
   331   0000B2                     OSCSTAT         equ	178	;# 
   332   0000B2                     OSCSTAT1        equ	178	;# 
   333   0000B3                     OSCEN           equ	179	;# 
   334   0000B4                     PRLOCK          equ	180	;# 
   335   0000B5                     SCANPR          equ	181	;# 
   336   0000B6                     DMA1PR          equ	182	;# 
   337   0000B7                     DMA2PR          equ	183	;# 
   338   0000B8                     DMA3PR          equ	184	;# 
   339   0000B9                     DMA4PR          equ	185	;# 
   340   0000BA                     DMA5PR          equ	186	;# 
   341   0000BB                     DMA6PR          equ	187	;# 
   342   0000BE                     MAINPR          equ	190	;# 
   343   0000BF                     ISRPR           equ	191	;# 
   344   0000D4                     CLCDATA         equ	212	;# 
   345   0000D5                     CLCSELECT       equ	213	;# 
   346   0000D6                     CLCnCON         equ	214	;# 
   347   0000D7                     CLCnPOL         equ	215	;# 
   348   0000D8                     CLCnSEL0        equ	216	;# 
   349   0000D9                     CLCnSEL1        equ	217	;# 
   350   0000DA                     CLCnSEL2        equ	218	;# 
   351   0000DB                     CLCnSEL3        equ	219	;# 
   352   0000DC                     CLCnGLS0        equ	220	;# 
   353   0000DD                     CLCnGLS1        equ	221	;# 
   354   0000DE                     CLCnGLS2        equ	222	;# 
   355   0000DF                     CLCnGLS3        equ	223	;# 
   356   0000E8                     DMASELECT       equ	232	;# 
   357   0000E9                     DMAnBUF         equ	233	;# 
   358   0000EA                     DMAnDCNT        equ	234	;# 
   359   0000EA                     DMAnDCNTL       equ	234	;# 
   360   0000EB                     DMAnDCNTH       equ	235	;# 
   361   0000EC                     DMAnDPTR        equ	236	;# 
   362   0000EC                     DMAnDPTRL       equ	236	;# 
   363   0000ED                     DMAnDPTRH       equ	237	;# 
   364   0000EE                     DMAnDSZ         equ	238	;# 
   365   0000EE                     DMAnDSZL        equ	238	;# 
   366   0000EF                     DMAnDSZH        equ	239	;# 
   367   0000F0                     DMAnDSA         equ	240	;# 
   368   0000F0                     DMAnDSAL        equ	240	;# 
   369   0000F1                     DMAnDSAH        equ	241	;# 
   370   0000F2                     DMAnSCNT        equ	242	;# 
   371   0000F2                     DMAnSCNTL       equ	242	;# 
   372   0000F3                     DMAnSCNTH       equ	243	;# 
   373   0000F4                     DMAnSPTR        equ	244	;# 
   374   0000F4                     DMAnSPTRL       equ	244	;# 
   375   0000F5                     DMAnSPTRH       equ	245	;# 
   376   0000F6                     DMAnSPTRU       equ	246	;# 
   377   0000F7                     DMAnSSZ         equ	247	;# 
   378   0000F7                     DMAnSSZL        equ	247	;# 
   379   0000F8                     DMAnSSZH        equ	248	;# 
   380   0000F9                     DMAnSSA         equ	249	;# 
   381   0000F9                     DMAnSSAL        equ	249	;# 
   382   0000FA                     DMAnSSAH        equ	250	;# 
   383   0000FB                     DMAnSSAU        equ	251	;# 
   384   0000FC                     DMAnCON0        equ	252	;# 
   385   0000FD                     DMAnCON1        equ	253	;# 
   386   0000FE                     DMAnAIRQ        equ	254	;# 
   387   0000FF                     DMAnSIRQ        equ	255	;# 
   388   000200                     PPSLOCK         equ	512	;# 
   389   000201                     RA0PPS          equ	513	;# 
   390   000202                     RA1PPS          equ	514	;# 
   391   000203                     RA2PPS          equ	515	;# 
   392   000204                     RA3PPS          equ	516	;# 
   393   000205                     RA4PPS          equ	517	;# 
   394   000206                     RA5PPS          equ	518	;# 
   395   000207                     RA6PPS          equ	519	;# 
   396   000208                     RA7PPS          equ	520	;# 
   397   000209                     RB0PPS          equ	521	;# 
   398   00020A                     RB1PPS          equ	522	;# 
   399   00020B                     RB2PPS          equ	523	;# 
   400   00020C                     RB3PPS          equ	524	;# 
   401   00020D                     RB4PPS          equ	525	;# 
   402   00020E                     RB5PPS          equ	526	;# 
   403   00020F                     RB6PPS          equ	527	;# 
   404   000210                     RB7PPS          equ	528	;# 
   405   000211                     RC0PPS          equ	529	;# 
   406   000212                     RC1PPS          equ	530	;# 
   407   000213                     RC2PPS          equ	531	;# 
   408   000214                     RC3PPS          equ	532	;# 
   409   000215                     RC4PPS          equ	533	;# 
   410   000216                     RC5PPS          equ	534	;# 
   411   000217                     RC6PPS          equ	535	;# 
   412   000218                     RC7PPS          equ	536	;# 
   413   000219                     RD0PPS          equ	537	;# 
   414   00021A                     RD1PPS          equ	538	;# 
   415   00021B                     RD2PPS          equ	539	;# 
   416   00021C                     RD3PPS          equ	540	;# 
   417   00021D                     RD4PPS          equ	541	;# 
   418   00021E                     RD5PPS          equ	542	;# 
   419   00021F                     RD6PPS          equ	543	;# 
   420   000220                     RD7PPS          equ	544	;# 
   421   000221                     RE0PPS          equ	545	;# 
   422   000222                     RE1PPS          equ	546	;# 
   423   000223                     RE2PPS          equ	547	;# 
   424   000229                     RF0PPS          equ	553	;# 
   425   00022A                     RF1PPS          equ	554	;# 
   426   00022B                     RF2PPS          equ	555	;# 
   427   00022C                     RF3PPS          equ	556	;# 
   428   00022D                     RF4PPS          equ	557	;# 
   429   00022E                     RF5PPS          equ	558	;# 
   430   00022F                     RF6PPS          equ	559	;# 
   431   000230                     RF7PPS          equ	560	;# 
   432   00023E                     INT0PPS         equ	574	;# 
   433   00023F                     INT1PPS         equ	575	;# 
   434   000240                     INT2PPS         equ	576	;# 
   435   000241                     T0CKIPPS        equ	577	;# 
   436   000242                     T1CKIPPS        equ	578	;# 
   437   000243                     T1GPPS          equ	579	;# 
   438   000244                     T3CKIPPS        equ	580	;# 
   439   000245                     T3GPPS          equ	581	;# 
   440   000246                     T5CKIPPS        equ	582	;# 
   441   000247                     T5GPPS          equ	583	;# 
   442   000248                     T2INPPS         equ	584	;# 
   443   000249                     T4INPPS         equ	585	;# 
   444   00024A                     T6INPPS         equ	586	;# 
   445   00024F                     CCP1PPS         equ	591	;# 
   446   000250                     CCP2PPS         equ	592	;# 
   447   000251                     CCP3PPS         equ	593	;# 
   448   000253                     PWM1ERSPPS      equ	595	;# 
   449   000254                     PWM2ERSPPS      equ	596	;# 
   450   000255                     PWM3ERSPPS      equ	597	;# 
   451   000257                     PWMIN0PPS       equ	599	;# 
   452   000258                     PWMIN1PPS       equ	600	;# 
   453   000259                     SMT1WINPPS      equ	601	;# 
   454   00025A                     SMT1SIGPPS      equ	602	;# 
   455   00025B                     CWG1PPS         equ	603	;# 
   456   00025B                     CWG1INPPS       equ	603	;# 
   457   00025C                     CWG2PPS         equ	604	;# 
   458   00025C                     CWG2INPPS       equ	604	;# 
   459   00025D                     CWG3PPS         equ	605	;# 
   460   00025D                     CWG3INPPS       equ	605	;# 
   461   00025E                     MD1CARLPPS      equ	606	;# 
   462   00025E                     MDCARLPPS       equ	606	;# 
   463   00025F                     MD1CARHPPS      equ	607	;# 
   464   00025F                     MDCARHPPS       equ	607	;# 
   465   000260                     MD1SRCPPS       equ	608	;# 
   466   000260                     MDSRCPPS        equ	608	;# 
   467   000261                     CLCIN0PPS       equ	609	;# 
   468   000262                     CLCIN1PPS       equ	610	;# 
   469   000263                     CLCIN2PPS       equ	611	;# 
   470   000264                     CLCIN3PPS       equ	612	;# 
   471   000265                     CLCIN4PPS       equ	613	;# 
   472   000266                     CLCIN5PPS       equ	614	;# 
   473   000267                     CLCIN6PPS       equ	615	;# 
   474   000268                     CLCIN7PPS       equ	616	;# 
   475   000269                     ADACTPPS        equ	617	;# 
   476   00026A                     SPI1SCKPPS      equ	618	;# 
   477   00026B                     SPI1SDIPPS      equ	619	;# 
   478   00026C                     SPI1SSPPS       equ	620	;# 
   479   00026D                     SPI2SCKPPS      equ	621	;# 
   480   00026E                     SPI2SDIPPS      equ	622	;# 
   481   00026F                     SPI2SSPPS       equ	623	;# 
   482   000270                     I2C1SDAPPS      equ	624	;# 
   483   000271                     I2C1SCLPPS      equ	625	;# 
   484   000272                     U1RXPPS         equ	626	;# 
   485   000273                     U1CTSPPS        equ	627	;# 
   486   000274                     U2RXPPS         equ	628	;# 
   487   000275                     U2CTSPPS        equ	629	;# 
   488   000276                     U3RXPPS         equ	630	;# 
   489   000277                     U3CTSPPS        equ	631	;# 
   490   000278                     U4RXPPS         equ	632	;# 
   491   000279                     U4CTSPPS        equ	633	;# 
   492   00027A                     U5RXPPS         equ	634	;# 
   493   00027B                     U5CTSPPS        equ	635	;# 
   494   000286                     RC4I2C          equ	646	;# 
   495   000287                     RC3I2C          equ	647	;# 
   496   000288                     RB2I2C          equ	648	;# 
   497   000289                     RB1I2C          equ	649	;# 
   498   00028B                     I2C1RXB         equ	651	;# 
   499   00028C                     I2C1TXB         equ	652	;# 
   500   00028D                     I2C1CNT         equ	653	;# 
   501   00028E                     I2C1ADB0        equ	654	;# 
   502   00028F                     I2C1ADB1        equ	655	;# 
   503   000290                     I2C1ADR0        equ	656	;# 
   504   000291                     I2C1ADR1        equ	657	;# 
   505   000292                     I2C1ADR2        equ	658	;# 
   506   000293                     I2C1ADR3        equ	659	;# 
   507   000294                     I2C1CON0        equ	660	;# 
   508   000295                     I2C1CON1        equ	661	;# 
   509   000296                     I2C1CON2        equ	662	;# 
   510   000297                     I2C1ERR         equ	663	;# 
   511   000298                     I2C1STAT0       equ	664	;# 
   512   000299                     I2C1STAT1       equ	665	;# 
   513   00029A                     I2C1PIR         equ	666	;# 
   514   00029B                     I2C1PIE         equ	667	;# 
   515   00029C                     I2C1CLK         equ	668	;# 
   516   00029D                     I2C1BTO         equ	669	;# 
   517   0002A1                     U1RXB           equ	673	;# 
   518   0002A1                     U1RXBL          equ	673	;# 
   519   0002A2                     U1RXCHK         equ	674	;# 
   520   0002A3                     U1TXB           equ	675	;# 
   521   0002A3                     U1TXBL          equ	675	;# 
   522   0002A4                     U1TXCHK         equ	676	;# 
   523   0002A5                     U1P1            equ	677	;# 
   524   0002A5                     U1P1L           equ	677	;# 
   525   0002A6                     U1P1H           equ	678	;# 
   526   0002A7                     U1P2            equ	679	;# 
   527   0002A7                     U1P2L           equ	679	;# 
   528   0002A8                     U1P2H           equ	680	;# 
   529   0002A9                     U1P3            equ	681	;# 
   530   0002A9                     U1P3L           equ	681	;# 
   531   0002AA                     U1P3H           equ	682	;# 
   532   0002AB                     U1CON0          equ	683	;# 
   533   0002AC                     U1CON1          equ	684	;# 
   534   0002AD                     U1CON2          equ	685	;# 
   535   0002AE                     U1BRG           equ	686	;# 
   536   0002AE                     U1BRGL          equ	686	;# 
   537   0002AF                     U1BRGH          equ	687	;# 
   538   0002B0                     U1FIFO          equ	688	;# 
   539   0002B1                     U1UIR           equ	689	;# 
   540   0002B2                     U1ERRIR         equ	690	;# 
   541   0002B3                     U1ERRIE         equ	691	;# 
   542   0002B4                     U2RXB           equ	692	;# 
   543   0002B4                     U2RXBL          equ	692	;# 
   544   0002B6                     U2TXB           equ	694	;# 
   545   0002B6                     U2TXBL          equ	694	;# 
   546   0002B8                     U2P1            equ	696	;# 
   547   0002B8                     U2P1L           equ	696	;# 
   548   0002BA                     U2P2            equ	698	;# 
   549   0002BA                     U2P2L           equ	698	;# 
   550   0002BC                     U2P3            equ	700	;# 
   551   0002BC                     U2P3L           equ	700	;# 
   552   0002BE                     U2CON0          equ	702	;# 
   553   0002BF                     U2CON1          equ	703	;# 
   554   0002C0                     U2CON2          equ	704	;# 
   555   0002C1                     U2BRG           equ	705	;# 
   556   0002C1                     U2BRGL          equ	705	;# 
   557   0002C2                     U2BRGH          equ	706	;# 
   558   0002C3                     U2FIFO          equ	707	;# 
   559   0002C4                     U2UIR           equ	708	;# 
   560   0002C5                     U2ERRIR         equ	709	;# 
   561   0002C6                     U2ERRIE         equ	710	;# 
   562   0002C7                     U3RXB           equ	711	;# 
   563   0002C7                     U3RXBL          equ	711	;# 
   564   0002C9                     U3TXB           equ	713	;# 
   565   0002C9                     U3TXBL          equ	713	;# 
   566   0002CB                     U3P1            equ	715	;# 
   567   0002CB                     U3P1L           equ	715	;# 
   568   0002CD                     U3P2            equ	717	;# 
   569   0002CD                     U3P2L           equ	717	;# 
   570   0002CF                     U3P3            equ	719	;# 
   571   0002CF                     U3P3L           equ	719	;# 
   572   0002D1                     U3CON0          equ	721	;# 
   573   0002D2                     U3CON1          equ	722	;# 
   574   0002D3                     U3CON2          equ	723	;# 
   575   0002D4                     U3BRG           equ	724	;# 
   576   0002D4                     U3BRGL          equ	724	;# 
   577   0002D5                     U3BRGH          equ	725	;# 
   578   0002D6                     U3FIFO          equ	726	;# 
   579   0002D7                     U3UIR           equ	727	;# 
   580   0002D8                     U3ERRIR         equ	728	;# 
   581   0002D9                     U3ERRIE         equ	729	;# 
   582   0002DA                     U4RXB           equ	730	;# 
   583   0002DA                     U4RXBL          equ	730	;# 
   584   0002DC                     U4TXB           equ	732	;# 
   585   0002DC                     U4TXBL          equ	732	;# 
   586   0002DE                     U4P1            equ	734	;# 
   587   0002DE                     U4P1L           equ	734	;# 
   588   0002E0                     U4P2            equ	736	;# 
   589   0002E0                     U4P2L           equ	736	;# 
   590   0002E2                     U4P3            equ	738	;# 
   591   0002E2                     U4P3L           equ	738	;# 
   592   0002E4                     U4CON0          equ	740	;# 
   593   0002E5                     U4CON1          equ	741	;# 
   594   0002E6                     U4CON2          equ	742	;# 
   595   0002E7                     U4BRG           equ	743	;# 
   596   0002E7                     U4BRGL          equ	743	;# 
   597   0002E8                     U4BRGH          equ	744	;# 
   598   0002E9                     U4FIFO          equ	745	;# 
   599   0002EA                     U4UIR           equ	746	;# 
   600   0002EB                     U4ERRIR         equ	747	;# 
   601   0002EC                     U4ERRIE         equ	748	;# 
   602   0002ED                     U5RXB           equ	749	;# 
   603   0002ED                     U5RXBL          equ	749	;# 
   604   0002EF                     U5TXB           equ	751	;# 
   605   0002EF                     U5TXBL          equ	751	;# 
   606   0002F1                     U5P1            equ	753	;# 
   607   0002F1                     U5P1L           equ	753	;# 
   608   0002F3                     U5P2            equ	755	;# 
   609   0002F3                     U5P2L           equ	755	;# 
   610   0002F5                     U5P3            equ	757	;# 
   611   0002F5                     U5P3L           equ	757	;# 
   612   0002F7                     U5CON0          equ	759	;# 
   613   0002F8                     U5CON1          equ	760	;# 
   614   0002F9                     U5CON2          equ	761	;# 
   615   0002FA                     U5BRG           equ	762	;# 
   616   0002FA                     U5BRGL          equ	762	;# 
   617   0002FB                     U5BRGH          equ	763	;# 
   618   0002FC                     U5FIFO          equ	764	;# 
   619   0002FD                     U5UIR           equ	765	;# 
   620   0002FE                     U5ERRIR         equ	766	;# 
   621   0002FF                     U5ERRIE         equ	767	;# 
   622   000300                     SMT1TMR         equ	768	;# 
   623   000300                     SMT1TMRL        equ	768	;# 
   624   000301                     SMT1TMRH        equ	769	;# 
   625   000302                     SMT1TMRU        equ	770	;# 
   626   000303                     SMT1CPR         equ	771	;# 
   627   000303                     SMT1CPRL        equ	771	;# 
   628   000304                     SMT1CPRH        equ	772	;# 
   629   000305                     SMT1CPRU        equ	773	;# 
   630   000306                     SMT1CPW         equ	774	;# 
   631   000306                     SMT1CPWL        equ	774	;# 
   632   000307                     SMT1CPWH        equ	775	;# 
   633   000308                     SMT1CPWU        equ	776	;# 
   634   000309                     SMT1PR          equ	777	;# 
   635   000309                     SMT1PRL         equ	777	;# 
   636   00030A                     SMT1PRH         equ	778	;# 
   637   00030B                     SMT1PRU         equ	779	;# 
   638   00030C                     SMT1CON0        equ	780	;# 
   639   00030D                     SMT1CON1        equ	781	;# 
   640   00030E                     SMT1STAT        equ	782	;# 
   641   00030F                     SMT1CLK         equ	783	;# 
   642   000310                     SMT1SIG         equ	784	;# 
   643   000311                     SMT1WIN         equ	785	;# 
   644   000318                     TMR0L           equ	792	;# 
   645   000318                     TMR0            equ	792	;# 
   646   000319                     TMR0H           equ	793	;# 
   647   000319                     PR0             equ	793	;# 
   648   00031A                     T0CON0          equ	794	;# 
   649   00031B                     T0CON1          equ	795	;# 
   650   00031C                     TMR1            equ	796	;# 
   651   00031C                     TMR1L           equ	796	;# 
   652   00031D                     TMR1H           equ	797	;# 
   653   00031E                     T1CON           equ	798	;# 
   654   00031E                     TMR1CON         equ	798	;# 
   655   00031F                     T1GCON          equ	799	;# 
   656   00031F                     TMR1GCON        equ	799	;# 
   657   000320                     T1GATE          equ	800	;# 
   658   000320                     TMR1GATE        equ	800	;# 
   659   000321                     T1CLK           equ	801	;# 
   660   000321                     TMR1CLK         equ	801	;# 
   661   000321                     PR1             equ	801	;# 
   662   000322                     T2TMR           equ	802	;# 
   663   000322                     TMR2            equ	802	;# 
   664   000323                     T2PR            equ	803	;# 
   665   000323                     PR2             equ	803	;# 
   666   000324                     T2CON           equ	804	;# 
   667   000325                     T2HLT           equ	805	;# 
   668   000326                     T2CLKCON        equ	806	;# 
   669   000326                     T2CLK           equ	806	;# 
   670   000327                     T2RST           equ	807	;# 
   671   000328                     TMR3            equ	808	;# 
   672   000328                     TMR3L           equ	808	;# 
   673   000329                     TMR3H           equ	809	;# 
   674   00032A                     T3CON           equ	810	;# 
   675   00032A                     TMR3CON         equ	810	;# 
   676   00032B                     T3GCON          equ	811	;# 
   677   00032B                     TMR3GCON        equ	811	;# 
   678   00032C                     T3GATE          equ	812	;# 
   679   00032C                     TMR3GATE        equ	812	;# 
   680   00032D                     T3CLK           equ	813	;# 
   681   00032D                     TMR3CLK         equ	813	;# 
   682   00032D                     PR3             equ	813	;# 
   683   00032E                     T4TMR           equ	814	;# 
   684   00032E                     TMR4            equ	814	;# 
   685   00032F                     T4PR            equ	815	;# 
   686   00032F                     PR4             equ	815	;# 
   687   000330                     T4CON           equ	816	;# 
   688   000331                     T4HLT           equ	817	;# 
   689   000332                     T4CLKCON        equ	818	;# 
   690   000332                     T4CLK           equ	818	;# 
   691   000333                     T4RST           equ	819	;# 
   692   000334                     TMR5            equ	820	;# 
   693   000334                     TMR5L           equ	820	;# 
   694   000335                     TMR5H           equ	821	;# 
   695   000336                     T5CON           equ	822	;# 
   696   000336                     TMR5CON         equ	822	;# 
   697   000337                     T5GCON          equ	823	;# 
   698   000337                     TMR5GCON        equ	823	;# 
   699   000338                     T5GATE          equ	824	;# 
   700   000338                     TMR5GATE        equ	824	;# 
   701   000339                     T5CLK           equ	825	;# 
   702   000339                     TMR5CLK         equ	825	;# 
   703   000339                     PR5             equ	825	;# 
   704   00033A                     T6TMR           equ	826	;# 
   705   00033A                     TMR6            equ	826	;# 
   706   00033B                     T6PR            equ	827	;# 
   707   00033B                     PR6             equ	827	;# 
   708   00033C                     T6CON           equ	828	;# 
   709   00033D                     T6HLT           equ	829	;# 
   710   00033E                     T6CLKCON        equ	830	;# 
   711   00033E                     T6CLK           equ	830	;# 
   712   00033F                     T6RST           equ	831	;# 
   713   000340                     CCPR1           equ	832	;# 
   714   000340                     CCPR1L          equ	832	;# 
   715   000341                     CCPR1H          equ	833	;# 
   716   000342                     CCP1CON         equ	834	;# 
   717   000343                     CCP1CAP         equ	835	;# 
   718   000344                     CCPR2           equ	836	;# 
   719   000344                     CCPR2L          equ	836	;# 
   720   000345                     CCPR2H          equ	837	;# 
   721   000346                     CCP2CON         equ	838	;# 
   722   000347                     CCP2CAP         equ	839	;# 
   723   000348                     CCPR3           equ	840	;# 
   724   000348                     CCPR3L          equ	840	;# 
   725   000349                     CCPR3H          equ	841	;# 
   726   00034A                     CCP3CON         equ	842	;# 
   727   00034B                     CCP3CAP         equ	843	;# 
   728   00034C                     CCPTMRS0        equ	844	;# 
   729   00034F                     CRCDATA         equ	847	;# 
   730   00034F                     CRCDATL         equ	847	;# 
   731   000350                     CRCDATH         equ	848	;# 
   732   000351                     CRCACC          equ	849	;# 
   733   000351                     CRCACCL         equ	849	;# 
   734   000352                     CRCACCH         equ	850	;# 
   735   000353                     CRCSHFT         equ	851	;# 
   736   000353                     CRCSHIFTL       equ	851	;# 
   737   000354                     CRCSHIFTH       equ	852	;# 
   738   000355                     CRCXOR          equ	853	;# 
   739   000355                     CRCXORL         equ	853	;# 
   740   000356                     CRCXORH         equ	854	;# 
   741   000357                     CRCCON0         equ	855	;# 
   742   000358                     CRCCON1         equ	856	;# 
   743   00035A                     SCANLADR        equ	858	;# 
   744   00035A                     SCANLADRL       equ	858	;# 
   745   00035B                     SCANLADRH       equ	859	;# 
   746   00035C                     SCANLADRU       equ	860	;# 
   747   00035D                     SCANHADR        equ	861	;# 
   748   00035D                     SCANHADRL       equ	861	;# 
   749   00035E                     SCANHADRH       equ	862	;# 
   750   00035F                     SCANHADRU       equ	863	;# 
   751   000360                     SCANCON0        equ	864	;# 
   752   000361                     SCANTRIG        equ	865	;# 
   753   000362                     IPR0            equ	866	;# 
   754   000363                     IPR1            equ	867	;# 
   755   000364                     IPR2            equ	868	;# 
   756   000365                     IPR3            equ	869	;# 
   757   000366                     IPR4            equ	870	;# 
   758   000367                     IPR5            equ	871	;# 
   759   000368                     IPR6            equ	872	;# 
   760   000369                     IPR7            equ	873	;# 
   761   00036A                     IPR8            equ	874	;# 
   762   00036B                     IPR9            equ	875	;# 
   763   00036C                     IPR10           equ	876	;# 
   764   00036D                     IPR11           equ	877	;# 
   765   00036E                     IPR12           equ	878	;# 
   766   00036F                     IPR13           equ	879	;# 
   767   000370                     IPR14           equ	880	;# 
   768   000371                     IPR15           equ	881	;# 
   769   000373                     STATUS_CSHAD    equ	883	;# 
   770   000374                     WREG_CSHAD      equ	884	;# 
   771   000375                     BSR_CSHAD       equ	885	;# 
   772   000376                     SHADCON         equ	886	;# 
   773   000377                     STATUS_SHAD     equ	887	;# 
   774   000378                     WREG_SHAD       equ	888	;# 
   775   000379                     BSR_SHAD        equ	889	;# 
   776   00037A                     PCLATH_SHAD     equ	890	;# 
   777   00037B                     PCLATU_SHAD     equ	891	;# 
   778   00037C                     FSR0SH          equ	892	;# 
   779   00037C                     FSR0L_SHAD      equ	892	;# 
   780   00037D                     FSR0H_SHAD      equ	893	;# 
   781   00037E                     FSR1SH          equ	894	;# 
   782   00037E                     FSR1L_SHAD      equ	894	;# 
   783   00037F                     FSR1H_SHAD      equ	895	;# 
   784   000380                     FSR2SH          equ	896	;# 
   785   000380                     FSR2L_SHAD      equ	896	;# 
   786   000381                     FSR2H_SHAD      equ	897	;# 
   787   000382                     PRODSH          equ	898	;# 
   788   000382                     PRODL_SHAD      equ	898	;# 
   789   000383                     PRODH_SHAD      equ	899	;# 
   790   0003BC                     CWG1CLK         equ	956	;# 
   791   0003BC                     CWG1CLKCON      equ	956	;# 
   792   0003BD                     CWG1ISM         equ	957	;# 
   793   0003BD                     CWG1DAT         equ	957	;# 
   794   0003BE                     CWG1DBR         equ	958	;# 
   795   0003BF                     CWG1DBF         equ	959	;# 
   796   0003C0                     CWG1CON0        equ	960	;# 
   797   0003C1                     CWG1CON1        equ	961	;# 
   798   0003C2                     CWG1AS0         equ	962	;# 
   799   0003C3                     CWG1AS1         equ	963	;# 
   800   0003C4                     CWG1STR         equ	964	;# 
   801   0003C5                     CWG2CLK         equ	965	;# 
   802   0003C5                     CWG2CLKCON      equ	965	;# 
   803   0003C6                     CWG2ISM         equ	966	;# 
   804   0003C6                     CWG2DAT         equ	966	;# 
   805   0003C7                     CWG2DBR         equ	967	;# 
   806   0003C8                     CWG2DBF         equ	968	;# 
   807   0003C9                     CWG2CON0        equ	969	;# 
   808   0003CA                     CWG2CON1        equ	970	;# 
   809   0003CB                     CWG2AS0         equ	971	;# 
   810   0003CC                     CWG2AS1         equ	972	;# 
   811   0003CD                     CWG2STR         equ	973	;# 
   812   0003CE                     CWG3CLK         equ	974	;# 
   813   0003CE                     CWG3CLKCON      equ	974	;# 
   814   0003CF                     CWG3ISM         equ	975	;# 
   815   0003CF                     CWG3DAT         equ	975	;# 
   816   0003D0                     CWG3DBR         equ	976	;# 
   817   0003D1                     CWG3DBF         equ	977	;# 
   818   0003D2                     CWG3CON0        equ	978	;# 
   819   0003D3                     CWG3CON1        equ	979	;# 
   820   0003D4                     CWG3AS0         equ	980	;# 
   821   0003D5                     CWG3AS1         equ	981	;# 
   822   0003D6                     CWG3STR         equ	982	;# 
   823   0003D7                     FVRCON          equ	983	;# 
   824   0003D8                     ADCPCON         equ	984	;# 
   825   0003D8                     ADCP            equ	984	;# 
   826   0003D9                     ADLTH           equ	985	;# 
   827   0003D9                     ADLTHL          equ	985	;# 
   828   0003DA                     ADLTHH          equ	986	;# 
   829   0003DB                     ADUTH           equ	987	;# 
   830   0003DB                     ADUTHL          equ	987	;# 
   831   0003DC                     ADUTHH          equ	988	;# 
   832   0003DD                     ADERR           equ	989	;# 
   833   0003DD                     ADERRL          equ	989	;# 
   834   0003DE                     ADERRH          equ	990	;# 
   835   0003DF                     ADSTPT          equ	991	;# 
   836   0003DF                     ADSTPTL         equ	991	;# 
   837   0003E0                     ADSTPTH         equ	992	;# 
   838   0003E1                     ADFLTR          equ	993	;# 
   839   0003E1                     ADFLTRL         equ	993	;# 
   840   0003E2                     ADFLTRH         equ	994	;# 
   841   0003E3                     ADACC           equ	995	;# 
   842   0003E3                     ADACCL          equ	995	;# 
   843   0003E4                     ADACCH          equ	996	;# 
   844   0003E5                     ADACCU          equ	997	;# 
   845   0003E6                     ADCNT           equ	998	;# 
   846   0003E7                     ADRPT           equ	999	;# 
   847   0003E8                     ADPREV          equ	1000	;# 
   848   0003E8                     ADPREVL         equ	1000	;# 
   849   0003E9                     ADPREVH         equ	1001	;# 
   850   0003EA                     ADRES           equ	1002	;# 
   851   0003EA                     ADRESL          equ	1002	;# 
   852   0003EB                     ADRESH          equ	1003	;# 
   853   0003EC                     ADPCH           equ	1004	;# 
   854   0003EE                     ADACQ           equ	1006	;# 
   855   0003EE                     ADACQL          equ	1006	;# 
   856   0003EF                     ADACQH          equ	1007	;# 
   857   0003F0                     ADCAP           equ	1008	;# 
   858   0003F1                     ADPRE           equ	1009	;# 
   859   0003F1                     ADPREL          equ	1009	;# 
   860   0003F2                     ADPREH          equ	1010	;# 
   861   0003F3                     ADCON0          equ	1011	;# 
   862   0003F4                     ADCON1          equ	1012	;# 
   863   0003F5                     ADCON2          equ	1013	;# 
   864   0003F6                     ADCON3          equ	1014	;# 
   865   0003F7                     ADSTAT          equ	1015	;# 
   866   0003F8                     ADREF           equ	1016	;# 
   867   0003F9                     ADACT           equ	1017	;# 
   868   0003FA                     ADCLK           equ	1018	;# 
   869   000400                     ANSELA          equ	1024	;# 
   870   000401                     WPUA            equ	1025	;# 
   871   000402                     ODCONA          equ	1026	;# 
   872   000403                     SLRCONA         equ	1027	;# 
   873   000404                     INLVLA          equ	1028	;# 
   874   000405                     IOCAP           equ	1029	;# 
   875   000406                     IOCAN           equ	1030	;# 
   876   000407                     IOCAF           equ	1031	;# 
   877   000408                     ANSELB          equ	1032	;# 
   878   000409                     WPUB            equ	1033	;# 
   879   00040A                     ODCONB          equ	1034	;# 
   880   00040B                     SLRCONB         equ	1035	;# 
   881   00040C                     INLVLB          equ	1036	;# 
   882   00040D                     IOCBP           equ	1037	;# 
   883   00040E                     IOCBN           equ	1038	;# 
   884   00040F                     IOCBF           equ	1039	;# 
   885   000410                     ANSELC          equ	1040	;# 
   886   000411                     WPUC            equ	1041	;# 
   887   000412                     ODCONC          equ	1042	;# 
   888   000413                     SLRCONC         equ	1043	;# 
   889   000414                     INLVLC          equ	1044	;# 
   890   000415                     IOCCP           equ	1045	;# 
   891   000416                     IOCCN           equ	1046	;# 
   892   000417                     IOCCF           equ	1047	;# 
   893   000418                     ANSELD          equ	1048	;# 
   894   000419                     WPUD            equ	1049	;# 
   895   00041A                     ODCOND          equ	1050	;# 
   896   00041B                     SLRCOND         equ	1051	;# 
   897   00041C                     INLVLD          equ	1052	;# 
   898   000420                     ANSELE          equ	1056	;# 
   899   000421                     WPUE            equ	1057	;# 
   900   000422                     ODCONE          equ	1058	;# 
   901   000423                     SLRCONE         equ	1059	;# 
   902   000424                     INLVLE          equ	1060	;# 
   903   000425                     IOCEP           equ	1061	;# 
   904   000426                     IOCEN           equ	1062	;# 
   905   000427                     IOCEF           equ	1063	;# 
   906   000428                     ANSELF          equ	1064	;# 
   907   000429                     WPUF            equ	1065	;# 
   908   00042A                     ODCONF          equ	1066	;# 
   909   00042B                     SLRCONF         equ	1067	;# 
   910   00042C                     INLVLF          equ	1068	;# 
   911   000440                     NCO1ACC         equ	1088	;# 
   912   000440                     NCO1ACCL        equ	1088	;# 
   913   000441                     NCO1ACCH        equ	1089	;# 
   914   000442                     NCO1ACCU        equ	1090	;# 
   915   000443                     NCO1INC         equ	1091	;# 
   916   000443                     NCO1INCL        equ	1091	;# 
   917   000444                     NCO1INCH        equ	1092	;# 
   918   000445                     NCO1INCU        equ	1093	;# 
   919   000446                     NCO1CON         equ	1094	;# 
   920   000447                     NCO1CLK         equ	1095	;# 
   921   000448                     NCO2ACC         equ	1096	;# 
   922   000448                     NCO2ACCL        equ	1096	;# 
   923   000449                     NCO2ACCH        equ	1097	;# 
   924   00044A                     NCO2ACCU        equ	1098	;# 
   925   00044B                     NCO2INC         equ	1099	;# 
   926   00044B                     NCO2INCL        equ	1099	;# 
   927   00044C                     NCO2INCH        equ	1100	;# 
   928   00044D                     NCO2INCU        equ	1101	;# 
   929   00044E                     NCO2CON         equ	1102	;# 
   930   00044F                     NCO2CLK         equ	1103	;# 
   931   000450                     NCO3ACC         equ	1104	;# 
   932   000450                     NCO3ACCL        equ	1104	;# 
   933   000451                     NCO3ACCH        equ	1105	;# 
   934   000452                     NCO3ACCU        equ	1106	;# 
   935   000453                     NCO3INC         equ	1107	;# 
   936   000453                     NCO3INCL        equ	1107	;# 
   937   000454                     NCO3INCH        equ	1108	;# 
   938   000455                     NCO3INCU        equ	1109	;# 
   939   000456                     NCO3CON         equ	1110	;# 
   940   000457                     NCO3CLK         equ	1111	;# 
   941   000459                     IVTLOCK         equ	1113	;# 
   942   00045A                     IVTAD           equ	1114	;# 
   943   00045A                     IVTADL          equ	1114	;# 
   944   00045B                     IVTADH          equ	1115	;# 
   945   00045C                     IVTADU          equ	1116	;# 
   946   00045D                     IVTBASE         equ	1117	;# 
   947   00045D                     IVTBASEL        equ	1117	;# 
   948   00045E                     IVTBASEH        equ	1118	;# 
   949   00045F                     IVTBASEU        equ	1119	;# 
   950   000460                     PWM1ERS         equ	1120	;# 
   951   000461                     PWM1CLK         equ	1121	;# 
   952   000462                     PWM1LDS         equ	1122	;# 
   953   000463                     PWM1PR          equ	1123	;# 
   954   000463                     PWM1PRL         equ	1123	;# 
   955   000464                     PWM1PRH         equ	1124	;# 
   956   000465                     PWM1CPRE        equ	1125	;# 
   957   000466                     PWM1PIPOS       equ	1126	;# 
   958   000467                     PWM1GIR         equ	1127	;# 
   959   000468                     PWM1GIE         equ	1128	;# 
   960   000469                     PWM1CON         equ	1129	;# 
   961   00046A                     PWM1S1CFG       equ	1130	;# 
   962   00046B                     PWM1S1P1        equ	1131	;# 
   963   00046B                     PWM1S1P1L       equ	1131	;# 
   964   00046C                     PWM1S1P1H       equ	1132	;# 
   965   00046D                     PWM1S1P2        equ	1133	;# 
   966   00046D                     PWM1S1P2L       equ	1133	;# 
   967   00046E                     PWM1S1P2H       equ	1134	;# 
   968   00046F                     PWM2ERS         equ	1135	;# 
   969   000470                     PWM2CLK         equ	1136	;# 
   970   000471                     PWM2LDS         equ	1137	;# 
   971   000472                     PWM2PR          equ	1138	;# 
   972   000472                     PWM2PRL         equ	1138	;# 
   973   000473                     PWM2PRH         equ	1139	;# 
   974   000474                     PWM2CPRE        equ	1140	;# 
   975   000475                     PWM2PIPOS       equ	1141	;# 
   976   000476                     PWM2GIR         equ	1142	;# 
   977   000477                     PWM2GIE         equ	1143	;# 
   978   000478                     PWM2CON         equ	1144	;# 
   979   000479                     PWM2S1CFG       equ	1145	;# 
   980   00047A                     PWM2S1P1        equ	1146	;# 
   981   00047A                     PWM2S1P1L       equ	1146	;# 
   982   00047B                     PWM2S1P1H       equ	1147	;# 
   983   00047C                     PWM2S1P2        equ	1148	;# 
   984   00047C                     PWM2S1P2L       equ	1148	;# 
   985   00047D                     PWM2S1P2H       equ	1149	;# 
   986   00047E                     PWM3ERS         equ	1150	;# 
   987   00047F                     PWM3CLK         equ	1151	;# 
   988   000480                     PWM3LDS         equ	1152	;# 
   989   000481                     PWM3PR          equ	1153	;# 
   990   000481                     PWM3PRL         equ	1153	;# 
   991   000482                     PWM3PRH         equ	1154	;# 
   992   000483                     PWM3CPRE        equ	1155	;# 
   993   000484                     PWM3PIPOS       equ	1156	;# 
   994   000485                     PWM3GIR         equ	1157	;# 
   995   000486                     PWM3GIE         equ	1158	;# 
   996   000487                     PWM3CON         equ	1159	;# 
   997   000488                     PWM3S1CFG       equ	1160	;# 
   998   000489                     PWM3S1P1        equ	1161	;# 
   999   000489                     PWM3S1P1L       equ	1161	;# 
  1000   00048A                     PWM3S1P1H       equ	1162	;# 
  1001   00048B                     PWM3S1P2        equ	1163	;# 
  1002   00048B                     PWM3S1P2L       equ	1163	;# 
  1003   00048C                     PWM3S1P2H       equ	1164	;# 
  1004   00049C                     PWMLOAD         equ	1180	;# 
  1005   00049D                     PWMEN           equ	1181	;# 
  1006   00049E                     PIE0            equ	1182	;# 
  1007   00049F                     PIE1            equ	1183	;# 
  1008   0004A0                     PIE2            equ	1184	;# 
  1009   0004A1                     PIE3            equ	1185	;# 
  1010   0004A2                     PIE4            equ	1186	;# 
  1011   0004A3                     PIE5            equ	1187	;# 
  1012   0004A4                     PIE6            equ	1188	;# 
  1013   0004A5                     PIE7            equ	1189	;# 
  1014   0004A6                     PIE8            equ	1190	;# 
  1015   0004A7                     PIE9            equ	1191	;# 
  1016   0004A8                     PIE10           equ	1192	;# 
  1017   0004A9                     PIE11           equ	1193	;# 
  1018   0004AA                     PIE12           equ	1194	;# 
  1019   0004AB                     PIE13           equ	1195	;# 
  1020   0004AC                     PIE14           equ	1196	;# 
  1021   0004AD                     PIE15           equ	1197	;# 
  1022   0004AE                     PIR0            equ	1198	;# 
  1023   0004AF                     PIR1            equ	1199	;# 
  1024   0004B0                     PIR2            equ	1200	;# 
  1025   0004B1                     PIR3            equ	1201	;# 
  1026   0004B2                     PIR4            equ	1202	;# 
  1027   0004B3                     PIR5            equ	1203	;# 
  1028   0004B4                     PIR6            equ	1204	;# 
  1029   0004B5                     PIR7            equ	1205	;# 
  1030   0004B6                     PIR8            equ	1206	;# 
  1031   0004B7                     PIR9            equ	1207	;# 
  1032   0004B8                     PIR10           equ	1208	;# 
  1033   0004B9                     PIR11           equ	1209	;# 
  1034   0004BA                     PIR12           equ	1210	;# 
  1035   0004BB                     PIR13           equ	1211	;# 
  1036   0004BC                     PIR14           equ	1212	;# 
  1037   0004BD                     PIR15           equ	1213	;# 
  1038   0004BE                     LATA            equ	1214	;# 
  1039   0004BF                     LATB            equ	1215	;# 
  1040   0004C0                     LATC            equ	1216	;# 
  1041   0004C1                     LATD            equ	1217	;# 
  1042   0004C2                     LATE            equ	1218	;# 
  1043   0004C3                     LATF            equ	1219	;# 
  1044   0004C6                     TRISA           equ	1222	;# 
  1045   0004C7                     TRISB           equ	1223	;# 
  1046   0004C8                     TRISC           equ	1224	;# 
  1047   0004C9                     TRISD           equ	1225	;# 
  1048   0004CA                     TRISE           equ	1226	;# 
  1049   0004CB                     TRISF           equ	1227	;# 
  1050   0004CE                     PORTA           equ	1230	;# 
  1051   0004CF                     PORTB           equ	1231	;# 
  1052   0004D0                     PORTC           equ	1232	;# 
  1053   0004D1                     PORTD           equ	1233	;# 
  1054   0004D2                     PORTE           equ	1234	;# 
  1055   0004D3                     PORTF           equ	1235	;# 
  1056   0004D6                     INTCON0         equ	1238	;# 
  1057   0004D7                     INTCON1         equ	1239	;# 
  1058   0004D8                     STATUS          equ	1240	;# 
  1059   0004D9                     FSR2            equ	1241	;# 
  1060   0004D9                     FSR2L           equ	1241	;# 
  1061   0004DA                     FSR2H           equ	1242	;# 
  1062   0004DB                     PLUSW2          equ	1243	;# 
  1063   0004DC                     PREINC2         equ	1244	;# 
  1064   0004DD                     POSTDEC2        equ	1245	;# 
  1065   0004DE                     POSTINC2        equ	1246	;# 
  1066   0004DF                     INDF2           equ	1247	;# 
  1067   0004E0                     BSR             equ	1248	;# 
  1068   0004E1                     FSR1            equ	1249	;# 
  1069   0004E1                     FSR1L           equ	1249	;# 
  1070   0004E2                     FSR1H           equ	1250	;# 
  1071   0004E3                     PLUSW1          equ	1251	;# 
  1072   0004E4                     PREINC1         equ	1252	;# 
  1073   0004E5                     POSTDEC1        equ	1253	;# 
  1074   0004E6                     POSTINC1        equ	1254	;# 
  1075   0004E7                     INDF1           equ	1255	;# 
  1076   0004E8                     WREG            equ	1256	;# 
  1077   0004E9                     FSR0            equ	1257	;# 
  1078   0004E9                     FSR0L           equ	1257	;# 
  1079   0004EA                     FSR0H           equ	1258	;# 
  1080   0004EB                     PLUSW0          equ	1259	;# 
  1081   0004EC                     PREINC0         equ	1260	;# 
  1082   0004ED                     POSTDEC0        equ	1261	;# 
  1083   0004EE                     POSTINC0        equ	1262	;# 
  1084   0004EF                     INDF0           equ	1263	;# 
  1085   0004F0                     PCON0           equ	1264	;# 
  1086   0004F1                     PCON1           equ	1265	;# 
  1087   0004F2                     CPUDOZE         equ	1266	;# 
  1088   0004F3                     PROD            equ	1267	;# 
  1089   0004F3                     PRODL           equ	1267	;# 
  1090   0004F4                     PRODH           equ	1268	;# 
  1091   0004F5                     TABLAT          equ	1269	;# 
  1092   0004F6                     TBLPTR          equ	1270	;# 
  1093   0004F6                     TBLPTRL         equ	1270	;# 
  1094   0004F7                     TBLPTRH         equ	1271	;# 
  1095   0004F8                     TBLPTRU         equ	1272	;# 
  1096   0004F9                     PCLAT           equ	1273	;# 
  1097   0004F9                     PCL             equ	1273	;# 
  1098   0004FA                     PCLATH          equ	1274	;# 
  1099   0004FB                     PCLATU          equ	1275	;# 
  1100   0004FC                     STKPTR          equ	1276	;# 
  1101   0004FD                     TOS             equ	1277	;# 
  1102   0004FD                     TOSL            equ	1277	;# 
  1103   0004FE                     TOSH            equ	1278	;# 
  1104   0004FF                     TOSU            equ	1279	;# 
  1105   000039                     CLKRCON         equ	57	;# 
  1106   00003A                     CLKRCLK         equ	58	;# 
  1107   000040                     NVMCON0         equ	64	;# 
  1108   000041                     NVMCON1         equ	65	;# 
  1109   000042                     NVMLOCK         equ	66	;# 
  1110   000043                     NVMADR          equ	67	;# 
  1111   000043                     NVMADRL         equ	67	;# 
  1112   000044                     NVMADRH         equ	68	;# 
  1113   000045                     NVMADRU         equ	69	;# 
  1114   000046                     NVMDAT          equ	70	;# 
  1115   000046                     NVMDATL         equ	70	;# 
  1116   000047                     NVMDATH         equ	71	;# 
  1117   000048                     VREGCON         equ	72	;# 
  1118   000049                     BORCON          equ	73	;# 
  1119   00004A                     HLVDCON0        equ	74	;# 
  1120   00004B                     HLVDCON1        equ	75	;# 
  1121   00004C                     ZCDCON          equ	76	;# 
  1122   000060                     PMD0            equ	96	;# 
  1123   000061                     PMD1            equ	97	;# 
  1124   000063                     PMD3            equ	99	;# 
  1125   000064                     PMD4            equ	100	;# 
  1126   000065                     PMD5            equ	101	;# 
  1127   000066                     PMD6            equ	102	;# 
  1128   000067                     PMD7            equ	103	;# 
  1129   000068                     PMD8            equ	104	;# 
  1130   00006A                     MD1CON0         equ	106	;# 
  1131   00006B                     MD1CON1         equ	107	;# 
  1132   00006C                     MD1SRC          equ	108	;# 
  1133   00006D                     MD1CARL         equ	109	;# 
  1134   00006E                     MD1CARH         equ	110	;# 
  1135   00006F                     CMOUT           equ	111	;# 
  1136   000070                     CM1CON0         equ	112	;# 
  1137   000071                     CM1CON1         equ	113	;# 
  1138   000072                     CM1NCH          equ	114	;# 
  1139   000073                     CM1PCH          equ	115	;# 
  1140   000074                     CM2CON0         equ	116	;# 
  1141   000075                     CM2CON1         equ	117	;# 
  1142   000076                     CM2NCH          equ	118	;# 
  1143   000077                     CM2PCH          equ	119	;# 
  1144   000078                     WDTCON0         equ	120	;# 
  1145   000079                     WDTCON1         equ	121	;# 
  1146   00007A                     WDTPS           equ	122	;# 
  1147   00007A                     WDTPSL          equ	122	;# 
  1148   00007B                     WDTPSH          equ	123	;# 
  1149   00007C                     WDTTMR          equ	124	;# 
  1150   00007D                     DAC1DAT         equ	125	;# 
  1151   00007D                     DAC1DATL        equ	125	;# 
  1152   00007F                     DAC1CON         equ	127	;# 
  1153   000080                     SPI1RXB         equ	128	;# 
  1154   000081                     SPI1TXB         equ	129	;# 
  1155   000082                     SPI1TCNT        equ	130	;# 
  1156   000082                     SPI1TCNTL       equ	130	;# 
  1157   000083                     SPI1TCNTH       equ	131	;# 
  1158   000084                     SPI1CON0        equ	132	;# 
  1159   000085                     SPI1CON1        equ	133	;# 
  1160   000086                     SPI1CON2        equ	134	;# 
  1161   000087                     SPI1STATUS      equ	135	;# 
  1162   000088                     SPI1TWIDTH      equ	136	;# 
  1163   000089                     SPI1BAUD        equ	137	;# 
  1164   00008A                     SPI1INTF        equ	138	;# 
  1165   00008B                     SPI1INTE        equ	139	;# 
  1166   00008C                     SPI1CLK         equ	140	;# 
  1167   00008D                     SPI2RXB         equ	141	;# 
  1168   00008E                     SPI2TXB         equ	142	;# 
  1169   00008F                     SPI2TCNT        equ	143	;# 
  1170   00008F                     SPI2TCNTL       equ	143	;# 
  1171   000090                     SPI2TCNTH       equ	144	;# 
  1172   000091                     SPI2CON0        equ	145	;# 
  1173   000092                     SPI2CON1        equ	146	;# 
  1174   000093                     SPI2CON2        equ	147	;# 
  1175   000094                     SPI2STATUS      equ	148	;# 
  1176   000095                     SPI2TWIDTH      equ	149	;# 
  1177   000096                     SPI2BAUD        equ	150	;# 
  1178   000097                     SPI2INTF        equ	151	;# 
  1179   000098                     SPI2INTE        equ	152	;# 
  1180   000099                     SPI2CLK         equ	153	;# 
  1181   0000AC                     ACTCON          equ	172	;# 
  1182   0000AD                     OSCCON1         equ	173	;# 
  1183   0000AE                     OSCCON2         equ	174	;# 
  1184   0000AF                     OSCCON3         equ	175	;# 
  1185   0000B0                     OSCTUNE         equ	176	;# 
  1186   0000B1                     OSCFRQ          equ	177	;# 
  1187   0000B1                     OSCFREQ         equ	177	;# 
  1188   0000B2                     OSCSTAT         equ	178	;# 
  1189   0000B2                     OSCSTAT1        equ	178	;# 
  1190   0000B3                     OSCEN           equ	179	;# 
  1191   0000B4                     PRLOCK          equ	180	;# 
  1192   0000B5                     SCANPR          equ	181	;# 
  1193   0000B6                     DMA1PR          equ	182	;# 
  1194   0000B7                     DMA2PR          equ	183	;# 
  1195   0000B8                     DMA3PR          equ	184	;# 
  1196   0000B9                     DMA4PR          equ	185	;# 
  1197   0000BA                     DMA5PR          equ	186	;# 
  1198   0000BB                     DMA6PR          equ	187	;# 
  1199   0000BE                     MAINPR          equ	190	;# 
  1200   0000BF                     ISRPR           equ	191	;# 
  1201   0000D4                     CLCDATA         equ	212	;# 
  1202   0000D5                     CLCSELECT       equ	213	;# 
  1203   0000D6                     CLCnCON         equ	214	;# 
  1204   0000D7                     CLCnPOL         equ	215	;# 
  1205   0000D8                     CLCnSEL0        equ	216	;# 
  1206   0000D9                     CLCnSEL1        equ	217	;# 
  1207   0000DA                     CLCnSEL2        equ	218	;# 
  1208   0000DB                     CLCnSEL3        equ	219	;# 
  1209   0000DC                     CLCnGLS0        equ	220	;# 
  1210   0000DD                     CLCnGLS1        equ	221	;# 
  1211   0000DE                     CLCnGLS2        equ	222	;# 
  1212   0000DF                     CLCnGLS3        equ	223	;# 
  1213   0000E8                     DMASELECT       equ	232	;# 
  1214   0000E9                     DMAnBUF         equ	233	;# 
  1215   0000EA                     DMAnDCNT        equ	234	;# 
  1216   0000EA                     DMAnDCNTL       equ	234	;# 
  1217   0000EB                     DMAnDCNTH       equ	235	;# 
  1218   0000EC                     DMAnDPTR        equ	236	;# 
  1219   0000EC                     DMAnDPTRL       equ	236	;# 
  1220   0000ED                     DMAnDPTRH       equ	237	;# 
  1221   0000EE                     DMAnDSZ         equ	238	;# 
  1222   0000EE                     DMAnDSZL        equ	238	;# 
  1223   0000EF                     DMAnDSZH        equ	239	;# 
  1224   0000F0                     DMAnDSA         equ	240	;# 
  1225   0000F0                     DMAnDSAL        equ	240	;# 
  1226   0000F1                     DMAnDSAH        equ	241	;# 
  1227   0000F2                     DMAnSCNT        equ	242	;# 
  1228   0000F2                     DMAnSCNTL       equ	242	;# 
  1229   0000F3                     DMAnSCNTH       equ	243	;# 
  1230   0000F4                     DMAnSPTR        equ	244	;# 
  1231   0000F4                     DMAnSPTRL       equ	244	;# 
  1232   0000F5                     DMAnSPTRH       equ	245	;# 
  1233   0000F6                     DMAnSPTRU       equ	246	;# 
  1234   0000F7                     DMAnSSZ         equ	247	;# 
  1235   0000F7                     DMAnSSZL        equ	247	;# 
  1236   0000F8                     DMAnSSZH        equ	248	;# 
  1237   0000F9                     DMAnSSA         equ	249	;# 
  1238   0000F9                     DMAnSSAL        equ	249	;# 
  1239   0000FA                     DMAnSSAH        equ	250	;# 
  1240   0000FB                     DMAnSSAU        equ	251	;# 
  1241   0000FC                     DMAnCON0        equ	252	;# 
  1242   0000FD                     DMAnCON1        equ	253	;# 
  1243   0000FE                     DMAnAIRQ        equ	254	;# 
  1244   0000FF                     DMAnSIRQ        equ	255	;# 
  1245   000200                     PPSLOCK         equ	512	;# 
  1246   000201                     RA0PPS          equ	513	;# 
  1247   000202                     RA1PPS          equ	514	;# 
  1248   000203                     RA2PPS          equ	515	;# 
  1249   000204                     RA3PPS          equ	516	;# 
  1250   000205                     RA4PPS          equ	517	;# 
  1251   000206                     RA5PPS          equ	518	;# 
  1252   000207                     RA6PPS          equ	519	;# 
  1253   000208                     RA7PPS          equ	520	;# 
  1254   000209                     RB0PPS          equ	521	;# 
  1255   00020A                     RB1PPS          equ	522	;# 
  1256   00020B                     RB2PPS          equ	523	;# 
  1257   00020C                     RB3PPS          equ	524	;# 
  1258   00020D                     RB4PPS          equ	525	;# 
  1259   00020E                     RB5PPS          equ	526	;# 
  1260   00020F                     RB6PPS          equ	527	;# 
  1261   000210                     RB7PPS          equ	528	;# 
  1262   000211                     RC0PPS          equ	529	;# 
  1263   000212                     RC1PPS          equ	530	;# 
  1264   000213                     RC2PPS          equ	531	;# 
  1265   000214                     RC3PPS          equ	532	;# 
  1266   000215                     RC4PPS          equ	533	;# 
  1267   000216                     RC5PPS          equ	534	;# 
  1268   000217                     RC6PPS          equ	535	;# 
  1269   000218                     RC7PPS          equ	536	;# 
  1270   000219                     RD0PPS          equ	537	;# 
  1271   00021A                     RD1PPS          equ	538	;# 
  1272   00021B                     RD2PPS          equ	539	;# 
  1273   00021C                     RD3PPS          equ	540	;# 
  1274   00021D                     RD4PPS          equ	541	;# 
  1275   00021E                     RD5PPS          equ	542	;# 
  1276   00021F                     RD6PPS          equ	543	;# 
  1277   000220                     RD7PPS          equ	544	;# 
  1278   000221                     RE0PPS          equ	545	;# 
  1279   000222                     RE1PPS          equ	546	;# 
  1280   000223                     RE2PPS          equ	547	;# 
  1281   000229                     RF0PPS          equ	553	;# 
  1282   00022A                     RF1PPS          equ	554	;# 
  1283   00022B                     RF2PPS          equ	555	;# 
  1284   00022C                     RF3PPS          equ	556	;# 
  1285   00022D                     RF4PPS          equ	557	;# 
  1286   00022E                     RF5PPS          equ	558	;# 
  1287   00022F                     RF6PPS          equ	559	;# 
  1288   000230                     RF7PPS          equ	560	;# 
  1289   00023E                     INT0PPS         equ	574	;# 
  1290   00023F                     INT1PPS         equ	575	;# 
  1291   000240                     INT2PPS         equ	576	;# 
  1292   000241                     T0CKIPPS        equ	577	;# 
  1293   000242                     T1CKIPPS        equ	578	;# 
  1294   000243                     T1GPPS          equ	579	;# 
  1295   000244                     T3CKIPPS        equ	580	;# 
  1296   000245                     T3GPPS          equ	581	;# 
  1297   000246                     T5CKIPPS        equ	582	;# 
  1298   000247                     T5GPPS          equ	583	;# 
  1299   000248                     T2INPPS         equ	584	;# 
  1300   000249                     T4INPPS         equ	585	;# 
  1301   00024A                     T6INPPS         equ	586	;# 
  1302   00024F                     CCP1PPS         equ	591	;# 
  1303   000250                     CCP2PPS         equ	592	;# 
  1304   000251                     CCP3PPS         equ	593	;# 
  1305   000253                     PWM1ERSPPS      equ	595	;# 
  1306   000254                     PWM2ERSPPS      equ	596	;# 
  1307   000255                     PWM3ERSPPS      equ	597	;# 
  1308   000257                     PWMIN0PPS       equ	599	;# 
  1309   000258                     PWMIN1PPS       equ	600	;# 
  1310   000259                     SMT1WINPPS      equ	601	;# 
  1311   00025A                     SMT1SIGPPS      equ	602	;# 
  1312   00025B                     CWG1PPS         equ	603	;# 
  1313   00025B                     CWG1INPPS       equ	603	;# 
  1314   00025C                     CWG2PPS         equ	604	;# 
  1315   00025C                     CWG2INPPS       equ	604	;# 
  1316   00025D                     CWG3PPS         equ	605	;# 
  1317   00025D                     CWG3INPPS       equ	605	;# 
  1318   00025E                     MD1CARLPPS      equ	606	;# 
  1319   00025E                     MDCARLPPS       equ	606	;# 
  1320   00025F                     MD1CARHPPS      equ	607	;# 
  1321   00025F                     MDCARHPPS       equ	607	;# 
  1322   000260                     MD1SRCPPS       equ	608	;# 
  1323   000260                     MDSRCPPS        equ	608	;# 
  1324   000261                     CLCIN0PPS       equ	609	;# 
  1325   000262                     CLCIN1PPS       equ	610	;# 
  1326   000263                     CLCIN2PPS       equ	611	;# 
  1327   000264                     CLCIN3PPS       equ	612	;# 
  1328   000265                     CLCIN4PPS       equ	613	;# 
  1329   000266                     CLCIN5PPS       equ	614	;# 
  1330   000267                     CLCIN6PPS       equ	615	;# 
  1331   000268                     CLCIN7PPS       equ	616	;# 
  1332   000269                     ADACTPPS        equ	617	;# 
  1333   00026A                     SPI1SCKPPS      equ	618	;# 
  1334   00026B                     SPI1SDIPPS      equ	619	;# 
  1335   00026C                     SPI1SSPPS       equ	620	;# 
  1336   00026D                     SPI2SCKPPS      equ	621	;# 
  1337   00026E                     SPI2SDIPPS      equ	622	;# 
  1338   00026F                     SPI2SSPPS       equ	623	;# 
  1339   000270                     I2C1SDAPPS      equ	624	;# 
  1340   000271                     I2C1SCLPPS      equ	625	;# 
  1341   000272                     U1RXPPS         equ	626	;# 
  1342   000273                     U1CTSPPS        equ	627	;# 
  1343   000274                     U2RXPPS         equ	628	;# 
  1344   000275                     U2CTSPPS        equ	629	;# 
  1345   000276                     U3RXPPS         equ	630	;# 
  1346   000277                     U3CTSPPS        equ	631	;# 
  1347   000278                     U4RXPPS         equ	632	;# 
  1348   000279                     U4CTSPPS        equ	633	;# 
  1349   00027A                     U5RXPPS         equ	634	;# 
  1350   00027B                     U5CTSPPS        equ	635	;# 
  1351   000286                     RC4I2C          equ	646	;# 
  1352   000287                     RC3I2C          equ	647	;# 
  1353   000288                     RB2I2C          equ	648	;# 
  1354   000289                     RB1I2C          equ	649	;# 
  1355   00028B                     I2C1RXB         equ	651	;# 
  1356   00028C                     I2C1TXB         equ	652	;# 
  1357   00028D                     I2C1CNT         equ	653	;# 
  1358   00028E                     I2C1ADB0        equ	654	;# 
  1359   00028F                     I2C1ADB1        equ	655	;# 
  1360   000290                     I2C1ADR0        equ	656	;# 
  1361   000291                     I2C1ADR1        equ	657	;# 
  1362   000292                     I2C1ADR2        equ	658	;# 
  1363   000293                     I2C1ADR3        equ	659	;# 
  1364   000294                     I2C1CON0        equ	660	;# 
  1365   000295                     I2C1CON1        equ	661	;# 
  1366   000296                     I2C1CON2        equ	662	;# 
  1367   000297                     I2C1ERR         equ	663	;# 
  1368   000298                     I2C1STAT0       equ	664	;# 
  1369   000299                     I2C1STAT1       equ	665	;# 
  1370   00029A                     I2C1PIR         equ	666	;# 
  1371   00029B                     I2C1PIE         equ	667	;# 
  1372   00029C                     I2C1CLK         equ	668	;# 
  1373   00029D                     I2C1BTO         equ	669	;# 
  1374   0002A1                     U1RXB           equ	673	;# 
  1375   0002A1                     U1RXBL          equ	673	;# 
  1376   0002A2                     U1RXCHK         equ	674	;# 
  1377   0002A3                     U1TXB           equ	675	;# 
  1378   0002A3                     U1TXBL          equ	675	;# 
  1379   0002A4                     U1TXCHK         equ	676	;# 
  1380   0002A5                     U1P1            equ	677	;# 
  1381   0002A5                     U1P1L           equ	677	;# 
  1382   0002A6                     U1P1H           equ	678	;# 
  1383   0002A7                     U1P2            equ	679	;# 
  1384   0002A7                     U1P2L           equ	679	;# 
  1385   0002A8                     U1P2H           equ	680	;# 
  1386   0002A9                     U1P3            equ	681	;# 
  1387   0002A9                     U1P3L           equ	681	;# 
  1388   0002AA                     U1P3H           equ	682	;# 
  1389   0002AB                     U1CON0          equ	683	;# 
  1390   0002AC                     U1CON1          equ	684	;# 
  1391   0002AD                     U1CON2          equ	685	;# 
  1392   0002AE                     U1BRG           equ	686	;# 
  1393   0002AE                     U1BRGL          equ	686	;# 
  1394   0002AF                     U1BRGH          equ	687	;# 
  1395   0002B0                     U1FIFO          equ	688	;# 
  1396   0002B1                     U1UIR           equ	689	;# 
  1397   0002B2                     U1ERRIR         equ	690	;# 
  1398   0002B3                     U1ERRIE         equ	691	;# 
  1399   0002B4                     U2RXB           equ	692	;# 
  1400   0002B4                     U2RXBL          equ	692	;# 
  1401   0002B6                     U2TXB           equ	694	;# 
  1402   0002B6                     U2TXBL          equ	694	;# 
  1403   0002B8                     U2P1            equ	696	;# 
  1404   0002B8                     U2P1L           equ	696	;# 
  1405   0002BA                     U2P2            equ	698	;# 
  1406   0002BA                     U2P2L           equ	698	;# 
  1407   0002BC                     U2P3            equ	700	;# 
  1408   0002BC                     U2P3L           equ	700	;# 
  1409   0002BE                     U2CON0          equ	702	;# 
  1410   0002BF                     U2CON1          equ	703	;# 
  1411   0002C0                     U2CON2          equ	704	;# 
  1412   0002C1                     U2BRG           equ	705	;# 
  1413   0002C1                     U2BRGL          equ	705	;# 
  1414   0002C2                     U2BRGH          equ	706	;# 
  1415   0002C3                     U2FIFO          equ	707	;# 
  1416   0002C4                     U2UIR           equ	708	;# 
  1417   0002C5                     U2ERRIR         equ	709	;# 
  1418   0002C6                     U2ERRIE         equ	710	;# 
  1419   0002C7                     U3RXB           equ	711	;# 
  1420   0002C7                     U3RXBL          equ	711	;# 
  1421   0002C9                     U3TXB           equ	713	;# 
  1422   0002C9                     U3TXBL          equ	713	;# 
  1423   0002CB                     U3P1            equ	715	;# 
  1424   0002CB                     U3P1L           equ	715	;# 
  1425   0002CD                     U3P2            equ	717	;# 
  1426   0002CD                     U3P2L           equ	717	;# 
  1427   0002CF                     U3P3            equ	719	;# 
  1428   0002CF                     U3P3L           equ	719	;# 
  1429   0002D1                     U3CON0          equ	721	;# 
  1430   0002D2                     U3CON1          equ	722	;# 
  1431   0002D3                     U3CON2          equ	723	;# 
  1432   0002D4                     U3BRG           equ	724	;# 
  1433   0002D4                     U3BRGL          equ	724	;# 
  1434   0002D5                     U3BRGH          equ	725	;# 
  1435   0002D6                     U3FIFO          equ	726	;# 
  1436   0002D7                     U3UIR           equ	727	;# 
  1437   0002D8                     U3ERRIR         equ	728	;# 
  1438   0002D9                     U3ERRIE         equ	729	;# 
  1439   0002DA                     U4RXB           equ	730	;# 
  1440   0002DA                     U4RXBL          equ	730	;# 
  1441   0002DC                     U4TXB           equ	732	;# 
  1442   0002DC                     U4TXBL          equ	732	;# 
  1443   0002DE                     U4P1            equ	734	;# 
  1444   0002DE                     U4P1L           equ	734	;# 
  1445   0002E0                     U4P2            equ	736	;# 
  1446   0002E0                     U4P2L           equ	736	;# 
  1447   0002E2                     U4P3            equ	738	;# 
  1448   0002E2                     U4P3L           equ	738	;# 
  1449   0002E4                     U4CON0          equ	740	;# 
  1450   0002E5                     U4CON1          equ	741	;# 
  1451   0002E6                     U4CON2          equ	742	;# 
  1452   0002E7                     U4BRG           equ	743	;# 
  1453   0002E7                     U4BRGL          equ	743	;# 
  1454   0002E8                     U4BRGH          equ	744	;# 
  1455   0002E9                     U4FIFO          equ	745	;# 
  1456   0002EA                     U4UIR           equ	746	;# 
  1457   0002EB                     U4ERRIR         equ	747	;# 
  1458   0002EC                     U4ERRIE         equ	748	;# 
  1459   0002ED                     U5RXB           equ	749	;# 
  1460   0002ED                     U5RXBL          equ	749	;# 
  1461   0002EF                     U5TXB           equ	751	;# 
  1462   0002EF                     U5TXBL          equ	751	;# 
  1463   0002F1                     U5P1            equ	753	;# 
  1464   0002F1                     U5P1L           equ	753	;# 
  1465   0002F3                     U5P2            equ	755	;# 
  1466   0002F3                     U5P2L           equ	755	;# 
  1467   0002F5                     U5P3            equ	757	;# 
  1468   0002F5                     U5P3L           equ	757	;# 
  1469   0002F7                     U5CON0          equ	759	;# 
  1470   0002F8                     U5CON1          equ	760	;# 
  1471   0002F9                     U5CON2          equ	761	;# 
  1472   0002FA                     U5BRG           equ	762	;# 
  1473   0002FA                     U5BRGL          equ	762	;# 
  1474   0002FB                     U5BRGH          equ	763	;# 
  1475   0002FC                     U5FIFO          equ	764	;# 
  1476   0002FD                     U5UIR           equ	765	;# 
  1477   0002FE                     U5ERRIR         equ	766	;# 
  1478   0002FF                     U5ERRIE         equ	767	;# 
  1479   000300                     SMT1TMR         equ	768	;# 
  1480   000300                     SMT1TMRL        equ	768	;# 
  1481   000301                     SMT1TMRH        equ	769	;# 
  1482   000302                     SMT1TMRU        equ	770	;# 
  1483   000303                     SMT1CPR         equ	771	;# 
  1484   000303                     SMT1CPRL        equ	771	;# 
  1485   000304                     SMT1CPRH        equ	772	;# 
  1486   000305                     SMT1CPRU        equ	773	;# 
  1487   000306                     SMT1CPW         equ	774	;# 
  1488   000306                     SMT1CPWL        equ	774	;# 
  1489   000307                     SMT1CPWH        equ	775	;# 
  1490   000308                     SMT1CPWU        equ	776	;# 
  1491   000309                     SMT1PR          equ	777	;# 
  1492   000309                     SMT1PRL         equ	777	;# 
  1493   00030A                     SMT1PRH         equ	778	;# 
  1494   00030B                     SMT1PRU         equ	779	;# 
  1495   00030C                     SMT1CON0        equ	780	;# 
  1496   00030D                     SMT1CON1        equ	781	;# 
  1497   00030E                     SMT1STAT        equ	782	;# 
  1498   00030F                     SMT1CLK         equ	783	;# 
  1499   000310                     SMT1SIG         equ	784	;# 
  1500   000311                     SMT1WIN         equ	785	;# 
  1501   000318                     TMR0L           equ	792	;# 
  1502   000318                     TMR0            equ	792	;# 
  1503   000319                     TMR0H           equ	793	;# 
  1504   000319                     PR0             equ	793	;# 
  1505   00031A                     T0CON0          equ	794	;# 
  1506   00031B                     T0CON1          equ	795	;# 
  1507   00031C                     TMR1            equ	796	;# 
  1508   00031C                     TMR1L           equ	796	;# 
  1509   00031D                     TMR1H           equ	797	;# 
  1510   00031E                     T1CON           equ	798	;# 
  1511   00031E                     TMR1CON         equ	798	;# 
  1512   00031F                     T1GCON          equ	799	;# 
  1513   00031F                     TMR1GCON        equ	799	;# 
  1514   000320                     T1GATE          equ	800	;# 
  1515   000320                     TMR1GATE        equ	800	;# 
  1516   000321                     T1CLK           equ	801	;# 
  1517   000321                     TMR1CLK         equ	801	;# 
  1518   000321                     PR1             equ	801	;# 
  1519   000322                     T2TMR           equ	802	;# 
  1520   000322                     TMR2            equ	802	;# 
  1521   000323                     T2PR            equ	803	;# 
  1522   000323                     PR2             equ	803	;# 
  1523   000324                     T2CON           equ	804	;# 
  1524   000325                     T2HLT           equ	805	;# 
  1525   000326                     T2CLKCON        equ	806	;# 
  1526   000326                     T2CLK           equ	806	;# 
  1527   000327                     T2RST           equ	807	;# 
  1528   000328                     TMR3            equ	808	;# 
  1529   000328                     TMR3L           equ	808	;# 
  1530   000329                     TMR3H           equ	809	;# 
  1531   00032A                     T3CON           equ	810	;# 
  1532   00032A                     TMR3CON         equ	810	;# 
  1533   00032B                     T3GCON          equ	811	;# 
  1534   00032B                     TMR3GCON        equ	811	;# 
  1535   00032C                     T3GATE          equ	812	;# 
  1536   00032C                     TMR3GATE        equ	812	;# 
  1537   00032D                     T3CLK           equ	813	;# 
  1538   00032D                     TMR3CLK         equ	813	;# 
  1539   00032D                     PR3             equ	813	;# 
  1540   00032E                     T4TMR           equ	814	;# 
  1541   00032E                     TMR4            equ	814	;# 
  1542   00032F                     T4PR            equ	815	;# 
  1543   00032F                     PR4             equ	815	;# 
  1544   000330                     T4CON           equ	816	;# 
  1545   000331                     T4HLT           equ	817	;# 
  1546   000332                     T4CLKCON        equ	818	;# 
  1547   000332                     T4CLK           equ	818	;# 
  1548   000333                     T4RST           equ	819	;# 
  1549   000334                     TMR5            equ	820	;# 
  1550   000334                     TMR5L           equ	820	;# 
  1551   000335                     TMR5H           equ	821	;# 
  1552   000336                     T5CON           equ	822	;# 
  1553   000336                     TMR5CON         equ	822	;# 
  1554   000337                     T5GCON          equ	823	;# 
  1555   000337                     TMR5GCON        equ	823	;# 
  1556   000338                     T5GATE          equ	824	;# 
  1557   000338                     TMR5GATE        equ	824	;# 
  1558   000339                     T5CLK           equ	825	;# 
  1559   000339                     TMR5CLK         equ	825	;# 
  1560   000339                     PR5             equ	825	;# 
  1561   00033A                     T6TMR           equ	826	;# 
  1562   00033A                     TMR6            equ	826	;# 
  1563   00033B                     T6PR            equ	827	;# 
  1564   00033B                     PR6             equ	827	;# 
  1565   00033C                     T6CON           equ	828	;# 
  1566   00033D                     T6HLT           equ	829	;# 
  1567   00033E                     T6CLKCON        equ	830	;# 
  1568   00033E                     T6CLK           equ	830	;# 
  1569   00033F                     T6RST           equ	831	;# 
  1570   000340                     CCPR1           equ	832	;# 
  1571   000340                     CCPR1L          equ	832	;# 
  1572   000341                     CCPR1H          equ	833	;# 
  1573   000342                     CCP1CON         equ	834	;# 
  1574   000343                     CCP1CAP         equ	835	;# 
  1575   000344                     CCPR2           equ	836	;# 
  1576   000344                     CCPR2L          equ	836	;# 
  1577   000345                     CCPR2H          equ	837	;# 
  1578   000346                     CCP2CON         equ	838	;# 
  1579   000347                     CCP2CAP         equ	839	;# 
  1580   000348                     CCPR3           equ	840	;# 
  1581   000348                     CCPR3L          equ	840	;# 
  1582   000349                     CCPR3H          equ	841	;# 
  1583   00034A                     CCP3CON         equ	842	;# 
  1584   00034B                     CCP3CAP         equ	843	;# 
  1585   00034C                     CCPTMRS0        equ	844	;# 
  1586   00034F                     CRCDATA         equ	847	;# 
  1587   00034F                     CRCDATL         equ	847	;# 
  1588   000350                     CRCDATH         equ	848	;# 
  1589   000351                     CRCACC          equ	849	;# 
  1590   000351                     CRCACCL         equ	849	;# 
  1591   000352                     CRCACCH         equ	850	;# 
  1592   000353                     CRCSHFT         equ	851	;# 
  1593   000353                     CRCSHIFTL       equ	851	;# 
  1594   000354                     CRCSHIFTH       equ	852	;# 
  1595   000355                     CRCXOR          equ	853	;# 
  1596   000355                     CRCXORL         equ	853	;# 
  1597   000356                     CRCXORH         equ	854	;# 
  1598   000357                     CRCCON0         equ	855	;# 
  1599   000358                     CRCCON1         equ	856	;# 
  1600   00035A                     SCANLADR        equ	858	;# 
  1601   00035A                     SCANLADRL       equ	858	;# 
  1602   00035B                     SCANLADRH       equ	859	;# 
  1603   00035C                     SCANLADRU       equ	860	;# 
  1604   00035D                     SCANHADR        equ	861	;# 
  1605   00035D                     SCANHADRL       equ	861	;# 
  1606   00035E                     SCANHADRH       equ	862	;# 
  1607   00035F                     SCANHADRU       equ	863	;# 
  1608   000360                     SCANCON0        equ	864	;# 
  1609   000361                     SCANTRIG        equ	865	;# 
  1610   000362                     IPR0            equ	866	;# 
  1611   000363                     IPR1            equ	867	;# 
  1612   000364                     IPR2            equ	868	;# 
  1613   000365                     IPR3            equ	869	;# 
  1614   000366                     IPR4            equ	870	;# 
  1615   000367                     IPR5            equ	871	;# 
  1616   000368                     IPR6            equ	872	;# 
  1617   000369                     IPR7            equ	873	;# 
  1618   00036A                     IPR8            equ	874	;# 
  1619   00036B                     IPR9            equ	875	;# 
  1620   00036C                     IPR10           equ	876	;# 
  1621   00036D                     IPR11           equ	877	;# 
  1622   00036E                     IPR12           equ	878	;# 
  1623   00036F                     IPR13           equ	879	;# 
  1624   000370                     IPR14           equ	880	;# 
  1625   000371                     IPR15           equ	881	;# 
  1626   000373                     STATUS_CSHAD    equ	883	;# 
  1627   000374                     WREG_CSHAD      equ	884	;# 
  1628   000375                     BSR_CSHAD       equ	885	;# 
  1629   000376                     SHADCON         equ	886	;# 
  1630   000377                     STATUS_SHAD     equ	887	;# 
  1631   000378                     WREG_SHAD       equ	888	;# 
  1632   000379                     BSR_SHAD        equ	889	;# 
  1633   00037A                     PCLATH_SHAD     equ	890	;# 
  1634   00037B                     PCLATU_SHAD     equ	891	;# 
  1635   00037C                     FSR0SH          equ	892	;# 
  1636   00037C                     FSR0L_SHAD      equ	892	;# 
  1637   00037D                     FSR0H_SHAD      equ	893	;# 
  1638   00037E                     FSR1SH          equ	894	;# 
  1639   00037E                     FSR1L_SHAD      equ	894	;# 
  1640   00037F                     FSR1H_SHAD      equ	895	;# 
  1641   000380                     FSR2SH          equ	896	;# 
  1642   000380                     FSR2L_SHAD      equ	896	;# 
  1643   000381                     FSR2H_SHAD      equ	897	;# 
  1644   000382                     PRODSH          equ	898	;# 
  1645   000382                     PRODL_SHAD      equ	898	;# 
  1646   000383                     PRODH_SHAD      equ	899	;# 
  1647   0003BC                     CWG1CLK         equ	956	;# 
  1648   0003BC                     CWG1CLKCON      equ	956	;# 
  1649   0003BD                     CWG1ISM         equ	957	;# 
  1650   0003BD                     CWG1DAT         equ	957	;# 
  1651   0003BE                     CWG1DBR         equ	958	;# 
  1652   0003BF                     CWG1DBF         equ	959	;# 
  1653   0003C0                     CWG1CON0        equ	960	;# 
  1654   0003C1                     CWG1CON1        equ	961	;# 
  1655   0003C2                     CWG1AS0         equ	962	;# 
  1656   0003C3                     CWG1AS1         equ	963	;# 
  1657   0003C4                     CWG1STR         equ	964	;# 
  1658   0003C5                     CWG2CLK         equ	965	;# 
  1659   0003C5                     CWG2CLKCON      equ	965	;# 
  1660   0003C6                     CWG2ISM         equ	966	;# 
  1661   0003C6                     CWG2DAT         equ	966	;# 
  1662   0003C7                     CWG2DBR         equ	967	;# 
  1663   0003C8                     CWG2DBF         equ	968	;# 
  1664   0003C9                     CWG2CON0        equ	969	;# 
  1665   0003CA                     CWG2CON1        equ	970	;# 
  1666   0003CB                     CWG2AS0         equ	971	;# 
  1667   0003CC                     CWG2AS1         equ	972	;# 
  1668   0003CD                     CWG2STR         equ	973	;# 
  1669   0003CE                     CWG3CLK         equ	974	;# 
  1670   0003CE                     CWG3CLKCON      equ	974	;# 
  1671   0003CF                     CWG3ISM         equ	975	;# 
  1672   0003CF                     CWG3DAT         equ	975	;# 
  1673   0003D0                     CWG3DBR         equ	976	;# 
  1674   0003D1                     CWG3DBF         equ	977	;# 
  1675   0003D2                     CWG3CON0        equ	978	;# 
  1676   0003D3                     CWG3CON1        equ	979	;# 
  1677   0003D4                     CWG3AS0         equ	980	;# 
  1678   0003D5                     CWG3AS1         equ	981	;# 
  1679   0003D6                     CWG3STR         equ	982	;# 
  1680   0003D7                     FVRCON          equ	983	;# 
  1681   0003D8                     ADCPCON         equ	984	;# 
  1682   0003D8                     ADCP            equ	984	;# 
  1683   0003D9                     ADLTH           equ	985	;# 
  1684   0003D9                     ADLTHL          equ	985	;# 
  1685   0003DA                     ADLTHH          equ	986	;# 
  1686   0003DB                     ADUTH           equ	987	;# 
  1687   0003DB                     ADUTHL          equ	987	;# 
  1688   0003DC                     ADUTHH          equ	988	;# 
  1689   0003DD                     ADERR           equ	989	;# 
  1690   0003DD                     ADERRL          equ	989	;# 
  1691   0003DE                     ADERRH          equ	990	;# 
  1692   0003DF                     ADSTPT          equ	991	;# 
  1693   0003DF                     ADSTPTL         equ	991	;# 
  1694   0003E0                     ADSTPTH         equ	992	;# 
  1695   0003E1                     ADFLTR          equ	993	;# 
  1696   0003E1                     ADFLTRL         equ	993	;# 
  1697   0003E2                     ADFLTRH         equ	994	;# 
  1698   0003E3                     ADACC           equ	995	;# 
  1699   0003E3                     ADACCL          equ	995	;# 
  1700   0003E4                     ADACCH          equ	996	;# 
  1701   0003E5                     ADACCU          equ	997	;# 
  1702   0003E6                     ADCNT           equ	998	;# 
  1703   0003E7                     ADRPT           equ	999	;# 
  1704   0003E8                     ADPREV          equ	1000	;# 
  1705   0003E8                     ADPREVL         equ	1000	;# 
  1706   0003E9                     ADPREVH         equ	1001	;# 
  1707   0003EA                     ADRES           equ	1002	;# 
  1708   0003EA                     ADRESL          equ	1002	;# 
  1709   0003EB                     ADRESH          equ	1003	;# 
  1710   0003EC                     ADPCH           equ	1004	;# 
  1711   0003EE                     ADACQ           equ	1006	;# 
  1712   0003EE                     ADACQL          equ	1006	;# 
  1713   0003EF                     ADACQH          equ	1007	;# 
  1714   0003F0                     ADCAP           equ	1008	;# 
  1715   0003F1                     ADPRE           equ	1009	;# 
  1716   0003F1                     ADPREL          equ	1009	;# 
  1717   0003F2                     ADPREH          equ	1010	;# 
  1718   0003F3                     ADCON0          equ	1011	;# 
  1719   0003F4                     ADCON1          equ	1012	;# 
  1720   0003F5                     ADCON2          equ	1013	;# 
  1721   0003F6                     ADCON3          equ	1014	;# 
  1722   0003F7                     ADSTAT          equ	1015	;# 
  1723   0003F8                     ADREF           equ	1016	;# 
  1724   0003F9                     ADACT           equ	1017	;# 
  1725   0003FA                     ADCLK           equ	1018	;# 
  1726   000400                     ANSELA          equ	1024	;# 
  1727   000401                     WPUA            equ	1025	;# 
  1728   000402                     ODCONA          equ	1026	;# 
  1729   000403                     SLRCONA         equ	1027	;# 
  1730   000404                     INLVLA          equ	1028	;# 
  1731   000405                     IOCAP           equ	1029	;# 
  1732   000406                     IOCAN           equ	1030	;# 
  1733   000407                     IOCAF           equ	1031	;# 
  1734   000408                     ANSELB          equ	1032	;# 
  1735   000409                     WPUB            equ	1033	;# 
  1736   00040A                     ODCONB          equ	1034	;# 
  1737   00040B                     SLRCONB         equ	1035	;# 
  1738   00040C                     INLVLB          equ	1036	;# 
  1739   00040D                     IOCBP           equ	1037	;# 
  1740   00040E                     IOCBN           equ	1038	;# 
  1741   00040F                     IOCBF           equ	1039	;# 
  1742   000410                     ANSELC          equ	1040	;# 
  1743   000411                     WPUC            equ	1041	;# 
  1744   000412                     ODCONC          equ	1042	;# 
  1745   000413                     SLRCONC         equ	1043	;# 
  1746   000414                     INLVLC          equ	1044	;# 
  1747   000415                     IOCCP           equ	1045	;# 
  1748   000416                     IOCCN           equ	1046	;# 
  1749   000417                     IOCCF           equ	1047	;# 
  1750   000418                     ANSELD          equ	1048	;# 
  1751   000419                     WPUD            equ	1049	;# 
  1752   00041A                     ODCOND          equ	1050	;# 
  1753   00041B                     SLRCOND         equ	1051	;# 
  1754   00041C                     INLVLD          equ	1052	;# 
  1755   000420                     ANSELE          equ	1056	;# 
  1756   000421                     WPUE            equ	1057	;# 
  1757   000422                     ODCONE          equ	1058	;# 
  1758   000423                     SLRCONE         equ	1059	;# 
  1759   000424                     INLVLE          equ	1060	;# 
  1760   000425                     IOCEP           equ	1061	;# 
  1761   000426                     IOCEN           equ	1062	;# 
  1762   000427                     IOCEF           equ	1063	;# 
  1763   000428                     ANSELF          equ	1064	;# 
  1764   000429                     WPUF            equ	1065	;# 
  1765   00042A                     ODCONF          equ	1066	;# 
  1766   00042B                     SLRCONF         equ	1067	;# 
  1767   00042C                     INLVLF          equ	1068	;# 
  1768   000440                     NCO1ACC         equ	1088	;# 
  1769   000440                     NCO1ACCL        equ	1088	;# 
  1770   000441                     NCO1ACCH        equ	1089	;# 
  1771   000442                     NCO1ACCU        equ	1090	;# 
  1772   000443                     NCO1INC         equ	1091	;# 
  1773   000443                     NCO1INCL        equ	1091	;# 
  1774   000444                     NCO1INCH        equ	1092	;# 
  1775   000445                     NCO1INCU        equ	1093	;# 
  1776   000446                     NCO1CON         equ	1094	;# 
  1777   000447                     NCO1CLK         equ	1095	;# 
  1778   000448                     NCO2ACC         equ	1096	;# 
  1779   000448                     NCO2ACCL        equ	1096	;# 
  1780   000449                     NCO2ACCH        equ	1097	;# 
  1781   00044A                     NCO2ACCU        equ	1098	;# 
  1782   00044B                     NCO2INC         equ	1099	;# 
  1783   00044B                     NCO2INCL        equ	1099	;# 
  1784   00044C                     NCO2INCH        equ	1100	;# 
  1785   00044D                     NCO2INCU        equ	1101	;# 
  1786   00044E                     NCO2CON         equ	1102	;# 
  1787   00044F                     NCO2CLK         equ	1103	;# 
  1788   000450                     NCO3ACC         equ	1104	;# 
  1789   000450                     NCO3ACCL        equ	1104	;# 
  1790   000451                     NCO3ACCH        equ	1105	;# 
  1791   000452                     NCO3ACCU        equ	1106	;# 
  1792   000453                     NCO3INC         equ	1107	;# 
  1793   000453                     NCO3INCL        equ	1107	;# 
  1794   000454                     NCO3INCH        equ	1108	;# 
  1795   000455                     NCO3INCU        equ	1109	;# 
  1796   000456                     NCO3CON         equ	1110	;# 
  1797   000457                     NCO3CLK         equ	1111	;# 
  1798   000459                     IVTLOCK         equ	1113	;# 
  1799   00045A                     IVTAD           equ	1114	;# 
  1800   00045A                     IVTADL          equ	1114	;# 
  1801   00045B                     IVTADH          equ	1115	;# 
  1802   00045C                     IVTADU          equ	1116	;# 
  1803   00045D                     IVTBASE         equ	1117	;# 
  1804   00045D                     IVTBASEL        equ	1117	;# 
  1805   00045E                     IVTBASEH        equ	1118	;# 
  1806   00045F                     IVTBASEU        equ	1119	;# 
  1807   000460                     PWM1ERS         equ	1120	;# 
  1808   000461                     PWM1CLK         equ	1121	;# 
  1809   000462                     PWM1LDS         equ	1122	;# 
  1810   000463                     PWM1PR          equ	1123	;# 
  1811   000463                     PWM1PRL         equ	1123	;# 
  1812   000464                     PWM1PRH         equ	1124	;# 
  1813   000465                     PWM1CPRE        equ	1125	;# 
  1814   000466                     PWM1PIPOS       equ	1126	;# 
  1815   000467                     PWM1GIR         equ	1127	;# 
  1816   000468                     PWM1GIE         equ	1128	;# 
  1817   000469                     PWM1CON         equ	1129	;# 
  1818   00046A                     PWM1S1CFG       equ	1130	;# 
  1819   00046B                     PWM1S1P1        equ	1131	;# 
  1820   00046B                     PWM1S1P1L       equ	1131	;# 
  1821   00046C                     PWM1S1P1H       equ	1132	;# 
  1822   00046D                     PWM1S1P2        equ	1133	;# 
  1823   00046D                     PWM1S1P2L       equ	1133	;# 
  1824   00046E                     PWM1S1P2H       equ	1134	;# 
  1825   00046F                     PWM2ERS         equ	1135	;# 
  1826   000470                     PWM2CLK         equ	1136	;# 
  1827   000471                     PWM2LDS         equ	1137	;# 
  1828   000472                     PWM2PR          equ	1138	;# 
  1829   000472                     PWM2PRL         equ	1138	;# 
  1830   000473                     PWM2PRH         equ	1139	;# 
  1831   000474                     PWM2CPRE        equ	1140	;# 
  1832   000475                     PWM2PIPOS       equ	1141	;# 
  1833   000476                     PWM2GIR         equ	1142	;# 
  1834   000477                     PWM2GIE         equ	1143	;# 
  1835   000478                     PWM2CON         equ	1144	;# 
  1836   000479                     PWM2S1CFG       equ	1145	;# 
  1837   00047A                     PWM2S1P1        equ	1146	;# 
  1838   00047A                     PWM2S1P1L       equ	1146	;# 
  1839   00047B                     PWM2S1P1H       equ	1147	;# 
  1840   00047C                     PWM2S1P2        equ	1148	;# 
  1841   00047C                     PWM2S1P2L       equ	1148	;# 
  1842   00047D                     PWM2S1P2H       equ	1149	;# 
  1843   00047E                     PWM3ERS         equ	1150	;# 
  1844   00047F                     PWM3CLK         equ	1151	;# 
  1845   000480                     PWM3LDS         equ	1152	;# 
  1846   000481                     PWM3PR          equ	1153	;# 
  1847   000481                     PWM3PRL         equ	1153	;# 
  1848   000482                     PWM3PRH         equ	1154	;# 
  1849   000483                     PWM3CPRE        equ	1155	;# 
  1850   000484                     PWM3PIPOS       equ	1156	;# 
  1851   000485                     PWM3GIR         equ	1157	;# 
  1852   000486                     PWM3GIE         equ	1158	;# 
  1853   000487                     PWM3CON         equ	1159	;# 
  1854   000488                     PWM3S1CFG       equ	1160	;# 
  1855   000489                     PWM3S1P1        equ	1161	;# 
  1856   000489                     PWM3S1P1L       equ	1161	;# 
  1857   00048A                     PWM3S1P1H       equ	1162	;# 
  1858   00048B                     PWM3S1P2        equ	1163	;# 
  1859   00048B                     PWM3S1P2L       equ	1163	;# 
  1860   00048C                     PWM3S1P2H       equ	1164	;# 
  1861   00049C                     PWMLOAD         equ	1180	;# 
  1862   00049D                     PWMEN           equ	1181	;# 
  1863   00049E                     PIE0            equ	1182	;# 
  1864   00049F                     PIE1            equ	1183	;# 
  1865   0004A0                     PIE2            equ	1184	;# 
  1866   0004A1                     PIE3            equ	1185	;# 
  1867   0004A2                     PIE4            equ	1186	;# 
  1868   0004A3                     PIE5            equ	1187	;# 
  1869   0004A4                     PIE6            equ	1188	;# 
  1870   0004A5                     PIE7            equ	1189	;# 
  1871   0004A6                     PIE8            equ	1190	;# 
  1872   0004A7                     PIE9            equ	1191	;# 
  1873   0004A8                     PIE10           equ	1192	;# 
  1874   0004A9                     PIE11           equ	1193	;# 
  1875   0004AA                     PIE12           equ	1194	;# 
  1876   0004AB                     PIE13           equ	1195	;# 
  1877   0004AC                     PIE14           equ	1196	;# 
  1878   0004AD                     PIE15           equ	1197	;# 
  1879   0004AE                     PIR0            equ	1198	;# 
  1880   0004AF                     PIR1            equ	1199	;# 
  1881   0004B0                     PIR2            equ	1200	;# 
  1882   0004B1                     PIR3            equ	1201	;# 
  1883   0004B2                     PIR4            equ	1202	;# 
  1884   0004B3                     PIR5            equ	1203	;# 
  1885   0004B4                     PIR6            equ	1204	;# 
  1886   0004B5                     PIR7            equ	1205	;# 
  1887   0004B6                     PIR8            equ	1206	;# 
  1888   0004B7                     PIR9            equ	1207	;# 
  1889   0004B8                     PIR10           equ	1208	;# 
  1890   0004B9                     PIR11           equ	1209	;# 
  1891   0004BA                     PIR12           equ	1210	;# 
  1892   0004BB                     PIR13           equ	1211	;# 
  1893   0004BC                     PIR14           equ	1212	;# 
  1894   0004BD                     PIR15           equ	1213	;# 
  1895   0004BE                     LATA            equ	1214	;# 
  1896   0004BF                     LATB            equ	1215	;# 
  1897   0004C0                     LATC            equ	1216	;# 
  1898   0004C1                     LATD            equ	1217	;# 
  1899   0004C2                     LATE            equ	1218	;# 
  1900   0004C3                     LATF            equ	1219	;# 
  1901   0004C6                     TRISA           equ	1222	;# 
  1902   0004C7                     TRISB           equ	1223	;# 
  1903   0004C8                     TRISC           equ	1224	;# 
  1904   0004C9                     TRISD           equ	1225	;# 
  1905   0004CA                     TRISE           equ	1226	;# 
  1906   0004CB                     TRISF           equ	1227	;# 
  1907   0004CE                     PORTA           equ	1230	;# 
  1908   0004CF                     PORTB           equ	1231	;# 
  1909   0004D0                     PORTC           equ	1232	;# 
  1910   0004D1                     PORTD           equ	1233	;# 
  1911   0004D2                     PORTE           equ	1234	;# 
  1912   0004D3                     PORTF           equ	1235	;# 
  1913   0004D6                     INTCON0         equ	1238	;# 
  1914   0004D7                     INTCON1         equ	1239	;# 
  1915   0004D8                     STATUS          equ	1240	;# 
  1916   0004D9                     FSR2            equ	1241	;# 
  1917   0004D9                     FSR2L           equ	1241	;# 
  1918   0004DA                     FSR2H           equ	1242	;# 
  1919   0004DB                     PLUSW2          equ	1243	;# 
  1920   0004DC                     PREINC2         equ	1244	;# 
  1921   0004DD                     POSTDEC2        equ	1245	;# 
  1922   0004DE                     POSTINC2        equ	1246	;# 
  1923   0004DF                     INDF2           equ	1247	;# 
  1924   0004E0                     BSR             equ	1248	;# 
  1925   0004E1                     FSR1            equ	1249	;# 
  1926   0004E1                     FSR1L           equ	1249	;# 
  1927   0004E2                     FSR1H           equ	1250	;# 
  1928   0004E3                     PLUSW1          equ	1251	;# 
  1929   0004E4                     PREINC1         equ	1252	;# 
  1930   0004E5                     POSTDEC1        equ	1253	;# 
  1931   0004E6                     POSTINC1        equ	1254	;# 
  1932   0004E7                     INDF1           equ	1255	;# 
  1933   0004E8                     WREG            equ	1256	;# 
  1934   0004E9                     FSR0            equ	1257	;# 
  1935   0004E9                     FSR0L           equ	1257	;# 
  1936   0004EA                     FSR0H           equ	1258	;# 
  1937   0004EB                     PLUSW0          equ	1259	;# 
  1938   0004EC                     PREINC0         equ	1260	;# 
  1939   0004ED                     POSTDEC0        equ	1261	;# 
  1940   0004EE                     POSTINC0        equ	1262	;# 
  1941   0004EF                     INDF0           equ	1263	;# 
  1942   0004F0                     PCON0           equ	1264	;# 
  1943   0004F1                     PCON1           equ	1265	;# 
  1944   0004F2                     CPUDOZE         equ	1266	;# 
  1945   0004F3                     PROD            equ	1267	;# 
  1946   0004F3                     PRODL           equ	1267	;# 
  1947   0004F4                     PRODH           equ	1268	;# 
  1948   0004F5                     TABLAT          equ	1269	;# 
  1949   0004F6                     TBLPTR          equ	1270	;# 
  1950   0004F6                     TBLPTRL         equ	1270	;# 
  1951   0004F7                     TBLPTRH         equ	1271	;# 
  1952   0004F8                     TBLPTRU         equ	1272	;# 
  1953   0004F9                     PCLAT           equ	1273	;# 
  1954   0004F9                     PCL             equ	1273	;# 
  1955   0004FA                     PCLATH          equ	1274	;# 
  1956   0004FB                     PCLATU          equ	1275	;# 
  1957   0004FC                     STKPTR          equ	1276	;# 
  1958   0004FD                     TOS             equ	1277	;# 
  1959   0004FD                     TOSL            equ	1277	;# 
  1960   0004FE                     TOSH            equ	1278	;# 
  1961   0004FF                     TOSU            equ	1279	;# 
  1962   000039                     CLKRCON         equ	57	;# 
  1963   00003A                     CLKRCLK         equ	58	;# 
  1964   000040                     NVMCON0         equ	64	;# 
  1965   000041                     NVMCON1         equ	65	;# 
  1966   000042                     NVMLOCK         equ	66	;# 
  1967   000043                     NVMADR          equ	67	;# 
  1968   000043                     NVMADRL         equ	67	;# 
  1969   000044                     NVMADRH         equ	68	;# 
  1970   000045                     NVMADRU         equ	69	;# 
  1971   000046                     NVMDAT          equ	70	;# 
  1972   000046                     NVMDATL         equ	70	;# 
  1973   000047                     NVMDATH         equ	71	;# 
  1974   000048                     VREGCON         equ	72	;# 
  1975   000049                     BORCON          equ	73	;# 
  1976   00004A                     HLVDCON0        equ	74	;# 
  1977   00004B                     HLVDCON1        equ	75	;# 
  1978   00004C                     ZCDCON          equ	76	;# 
  1979   000060                     PMD0            equ	96	;# 
  1980   000061                     PMD1            equ	97	;# 
  1981   000063                     PMD3            equ	99	;# 
  1982   000064                     PMD4            equ	100	;# 
  1983   000065                     PMD5            equ	101	;# 
  1984   000066                     PMD6            equ	102	;# 
  1985   000067                     PMD7            equ	103	;# 
  1986   000068                     PMD8            equ	104	;# 
  1987   00006A                     MD1CON0         equ	106	;# 
  1988   00006B                     MD1CON1         equ	107	;# 
  1989   00006C                     MD1SRC          equ	108	;# 
  1990   00006D                     MD1CARL         equ	109	;# 
  1991   00006E                     MD1CARH         equ	110	;# 
  1992   00006F                     CMOUT           equ	111	;# 
  1993   000070                     CM1CON0         equ	112	;# 
  1994   000071                     CM1CON1         equ	113	;# 
  1995   000072                     CM1NCH          equ	114	;# 
  1996   000073                     CM1PCH          equ	115	;# 
  1997   000074                     CM2CON0         equ	116	;# 
  1998   000075                     CM2CON1         equ	117	;# 
  1999   000076                     CM2NCH          equ	118	;# 
  2000   000077                     CM2PCH          equ	119	;# 
  2001   000078                     WDTCON0         equ	120	;# 
  2002   000079                     WDTCON1         equ	121	;# 
  2003   00007A                     WDTPS           equ	122	;# 
  2004   00007A                     WDTPSL          equ	122	;# 
  2005   00007B                     WDTPSH          equ	123	;# 
  2006   00007C                     WDTTMR          equ	124	;# 
  2007   00007D                     DAC1DAT         equ	125	;# 
  2008   00007D                     DAC1DATL        equ	125	;# 
  2009   00007F                     DAC1CON         equ	127	;# 
  2010   000080                     SPI1RXB         equ	128	;# 
  2011   000081                     SPI1TXB         equ	129	;# 
  2012   000082                     SPI1TCNT        equ	130	;# 
  2013   000082                     SPI1TCNTL       equ	130	;# 
  2014   000083                     SPI1TCNTH       equ	131	;# 
  2015   000084                     SPI1CON0        equ	132	;# 
  2016   000085                     SPI1CON1        equ	133	;# 
  2017   000086                     SPI1CON2        equ	134	;# 
  2018   000087                     SPI1STATUS      equ	135	;# 
  2019   000088                     SPI1TWIDTH      equ	136	;# 
  2020   000089                     SPI1BAUD        equ	137	;# 
  2021   00008A                     SPI1INTF        equ	138	;# 
  2022   00008B                     SPI1INTE        equ	139	;# 
  2023   00008C                     SPI1CLK         equ	140	;# 
  2024   00008D                     SPI2RXB         equ	141	;# 
  2025   00008E                     SPI2TXB         equ	142	;# 
  2026   00008F                     SPI2TCNT        equ	143	;# 
  2027   00008F                     SPI2TCNTL       equ	143	;# 
  2028   000090                     SPI2TCNTH       equ	144	;# 
  2029   000091                     SPI2CON0        equ	145	;# 
  2030   000092                     SPI2CON1        equ	146	;# 
  2031   000093                     SPI2CON2        equ	147	;# 
  2032   000094                     SPI2STATUS      equ	148	;# 
  2033   000095                     SPI2TWIDTH      equ	149	;# 
  2034   000096                     SPI2BAUD        equ	150	;# 
  2035   000097                     SPI2INTF        equ	151	;# 
  2036   000098                     SPI2INTE        equ	152	;# 
  2037   000099                     SPI2CLK         equ	153	;# 
  2038   0000AC                     ACTCON          equ	172	;# 
  2039   0000AD                     OSCCON1         equ	173	;# 
  2040   0000AE                     OSCCON2         equ	174	;# 
  2041   0000AF                     OSCCON3         equ	175	;# 
  2042   0000B0                     OSCTUNE         equ	176	;# 
  2043   0000B1                     OSCFRQ          equ	177	;# 
  2044   0000B1                     OSCFREQ         equ	177	;# 
  2045   0000B2                     OSCSTAT         equ	178	;# 
  2046   0000B2                     OSCSTAT1        equ	178	;# 
  2047   0000B3                     OSCEN           equ	179	;# 
  2048   0000B4                     PRLOCK          equ	180	;# 
  2049   0000B5                     SCANPR          equ	181	;# 
  2050   0000B6                     DMA1PR          equ	182	;# 
  2051   0000B7                     DMA2PR          equ	183	;# 
  2052   0000B8                     DMA3PR          equ	184	;# 
  2053   0000B9                     DMA4PR          equ	185	;# 
  2054   0000BA                     DMA5PR          equ	186	;# 
  2055   0000BB                     DMA6PR          equ	187	;# 
  2056   0000BE                     MAINPR          equ	190	;# 
  2057   0000BF                     ISRPR           equ	191	;# 
  2058   0000D4                     CLCDATA         equ	212	;# 
  2059   0000D5                     CLCSELECT       equ	213	;# 
  2060   0000D6                     CLCnCON         equ	214	;# 
  2061   0000D7                     CLCnPOL         equ	215	;# 
  2062   0000D8                     CLCnSEL0        equ	216	;# 
  2063   0000D9                     CLCnSEL1        equ	217	;# 
  2064   0000DA                     CLCnSEL2        equ	218	;# 
  2065   0000DB                     CLCnSEL3        equ	219	;# 
  2066   0000DC                     CLCnGLS0        equ	220	;# 
  2067   0000DD                     CLCnGLS1        equ	221	;# 
  2068   0000DE                     CLCnGLS2        equ	222	;# 
  2069   0000DF                     CLCnGLS3        equ	223	;# 
  2070   0000E8                     DMASELECT       equ	232	;# 
  2071   0000E9                     DMAnBUF         equ	233	;# 
  2072   0000EA                     DMAnDCNT        equ	234	;# 
  2073   0000EA                     DMAnDCNTL       equ	234	;# 
  2074   0000EB                     DMAnDCNTH       equ	235	;# 
  2075   0000EC                     DMAnDPTR        equ	236	;# 
  2076   0000EC                     DMAnDPTRL       equ	236	;# 
  2077   0000ED                     DMAnDPTRH       equ	237	;# 
  2078   0000EE                     DMAnDSZ         equ	238	;# 
  2079   0000EE                     DMAnDSZL        equ	238	;# 
  2080   0000EF                     DMAnDSZH        equ	239	;# 
  2081   0000F0                     DMAnDSA         equ	240	;# 
  2082   0000F0                     DMAnDSAL        equ	240	;# 
  2083   0000F1                     DMAnDSAH        equ	241	;# 
  2084   0000F2                     DMAnSCNT        equ	242	;# 
  2085   0000F2                     DMAnSCNTL       equ	242	;# 
  2086   0000F3                     DMAnSCNTH       equ	243	;# 
  2087   0000F4                     DMAnSPTR        equ	244	;# 
  2088   0000F4                     DMAnSPTRL       equ	244	;# 
  2089   0000F5                     DMAnSPTRH       equ	245	;# 
  2090   0000F6                     DMAnSPTRU       equ	246	;# 
  2091   0000F7                     DMAnSSZ         equ	247	;# 
  2092   0000F7                     DMAnSSZL        equ	247	;# 
  2093   0000F8                     DMAnSSZH        equ	248	;# 
  2094   0000F9                     DMAnSSA         equ	249	;# 
  2095   0000F9                     DMAnSSAL        equ	249	;# 
  2096   0000FA                     DMAnSSAH        equ	250	;# 
  2097   0000FB                     DMAnSSAU        equ	251	;# 
  2098   0000FC                     DMAnCON0        equ	252	;# 
  2099   0000FD                     DMAnCON1        equ	253	;# 
  2100   0000FE                     DMAnAIRQ        equ	254	;# 
  2101   0000FF                     DMAnSIRQ        equ	255	;# 
  2102   000200                     PPSLOCK         equ	512	;# 
  2103   000201                     RA0PPS          equ	513	;# 
  2104   000202                     RA1PPS          equ	514	;# 
  2105   000203                     RA2PPS          equ	515	;# 
  2106   000204                     RA3PPS          equ	516	;# 
  2107   000205                     RA4PPS          equ	517	;# 
  2108   000206                     RA5PPS          equ	518	;# 
  2109   000207                     RA6PPS          equ	519	;# 
  2110   000208                     RA7PPS          equ	520	;# 
  2111   000209                     RB0PPS          equ	521	;# 
  2112   00020A                     RB1PPS          equ	522	;# 
  2113   00020B                     RB2PPS          equ	523	;# 
  2114   00020C                     RB3PPS          equ	524	;# 
  2115   00020D                     RB4PPS          equ	525	;# 
  2116   00020E                     RB5PPS          equ	526	;# 
  2117   00020F                     RB6PPS          equ	527	;# 
  2118   000210                     RB7PPS          equ	528	;# 
  2119   000211                     RC0PPS          equ	529	;# 
  2120   000212                     RC1PPS          equ	530	;# 
  2121   000213                     RC2PPS          equ	531	;# 
  2122   000214                     RC3PPS          equ	532	;# 
  2123   000215                     RC4PPS          equ	533	;# 
  2124   000216                     RC5PPS          equ	534	;# 
  2125   000217                     RC6PPS          equ	535	;# 
  2126   000218                     RC7PPS          equ	536	;# 
  2127   000219                     RD0PPS          equ	537	;# 
  2128   00021A                     RD1PPS          equ	538	;# 
  2129   00021B                     RD2PPS          equ	539	;# 
  2130   00021C                     RD3PPS          equ	540	;# 
  2131   00021D                     RD4PPS          equ	541	;# 
  2132   00021E                     RD5PPS          equ	542	;# 
  2133   00021F                     RD6PPS          equ	543	;# 
  2134   000220                     RD7PPS          equ	544	;# 
  2135   000221                     RE0PPS          equ	545	;# 
  2136   000222                     RE1PPS          equ	546	;# 
  2137   000223                     RE2PPS          equ	547	;# 
  2138   000229                     RF0PPS          equ	553	;# 
  2139   00022A                     RF1PPS          equ	554	;# 
  2140   00022B                     RF2PPS          equ	555	;# 
  2141   00022C                     RF3PPS          equ	556	;# 
  2142   00022D                     RF4PPS          equ	557	;# 
  2143   00022E                     RF5PPS          equ	558	;# 
  2144   00022F                     RF6PPS          equ	559	;# 
  2145   000230                     RF7PPS          equ	560	;# 
  2146   00023E                     INT0PPS         equ	574	;# 
  2147   00023F                     INT1PPS         equ	575	;# 
  2148   000240                     INT2PPS         equ	576	;# 
  2149   000241                     T0CKIPPS        equ	577	;# 
  2150   000242                     T1CKIPPS        equ	578	;# 
  2151   000243                     T1GPPS          equ	579	;# 
  2152   000244                     T3CKIPPS        equ	580	;# 
  2153   000245                     T3GPPS          equ	581	;# 
  2154   000246                     T5CKIPPS        equ	582	;# 
  2155   000247                     T5GPPS          equ	583	;# 
  2156   000248                     T2INPPS         equ	584	;# 
  2157   000249                     T4INPPS         equ	585	;# 
  2158   00024A                     T6INPPS         equ	586	;# 
  2159   00024F                     CCP1PPS         equ	591	;# 
  2160   000250                     CCP2PPS         equ	592	;# 
  2161   000251                     CCP3PPS         equ	593	;# 
  2162   000253                     PWM1ERSPPS      equ	595	;# 
  2163   000254                     PWM2ERSPPS      equ	596	;# 
  2164   000255                     PWM3ERSPPS      equ	597	;# 
  2165   000257                     PWMIN0PPS       equ	599	;# 
  2166   000258                     PWMIN1PPS       equ	600	;# 
  2167   000259                     SMT1WINPPS      equ	601	;# 
  2168   00025A                     SMT1SIGPPS      equ	602	;# 
  2169   00025B                     CWG1PPS         equ	603	;# 
  2170   00025B                     CWG1INPPS       equ	603	;# 
  2171   00025C                     CWG2PPS         equ	604	;# 
  2172   00025C                     CWG2INPPS       equ	604	;# 
  2173   00025D                     CWG3PPS         equ	605	;# 
  2174   00025D                     CWG3INPPS       equ	605	;# 
  2175   00025E                     MD1CARLPPS      equ	606	;# 
  2176   00025E                     MDCARLPPS       equ	606	;# 
  2177   00025F                     MD1CARHPPS      equ	607	;# 
  2178   00025F                     MDCARHPPS       equ	607	;# 
  2179   000260                     MD1SRCPPS       equ	608	;# 
  2180   000260                     MDSRCPPS        equ	608	;# 
  2181   000261                     CLCIN0PPS       equ	609	;# 
  2182   000262                     CLCIN1PPS       equ	610	;# 
  2183   000263                     CLCIN2PPS       equ	611	;# 
  2184   000264                     CLCIN3PPS       equ	612	;# 
  2185   000265                     CLCIN4PPS       equ	613	;# 
  2186   000266                     CLCIN5PPS       equ	614	;# 
  2187   000267                     CLCIN6PPS       equ	615	;# 
  2188   000268                     CLCIN7PPS       equ	616	;# 
  2189   000269                     ADACTPPS        equ	617	;# 
  2190   00026A                     SPI1SCKPPS      equ	618	;# 
  2191   00026B                     SPI1SDIPPS      equ	619	;# 
  2192   00026C                     SPI1SSPPS       equ	620	;# 
  2193   00026D                     SPI2SCKPPS      equ	621	;# 
  2194   00026E                     SPI2SDIPPS      equ	622	;# 
  2195   00026F                     SPI2SSPPS       equ	623	;# 
  2196   000270                     I2C1SDAPPS      equ	624	;# 
  2197   000271                     I2C1SCLPPS      equ	625	;# 
  2198   000272                     U1RXPPS         equ	626	;# 
  2199   000273                     U1CTSPPS        equ	627	;# 
  2200   000274                     U2RXPPS         equ	628	;# 
  2201   000275                     U2CTSPPS        equ	629	;# 
  2202   000276                     U3RXPPS         equ	630	;# 
  2203   000277                     U3CTSPPS        equ	631	;# 
  2204   000278                     U4RXPPS         equ	632	;# 
  2205   000279                     U4CTSPPS        equ	633	;# 
  2206   00027A                     U5RXPPS         equ	634	;# 
  2207   00027B                     U5CTSPPS        equ	635	;# 
  2208   000286                     RC4I2C          equ	646	;# 
  2209   000287                     RC3I2C          equ	647	;# 
  2210   000288                     RB2I2C          equ	648	;# 
  2211   000289                     RB1I2C          equ	649	;# 
  2212   00028B                     I2C1RXB         equ	651	;# 
  2213   00028C                     I2C1TXB         equ	652	;# 
  2214   00028D                     I2C1CNT         equ	653	;# 
  2215   00028E                     I2C1ADB0        equ	654	;# 
  2216   00028F                     I2C1ADB1        equ	655	;# 
  2217   000290                     I2C1ADR0        equ	656	;# 
  2218   000291                     I2C1ADR1        equ	657	;# 
  2219   000292                     I2C1ADR2        equ	658	;# 
  2220   000293                     I2C1ADR3        equ	659	;# 
  2221   000294                     I2C1CON0        equ	660	;# 
  2222   000295                     I2C1CON1        equ	661	;# 
  2223   000296                     I2C1CON2        equ	662	;# 
  2224   000297                     I2C1ERR         equ	663	;# 
  2225   000298                     I2C1STAT0       equ	664	;# 
  2226   000299                     I2C1STAT1       equ	665	;# 
  2227   00029A                     I2C1PIR         equ	666	;# 
  2228   00029B                     I2C1PIE         equ	667	;# 
  2229   00029C                     I2C1CLK         equ	668	;# 
  2230   00029D                     I2C1BTO         equ	669	;# 
  2231   0002A1                     U1RXB           equ	673	;# 
  2232   0002A1                     U1RXBL          equ	673	;# 
  2233   0002A2                     U1RXCHK         equ	674	;# 
  2234   0002A3                     U1TXB           equ	675	;# 
  2235   0002A3                     U1TXBL          equ	675	;# 
  2236   0002A4                     U1TXCHK         equ	676	;# 
  2237   0002A5                     U1P1            equ	677	;# 
  2238   0002A5                     U1P1L           equ	677	;# 
  2239   0002A6                     U1P1H           equ	678	;# 
  2240   0002A7                     U1P2            equ	679	;# 
  2241   0002A7                     U1P2L           equ	679	;# 
  2242   0002A8                     U1P2H           equ	680	;# 
  2243   0002A9                     U1P3            equ	681	;# 
  2244   0002A9                     U1P3L           equ	681	;# 
  2245   0002AA                     U1P3H           equ	682	;# 
  2246   0002AB                     U1CON0          equ	683	;# 
  2247   0002AC                     U1CON1          equ	684	;# 
  2248   0002AD                     U1CON2          equ	685	;# 
  2249   0002AE                     U1BRG           equ	686	;# 
  2250   0002AE                     U1BRGL          equ	686	;# 
  2251   0002AF                     U1BRGH          equ	687	;# 
  2252   0002B0                     U1FIFO          equ	688	;# 
  2253   0002B1                     U1UIR           equ	689	;# 
  2254   0002B2                     U1ERRIR         equ	690	;# 
  2255   0002B3                     U1ERRIE         equ	691	;# 
  2256   0002B4                     U2RXB           equ	692	;# 
  2257   0002B4                     U2RXBL          equ	692	;# 
  2258   0002B6                     U2TXB           equ	694	;# 
  2259   0002B6                     U2TXBL          equ	694	;# 
  2260   0002B8                     U2P1            equ	696	;# 
  2261   0002B8                     U2P1L           equ	696	;# 
  2262   0002BA                     U2P2            equ	698	;# 
  2263   0002BA                     U2P2L           equ	698	;# 
  2264   0002BC                     U2P3            equ	700	;# 
  2265   0002BC                     U2P3L           equ	700	;# 
  2266   0002BE                     U2CON0          equ	702	;# 
  2267   0002BF                     U2CON1          equ	703	;# 
  2268   0002C0                     U2CON2          equ	704	;# 
  2269   0002C1                     U2BRG           equ	705	;# 
  2270   0002C1                     U2BRGL          equ	705	;# 
  2271   0002C2                     U2BRGH          equ	706	;# 
  2272   0002C3                     U2FIFO          equ	707	;# 
  2273   0002C4                     U2UIR           equ	708	;# 
  2274   0002C5                     U2ERRIR         equ	709	;# 
  2275   0002C6                     U2ERRIE         equ	710	;# 
  2276   0002C7                     U3RXB           equ	711	;# 
  2277   0002C7                     U3RXBL          equ	711	;# 
  2278   0002C9                     U3TXB           equ	713	;# 
  2279   0002C9                     U3TXBL          equ	713	;# 
  2280   0002CB                     U3P1            equ	715	;# 
  2281   0002CB                     U3P1L           equ	715	;# 
  2282   0002CD                     U3P2            equ	717	;# 
  2283   0002CD                     U3P2L           equ	717	;# 
  2284   0002CF                     U3P3            equ	719	;# 
  2285   0002CF                     U3P3L           equ	719	;# 
  2286   0002D1                     U3CON0          equ	721	;# 
  2287   0002D2                     U3CON1          equ	722	;# 
  2288   0002D3                     U3CON2          equ	723	;# 
  2289   0002D4                     U3BRG           equ	724	;# 
  2290   0002D4                     U3BRGL          equ	724	;# 
  2291   0002D5                     U3BRGH          equ	725	;# 
  2292   0002D6                     U3FIFO          equ	726	;# 
  2293   0002D7                     U3UIR           equ	727	;# 
  2294   0002D8                     U3ERRIR         equ	728	;# 
  2295   0002D9                     U3ERRIE         equ	729	;# 
  2296   0002DA                     U4RXB           equ	730	;# 
  2297   0002DA                     U4RXBL          equ	730	;# 
  2298   0002DC                     U4TXB           equ	732	;# 
  2299   0002DC                     U4TXBL          equ	732	;# 
  2300   0002DE                     U4P1            equ	734	;# 
  2301   0002DE                     U4P1L           equ	734	;# 
  2302   0002E0                     U4P2            equ	736	;# 
  2303   0002E0                     U4P2L           equ	736	;# 
  2304   0002E2                     U4P3            equ	738	;# 
  2305   0002E2                     U4P3L           equ	738	;# 
  2306   0002E4                     U4CON0          equ	740	;# 
  2307   0002E5                     U4CON1          equ	741	;# 
  2308   0002E6                     U4CON2          equ	742	;# 
  2309   0002E7                     U4BRG           equ	743	;# 
  2310   0002E7                     U4BRGL          equ	743	;# 
  2311   0002E8                     U4BRGH          equ	744	;# 
  2312   0002E9                     U4FIFO          equ	745	;# 
  2313   0002EA                     U4UIR           equ	746	;# 
  2314   0002EB                     U4ERRIR         equ	747	;# 
  2315   0002EC                     U4ERRIE         equ	748	;# 
  2316   0002ED                     U5RXB           equ	749	;# 
  2317   0002ED                     U5RXBL          equ	749	;# 
  2318   0002EF                     U5TXB           equ	751	;# 
  2319   0002EF                     U5TXBL          equ	751	;# 
  2320   0002F1                     U5P1            equ	753	;# 
  2321   0002F1                     U5P1L           equ	753	;# 
  2322   0002F3                     U5P2            equ	755	;# 
  2323   0002F3                     U5P2L           equ	755	;# 
  2324   0002F5                     U5P3            equ	757	;# 
  2325   0002F5                     U5P3L           equ	757	;# 
  2326   0002F7                     U5CON0          equ	759	;# 
  2327   0002F8                     U5CON1          equ	760	;# 
  2328   0002F9                     U5CON2          equ	761	;# 
  2329   0002FA                     U5BRG           equ	762	;# 
  2330   0002FA                     U5BRGL          equ	762	;# 
  2331   0002FB                     U5BRGH          equ	763	;# 
  2332   0002FC                     U5FIFO          equ	764	;# 
  2333   0002FD                     U5UIR           equ	765	;# 
  2334   0002FE                     U5ERRIR         equ	766	;# 
  2335   0002FF                     U5ERRIE         equ	767	;# 
  2336   000300                     SMT1TMR         equ	768	;# 
  2337   000300                     SMT1TMRL        equ	768	;# 
  2338   000301                     SMT1TMRH        equ	769	;# 
  2339   000302                     SMT1TMRU        equ	770	;# 
  2340   000303                     SMT1CPR         equ	771	;# 
  2341   000303                     SMT1CPRL        equ	771	;# 
  2342   000304                     SMT1CPRH        equ	772	;# 
  2343   000305                     SMT1CPRU        equ	773	;# 
  2344   000306                     SMT1CPW         equ	774	;# 
  2345   000306                     SMT1CPWL        equ	774	;# 
  2346   000307                     SMT1CPWH        equ	775	;# 
  2347   000308                     SMT1CPWU        equ	776	;# 
  2348   000309                     SMT1PR          equ	777	;# 
  2349   000309                     SMT1PRL         equ	777	;# 
  2350   00030A                     SMT1PRH         equ	778	;# 
  2351   00030B                     SMT1PRU         equ	779	;# 
  2352   00030C                     SMT1CON0        equ	780	;# 
  2353   00030D                     SMT1CON1        equ	781	;# 
  2354   00030E                     SMT1STAT        equ	782	;# 
  2355   00030F                     SMT1CLK         equ	783	;# 
  2356   000310                     SMT1SIG         equ	784	;# 
  2357   000311                     SMT1WIN         equ	785	;# 
  2358   000318                     TMR0L           equ	792	;# 
  2359   000318                     TMR0            equ	792	;# 
  2360   000319                     TMR0H           equ	793	;# 
  2361   000319                     PR0             equ	793	;# 
  2362   00031A                     T0CON0          equ	794	;# 
  2363   00031B                     T0CON1          equ	795	;# 
  2364   00031C                     TMR1            equ	796	;# 
  2365   00031C                     TMR1L           equ	796	;# 
  2366   00031D                     TMR1H           equ	797	;# 
  2367   00031E                     T1CON           equ	798	;# 
  2368   00031E                     TMR1CON         equ	798	;# 
  2369   00031F                     T1GCON          equ	799	;# 
  2370   00031F                     TMR1GCON        equ	799	;# 
  2371   000320                     T1GATE          equ	800	;# 
  2372   000320                     TMR1GATE        equ	800	;# 
  2373   000321                     T1CLK           equ	801	;# 
  2374   000321                     TMR1CLK         equ	801	;# 
  2375   000321                     PR1             equ	801	;# 
  2376   000322                     T2TMR           equ	802	;# 
  2377   000322                     TMR2            equ	802	;# 
  2378   000323                     T2PR            equ	803	;# 
  2379   000323                     PR2             equ	803	;# 
  2380   000324                     T2CON           equ	804	;# 
  2381   000325                     T2HLT           equ	805	;# 
  2382   000326                     T2CLKCON        equ	806	;# 
  2383   000326                     T2CLK           equ	806	;# 
  2384   000327                     T2RST           equ	807	;# 
  2385   000328                     TMR3            equ	808	;# 
  2386   000328                     TMR3L           equ	808	;# 
  2387   000329                     TMR3H           equ	809	;# 
  2388   00032A                     T3CON           equ	810	;# 
  2389   00032A                     TMR3CON         equ	810	;# 
  2390   00032B                     T3GCON          equ	811	;# 
  2391   00032B                     TMR3GCON        equ	811	;# 
  2392   00032C                     T3GATE          equ	812	;# 
  2393   00032C                     TMR3GATE        equ	812	;# 
  2394   00032D                     T3CLK           equ	813	;# 
  2395   00032D                     TMR3CLK         equ	813	;# 
  2396   00032D                     PR3             equ	813	;# 
  2397   00032E                     T4TMR           equ	814	;# 
  2398   00032E                     TMR4            equ	814	;# 
  2399   00032F                     T4PR            equ	815	;# 
  2400   00032F                     PR4             equ	815	;# 
  2401   000330                     T4CON           equ	816	;# 
  2402   000331                     T4HLT           equ	817	;# 
  2403   000332                     T4CLKCON        equ	818	;# 
  2404   000332                     T4CLK           equ	818	;# 
  2405   000333                     T4RST           equ	819	;# 
  2406   000334                     TMR5            equ	820	;# 
  2407   000334                     TMR5L           equ	820	;# 
  2408   000335                     TMR5H           equ	821	;# 
  2409   000336                     T5CON           equ	822	;# 
  2410   000336                     TMR5CON         equ	822	;# 
  2411   000337                     T5GCON          equ	823	;# 
  2412   000337                     TMR5GCON        equ	823	;# 
  2413   000338                     T5GATE          equ	824	;# 
  2414   000338                     TMR5GATE        equ	824	;# 
  2415   000339                     T5CLK           equ	825	;# 
  2416   000339                     TMR5CLK         equ	825	;# 
  2417   000339                     PR5             equ	825	;# 
  2418   00033A                     T6TMR           equ	826	;# 
  2419   00033A                     TMR6            equ	826	;# 
  2420   00033B                     T6PR            equ	827	;# 
  2421   00033B                     PR6             equ	827	;# 
  2422   00033C                     T6CON           equ	828	;# 
  2423   00033D                     T6HLT           equ	829	;# 
  2424   00033E                     T6CLKCON        equ	830	;# 
  2425   00033E                     T6CLK           equ	830	;# 
  2426   00033F                     T6RST           equ	831	;# 
  2427   000340                     CCPR1           equ	832	;# 
  2428   000340                     CCPR1L          equ	832	;# 
  2429   000341                     CCPR1H          equ	833	;# 
  2430   000342                     CCP1CON         equ	834	;# 
  2431   000343                     CCP1CAP         equ	835	;# 
  2432   000344                     CCPR2           equ	836	;# 
  2433   000344                     CCPR2L          equ	836	;# 
  2434   000345                     CCPR2H          equ	837	;# 
  2435   000346                     CCP2CON         equ	838	;# 
  2436   000347                     CCP2CAP         equ	839	;# 
  2437   000348                     CCPR3           equ	840	;# 
  2438   000348                     CCPR3L          equ	840	;# 
  2439   000349                     CCPR3H          equ	841	;# 
  2440   00034A                     CCP3CON         equ	842	;# 
  2441   00034B                     CCP3CAP         equ	843	;# 
  2442   00034C                     CCPTMRS0        equ	844	;# 
  2443   00034F                     CRCDATA         equ	847	;# 
  2444   00034F                     CRCDATL         equ	847	;# 
  2445   000350                     CRCDATH         equ	848	;# 
  2446   000351                     CRCACC          equ	849	;# 
  2447   000351                     CRCACCL         equ	849	;# 
  2448   000352                     CRCACCH         equ	850	;# 
  2449   000353                     CRCSHFT         equ	851	;# 
  2450   000353                     CRCSHIFTL       equ	851	;# 
  2451   000354                     CRCSHIFTH       equ	852	;# 
  2452   000355                     CRCXOR          equ	853	;# 
  2453   000355                     CRCXORL         equ	853	;# 
  2454   000356                     CRCXORH         equ	854	;# 
  2455   000357                     CRCCON0         equ	855	;# 
  2456   000358                     CRCCON1         equ	856	;# 
  2457   00035A                     SCANLADR        equ	858	;# 
  2458   00035A                     SCANLADRL       equ	858	;# 
  2459   00035B                     SCANLADRH       equ	859	;# 
  2460   00035C                     SCANLADRU       equ	860	;# 
  2461   00035D                     SCANHADR        equ	861	;# 
  2462   00035D                     SCANHADRL       equ	861	;# 
  2463   00035E                     SCANHADRH       equ	862	;# 
  2464   00035F                     SCANHADRU       equ	863	;# 
  2465   000360                     SCANCON0        equ	864	;# 
  2466   000361                     SCANTRIG        equ	865	;# 
  2467   000362                     IPR0            equ	866	;# 
  2468   000363                     IPR1            equ	867	;# 
  2469   000364                     IPR2            equ	868	;# 
  2470   000365                     IPR3            equ	869	;# 
  2471   000366                     IPR4            equ	870	;# 
  2472   000367                     IPR5            equ	871	;# 
  2473   000368                     IPR6            equ	872	;# 
  2474   000369                     IPR7            equ	873	;# 
  2475   00036A                     IPR8            equ	874	;# 
  2476   00036B                     IPR9            equ	875	;# 
  2477   00036C                     IPR10           equ	876	;# 
  2478   00036D                     IPR11           equ	877	;# 
  2479   00036E                     IPR12           equ	878	;# 
  2480   00036F                     IPR13           equ	879	;# 
  2481   000370                     IPR14           equ	880	;# 
  2482   000371                     IPR15           equ	881	;# 
  2483   000373                     STATUS_CSHAD    equ	883	;# 
  2484   000374                     WREG_CSHAD      equ	884	;# 
  2485   000375                     BSR_CSHAD       equ	885	;# 
  2486   000376                     SHADCON         equ	886	;# 
  2487   000377                     STATUS_SHAD     equ	887	;# 
  2488   000378                     WREG_SHAD       equ	888	;# 
  2489   000379                     BSR_SHAD        equ	889	;# 
  2490   00037A                     PCLATH_SHAD     equ	890	;# 
  2491   00037B                     PCLATU_SHAD     equ	891	;# 
  2492   00037C                     FSR0SH          equ	892	;# 
  2493   00037C                     FSR0L_SHAD      equ	892	;# 
  2494   00037D                     FSR0H_SHAD      equ	893	;# 
  2495   00037E                     FSR1SH          equ	894	;# 
  2496   00037E                     FSR1L_SHAD      equ	894	;# 
  2497   00037F                     FSR1H_SHAD      equ	895	;# 
  2498   000380                     FSR2SH          equ	896	;# 
  2499   000380                     FSR2L_SHAD      equ	896	;# 
  2500   000381                     FSR2H_SHAD      equ	897	;# 
  2501   000382                     PRODSH          equ	898	;# 
  2502   000382                     PRODL_SHAD      equ	898	;# 
  2503   000383                     PRODH_SHAD      equ	899	;# 
  2504   0003BC                     CWG1CLK         equ	956	;# 
  2505   0003BC                     CWG1CLKCON      equ	956	;# 
  2506   0003BD                     CWG1ISM         equ	957	;# 
  2507   0003BD                     CWG1DAT         equ	957	;# 
  2508   0003BE                     CWG1DBR         equ	958	;# 
  2509   0003BF                     CWG1DBF         equ	959	;# 
  2510   0003C0                     CWG1CON0        equ	960	;# 
  2511   0003C1                     CWG1CON1        equ	961	;# 
  2512   0003C2                     CWG1AS0         equ	962	;# 
  2513   0003C3                     CWG1AS1         equ	963	;# 
  2514   0003C4                     CWG1STR         equ	964	;# 
  2515   0003C5                     CWG2CLK         equ	965	;# 
  2516   0003C5                     CWG2CLKCON      equ	965	;# 
  2517   0003C6                     CWG2ISM         equ	966	;# 
  2518   0003C6                     CWG2DAT         equ	966	;# 
  2519   0003C7                     CWG2DBR         equ	967	;# 
  2520   0003C8                     CWG2DBF         equ	968	;# 
  2521   0003C9                     CWG2CON0        equ	969	;# 
  2522   0003CA                     CWG2CON1        equ	970	;# 
  2523   0003CB                     CWG2AS0         equ	971	;# 
  2524   0003CC                     CWG2AS1         equ	972	;# 
  2525   0003CD                     CWG2STR         equ	973	;# 
  2526   0003CE                     CWG3CLK         equ	974	;# 
  2527   0003CE                     CWG3CLKCON      equ	974	;# 
  2528   0003CF                     CWG3ISM         equ	975	;# 
  2529   0003CF                     CWG3DAT         equ	975	;# 
  2530   0003D0                     CWG3DBR         equ	976	;# 
  2531   0003D1                     CWG3DBF         equ	977	;# 
  2532   0003D2                     CWG3CON0        equ	978	;# 
  2533   0003D3                     CWG3CON1        equ	979	;# 
  2534   0003D4                     CWG3AS0         equ	980	;# 
  2535   0003D5                     CWG3AS1         equ	981	;# 
  2536   0003D6                     CWG3STR         equ	982	;# 
  2537   0003D7                     FVRCON          equ	983	;# 
  2538   0003D8                     ADCPCON         equ	984	;# 
  2539   0003D8                     ADCP            equ	984	;# 
  2540   0003D9                     ADLTH           equ	985	;# 
  2541   0003D9                     ADLTHL          equ	985	;# 
  2542   0003DA                     ADLTHH          equ	986	;# 
  2543   0003DB                     ADUTH           equ	987	;# 
  2544   0003DB                     ADUTHL          equ	987	;# 
  2545   0003DC                     ADUTHH          equ	988	;# 
  2546   0003DD                     ADERR           equ	989	;# 
  2547   0003DD                     ADERRL          equ	989	;# 
  2548   0003DE                     ADERRH          equ	990	;# 
  2549   0003DF                     ADSTPT          equ	991	;# 
  2550   0003DF                     ADSTPTL         equ	991	;# 
  2551   0003E0                     ADSTPTH         equ	992	;# 
  2552   0003E1                     ADFLTR          equ	993	;# 
  2553   0003E1                     ADFLTRL         equ	993	;# 
  2554   0003E2                     ADFLTRH         equ	994	;# 
  2555   0003E3                     ADACC           equ	995	;# 
  2556   0003E3                     ADACCL          equ	995	;# 
  2557   0003E4                     ADACCH          equ	996	;# 
  2558   0003E5                     ADACCU          equ	997	;# 
  2559   0003E6                     ADCNT           equ	998	;# 
  2560   0003E7                     ADRPT           equ	999	;# 
  2561   0003E8                     ADPREV          equ	1000	;# 
  2562   0003E8                     ADPREVL         equ	1000	;# 
  2563   0003E9                     ADPREVH         equ	1001	;# 
  2564   0003EA                     ADRES           equ	1002	;# 
  2565   0003EA                     ADRESL          equ	1002	;# 
  2566   0003EB                     ADRESH          equ	1003	;# 
  2567   0003EC                     ADPCH           equ	1004	;# 
  2568   0003EE                     ADACQ           equ	1006	;# 
  2569   0003EE                     ADACQL          equ	1006	;# 
  2570   0003EF                     ADACQH          equ	1007	;# 
  2571   0003F0                     ADCAP           equ	1008	;# 
  2572   0003F1                     ADPRE           equ	1009	;# 
  2573   0003F1                     ADPREL          equ	1009	;# 
  2574   0003F2                     ADPREH          equ	1010	;# 
  2575   0003F3                     ADCON0          equ	1011	;# 
  2576   0003F4                     ADCON1          equ	1012	;# 
  2577   0003F5                     ADCON2          equ	1013	;# 
  2578   0003F6                     ADCON3          equ	1014	;# 
  2579   0003F7                     ADSTAT          equ	1015	;# 
  2580   0003F8                     ADREF           equ	1016	;# 
  2581   0003F9                     ADACT           equ	1017	;# 
  2582   0003FA                     ADCLK           equ	1018	;# 
  2583   000400                     ANSELA          equ	1024	;# 
  2584   000401                     WPUA            equ	1025	;# 
  2585   000402                     ODCONA          equ	1026	;# 
  2586   000403                     SLRCONA         equ	1027	;# 
  2587   000404                     INLVLA          equ	1028	;# 
  2588   000405                     IOCAP           equ	1029	;# 
  2589   000406                     IOCAN           equ	1030	;# 
  2590   000407                     IOCAF           equ	1031	;# 
  2591   000408                     ANSELB          equ	1032	;# 
  2592   000409                     WPUB            equ	1033	;# 
  2593   00040A                     ODCONB          equ	1034	;# 
  2594   00040B                     SLRCONB         equ	1035	;# 
  2595   00040C                     INLVLB          equ	1036	;# 
  2596   00040D                     IOCBP           equ	1037	;# 
  2597   00040E                     IOCBN           equ	1038	;# 
  2598   00040F                     IOCBF           equ	1039	;# 
  2599   000410                     ANSELC          equ	1040	;# 
  2600   000411                     WPUC            equ	1041	;# 
  2601   000412                     ODCONC          equ	1042	;# 
  2602   000413                     SLRCONC         equ	1043	;# 
  2603   000414                     INLVLC          equ	1044	;# 
  2604   000415                     IOCCP           equ	1045	;# 
  2605   000416                     IOCCN           equ	1046	;# 
  2606   000417                     IOCCF           equ	1047	;# 
  2607   000418                     ANSELD          equ	1048	;# 
  2608   000419                     WPUD            equ	1049	;# 
  2609   00041A                     ODCOND          equ	1050	;# 
  2610   00041B                     SLRCOND         equ	1051	;# 
  2611   00041C                     INLVLD          equ	1052	;# 
  2612   000420                     ANSELE          equ	1056	;# 
  2613   000421                     WPUE            equ	1057	;# 
  2614   000422                     ODCONE          equ	1058	;# 
  2615   000423                     SLRCONE         equ	1059	;# 
  2616   000424                     INLVLE          equ	1060	;# 
  2617   000425                     IOCEP           equ	1061	;# 
  2618   000426                     IOCEN           equ	1062	;# 
  2619   000427                     IOCEF           equ	1063	;# 
  2620   000428                     ANSELF          equ	1064	;# 
  2621   000429                     WPUF            equ	1065	;# 
  2622   00042A                     ODCONF          equ	1066	;# 
  2623   00042B                     SLRCONF         equ	1067	;# 
  2624   00042C                     INLVLF          equ	1068	;# 
  2625   000440                     NCO1ACC         equ	1088	;# 
  2626   000440                     NCO1ACCL        equ	1088	;# 
  2627   000441                     NCO1ACCH        equ	1089	;# 
  2628   000442                     NCO1ACCU        equ	1090	;# 
  2629   000443                     NCO1INC         equ	1091	;# 
  2630   000443                     NCO1INCL        equ	1091	;# 
  2631   000444                     NCO1INCH        equ	1092	;# 
  2632   000445                     NCO1INCU        equ	1093	;# 
  2633   000446                     NCO1CON         equ	1094	;# 
  2634   000447                     NCO1CLK         equ	1095	;# 
  2635   000448                     NCO2ACC         equ	1096	;# 
  2636   000448                     NCO2ACCL        equ	1096	;# 
  2637   000449                     NCO2ACCH        equ	1097	;# 
  2638   00044A                     NCO2ACCU        equ	1098	;# 
  2639   00044B                     NCO2INC         equ	1099	;# 
  2640   00044B                     NCO2INCL        equ	1099	;# 
  2641   00044C                     NCO2INCH        equ	1100	;# 
  2642   00044D                     NCO2INCU        equ	1101	;# 
  2643   00044E                     NCO2CON         equ	1102	;# 
  2644   00044F                     NCO2CLK         equ	1103	;# 
  2645   000450                     NCO3ACC         equ	1104	;# 
  2646   000450                     NCO3ACCL        equ	1104	;# 
  2647   000451                     NCO3ACCH        equ	1105	;# 
  2648   000452                     NCO3ACCU        equ	1106	;# 
  2649   000453                     NCO3INC         equ	1107	;# 
  2650   000453                     NCO3INCL        equ	1107	;# 
  2651   000454                     NCO3INCH        equ	1108	;# 
  2652   000455                     NCO3INCU        equ	1109	;# 
  2653   000456                     NCO3CON         equ	1110	;# 
  2654   000457                     NCO3CLK         equ	1111	;# 
  2655   000459                     IVTLOCK         equ	1113	;# 
  2656   00045A                     IVTAD           equ	1114	;# 
  2657   00045A                     IVTADL          equ	1114	;# 
  2658   00045B                     IVTADH          equ	1115	;# 
  2659   00045C                     IVTADU          equ	1116	;# 
  2660   00045D                     IVTBASE         equ	1117	;# 
  2661   00045D                     IVTBASEL        equ	1117	;# 
  2662   00045E                     IVTBASEH        equ	1118	;# 
  2663   00045F                     IVTBASEU        equ	1119	;# 
  2664   000460                     PWM1ERS         equ	1120	;# 
  2665   000461                     PWM1CLK         equ	1121	;# 
  2666   000462                     PWM1LDS         equ	1122	;# 
  2667   000463                     PWM1PR          equ	1123	;# 
  2668   000463                     PWM1PRL         equ	1123	;# 
  2669   000464                     PWM1PRH         equ	1124	;# 
  2670   000465                     PWM1CPRE        equ	1125	;# 
  2671   000466                     PWM1PIPOS       equ	1126	;# 
  2672   000467                     PWM1GIR         equ	1127	;# 
  2673   000468                     PWM1GIE         equ	1128	;# 
  2674   000469                     PWM1CON         equ	1129	;# 
  2675   00046A                     PWM1S1CFG       equ	1130	;# 
  2676   00046B                     PWM1S1P1        equ	1131	;# 
  2677   00046B                     PWM1S1P1L       equ	1131	;# 
  2678   00046C                     PWM1S1P1H       equ	1132	;# 
  2679   00046D                     PWM1S1P2        equ	1133	;# 
  2680   00046D                     PWM1S1P2L       equ	1133	;# 
  2681   00046E                     PWM1S1P2H       equ	1134	;# 
  2682   00046F                     PWM2ERS         equ	1135	;# 
  2683   000470                     PWM2CLK         equ	1136	;# 
  2684   000471                     PWM2LDS         equ	1137	;# 
  2685   000472                     PWM2PR          equ	1138	;# 
  2686   000472                     PWM2PRL         equ	1138	;# 
  2687   000473                     PWM2PRH         equ	1139	;# 
  2688   000474                     PWM2CPRE        equ	1140	;# 
  2689   000475                     PWM2PIPOS       equ	1141	;# 
  2690   000476                     PWM2GIR         equ	1142	;# 
  2691   000477                     PWM2GIE         equ	1143	;# 
  2692   000478                     PWM2CON         equ	1144	;# 
  2693   000479                     PWM2S1CFG       equ	1145	;# 
  2694   00047A                     PWM2S1P1        equ	1146	;# 
  2695   00047A                     PWM2S1P1L       equ	1146	;# 
  2696   00047B                     PWM2S1P1H       equ	1147	;# 
  2697   00047C                     PWM2S1P2        equ	1148	;# 
  2698   00047C                     PWM2S1P2L       equ	1148	;# 
  2699   00047D                     PWM2S1P2H       equ	1149	;# 
  2700   00047E                     PWM3ERS         equ	1150	;# 
  2701   00047F                     PWM3CLK         equ	1151	;# 
  2702   000480                     PWM3LDS         equ	1152	;# 
  2703   000481                     PWM3PR          equ	1153	;# 
  2704   000481                     PWM3PRL         equ	1153	;# 
  2705   000482                     PWM3PRH         equ	1154	;# 
  2706   000483                     PWM3CPRE        equ	1155	;# 
  2707   000484                     PWM3PIPOS       equ	1156	;# 
  2708   000485                     PWM3GIR         equ	1157	;# 
  2709   000486                     PWM3GIE         equ	1158	;# 
  2710   000487                     PWM3CON         equ	1159	;# 
  2711   000488                     PWM3S1CFG       equ	1160	;# 
  2712   000489                     PWM3S1P1        equ	1161	;# 
  2713   000489                     PWM3S1P1L       equ	1161	;# 
  2714   00048A                     PWM3S1P1H       equ	1162	;# 
  2715   00048B                     PWM3S1P2        equ	1163	;# 
  2716   00048B                     PWM3S1P2L       equ	1163	;# 
  2717   00048C                     PWM3S1P2H       equ	1164	;# 
  2718   00049C                     PWMLOAD         equ	1180	;# 
  2719   00049D                     PWMEN           equ	1181	;# 
  2720   00049E                     PIE0            equ	1182	;# 
  2721   00049F                     PIE1            equ	1183	;# 
  2722   0004A0                     PIE2            equ	1184	;# 
  2723   0004A1                     PIE3            equ	1185	;# 
  2724   0004A2                     PIE4            equ	1186	;# 
  2725   0004A3                     PIE5            equ	1187	;# 
  2726   0004A4                     PIE6            equ	1188	;# 
  2727   0004A5                     PIE7            equ	1189	;# 
  2728   0004A6                     PIE8            equ	1190	;# 
  2729   0004A7                     PIE9            equ	1191	;# 
  2730   0004A8                     PIE10           equ	1192	;# 
  2731   0004A9                     PIE11           equ	1193	;# 
  2732   0004AA                     PIE12           equ	1194	;# 
  2733   0004AB                     PIE13           equ	1195	;# 
  2734   0004AC                     PIE14           equ	1196	;# 
  2735   0004AD                     PIE15           equ	1197	;# 
  2736   0004AE                     PIR0            equ	1198	;# 
  2737   0004AF                     PIR1            equ	1199	;# 
  2738   0004B0                     PIR2            equ	1200	;# 
  2739   0004B1                     PIR3            equ	1201	;# 
  2740   0004B2                     PIR4            equ	1202	;# 
  2741   0004B3                     PIR5            equ	1203	;# 
  2742   0004B4                     PIR6            equ	1204	;# 
  2743   0004B5                     PIR7            equ	1205	;# 
  2744   0004B6                     PIR8            equ	1206	;# 
  2745   0004B7                     PIR9            equ	1207	;# 
  2746   0004B8                     PIR10           equ	1208	;# 
  2747   0004B9                     PIR11           equ	1209	;# 
  2748   0004BA                     PIR12           equ	1210	;# 
  2749   0004BB                     PIR13           equ	1211	;# 
  2750   0004BC                     PIR14           equ	1212	;# 
  2751   0004BD                     PIR15           equ	1213	;# 
  2752   0004BE                     LATA            equ	1214	;# 
  2753   0004BF                     LATB            equ	1215	;# 
  2754   0004C0                     LATC            equ	1216	;# 
  2755   0004C1                     LATD            equ	1217	;# 
  2756   0004C2                     LATE            equ	1218	;# 
  2757   0004C3                     LATF            equ	1219	;# 
  2758   0004C6                     TRISA           equ	1222	;# 
  2759   0004C7                     TRISB           equ	1223	;# 
  2760   0004C8                     TRISC           equ	1224	;# 
  2761   0004C9                     TRISD           equ	1225	;# 
  2762   0004CA                     TRISE           equ	1226	;# 
  2763   0004CB                     TRISF           equ	1227	;# 
  2764   0004CE                     PORTA           equ	1230	;# 
  2765   0004CF                     PORTB           equ	1231	;# 
  2766   0004D0                     PORTC           equ	1232	;# 
  2767   0004D1                     PORTD           equ	1233	;# 
  2768   0004D2                     PORTE           equ	1234	;# 
  2769   0004D3                     PORTF           equ	1235	;# 
  2770   0004D6                     INTCON0         equ	1238	;# 
  2771   0004D7                     INTCON1         equ	1239	;# 
  2772   0004D8                     STATUS          equ	1240	;# 
  2773   0004D9                     FSR2            equ	1241	;# 
  2774   0004D9                     FSR2L           equ	1241	;# 
  2775   0004DA                     FSR2H           equ	1242	;# 
  2776   0004DB                     PLUSW2          equ	1243	;# 
  2777   0004DC                     PREINC2         equ	1244	;# 
  2778   0004DD                     POSTDEC2        equ	1245	;# 
  2779   0004DE                     POSTINC2        equ	1246	;# 
  2780   0004DF                     INDF2           equ	1247	;# 
  2781   0004E0                     BSR             equ	1248	;# 
  2782   0004E1                     FSR1            equ	1249	;# 
  2783   0004E1                     FSR1L           equ	1249	;# 
  2784   0004E2                     FSR1H           equ	1250	;# 
  2785   0004E3                     PLUSW1          equ	1251	;# 
  2786   0004E4                     PREINC1         equ	1252	;# 
  2787   0004E5                     POSTDEC1        equ	1253	;# 
  2788   0004E6                     POSTINC1        equ	1254	;# 
  2789   0004E7                     INDF1           equ	1255	;# 
  2790   0004E8                     WREG            equ	1256	;# 
  2791   0004E9                     FSR0            equ	1257	;# 
  2792   0004E9                     FSR0L           equ	1257	;# 
  2793   0004EA                     FSR0H           equ	1258	;# 
  2794   0004EB                     PLUSW0          equ	1259	;# 
  2795   0004EC                     PREINC0         equ	1260	;# 
  2796   0004ED                     POSTDEC0        equ	1261	;# 
  2797   0004EE                     POSTINC0        equ	1262	;# 
  2798   0004EF                     INDF0           equ	1263	;# 
  2799   0004F0                     PCON0           equ	1264	;# 
  2800   0004F1                     PCON1           equ	1265	;# 
  2801   0004F2                     CPUDOZE         equ	1266	;# 
  2802   0004F3                     PROD            equ	1267	;# 
  2803   0004F3                     PRODL           equ	1267	;# 
  2804   0004F4                     PRODH           equ	1268	;# 
  2805   0004F5                     TABLAT          equ	1269	;# 
  2806   0004F6                     TBLPTR          equ	1270	;# 
  2807   0004F6                     TBLPTRL         equ	1270	;# 
  2808   0004F7                     TBLPTRH         equ	1271	;# 
  2809   0004F8                     TBLPTRU         equ	1272	;# 
  2810   0004F9                     PCLAT           equ	1273	;# 
  2811   0004F9                     PCL             equ	1273	;# 
  2812   0004FA                     PCLATH          equ	1274	;# 
  2813   0004FB                     PCLATU          equ	1275	;# 
  2814   0004FC                     STKPTR          equ	1276	;# 
  2815   0004FD                     TOS             equ	1277	;# 
  2816   0004FD                     TOSL            equ	1277	;# 
  2817   0004FE                     TOSH            equ	1278	;# 
  2818   0004FF                     TOSU            equ	1279	;# 
  2819   000039                     CLKRCON         equ	57	;# 
  2820   00003A                     CLKRCLK         equ	58	;# 
  2821   000040                     NVMCON0         equ	64	;# 
  2822   000041                     NVMCON1         equ	65	;# 
  2823   000042                     NVMLOCK         equ	66	;# 
  2824   000043                     NVMADR          equ	67	;# 
  2825   000043                     NVMADRL         equ	67	;# 
  2826   000044                     NVMADRH         equ	68	;# 
  2827   000045                     NVMADRU         equ	69	;# 
  2828   000046                     NVMDAT          equ	70	;# 
  2829   000046                     NVMDATL         equ	70	;# 
  2830   000047                     NVMDATH         equ	71	;# 
  2831   000048                     VREGCON         equ	72	;# 
  2832   000049                     BORCON          equ	73	;# 
  2833   00004A                     HLVDCON0        equ	74	;# 
  2834   00004B                     HLVDCON1        equ	75	;# 
  2835   00004C                     ZCDCON          equ	76	;# 
  2836   000060                     PMD0            equ	96	;# 
  2837   000061                     PMD1            equ	97	;# 
  2838   000063                     PMD3            equ	99	;# 
  2839   000064                     PMD4            equ	100	;# 
  2840   000065                     PMD5            equ	101	;# 
  2841   000066                     PMD6            equ	102	;# 
  2842   000067                     PMD7            equ	103	;# 
  2843   000068                     PMD8            equ	104	;# 
  2844   00006A                     MD1CON0         equ	106	;# 
  2845   00006B                     MD1CON1         equ	107	;# 
  2846   00006C                     MD1SRC          equ	108	;# 
  2847   00006D                     MD1CARL         equ	109	;# 
  2848   00006E                     MD1CARH         equ	110	;# 
  2849   00006F                     CMOUT           equ	111	;# 
  2850   000070                     CM1CON0         equ	112	;# 
  2851   000071                     CM1CON1         equ	113	;# 
  2852   000072                     CM1NCH          equ	114	;# 
  2853   000073                     CM1PCH          equ	115	;# 
  2854   000074                     CM2CON0         equ	116	;# 
  2855   000075                     CM2CON1         equ	117	;# 
  2856   000076                     CM2NCH          equ	118	;# 
  2857   000077                     CM2PCH          equ	119	;# 
  2858   000078                     WDTCON0         equ	120	;# 
  2859   000079                     WDTCON1         equ	121	;# 
  2860   00007A                     WDTPS           equ	122	;# 
  2861   00007A                     WDTPSL          equ	122	;# 
  2862   00007B                     WDTPSH          equ	123	;# 
  2863   00007C                     WDTTMR          equ	124	;# 
  2864   00007D                     DAC1DAT         equ	125	;# 
  2865   00007D                     DAC1DATL        equ	125	;# 
  2866   00007F                     DAC1CON         equ	127	;# 
  2867   000080                     SPI1RXB         equ	128	;# 
  2868   000081                     SPI1TXB         equ	129	;# 
  2869   000082                     SPI1TCNT        equ	130	;# 
  2870   000082                     SPI1TCNTL       equ	130	;# 
  2871   000083                     SPI1TCNTH       equ	131	;# 
  2872   000084                     SPI1CON0        equ	132	;# 
  2873   000085                     SPI1CON1        equ	133	;# 
  2874   000086                     SPI1CON2        equ	134	;# 
  2875   000087                     SPI1STATUS      equ	135	;# 
  2876   000088                     SPI1TWIDTH      equ	136	;# 
  2877   000089                     SPI1BAUD        equ	137	;# 
  2878   00008A                     SPI1INTF        equ	138	;# 
  2879   00008B                     SPI1INTE        equ	139	;# 
  2880   00008C                     SPI1CLK         equ	140	;# 
  2881   00008D                     SPI2RXB         equ	141	;# 
  2882   00008E                     SPI2TXB         equ	142	;# 
  2883   00008F                     SPI2TCNT        equ	143	;# 
  2884   00008F                     SPI2TCNTL       equ	143	;# 
  2885   000090                     SPI2TCNTH       equ	144	;# 
  2886   000091                     SPI2CON0        equ	145	;# 
  2887   000092                     SPI2CON1        equ	146	;# 
  2888   000093                     SPI2CON2        equ	147	;# 
  2889   000094                     SPI2STATUS      equ	148	;# 
  2890   000095                     SPI2TWIDTH      equ	149	;# 
  2891   000096                     SPI2BAUD        equ	150	;# 
  2892   000097                     SPI2INTF        equ	151	;# 
  2893   000098                     SPI2INTE        equ	152	;# 
  2894   000099                     SPI2CLK         equ	153	;# 
  2895   0000AC                     ACTCON          equ	172	;# 
  2896   0000AD                     OSCCON1         equ	173	;# 
  2897   0000AE                     OSCCON2         equ	174	;# 
  2898   0000AF                     OSCCON3         equ	175	;# 
  2899   0000B0                     OSCTUNE         equ	176	;# 
  2900   0000B1                     OSCFRQ          equ	177	;# 
  2901   0000B1                     OSCFREQ         equ	177	;# 
  2902   0000B2                     OSCSTAT         equ	178	;# 
  2903   0000B2                     OSCSTAT1        equ	178	;# 
  2904   0000B3                     OSCEN           equ	179	;# 
  2905   0000B4                     PRLOCK          equ	180	;# 
  2906   0000B5                     SCANPR          equ	181	;# 
  2907   0000B6                     DMA1PR          equ	182	;# 
  2908   0000B7                     DMA2PR          equ	183	;# 
  2909   0000B8                     DMA3PR          equ	184	;# 
  2910   0000B9                     DMA4PR          equ	185	;# 
  2911   0000BA                     DMA5PR          equ	186	;# 
  2912   0000BB                     DMA6PR          equ	187	;# 
  2913   0000BE                     MAINPR          equ	190	;# 
  2914   0000BF                     ISRPR           equ	191	;# 
  2915   0000D4                     CLCDATA         equ	212	;# 
  2916   0000D5                     CLCSELECT       equ	213	;# 
  2917   0000D6                     CLCnCON         equ	214	;# 
  2918   0000D7                     CLCnPOL         equ	215	;# 
  2919   0000D8                     CLCnSEL0        equ	216	;# 
  2920   0000D9                     CLCnSEL1        equ	217	;# 
  2921   0000DA                     CLCnSEL2        equ	218	;# 
  2922   0000DB                     CLCnSEL3        equ	219	;# 
  2923   0000DC                     CLCnGLS0        equ	220	;# 
  2924   0000DD                     CLCnGLS1        equ	221	;# 
  2925   0000DE                     CLCnGLS2        equ	222	;# 
  2926   0000DF                     CLCnGLS3        equ	223	;# 
  2927   0000E8                     DMASELECT       equ	232	;# 
  2928   0000E9                     DMAnBUF         equ	233	;# 
  2929   0000EA                     DMAnDCNT        equ	234	;# 
  2930   0000EA                     DMAnDCNTL       equ	234	;# 
  2931   0000EB                     DMAnDCNTH       equ	235	;# 
  2932   0000EC                     DMAnDPTR        equ	236	;# 
  2933   0000EC                     DMAnDPTRL       equ	236	;# 
  2934   0000ED                     DMAnDPTRH       equ	237	;# 
  2935   0000EE                     DMAnDSZ         equ	238	;# 
  2936   0000EE                     DMAnDSZL        equ	238	;# 
  2937   0000EF                     DMAnDSZH        equ	239	;# 
  2938   0000F0                     DMAnDSA         equ	240	;# 
  2939   0000F0                     DMAnDSAL        equ	240	;# 
  2940   0000F1                     DMAnDSAH        equ	241	;# 
  2941   0000F2                     DMAnSCNT        equ	242	;# 
  2942   0000F2                     DMAnSCNTL       equ	242	;# 
  2943   0000F3                     DMAnSCNTH       equ	243	;# 
  2944   0000F4                     DMAnSPTR        equ	244	;# 
  2945   0000F4                     DMAnSPTRL       equ	244	;# 
  2946   0000F5                     DMAnSPTRH       equ	245	;# 
  2947   0000F6                     DMAnSPTRU       equ	246	;# 
  2948   0000F7                     DMAnSSZ         equ	247	;# 
  2949   0000F7                     DMAnSSZL        equ	247	;# 
  2950   0000F8                     DMAnSSZH        equ	248	;# 
  2951   0000F9                     DMAnSSA         equ	249	;# 
  2952   0000F9                     DMAnSSAL        equ	249	;# 
  2953   0000FA                     DMAnSSAH        equ	250	;# 
  2954   0000FB                     DMAnSSAU        equ	251	;# 
  2955   0000FC                     DMAnCON0        equ	252	;# 
  2956   0000FD                     DMAnCON1        equ	253	;# 
  2957   0000FE                     DMAnAIRQ        equ	254	;# 
  2958   0000FF                     DMAnSIRQ        equ	255	;# 
  2959   000200                     PPSLOCK         equ	512	;# 
  2960   000201                     RA0PPS          equ	513	;# 
  2961   000202                     RA1PPS          equ	514	;# 
  2962   000203                     RA2PPS          equ	515	;# 
  2963   000204                     RA3PPS          equ	516	;# 
  2964   000205                     RA4PPS          equ	517	;# 
  2965   000206                     RA5PPS          equ	518	;# 
  2966   000207                     RA6PPS          equ	519	;# 
  2967   000208                     RA7PPS          equ	520	;# 
  2968   000209                     RB0PPS          equ	521	;# 
  2969   00020A                     RB1PPS          equ	522	;# 
  2970   00020B                     RB2PPS          equ	523	;# 
  2971   00020C                     RB3PPS          equ	524	;# 
  2972   00020D                     RB4PPS          equ	525	;# 
  2973   00020E                     RB5PPS          equ	526	;# 
  2974   00020F                     RB6PPS          equ	527	;# 
  2975   000210                     RB7PPS          equ	528	;# 
  2976   000211                     RC0PPS          equ	529	;# 
  2977   000212                     RC1PPS          equ	530	;# 
  2978   000213                     RC2PPS          equ	531	;# 
  2979   000214                     RC3PPS          equ	532	;# 
  2980   000215                     RC4PPS          equ	533	;# 
  2981   000216                     RC5PPS          equ	534	;# 
  2982   000217                     RC6PPS          equ	535	;# 
  2983   000218                     RC7PPS          equ	536	;# 
  2984   000219                     RD0PPS          equ	537	;# 
  2985   00021A                     RD1PPS          equ	538	;# 
  2986   00021B                     RD2PPS          equ	539	;# 
  2987   00021C                     RD3PPS          equ	540	;# 
  2988   00021D                     RD4PPS          equ	541	;# 
  2989   00021E                     RD5PPS          equ	542	;# 
  2990   00021F                     RD6PPS          equ	543	;# 
  2991   000220                     RD7PPS          equ	544	;# 
  2992   000221                     RE0PPS          equ	545	;# 
  2993   000222                     RE1PPS          equ	546	;# 
  2994   000223                     RE2PPS          equ	547	;# 
  2995   000229                     RF0PPS          equ	553	;# 
  2996   00022A                     RF1PPS          equ	554	;# 
  2997   00022B                     RF2PPS          equ	555	;# 
  2998   00022C                     RF3PPS          equ	556	;# 
  2999   00022D                     RF4PPS          equ	557	;# 
  3000   00022E                     RF5PPS          equ	558	;# 
  3001   00022F                     RF6PPS          equ	559	;# 
  3002   000230                     RF7PPS          equ	560	;# 
  3003   00023E                     INT0PPS         equ	574	;# 
  3004   00023F                     INT1PPS         equ	575	;# 
  3005   000240                     INT2PPS         equ	576	;# 
  3006   000241                     T0CKIPPS        equ	577	;# 
  3007   000242                     T1CKIPPS        equ	578	;# 
  3008   000243                     T1GPPS          equ	579	;# 
  3009   000244                     T3CKIPPS        equ	580	;# 
  3010   000245                     T3GPPS          equ	581	;# 
  3011   000246                     T5CKIPPS        equ	582	;# 
  3012   000247                     T5GPPS          equ	583	;# 
  3013   000248                     T2INPPS         equ	584	;# 
  3014   000249                     T4INPPS         equ	585	;# 
  3015   00024A                     T6INPPS         equ	586	;# 
  3016   00024F                     CCP1PPS         equ	591	;# 
  3017   000250                     CCP2PPS         equ	592	;# 
  3018   000251                     CCP3PPS         equ	593	;# 
  3019   000253                     PWM1ERSPPS      equ	595	;# 
  3020   000254                     PWM2ERSPPS      equ	596	;# 
  3021   000255                     PWM3ERSPPS      equ	597	;# 
  3022   000257                     PWMIN0PPS       equ	599	;# 
  3023   000258                     PWMIN1PPS       equ	600	;# 
  3024   000259                     SMT1WINPPS      equ	601	;# 
  3025   00025A                     SMT1SIGPPS      equ	602	;# 
  3026   00025B                     CWG1PPS         equ	603	;# 
  3027   00025B                     CWG1INPPS       equ	603	;# 
  3028   00025C                     CWG2PPS         equ	604	;# 
  3029   00025C                     CWG2INPPS       equ	604	;# 
  3030   00025D                     CWG3PPS         equ	605	;# 
  3031   00025D                     CWG3INPPS       equ	605	;# 
  3032   00025E                     MD1CARLPPS      equ	606	;# 
  3033   00025E                     MDCARLPPS       equ	606	;# 
  3034   00025F                     MD1CARHPPS      equ	607	;# 
  3035   00025F                     MDCARHPPS       equ	607	;# 
  3036   000260                     MD1SRCPPS       equ	608	;# 
  3037   000260                     MDSRCPPS        equ	608	;# 
  3038   000261                     CLCIN0PPS       equ	609	;# 
  3039   000262                     CLCIN1PPS       equ	610	;# 
  3040   000263                     CLCIN2PPS       equ	611	;# 
  3041   000264                     CLCIN3PPS       equ	612	;# 
  3042   000265                     CLCIN4PPS       equ	613	;# 
  3043   000266                     CLCIN5PPS       equ	614	;# 
  3044   000267                     CLCIN6PPS       equ	615	;# 
  3045   000268                     CLCIN7PPS       equ	616	;# 
  3046   000269                     ADACTPPS        equ	617	;# 
  3047   00026A                     SPI1SCKPPS      equ	618	;# 
  3048   00026B                     SPI1SDIPPS      equ	619	;# 
  3049   00026C                     SPI1SSPPS       equ	620	;# 
  3050   00026D                     SPI2SCKPPS      equ	621	;# 
  3051   00026E                     SPI2SDIPPS      equ	622	;# 
  3052   00026F                     SPI2SSPPS       equ	623	;# 
  3053   000270                     I2C1SDAPPS      equ	624	;# 
  3054   000271                     I2C1SCLPPS      equ	625	;# 
  3055   000272                     U1RXPPS         equ	626	;# 
  3056   000273                     U1CTSPPS        equ	627	;# 
  3057   000274                     U2RXPPS         equ	628	;# 
  3058   000275                     U2CTSPPS        equ	629	;# 
  3059   000276                     U3RXPPS         equ	630	;# 
  3060   000277                     U3CTSPPS        equ	631	;# 
  3061   000278                     U4RXPPS         equ	632	;# 
  3062   000279                     U4CTSPPS        equ	633	;# 
  3063   00027A                     U5RXPPS         equ	634	;# 
  3064   00027B                     U5CTSPPS        equ	635	;# 
  3065   000286                     RC4I2C          equ	646	;# 
  3066   000287                     RC3I2C          equ	647	;# 
  3067   000288                     RB2I2C          equ	648	;# 
  3068   000289                     RB1I2C          equ	649	;# 
  3069   00028B                     I2C1RXB         equ	651	;# 
  3070   00028C                     I2C1TXB         equ	652	;# 
  3071   00028D                     I2C1CNT         equ	653	;# 
  3072   00028E                     I2C1ADB0        equ	654	;# 
  3073   00028F                     I2C1ADB1        equ	655	;# 
  3074   000290                     I2C1ADR0        equ	656	;# 
  3075   000291                     I2C1ADR1        equ	657	;# 
  3076   000292                     I2C1ADR2        equ	658	;# 
  3077   000293                     I2C1ADR3        equ	659	;# 
  3078   000294                     I2C1CON0        equ	660	;# 
  3079   000295                     I2C1CON1        equ	661	;# 
  3080   000296                     I2C1CON2        equ	662	;# 
  3081   000297                     I2C1ERR         equ	663	;# 
  3082   000298                     I2C1STAT0       equ	664	;# 
  3083   000299                     I2C1STAT1       equ	665	;# 
  3084   00029A                     I2C1PIR         equ	666	;# 
  3085   00029B                     I2C1PIE         equ	667	;# 
  3086   00029C                     I2C1CLK         equ	668	;# 
  3087   00029D                     I2C1BTO         equ	669	;# 
  3088   0002A1                     U1RXB           equ	673	;# 
  3089   0002A1                     U1RXBL          equ	673	;# 
  3090   0002A2                     U1RXCHK         equ	674	;# 
  3091   0002A3                     U1TXB           equ	675	;# 
  3092   0002A3                     U1TXBL          equ	675	;# 
  3093   0002A4                     U1TXCHK         equ	676	;# 
  3094   0002A5                     U1P1            equ	677	;# 
  3095   0002A5                     U1P1L           equ	677	;# 
  3096   0002A6                     U1P1H           equ	678	;# 
  3097   0002A7                     U1P2            equ	679	;# 
  3098   0002A7                     U1P2L           equ	679	;# 
  3099   0002A8                     U1P2H           equ	680	;# 
  3100   0002A9                     U1P3            equ	681	;# 
  3101   0002A9                     U1P3L           equ	681	;# 
  3102   0002AA                     U1P3H           equ	682	;# 
  3103   0002AB                     U1CON0          equ	683	;# 
  3104   0002AC                     U1CON1          equ	684	;# 
  3105   0002AD                     U1CON2          equ	685	;# 
  3106   0002AE                     U1BRG           equ	686	;# 
  3107   0002AE                     U1BRGL          equ	686	;# 
  3108   0002AF                     U1BRGH          equ	687	;# 
  3109   0002B0                     U1FIFO          equ	688	;# 
  3110   0002B1                     U1UIR           equ	689	;# 
  3111   0002B2                     U1ERRIR         equ	690	;# 
  3112   0002B3                     U1ERRIE         equ	691	;# 
  3113   0002B4                     U2RXB           equ	692	;# 
  3114   0002B4                     U2RXBL          equ	692	;# 
  3115   0002B6                     U2TXB           equ	694	;# 
  3116   0002B6                     U2TXBL          equ	694	;# 
  3117   0002B8                     U2P1            equ	696	;# 
  3118   0002B8                     U2P1L           equ	696	;# 
  3119   0002BA                     U2P2            equ	698	;# 
  3120   0002BA                     U2P2L           equ	698	;# 
  3121   0002BC                     U2P3            equ	700	;# 
  3122   0002BC                     U2P3L           equ	700	;# 
  3123   0002BE                     U2CON0          equ	702	;# 
  3124   0002BF                     U2CON1          equ	703	;# 
  3125   0002C0                     U2CON2          equ	704	;# 
  3126   0002C1                     U2BRG           equ	705	;# 
  3127   0002C1                     U2BRGL          equ	705	;# 
  3128   0002C2                     U2BRGH          equ	706	;# 
  3129   0002C3                     U2FIFO          equ	707	;# 
  3130   0002C4                     U2UIR           equ	708	;# 
  3131   0002C5                     U2ERRIR         equ	709	;# 
  3132   0002C6                     U2ERRIE         equ	710	;# 
  3133   0002C7                     U3RXB           equ	711	;# 
  3134   0002C7                     U3RXBL          equ	711	;# 
  3135   0002C9                     U3TXB           equ	713	;# 
  3136   0002C9                     U3TXBL          equ	713	;# 
  3137   0002CB                     U3P1            equ	715	;# 
  3138   0002CB                     U3P1L           equ	715	;# 
  3139   0002CD                     U3P2            equ	717	;# 
  3140   0002CD                     U3P2L           equ	717	;# 
  3141   0002CF                     U3P3            equ	719	;# 
  3142   0002CF                     U3P3L           equ	719	;# 
  3143   0002D1                     U3CON0          equ	721	;# 
  3144   0002D2                     U3CON1          equ	722	;# 
  3145   0002D3                     U3CON2          equ	723	;# 
  3146   0002D4                     U3BRG           equ	724	;# 
  3147   0002D4                     U3BRGL          equ	724	;# 
  3148   0002D5                     U3BRGH          equ	725	;# 
  3149   0002D6                     U3FIFO          equ	726	;# 
  3150   0002D7                     U3UIR           equ	727	;# 
  3151   0002D8                     U3ERRIR         equ	728	;# 
  3152   0002D9                     U3ERRIE         equ	729	;# 
  3153   0002DA                     U4RXB           equ	730	;# 
  3154   0002DA                     U4RXBL          equ	730	;# 
  3155   0002DC                     U4TXB           equ	732	;# 
  3156   0002DC                     U4TXBL          equ	732	;# 
  3157   0002DE                     U4P1            equ	734	;# 
  3158   0002DE                     U4P1L           equ	734	;# 
  3159   0002E0                     U4P2            equ	736	;# 
  3160   0002E0                     U4P2L           equ	736	;# 
  3161   0002E2                     U4P3            equ	738	;# 
  3162   0002E2                     U4P3L           equ	738	;# 
  3163   0002E4                     U4CON0          equ	740	;# 
  3164   0002E5                     U4CON1          equ	741	;# 
  3165   0002E6                     U4CON2          equ	742	;# 
  3166   0002E7                     U4BRG           equ	743	;# 
  3167   0002E7                     U4BRGL          equ	743	;# 
  3168   0002E8                     U4BRGH          equ	744	;# 
  3169   0002E9                     U4FIFO          equ	745	;# 
  3170   0002EA                     U4UIR           equ	746	;# 
  3171   0002EB                     U4ERRIR         equ	747	;# 
  3172   0002EC                     U4ERRIE         equ	748	;# 
  3173   0002ED                     U5RXB           equ	749	;# 
  3174   0002ED                     U5RXBL          equ	749	;# 
  3175   0002EF                     U5TXB           equ	751	;# 
  3176   0002EF                     U5TXBL          equ	751	;# 
  3177   0002F1                     U5P1            equ	753	;# 
  3178   0002F1                     U5P1L           equ	753	;# 
  3179   0002F3                     U5P2            equ	755	;# 
  3180   0002F3                     U5P2L           equ	755	;# 
  3181   0002F5                     U5P3            equ	757	;# 
  3182   0002F5                     U5P3L           equ	757	;# 
  3183   0002F7                     U5CON0          equ	759	;# 
  3184   0002F8                     U5CON1          equ	760	;# 
  3185   0002F9                     U5CON2          equ	761	;# 
  3186   0002FA                     U5BRG           equ	762	;# 
  3187   0002FA                     U5BRGL          equ	762	;# 
  3188   0002FB                     U5BRGH          equ	763	;# 
  3189   0002FC                     U5FIFO          equ	764	;# 
  3190   0002FD                     U5UIR           equ	765	;# 
  3191   0002FE                     U5ERRIR         equ	766	;# 
  3192   0002FF                     U5ERRIE         equ	767	;# 
  3193   000300                     SMT1TMR         equ	768	;# 
  3194   000300                     SMT1TMRL        equ	768	;# 
  3195   000301                     SMT1TMRH        equ	769	;# 
  3196   000302                     SMT1TMRU        equ	770	;# 
  3197   000303                     SMT1CPR         equ	771	;# 
  3198   000303                     SMT1CPRL        equ	771	;# 
  3199   000304                     SMT1CPRH        equ	772	;# 
  3200   000305                     SMT1CPRU        equ	773	;# 
  3201   000306                     SMT1CPW         equ	774	;# 
  3202   000306                     SMT1CPWL        equ	774	;# 
  3203   000307                     SMT1CPWH        equ	775	;# 
  3204   000308                     SMT1CPWU        equ	776	;# 
  3205   000309                     SMT1PR          equ	777	;# 
  3206   000309                     SMT1PRL         equ	777	;# 
  3207   00030A                     SMT1PRH         equ	778	;# 
  3208   00030B                     SMT1PRU         equ	779	;# 
  3209   00030C                     SMT1CON0        equ	780	;# 
  3210   00030D                     SMT1CON1        equ	781	;# 
  3211   00030E                     SMT1STAT        equ	782	;# 
  3212   00030F                     SMT1CLK         equ	783	;# 
  3213   000310                     SMT1SIG         equ	784	;# 
  3214   000311                     SMT1WIN         equ	785	;# 
  3215   000318                     TMR0L           equ	792	;# 
  3216   000318                     TMR0            equ	792	;# 
  3217   000319                     TMR0H           equ	793	;# 
  3218   000319                     PR0             equ	793	;# 
  3219   00031A                     T0CON0          equ	794	;# 
  3220   00031B                     T0CON1          equ	795	;# 
  3221   00031C                     TMR1            equ	796	;# 
  3222   00031C                     TMR1L           equ	796	;# 
  3223   00031D                     TMR1H           equ	797	;# 
  3224   00031E                     T1CON           equ	798	;# 
  3225   00031E                     TMR1CON         equ	798	;# 
  3226   00031F                     T1GCON          equ	799	;# 
  3227   00031F                     TMR1GCON        equ	799	;# 
  3228   000320                     T1GATE          equ	800	;# 
  3229   000320                     TMR1GATE        equ	800	;# 
  3230   000321                     T1CLK           equ	801	;# 
  3231   000321                     TMR1CLK         equ	801	;# 
  3232   000321                     PR1             equ	801	;# 
  3233   000322                     T2TMR           equ	802	;# 
  3234   000322                     TMR2            equ	802	;# 
  3235   000323                     T2PR            equ	803	;# 
  3236   000323                     PR2             equ	803	;# 
  3237   000324                     T2CON           equ	804	;# 
  3238   000325                     T2HLT           equ	805	;# 
  3239   000326                     T2CLKCON        equ	806	;# 
  3240   000326                     T2CLK           equ	806	;# 
  3241   000327                     T2RST           equ	807	;# 
  3242   000328                     TMR3            equ	808	;# 
  3243   000328                     TMR3L           equ	808	;# 
  3244   000329                     TMR3H           equ	809	;# 
  3245   00032A                     T3CON           equ	810	;# 
  3246   00032A                     TMR3CON         equ	810	;# 
  3247   00032B                     T3GCON          equ	811	;# 
  3248   00032B                     TMR3GCON        equ	811	;# 
  3249   00032C                     T3GATE          equ	812	;# 
  3250   00032C                     TMR3GATE        equ	812	;# 
  3251   00032D                     T3CLK           equ	813	;# 
  3252   00032D                     TMR3CLK         equ	813	;# 
  3253   00032D                     PR3             equ	813	;# 
  3254   00032E                     T4TMR           equ	814	;# 
  3255   00032E                     TMR4            equ	814	;# 
  3256   00032F                     T4PR            equ	815	;# 
  3257   00032F                     PR4             equ	815	;# 
  3258   000330                     T4CON           equ	816	;# 
  3259   000331                     T4HLT           equ	817	;# 
  3260   000332                     T4CLKCON        equ	818	;# 
  3261   000332                     T4CLK           equ	818	;# 
  3262   000333                     T4RST           equ	819	;# 
  3263   000334                     TMR5            equ	820	;# 
  3264   000334                     TMR5L           equ	820	;# 
  3265   000335                     TMR5H           equ	821	;# 
  3266   000336                     T5CON           equ	822	;# 
  3267   000336                     TMR5CON         equ	822	;# 
  3268   000337                     T5GCON          equ	823	;# 
  3269   000337                     TMR5GCON        equ	823	;# 
  3270   000338                     T5GATE          equ	824	;# 
  3271   000338                     TMR5GATE        equ	824	;# 
  3272   000339                     T5CLK           equ	825	;# 
  3273   000339                     TMR5CLK         equ	825	;# 
  3274   000339                     PR5             equ	825	;# 
  3275   00033A                     T6TMR           equ	826	;# 
  3276   00033A                     TMR6            equ	826	;# 
  3277   00033B                     T6PR            equ	827	;# 
  3278   00033B                     PR6             equ	827	;# 
  3279   00033C                     T6CON           equ	828	;# 
  3280   00033D                     T6HLT           equ	829	;# 
  3281   00033E                     T6CLKCON        equ	830	;# 
  3282   00033E                     T6CLK           equ	830	;# 
  3283   00033F                     T6RST           equ	831	;# 
  3284   000340                     CCPR1           equ	832	;# 
  3285   000340                     CCPR1L          equ	832	;# 
  3286   000341                     CCPR1H          equ	833	;# 
  3287   000342                     CCP1CON         equ	834	;# 
  3288   000343                     CCP1CAP         equ	835	;# 
  3289   000344                     CCPR2           equ	836	;# 
  3290   000344                     CCPR2L          equ	836	;# 
  3291   000345                     CCPR2H          equ	837	;# 
  3292   000346                     CCP2CON         equ	838	;# 
  3293   000347                     CCP2CAP         equ	839	;# 
  3294   000348                     CCPR3           equ	840	;# 
  3295   000348                     CCPR3L          equ	840	;# 
  3296   000349                     CCPR3H          equ	841	;# 
  3297   00034A                     CCP3CON         equ	842	;# 
  3298   00034B                     CCP3CAP         equ	843	;# 
  3299   00034C                     CCPTMRS0        equ	844	;# 
  3300   00034F                     CRCDATA         equ	847	;# 
  3301   00034F                     CRCDATL         equ	847	;# 
  3302   000350                     CRCDATH         equ	848	;# 
  3303   000351                     CRCACC          equ	849	;# 
  3304   000351                     CRCACCL         equ	849	;# 
  3305   000352                     CRCACCH         equ	850	;# 
  3306   000353                     CRCSHFT         equ	851	;# 
  3307   000353                     CRCSHIFTL       equ	851	;# 
  3308   000354                     CRCSHIFTH       equ	852	;# 
  3309   000355                     CRCXOR          equ	853	;# 
  3310   000355                     CRCXORL         equ	853	;# 
  3311   000356                     CRCXORH         equ	854	;# 
  3312   000357                     CRCCON0         equ	855	;# 
  3313   000358                     CRCCON1         equ	856	;# 
  3314   00035A                     SCANLADR        equ	858	;# 
  3315   00035A                     SCANLADRL       equ	858	;# 
  3316   00035B                     SCANLADRH       equ	859	;# 
  3317   00035C                     SCANLADRU       equ	860	;# 
  3318   00035D                     SCANHADR        equ	861	;# 
  3319   00035D                     SCANHADRL       equ	861	;# 
  3320   00035E                     SCANHADRH       equ	862	;# 
  3321   00035F                     SCANHADRU       equ	863	;# 
  3322   000360                     SCANCON0        equ	864	;# 
  3323   000361                     SCANTRIG        equ	865	;# 
  3324   000362                     IPR0            equ	866	;# 
  3325   000363                     IPR1            equ	867	;# 
  3326   000364                     IPR2            equ	868	;# 
  3327   000365                     IPR3            equ	869	;# 
  3328   000366                     IPR4            equ	870	;# 
  3329   000367                     IPR5            equ	871	;# 
  3330   000368                     IPR6            equ	872	;# 
  3331   000369                     IPR7            equ	873	;# 
  3332   00036A                     IPR8            equ	874	;# 
  3333   00036B                     IPR9            equ	875	;# 
  3334   00036C                     IPR10           equ	876	;# 
  3335   00036D                     IPR11           equ	877	;# 
  3336   00036E                     IPR12           equ	878	;# 
  3337   00036F                     IPR13           equ	879	;# 
  3338   000370                     IPR14           equ	880	;# 
  3339   000371                     IPR15           equ	881	;# 
  3340   000373                     STATUS_CSHAD    equ	883	;# 
  3341   000374                     WREG_CSHAD      equ	884	;# 
  3342   000375                     BSR_CSHAD       equ	885	;# 
  3343   000376                     SHADCON         equ	886	;# 
  3344   000377                     STATUS_SHAD     equ	887	;# 
  3345   000378                     WREG_SHAD       equ	888	;# 
  3346   000379                     BSR_SHAD        equ	889	;# 
  3347   00037A                     PCLATH_SHAD     equ	890	;# 
  3348   00037B                     PCLATU_SHAD     equ	891	;# 
  3349   00037C                     FSR0SH          equ	892	;# 
  3350   00037C                     FSR0L_SHAD      equ	892	;# 
  3351   00037D                     FSR0H_SHAD      equ	893	;# 
  3352   00037E                     FSR1SH          equ	894	;# 
  3353   00037E                     FSR1L_SHAD      equ	894	;# 
  3354   00037F                     FSR1H_SHAD      equ	895	;# 
  3355   000380                     FSR2SH          equ	896	;# 
  3356   000380                     FSR2L_SHAD      equ	896	;# 
  3357   000381                     FSR2H_SHAD      equ	897	;# 
  3358   000382                     PRODSH          equ	898	;# 
  3359   000382                     PRODL_SHAD      equ	898	;# 
  3360   000383                     PRODH_SHAD      equ	899	;# 
  3361   0003BC                     CWG1CLK         equ	956	;# 
  3362   0003BC                     CWG1CLKCON      equ	956	;# 
  3363   0003BD                     CWG1ISM         equ	957	;# 
  3364   0003BD                     CWG1DAT         equ	957	;# 
  3365   0003BE                     CWG1DBR         equ	958	;# 
  3366   0003BF                     CWG1DBF         equ	959	;# 
  3367   0003C0                     CWG1CON0        equ	960	;# 
  3368   0003C1                     CWG1CON1        equ	961	;# 
  3369   0003C2                     CWG1AS0         equ	962	;# 
  3370   0003C3                     CWG1AS1         equ	963	;# 
  3371   0003C4                     CWG1STR         equ	964	;# 
  3372   0003C5                     CWG2CLK         equ	965	;# 
  3373   0003C5                     CWG2CLKCON      equ	965	;# 
  3374   0003C6                     CWG2ISM         equ	966	;# 
  3375   0003C6                     CWG2DAT         equ	966	;# 
  3376   0003C7                     CWG2DBR         equ	967	;# 
  3377   0003C8                     CWG2DBF         equ	968	;# 
  3378   0003C9                     CWG2CON0        equ	969	;# 
  3379   0003CA                     CWG2CON1        equ	970	;# 
  3380   0003CB                     CWG2AS0         equ	971	;# 
  3381   0003CC                     CWG2AS1         equ	972	;# 
  3382   0003CD                     CWG2STR         equ	973	;# 
  3383   0003CE                     CWG3CLK         equ	974	;# 
  3384   0003CE                     CWG3CLKCON      equ	974	;# 
  3385   0003CF                     CWG3ISM         equ	975	;# 
  3386   0003CF                     CWG3DAT         equ	975	;# 
  3387   0003D0                     CWG3DBR         equ	976	;# 
  3388   0003D1                     CWG3DBF         equ	977	;# 
  3389   0003D2                     CWG3CON0        equ	978	;# 
  3390   0003D3                     CWG3CON1        equ	979	;# 
  3391   0003D4                     CWG3AS0         equ	980	;# 
  3392   0003D5                     CWG3AS1         equ	981	;# 
  3393   0003D6                     CWG3STR         equ	982	;# 
  3394   0003D7                     FVRCON          equ	983	;# 
  3395   0003D8                     ADCPCON         equ	984	;# 
  3396   0003D8                     ADCP            equ	984	;# 
  3397   0003D9                     ADLTH           equ	985	;# 
  3398   0003D9                     ADLTHL          equ	985	;# 
  3399   0003DA                     ADLTHH          equ	986	;# 
  3400   0003DB                     ADUTH           equ	987	;# 
  3401   0003DB                     ADUTHL          equ	987	;# 
  3402   0003DC                     ADUTHH          equ	988	;# 
  3403   0003DD                     ADERR           equ	989	;# 
  3404   0003DD                     ADERRL          equ	989	;# 
  3405   0003DE                     ADERRH          equ	990	;# 
  3406   0003DF                     ADSTPT          equ	991	;# 
  3407   0003DF                     ADSTPTL         equ	991	;# 
  3408   0003E0                     ADSTPTH         equ	992	;# 
  3409   0003E1                     ADFLTR          equ	993	;# 
  3410   0003E1                     ADFLTRL         equ	993	;# 
  3411   0003E2                     ADFLTRH         equ	994	;# 
  3412   0003E3                     ADACC           equ	995	;# 
  3413   0003E3                     ADACCL          equ	995	;# 
  3414   0003E4                     ADACCH          equ	996	;# 
  3415   0003E5                     ADACCU          equ	997	;# 
  3416   0003E6                     ADCNT           equ	998	;# 
  3417   0003E7                     ADRPT           equ	999	;# 
  3418   0003E8                     ADPREV          equ	1000	;# 
  3419   0003E8                     ADPREVL         equ	1000	;# 
  3420   0003E9                     ADPREVH         equ	1001	;# 
  3421   0003EA                     ADRES           equ	1002	;# 
  3422   0003EA                     ADRESL          equ	1002	;# 
  3423   0003EB                     ADRESH          equ	1003	;# 
  3424   0003EC                     ADPCH           equ	1004	;# 
  3425   0003EE                     ADACQ           equ	1006	;# 
  3426   0003EE                     ADACQL          equ	1006	;# 
  3427   0003EF                     ADACQH          equ	1007	;# 
  3428   0003F0                     ADCAP           equ	1008	;# 
  3429   0003F1                     ADPRE           equ	1009	;# 
  3430   0003F1                     ADPREL          equ	1009	;# 
  3431   0003F2                     ADPREH          equ	1010	;# 
  3432   0003F3                     ADCON0          equ	1011	;# 
  3433   0003F4                     ADCON1          equ	1012	;# 
  3434   0003F5                     ADCON2          equ	1013	;# 
  3435   0003F6                     ADCON3          equ	1014	;# 
  3436   0003F7                     ADSTAT          equ	1015	;# 
  3437   0003F8                     ADREF           equ	1016	;# 
  3438   0003F9                     ADACT           equ	1017	;# 
  3439   0003FA                     ADCLK           equ	1018	;# 
  3440   000400                     ANSELA          equ	1024	;# 
  3441   000401                     WPUA            equ	1025	;# 
  3442   000402                     ODCONA          equ	1026	;# 
  3443   000403                     SLRCONA         equ	1027	;# 
  3444   000404                     INLVLA          equ	1028	;# 
  3445   000405                     IOCAP           equ	1029	;# 
  3446   000406                     IOCAN           equ	1030	;# 
  3447   000407                     IOCAF           equ	1031	;# 
  3448   000408                     ANSELB          equ	1032	;# 
  3449   000409                     WPUB            equ	1033	;# 
  3450   00040A                     ODCONB          equ	1034	;# 
  3451   00040B                     SLRCONB         equ	1035	;# 
  3452   00040C                     INLVLB          equ	1036	;# 
  3453   00040D                     IOCBP           equ	1037	;# 
  3454   00040E                     IOCBN           equ	1038	;# 
  3455   00040F                     IOCBF           equ	1039	;# 
  3456   000410                     ANSELC          equ	1040	;# 
  3457   000411                     WPUC            equ	1041	;# 
  3458   000412                     ODCONC          equ	1042	;# 
  3459   000413                     SLRCONC         equ	1043	;# 
  3460   000414                     INLVLC          equ	1044	;# 
  3461   000415                     IOCCP           equ	1045	;# 
  3462   000416                     IOCCN           equ	1046	;# 
  3463   000417                     IOCCF           equ	1047	;# 
  3464   000418                     ANSELD          equ	1048	;# 
  3465   000419                     WPUD            equ	1049	;# 
  3466   00041A                     ODCOND          equ	1050	;# 
  3467   00041B                     SLRCOND         equ	1051	;# 
  3468   00041C                     INLVLD          equ	1052	;# 
  3469   000420                     ANSELE          equ	1056	;# 
  3470   000421                     WPUE            equ	1057	;# 
  3471   000422                     ODCONE          equ	1058	;# 
  3472   000423                     SLRCONE         equ	1059	;# 
  3473   000424                     INLVLE          equ	1060	;# 
  3474   000425                     IOCEP           equ	1061	;# 
  3475   000426                     IOCEN           equ	1062	;# 
  3476   000427                     IOCEF           equ	1063	;# 
  3477   000428                     ANSELF          equ	1064	;# 
  3478   000429                     WPUF            equ	1065	;# 
  3479   00042A                     ODCONF          equ	1066	;# 
  3480   00042B                     SLRCONF         equ	1067	;# 
  3481   00042C                     INLVLF          equ	1068	;# 
  3482   000440                     NCO1ACC         equ	1088	;# 
  3483   000440                     NCO1ACCL        equ	1088	;# 
  3484   000441                     NCO1ACCH        equ	1089	;# 
  3485   000442                     NCO1ACCU        equ	1090	;# 
  3486   000443                     NCO1INC         equ	1091	;# 
  3487   000443                     NCO1INCL        equ	1091	;# 
  3488   000444                     NCO1INCH        equ	1092	;# 
  3489   000445                     NCO1INCU        equ	1093	;# 
  3490   000446                     NCO1CON         equ	1094	;# 
  3491   000447                     NCO1CLK         equ	1095	;# 
  3492   000448                     NCO2ACC         equ	1096	;# 
  3493   000448                     NCO2ACCL        equ	1096	;# 
  3494   000449                     NCO2ACCH        equ	1097	;# 
  3495   00044A                     NCO2ACCU        equ	1098	;# 
  3496   00044B                     NCO2INC         equ	1099	;# 
  3497   00044B                     NCO2INCL        equ	1099	;# 
  3498   00044C                     NCO2INCH        equ	1100	;# 
  3499   00044D                     NCO2INCU        equ	1101	;# 
  3500   00044E                     NCO2CON         equ	1102	;# 
  3501   00044F                     NCO2CLK         equ	1103	;# 
  3502   000450                     NCO3ACC         equ	1104	;# 
  3503   000450                     NCO3ACCL        equ	1104	;# 
  3504   000451                     NCO3ACCH        equ	1105	;# 
  3505   000452                     NCO3ACCU        equ	1106	;# 
  3506   000453                     NCO3INC         equ	1107	;# 
  3507   000453                     NCO3INCL        equ	1107	;# 
  3508   000454                     NCO3INCH        equ	1108	;# 
  3509   000455                     NCO3INCU        equ	1109	;# 
  3510   000456                     NCO3CON         equ	1110	;# 
  3511   000457                     NCO3CLK         equ	1111	;# 
  3512   000459                     IVTLOCK         equ	1113	;# 
  3513   00045A                     IVTAD           equ	1114	;# 
  3514   00045A                     IVTADL          equ	1114	;# 
  3515   00045B                     IVTADH          equ	1115	;# 
  3516   00045C                     IVTADU          equ	1116	;# 
  3517   00045D                     IVTBASE         equ	1117	;# 
  3518   00045D                     IVTBASEL        equ	1117	;# 
  3519   00045E                     IVTBASEH        equ	1118	;# 
  3520   00045F                     IVTBASEU        equ	1119	;# 
  3521   000460                     PWM1ERS         equ	1120	;# 
  3522   000461                     PWM1CLK         equ	1121	;# 
  3523   000462                     PWM1LDS         equ	1122	;# 
  3524   000463                     PWM1PR          equ	1123	;# 
  3525   000463                     PWM1PRL         equ	1123	;# 
  3526   000464                     PWM1PRH         equ	1124	;# 
  3527   000465                     PWM1CPRE        equ	1125	;# 
  3528   000466                     PWM1PIPOS       equ	1126	;# 
  3529   000467                     PWM1GIR         equ	1127	;# 
  3530   000468                     PWM1GIE         equ	1128	;# 
  3531   000469                     PWM1CON         equ	1129	;# 
  3532   00046A                     PWM1S1CFG       equ	1130	;# 
  3533   00046B                     PWM1S1P1        equ	1131	;# 
  3534   00046B                     PWM1S1P1L       equ	1131	;# 
  3535   00046C                     PWM1S1P1H       equ	1132	;# 
  3536   00046D                     PWM1S1P2        equ	1133	;# 
  3537   00046D                     PWM1S1P2L       equ	1133	;# 
  3538   00046E                     PWM1S1P2H       equ	1134	;# 
  3539   00046F                     PWM2ERS         equ	1135	;# 
  3540   000470                     PWM2CLK         equ	1136	;# 
  3541   000471                     PWM2LDS         equ	1137	;# 
  3542   000472                     PWM2PR          equ	1138	;# 
  3543   000472                     PWM2PRL         equ	1138	;# 
  3544   000473                     PWM2PRH         equ	1139	;# 
  3545   000474                     PWM2CPRE        equ	1140	;# 
  3546   000475                     PWM2PIPOS       equ	1141	;# 
  3547   000476                     PWM2GIR         equ	1142	;# 
  3548   000477                     PWM2GIE         equ	1143	;# 
  3549   000478                     PWM2CON         equ	1144	;# 
  3550   000479                     PWM2S1CFG       equ	1145	;# 
  3551   00047A                     PWM2S1P1        equ	1146	;# 
  3552   00047A                     PWM2S1P1L       equ	1146	;# 
  3553   00047B                     PWM2S1P1H       equ	1147	;# 
  3554   00047C                     PWM2S1P2        equ	1148	;# 
  3555   00047C                     PWM2S1P2L       equ	1148	;# 
  3556   00047D                     PWM2S1P2H       equ	1149	;# 
  3557   00047E                     PWM3ERS         equ	1150	;# 
  3558   00047F                     PWM3CLK         equ	1151	;# 
  3559   000480                     PWM3LDS         equ	1152	;# 
  3560   000481                     PWM3PR          equ	1153	;# 
  3561   000481                     PWM3PRL         equ	1153	;# 
  3562   000482                     PWM3PRH         equ	1154	;# 
  3563   000483                     PWM3CPRE        equ	1155	;# 
  3564   000484                     PWM3PIPOS       equ	1156	;# 
  3565   000485                     PWM3GIR         equ	1157	;# 
  3566   000486                     PWM3GIE         equ	1158	;# 
  3567   000487                     PWM3CON         equ	1159	;# 
  3568   000488                     PWM3S1CFG       equ	1160	;# 
  3569   000489                     PWM3S1P1        equ	1161	;# 
  3570   000489                     PWM3S1P1L       equ	1161	;# 
  3571   00048A                     PWM3S1P1H       equ	1162	;# 
  3572   00048B                     PWM3S1P2        equ	1163	;# 
  3573   00048B                     PWM3S1P2L       equ	1163	;# 
  3574   00048C                     PWM3S1P2H       equ	1164	;# 
  3575   00049C                     PWMLOAD         equ	1180	;# 
  3576   00049D                     PWMEN           equ	1181	;# 
  3577   00049E                     PIE0            equ	1182	;# 
  3578   00049F                     PIE1            equ	1183	;# 
  3579   0004A0                     PIE2            equ	1184	;# 
  3580   0004A1                     PIE3            equ	1185	;# 
  3581   0004A2                     PIE4            equ	1186	;# 
  3582   0004A3                     PIE5            equ	1187	;# 
  3583   0004A4                     PIE6            equ	1188	;# 
  3584   0004A5                     PIE7            equ	1189	;# 
  3585   0004A6                     PIE8            equ	1190	;# 
  3586   0004A7                     PIE9            equ	1191	;# 
  3587   0004A8                     PIE10           equ	1192	;# 
  3588   0004A9                     PIE11           equ	1193	;# 
  3589   0004AA                     PIE12           equ	1194	;# 
  3590   0004AB                     PIE13           equ	1195	;# 
  3591   0004AC                     PIE14           equ	1196	;# 
  3592   0004AD                     PIE15           equ	1197	;# 
  3593   0004AE                     PIR0            equ	1198	;# 
  3594   0004AF                     PIR1            equ	1199	;# 
  3595   0004B0                     PIR2            equ	1200	;# 
  3596   0004B1                     PIR3            equ	1201	;# 
  3597   0004B2                     PIR4            equ	1202	;# 
  3598   0004B3                     PIR5            equ	1203	;# 
  3599   0004B4                     PIR6            equ	1204	;# 
  3600   0004B5                     PIR7            equ	1205	;# 
  3601   0004B6                     PIR8            equ	1206	;# 
  3602   0004B7                     PIR9            equ	1207	;# 
  3603   0004B8                     PIR10           equ	1208	;# 
  3604   0004B9                     PIR11           equ	1209	;# 
  3605   0004BA                     PIR12           equ	1210	;# 
  3606   0004BB                     PIR13           equ	1211	;# 
  3607   0004BC                     PIR14           equ	1212	;# 
  3608   0004BD                     PIR15           equ	1213	;# 
  3609   0004BE                     LATA            equ	1214	;# 
  3610   0004BF                     LATB            equ	1215	;# 
  3611   0004C0                     LATC            equ	1216	;# 
  3612   0004C1                     LATD            equ	1217	;# 
  3613   0004C2                     LATE            equ	1218	;# 
  3614   0004C3                     LATF            equ	1219	;# 
  3615   0004C6                     TRISA           equ	1222	;# 
  3616   0004C7                     TRISB           equ	1223	;# 
  3617   0004C8                     TRISC           equ	1224	;# 
  3618   0004C9                     TRISD           equ	1225	;# 
  3619   0004CA                     TRISE           equ	1226	;# 
  3620   0004CB                     TRISF           equ	1227	;# 
  3621   0004CE                     PORTA           equ	1230	;# 
  3622   0004CF                     PORTB           equ	1231	;# 
  3623   0004D0                     PORTC           equ	1232	;# 
  3624   0004D1                     PORTD           equ	1233	;# 
  3625   0004D2                     PORTE           equ	1234	;# 
  3626   0004D3                     PORTF           equ	1235	;# 
  3627   0004D6                     INTCON0         equ	1238	;# 
  3628   0004D7                     INTCON1         equ	1239	;# 
  3629   0004D8                     STATUS          equ	1240	;# 
  3630   0004D9                     FSR2            equ	1241	;# 
  3631   0004D9                     FSR2L           equ	1241	;# 
  3632   0004DA                     FSR2H           equ	1242	;# 
  3633   0004DB                     PLUSW2          equ	1243	;# 
  3634   0004DC                     PREINC2         equ	1244	;# 
  3635   0004DD                     POSTDEC2        equ	1245	;# 
  3636   0004DE                     POSTINC2        equ	1246	;# 
  3637   0004DF                     INDF2           equ	1247	;# 
  3638   0004E0                     BSR             equ	1248	;# 
  3639   0004E1                     FSR1            equ	1249	;# 
  3640   0004E1                     FSR1L           equ	1249	;# 
  3641   0004E2                     FSR1H           equ	1250	;# 
  3642   0004E3                     PLUSW1          equ	1251	;# 
  3643   0004E4                     PREINC1         equ	1252	;# 
  3644   0004E5                     POSTDEC1        equ	1253	;# 
  3645   0004E6                     POSTINC1        equ	1254	;# 
  3646   0004E7                     INDF1           equ	1255	;# 
  3647   0004E8                     WREG            equ	1256	;# 
  3648   0004E9                     FSR0            equ	1257	;# 
  3649   0004E9                     FSR0L           equ	1257	;# 
  3650   0004EA                     FSR0H           equ	1258	;# 
  3651   0004EB                     PLUSW0          equ	1259	;# 
  3652   0004EC                     PREINC0         equ	1260	;# 
  3653   0004ED                     POSTDEC0        equ	1261	;# 
  3654   0004EE                     POSTINC0        equ	1262	;# 
  3655   0004EF                     INDF0           equ	1263	;# 
  3656   0004F0                     PCON0           equ	1264	;# 
  3657   0004F1                     PCON1           equ	1265	;# 
  3658   0004F2                     CPUDOZE         equ	1266	;# 
  3659   0004F3                     PROD            equ	1267	;# 
  3660   0004F3                     PRODL           equ	1267	;# 
  3661   0004F4                     PRODH           equ	1268	;# 
  3662   0004F5                     TABLAT          equ	1269	;# 
  3663   0004F6                     TBLPTR          equ	1270	;# 
  3664   0004F6                     TBLPTRL         equ	1270	;# 
  3665   0004F7                     TBLPTRH         equ	1271	;# 
  3666   0004F8                     TBLPTRU         equ	1272	;# 
  3667   0004F9                     PCLAT           equ	1273	;# 
  3668   0004F9                     PCL             equ	1273	;# 
  3669   0004FA                     PCLATH          equ	1274	;# 
  3670   0004FB                     PCLATU          equ	1275	;# 
  3671   0004FC                     STKPTR          equ	1276	;# 
  3672   0004FD                     TOS             equ	1277	;# 
  3673   0004FD                     TOSL            equ	1277	;# 
  3674   0004FE                     TOSH            equ	1278	;# 
  3675   0004FF                     TOSU            equ	1279	;# 
  3676   000039                     CLKRCON         equ	57	;# 
  3677   00003A                     CLKRCLK         equ	58	;# 
  3678   000040                     NVMCON0         equ	64	;# 
  3679   000041                     NVMCON1         equ	65	;# 
  3680   000042                     NVMLOCK         equ	66	;# 
  3681   000043                     NVMADR          equ	67	;# 
  3682   000043                     NVMADRL         equ	67	;# 
  3683   000044                     NVMADRH         equ	68	;# 
  3684   000045                     NVMADRU         equ	69	;# 
  3685   000046                     NVMDAT          equ	70	;# 
  3686   000046                     NVMDATL         equ	70	;# 
  3687   000047                     NVMDATH         equ	71	;# 
  3688   000048                     VREGCON         equ	72	;# 
  3689   000049                     BORCON          equ	73	;# 
  3690   00004A                     HLVDCON0        equ	74	;# 
  3691   00004B                     HLVDCON1        equ	75	;# 
  3692   00004C                     ZCDCON          equ	76	;# 
  3693   000060                     PMD0            equ	96	;# 
  3694   000061                     PMD1            equ	97	;# 
  3695   000063                     PMD3            equ	99	;# 
  3696   000064                     PMD4            equ	100	;# 
  3697   000065                     PMD5            equ	101	;# 
  3698   000066                     PMD6            equ	102	;# 
  3699   000067                     PMD7            equ	103	;# 
  3700   000068                     PMD8            equ	104	;# 
  3701   00006A                     MD1CON0         equ	106	;# 
  3702   00006B                     MD1CON1         equ	107	;# 
  3703   00006C                     MD1SRC          equ	108	;# 
  3704   00006D                     MD1CARL         equ	109	;# 
  3705   00006E                     MD1CARH         equ	110	;# 
  3706   00006F                     CMOUT           equ	111	;# 
  3707   000070                     CM1CON0         equ	112	;# 
  3708   000071                     CM1CON1         equ	113	;# 
  3709   000072                     CM1NCH          equ	114	;# 
  3710   000073                     CM1PCH          equ	115	;# 
  3711   000074                     CM2CON0         equ	116	;# 
  3712   000075                     CM2CON1         equ	117	;# 
  3713   000076                     CM2NCH          equ	118	;# 
  3714   000077                     CM2PCH          equ	119	;# 
  3715   000078                     WDTCON0         equ	120	;# 
  3716   000079                     WDTCON1         equ	121	;# 
  3717   00007A                     WDTPS           equ	122	;# 
  3718   00007A                     WDTPSL          equ	122	;# 
  3719   00007B                     WDTPSH          equ	123	;# 
  3720   00007C                     WDTTMR          equ	124	;# 
  3721   00007D                     DAC1DAT         equ	125	;# 
  3722   00007D                     DAC1DATL        equ	125	;# 
  3723   00007F                     DAC1CON         equ	127	;# 
  3724   000080                     SPI1RXB         equ	128	;# 
  3725   000081                     SPI1TXB         equ	129	;# 
  3726   000082                     SPI1TCNT        equ	130	;# 
  3727   000082                     SPI1TCNTL       equ	130	;# 
  3728   000083                     SPI1TCNTH       equ	131	;# 
  3729   000084                     SPI1CON0        equ	132	;# 
  3730   000085                     SPI1CON1        equ	133	;# 
  3731   000086                     SPI1CON2        equ	134	;# 
  3732   000087                     SPI1STATUS      equ	135	;# 
  3733   000088                     SPI1TWIDTH      equ	136	;# 
  3734   000089                     SPI1BAUD        equ	137	;# 
  3735   00008A                     SPI1INTF        equ	138	;# 
  3736   00008B                     SPI1INTE        equ	139	;# 
  3737   00008C                     SPI1CLK         equ	140	;# 
  3738   00008D                     SPI2RXB         equ	141	;# 
  3739   00008E                     SPI2TXB         equ	142	;# 
  3740   00008F                     SPI2TCNT        equ	143	;# 
  3741   00008F                     SPI2TCNTL       equ	143	;# 
  3742   000090                     SPI2TCNTH       equ	144	;# 
  3743   000091                     SPI2CON0        equ	145	;# 
  3744   000092                     SPI2CON1        equ	146	;# 
  3745   000093                     SPI2CON2        equ	147	;# 
  3746   000094                     SPI2STATUS      equ	148	;# 
  3747   000095                     SPI2TWIDTH      equ	149	;# 
  3748   000096                     SPI2BAUD        equ	150	;# 
  3749   000097                     SPI2INTF        equ	151	;# 
  3750   000098                     SPI2INTE        equ	152	;# 
  3751   000099                     SPI2CLK         equ	153	;# 
  3752   0000AC                     ACTCON          equ	172	;# 
  3753   0000AD                     OSCCON1         equ	173	;# 
  3754   0000AE                     OSCCON2         equ	174	;# 
  3755   0000AF                     OSCCON3         equ	175	;# 
  3756   0000B0                     OSCTUNE         equ	176	;# 
  3757   0000B1                     OSCFRQ          equ	177	;# 
  3758   0000B1                     OSCFREQ         equ	177	;# 
  3759   0000B2                     OSCSTAT         equ	178	;# 
  3760   0000B2                     OSCSTAT1        equ	178	;# 
  3761   0000B3                     OSCEN           equ	179	;# 
  3762   0000B4                     PRLOCK          equ	180	;# 
  3763   0000B5                     SCANPR          equ	181	;# 
  3764   0000B6                     DMA1PR          equ	182	;# 
  3765   0000B7                     DMA2PR          equ	183	;# 
  3766   0000B8                     DMA3PR          equ	184	;# 
  3767   0000B9                     DMA4PR          equ	185	;# 
  3768   0000BA                     DMA5PR          equ	186	;# 
  3769   0000BB                     DMA6PR          equ	187	;# 
  3770   0000BE                     MAINPR          equ	190	;# 
  3771   0000BF                     ISRPR           equ	191	;# 
  3772   0000D4                     CLCDATA         equ	212	;# 
  3773   0000D5                     CLCSELECT       equ	213	;# 
  3774   0000D6                     CLCnCON         equ	214	;# 
  3775   0000D7                     CLCnPOL         equ	215	;# 
  3776   0000D8                     CLCnSEL0        equ	216	;# 
  3777   0000D9                     CLCnSEL1        equ	217	;# 
  3778   0000DA                     CLCnSEL2        equ	218	;# 
  3779   0000DB                     CLCnSEL3        equ	219	;# 
  3780   0000DC                     CLCnGLS0        equ	220	;# 
  3781   0000DD                     CLCnGLS1        equ	221	;# 
  3782   0000DE                     CLCnGLS2        equ	222	;# 
  3783   0000DF                     CLCnGLS3        equ	223	;# 
  3784   0000E8                     DMASELECT       equ	232	;# 
  3785   0000E9                     DMAnBUF         equ	233	;# 
  3786   0000EA                     DMAnDCNT        equ	234	;# 
  3787   0000EA                     DMAnDCNTL       equ	234	;# 
  3788   0000EB                     DMAnDCNTH       equ	235	;# 
  3789   0000EC                     DMAnDPTR        equ	236	;# 
  3790   0000EC                     DMAnDPTRL       equ	236	;# 
  3791   0000ED                     DMAnDPTRH       equ	237	;# 
  3792   0000EE                     DMAnDSZ         equ	238	;# 
  3793   0000EE                     DMAnDSZL        equ	238	;# 
  3794   0000EF                     DMAnDSZH        equ	239	;# 
  3795   0000F0                     DMAnDSA         equ	240	;# 
  3796   0000F0                     DMAnDSAL        equ	240	;# 
  3797   0000F1                     DMAnDSAH        equ	241	;# 
  3798   0000F2                     DMAnSCNT        equ	242	;# 
  3799   0000F2                     DMAnSCNTL       equ	242	;# 
  3800   0000F3                     DMAnSCNTH       equ	243	;# 
  3801   0000F4                     DMAnSPTR        equ	244	;# 
  3802   0000F4                     DMAnSPTRL       equ	244	;# 
  3803   0000F5                     DMAnSPTRH       equ	245	;# 
  3804   0000F6                     DMAnSPTRU       equ	246	;# 
  3805   0000F7                     DMAnSSZ         equ	247	;# 
  3806   0000F7                     DMAnSSZL        equ	247	;# 
  3807   0000F8                     DMAnSSZH        equ	248	;# 
  3808   0000F9                     DMAnSSA         equ	249	;# 
  3809   0000F9                     DMAnSSAL        equ	249	;# 
  3810   0000FA                     DMAnSSAH        equ	250	;# 
  3811   0000FB                     DMAnSSAU        equ	251	;# 
  3812   0000FC                     DMAnCON0        equ	252	;# 
  3813   0000FD                     DMAnCON1        equ	253	;# 
  3814   0000FE                     DMAnAIRQ        equ	254	;# 
  3815   0000FF                     DMAnSIRQ        equ	255	;# 
  3816   000200                     PPSLOCK         equ	512	;# 
  3817   000201                     RA0PPS          equ	513	;# 
  3818   000202                     RA1PPS          equ	514	;# 
  3819   000203                     RA2PPS          equ	515	;# 
  3820   000204                     RA3PPS          equ	516	;# 
  3821   000205                     RA4PPS          equ	517	;# 
  3822   000206                     RA5PPS          equ	518	;# 
  3823   000207                     RA6PPS          equ	519	;# 
  3824   000208                     RA7PPS          equ	520	;# 
  3825   000209                     RB0PPS          equ	521	;# 
  3826   00020A                     RB1PPS          equ	522	;# 
  3827   00020B                     RB2PPS          equ	523	;# 
  3828   00020C                     RB3PPS          equ	524	;# 
  3829   00020D                     RB4PPS          equ	525	;# 
  3830   00020E                     RB5PPS          equ	526	;# 
  3831   00020F                     RB6PPS          equ	527	;# 
  3832   000210                     RB7PPS          equ	528	;# 
  3833   000211                     RC0PPS          equ	529	;# 
  3834   000212                     RC1PPS          equ	530	;# 
  3835   000213                     RC2PPS          equ	531	;# 
  3836   000214                     RC3PPS          equ	532	;# 
  3837   000215                     RC4PPS          equ	533	;# 
  3838   000216                     RC5PPS          equ	534	;# 
  3839   000217                     RC6PPS          equ	535	;# 
  3840   000218                     RC7PPS          equ	536	;# 
  3841   000219                     RD0PPS          equ	537	;# 
  3842   00021A                     RD1PPS          equ	538	;# 
  3843   00021B                     RD2PPS          equ	539	;# 
  3844   00021C                     RD3PPS          equ	540	;# 
  3845   00021D                     RD4PPS          equ	541	;# 
  3846   00021E                     RD5PPS          equ	542	;# 
  3847   00021F                     RD6PPS          equ	543	;# 
  3848   000220                     RD7PPS          equ	544	;# 
  3849   000221                     RE0PPS          equ	545	;# 
  3850   000222                     RE1PPS          equ	546	;# 
  3851   000223                     RE2PPS          equ	547	;# 
  3852   000229                     RF0PPS          equ	553	;# 
  3853   00022A                     RF1PPS          equ	554	;# 
  3854   00022B                     RF2PPS          equ	555	;# 
  3855   00022C                     RF3PPS          equ	556	;# 
  3856   00022D                     RF4PPS          equ	557	;# 
  3857   00022E                     RF5PPS          equ	558	;# 
  3858   00022F                     RF6PPS          equ	559	;# 
  3859   000230                     RF7PPS          equ	560	;# 
  3860   00023E                     INT0PPS         equ	574	;# 
  3861   00023F                     INT1PPS         equ	575	;# 
  3862   000240                     INT2PPS         equ	576	;# 
  3863   000241                     T0CKIPPS        equ	577	;# 
  3864   000242                     T1CKIPPS        equ	578	;# 
  3865   000243                     T1GPPS          equ	579	;# 
  3866   000244                     T3CKIPPS        equ	580	;# 
  3867   000245                     T3GPPS          equ	581	;# 
  3868   000246                     T5CKIPPS        equ	582	;# 
  3869   000247                     T5GPPS          equ	583	;# 
  3870   000248                     T2INPPS         equ	584	;# 
  3871   000249                     T4INPPS         equ	585	;# 
  3872   00024A                     T6INPPS         equ	586	;# 
  3873   00024F                     CCP1PPS         equ	591	;# 
  3874   000250                     CCP2PPS         equ	592	;# 
  3875   000251                     CCP3PPS         equ	593	;# 
  3876   000253                     PWM1ERSPPS      equ	595	;# 
  3877   000254                     PWM2ERSPPS      equ	596	;# 
  3878   000255                     PWM3ERSPPS      equ	597	;# 
  3879   000257                     PWMIN0PPS       equ	599	;# 
  3880   000258                     PWMIN1PPS       equ	600	;# 
  3881   000259                     SMT1WINPPS      equ	601	;# 
  3882   00025A                     SMT1SIGPPS      equ	602	;# 
  3883   00025B                     CWG1PPS         equ	603	;# 
  3884   00025B                     CWG1INPPS       equ	603	;# 
  3885   00025C                     CWG2PPS         equ	604	;# 
  3886   00025C                     CWG2INPPS       equ	604	;# 
  3887   00025D                     CWG3PPS         equ	605	;# 
  3888   00025D                     CWG3INPPS       equ	605	;# 
  3889   00025E                     MD1CARLPPS      equ	606	;# 
  3890   00025E                     MDCARLPPS       equ	606	;# 
  3891   00025F                     MD1CARHPPS      equ	607	;# 
  3892   00025F                     MDCARHPPS       equ	607	;# 
  3893   000260                     MD1SRCPPS       equ	608	;# 
  3894   000260                     MDSRCPPS        equ	608	;# 
  3895   000261                     CLCIN0PPS       equ	609	;# 
  3896   000262                     CLCIN1PPS       equ	610	;# 
  3897   000263                     CLCIN2PPS       equ	611	;# 
  3898   000264                     CLCIN3PPS       equ	612	;# 
  3899   000265                     CLCIN4PPS       equ	613	;# 
  3900   000266                     CLCIN5PPS       equ	614	;# 
  3901   000267                     CLCIN6PPS       equ	615	;# 
  3902   000268                     CLCIN7PPS       equ	616	;# 
  3903   000269                     ADACTPPS        equ	617	;# 
  3904   00026A                     SPI1SCKPPS      equ	618	;# 
  3905   00026B                     SPI1SDIPPS      equ	619	;# 
  3906   00026C                     SPI1SSPPS       equ	620	;# 
  3907   00026D                     SPI2SCKPPS      equ	621	;# 
  3908   00026E                     SPI2SDIPPS      equ	622	;# 
  3909   00026F                     SPI2SSPPS       equ	623	;# 
  3910   000270                     I2C1SDAPPS      equ	624	;# 
  3911   000271                     I2C1SCLPPS      equ	625	;# 
  3912   000272                     U1RXPPS         equ	626	;# 
  3913   000273                     U1CTSPPS        equ	627	;# 
  3914   000274                     U2RXPPS         equ	628	;# 
  3915   000275                     U2CTSPPS        equ	629	;# 
  3916   000276                     U3RXPPS         equ	630	;# 
  3917   000277                     U3CTSPPS        equ	631	;# 
  3918   000278                     U4RXPPS         equ	632	;# 
  3919   000279                     U4CTSPPS        equ	633	;# 
  3920   00027A                     U5RXPPS         equ	634	;# 
  3921   00027B                     U5CTSPPS        equ	635	;# 
  3922   000286                     RC4I2C          equ	646	;# 
  3923   000287                     RC3I2C          equ	647	;# 
  3924   000288                     RB2I2C          equ	648	;# 
  3925   000289                     RB1I2C          equ	649	;# 
  3926   00028B                     I2C1RXB         equ	651	;# 
  3927   00028C                     I2C1TXB         equ	652	;# 
  3928   00028D                     I2C1CNT         equ	653	;# 
  3929   00028E                     I2C1ADB0        equ	654	;# 
  3930   00028F                     I2C1ADB1        equ	655	;# 
  3931   000290                     I2C1ADR0        equ	656	;# 
  3932   000291                     I2C1ADR1        equ	657	;# 
  3933   000292                     I2C1ADR2        equ	658	;# 
  3934   000293                     I2C1ADR3        equ	659	;# 
  3935   000294                     I2C1CON0        equ	660	;# 
  3936   000295                     I2C1CON1        equ	661	;# 
  3937   000296                     I2C1CON2        equ	662	;# 
  3938   000297                     I2C1ERR         equ	663	;# 
  3939   000298                     I2C1STAT0       equ	664	;# 
  3940   000299                     I2C1STAT1       equ	665	;# 
  3941   00029A                     I2C1PIR         equ	666	;# 
  3942   00029B                     I2C1PIE         equ	667	;# 
  3943   00029C                     I2C1CLK         equ	668	;# 
  3944   00029D                     I2C1BTO         equ	669	;# 
  3945   0002A1                     U1RXB           equ	673	;# 
  3946   0002A1                     U1RXBL          equ	673	;# 
  3947   0002A2                     U1RXCHK         equ	674	;# 
  3948   0002A3                     U1TXB           equ	675	;# 
  3949   0002A3                     U1TXBL          equ	675	;# 
  3950   0002A4                     U1TXCHK         equ	676	;# 
  3951   0002A5                     U1P1            equ	677	;# 
  3952   0002A5                     U1P1L           equ	677	;# 
  3953   0002A6                     U1P1H           equ	678	;# 
  3954   0002A7                     U1P2            equ	679	;# 
  3955   0002A7                     U1P2L           equ	679	;# 
  3956   0002A8                     U1P2H           equ	680	;# 
  3957   0002A9                     U1P3            equ	681	;# 
  3958   0002A9                     U1P3L           equ	681	;# 
  3959   0002AA                     U1P3H           equ	682	;# 
  3960   0002AB                     U1CON0          equ	683	;# 
  3961   0002AC                     U1CON1          equ	684	;# 
  3962   0002AD                     U1CON2          equ	685	;# 
  3963   0002AE                     U1BRG           equ	686	;# 
  3964   0002AE                     U1BRGL          equ	686	;# 
  3965   0002AF                     U1BRGH          equ	687	;# 
  3966   0002B0                     U1FIFO          equ	688	;# 
  3967   0002B1                     U1UIR           equ	689	;# 
  3968   0002B2                     U1ERRIR         equ	690	;# 
  3969   0002B3                     U1ERRIE         equ	691	;# 
  3970   0002B4                     U2RXB           equ	692	;# 
  3971   0002B4                     U2RXBL          equ	692	;# 
  3972   0002B6                     U2TXB           equ	694	;# 
  3973   0002B6                     U2TXBL          equ	694	;# 
  3974   0002B8                     U2P1            equ	696	;# 
  3975   0002B8                     U2P1L           equ	696	;# 
  3976   0002BA                     U2P2            equ	698	;# 
  3977   0002BA                     U2P2L           equ	698	;# 
  3978   0002BC                     U2P3            equ	700	;# 
  3979   0002BC                     U2P3L           equ	700	;# 
  3980   0002BE                     U2CON0          equ	702	;# 
  3981   0002BF                     U2CON1          equ	703	;# 
  3982   0002C0                     U2CON2          equ	704	;# 
  3983   0002C1                     U2BRG           equ	705	;# 
  3984   0002C1                     U2BRGL          equ	705	;# 
  3985   0002C2                     U2BRGH          equ	706	;# 
  3986   0002C3                     U2FIFO          equ	707	;# 
  3987   0002C4                     U2UIR           equ	708	;# 
  3988   0002C5                     U2ERRIR         equ	709	;# 
  3989   0002C6                     U2ERRIE         equ	710	;# 
  3990   0002C7                     U3RXB           equ	711	;# 
  3991   0002C7                     U3RXBL          equ	711	;# 
  3992   0002C9                     U3TXB           equ	713	;# 
  3993   0002C9                     U3TXBL          equ	713	;# 
  3994   0002CB                     U3P1            equ	715	;# 
  3995   0002CB                     U3P1L           equ	715	;# 
  3996   0002CD                     U3P2            equ	717	;# 
  3997   0002CD                     U3P2L           equ	717	;# 
  3998   0002CF                     U3P3            equ	719	;# 
  3999   0002CF                     U3P3L           equ	719	;# 
  4000   0002D1                     U3CON0          equ	721	;# 
  4001   0002D2                     U3CON1          equ	722	;# 
  4002   0002D3                     U3CON2          equ	723	;# 
  4003   0002D4                     U3BRG           equ	724	;# 
  4004   0002D4                     U3BRGL          equ	724	;# 
  4005   0002D5                     U3BRGH          equ	725	;# 
  4006   0002D6                     U3FIFO          equ	726	;# 
  4007   0002D7                     U3UIR           equ	727	;# 
  4008   0002D8                     U3ERRIR         equ	728	;# 
  4009   0002D9                     U3ERRIE         equ	729	;# 
  4010   0002DA                     U4RXB           equ	730	;# 
  4011   0002DA                     U4RXBL          equ	730	;# 
  4012   0002DC                     U4TXB           equ	732	;# 
  4013   0002DC                     U4TXBL          equ	732	;# 
  4014   0002DE                     U4P1            equ	734	;# 
  4015   0002DE                     U4P1L           equ	734	;# 
  4016   0002E0                     U4P2            equ	736	;# 
  4017   0002E0                     U4P2L           equ	736	;# 
  4018   0002E2                     U4P3            equ	738	;# 
  4019   0002E2                     U4P3L           equ	738	;# 
  4020   0002E4                     U4CON0          equ	740	;# 
  4021   0002E5                     U4CON1          equ	741	;# 
  4022   0002E6                     U4CON2          equ	742	;# 
  4023   0002E7                     U4BRG           equ	743	;# 
  4024   0002E7                     U4BRGL          equ	743	;# 
  4025   0002E8                     U4BRGH          equ	744	;# 
  4026   0002E9                     U4FIFO          equ	745	;# 
  4027   0002EA                     U4UIR           equ	746	;# 
  4028   0002EB                     U4ERRIR         equ	747	;# 
  4029   0002EC                     U4ERRIE         equ	748	;# 
  4030   0002ED                     U5RXB           equ	749	;# 
  4031   0002ED                     U5RXBL          equ	749	;# 
  4032   0002EF                     U5TXB           equ	751	;# 
  4033   0002EF                     U5TXBL          equ	751	;# 
  4034   0002F1                     U5P1            equ	753	;# 
  4035   0002F1                     U5P1L           equ	753	;# 
  4036   0002F3                     U5P2            equ	755	;# 
  4037   0002F3                     U5P2L           equ	755	;# 
  4038   0002F5                     U5P3            equ	757	;# 
  4039   0002F5                     U5P3L           equ	757	;# 
  4040   0002F7                     U5CON0          equ	759	;# 
  4041   0002F8                     U5CON1          equ	760	;# 
  4042   0002F9                     U5CON2          equ	761	;# 
  4043   0002FA                     U5BRG           equ	762	;# 
  4044   0002FA                     U5BRGL          equ	762	;# 
  4045   0002FB                     U5BRGH          equ	763	;# 
  4046   0002FC                     U5FIFO          equ	764	;# 
  4047   0002FD                     U5UIR           equ	765	;# 
  4048   0002FE                     U5ERRIR         equ	766	;# 
  4049   0002FF                     U5ERRIE         equ	767	;# 
  4050   000300                     SMT1TMR         equ	768	;# 
  4051   000300                     SMT1TMRL        equ	768	;# 
  4052   000301                     SMT1TMRH        equ	769	;# 
  4053   000302                     SMT1TMRU        equ	770	;# 
  4054   000303                     SMT1CPR         equ	771	;# 
  4055   000303                     SMT1CPRL        equ	771	;# 
  4056   000304                     SMT1CPRH        equ	772	;# 
  4057   000305                     SMT1CPRU        equ	773	;# 
  4058   000306                     SMT1CPW         equ	774	;# 
  4059   000306                     SMT1CPWL        equ	774	;# 
  4060   000307                     SMT1CPWH        equ	775	;# 
  4061   000308                     SMT1CPWU        equ	776	;# 
  4062   000309                     SMT1PR          equ	777	;# 
  4063   000309                     SMT1PRL         equ	777	;# 
  4064   00030A                     SMT1PRH         equ	778	;# 
  4065   00030B                     SMT1PRU         equ	779	;# 
  4066   00030C                     SMT1CON0        equ	780	;# 
  4067   00030D                     SMT1CON1        equ	781	;# 
  4068   00030E                     SMT1STAT        equ	782	;# 
  4069   00030F                     SMT1CLK         equ	783	;# 
  4070   000310                     SMT1SIG         equ	784	;# 
  4071   000311                     SMT1WIN         equ	785	;# 
  4072   000318                     TMR0L           equ	792	;# 
  4073   000318                     TMR0            equ	792	;# 
  4074   000319                     TMR0H           equ	793	;# 
  4075   000319                     PR0             equ	793	;# 
  4076   00031A                     T0CON0          equ	794	;# 
  4077   00031B                     T0CON1          equ	795	;# 
  4078   00031C                     TMR1            equ	796	;# 
  4079   00031C                     TMR1L           equ	796	;# 
  4080   00031D                     TMR1H           equ	797	;# 
  4081   00031E                     T1CON           equ	798	;# 
  4082   00031E                     TMR1CON         equ	798	;# 
  4083   00031F                     T1GCON          equ	799	;# 
  4084   00031F                     TMR1GCON        equ	799	;# 
  4085   000320                     T1GATE          equ	800	;# 
  4086   000320                     TMR1GATE        equ	800	;# 
  4087   000321                     T1CLK           equ	801	;# 
  4088   000321                     TMR1CLK         equ	801	;# 
  4089   000321                     PR1             equ	801	;# 
  4090   000322                     T2TMR           equ	802	;# 
  4091   000322                     TMR2            equ	802	;# 
  4092   000323                     T2PR            equ	803	;# 
  4093   000323                     PR2             equ	803	;# 
  4094   000324                     T2CON           equ	804	;# 
  4095   000325                     T2HLT           equ	805	;# 
  4096   000326                     T2CLKCON        equ	806	;# 
  4097   000326                     T2CLK           equ	806	;# 
  4098   000327                     T2RST           equ	807	;# 
  4099   000328                     TMR3            equ	808	;# 
  4100   000328                     TMR3L           equ	808	;# 
  4101   000329                     TMR3H           equ	809	;# 
  4102   00032A                     T3CON           equ	810	;# 
  4103   00032A                     TMR3CON         equ	810	;# 
  4104   00032B                     T3GCON          equ	811	;# 
  4105   00032B                     TMR3GCON        equ	811	;# 
  4106   00032C                     T3GATE          equ	812	;# 
  4107   00032C                     TMR3GATE        equ	812	;# 
  4108   00032D                     T3CLK           equ	813	;# 
  4109   00032D                     TMR3CLK         equ	813	;# 
  4110   00032D                     PR3             equ	813	;# 
  4111   00032E                     T4TMR           equ	814	;# 
  4112   00032E                     TMR4            equ	814	;# 
  4113   00032F                     T4PR            equ	815	;# 
  4114   00032F                     PR4             equ	815	;# 
  4115   000330                     T4CON           equ	816	;# 
  4116   000331                     T4HLT           equ	817	;# 
  4117   000332                     T4CLKCON        equ	818	;# 
  4118   000332                     T4CLK           equ	818	;# 
  4119   000333                     T4RST           equ	819	;# 
  4120   000334                     TMR5            equ	820	;# 
  4121   000334                     TMR5L           equ	820	;# 
  4122   000335                     TMR5H           equ	821	;# 
  4123   000336                     T5CON           equ	822	;# 
  4124   000336                     TMR5CON         equ	822	;# 
  4125   000337                     T5GCON          equ	823	;# 
  4126   000337                     TMR5GCON        equ	823	;# 
  4127   000338                     T5GATE          equ	824	;# 
  4128   000338                     TMR5GATE        equ	824	;# 
  4129   000339                     T5CLK           equ	825	;# 
  4130   000339                     TMR5CLK         equ	825	;# 
  4131   000339                     PR5             equ	825	;# 
  4132   00033A                     T6TMR           equ	826	;# 
  4133   00033A                     TMR6            equ	826	;# 
  4134   00033B                     T6PR            equ	827	;# 
  4135   00033B                     PR6             equ	827	;# 
  4136   00033C                     T6CON           equ	828	;# 
  4137   00033D                     T6HLT           equ	829	;# 
  4138   00033E                     T6CLKCON        equ	830	;# 
  4139   00033E                     T6CLK           equ	830	;# 
  4140   00033F                     T6RST           equ	831	;# 
  4141   000340                     CCPR1           equ	832	;# 
  4142   000340                     CCPR1L          equ	832	;# 
  4143   000341                     CCPR1H          equ	833	;# 
  4144   000342                     CCP1CON         equ	834	;# 
  4145   000343                     CCP1CAP         equ	835	;# 
  4146   000344                     CCPR2           equ	836	;# 
  4147   000344                     CCPR2L          equ	836	;# 
  4148   000345                     CCPR2H          equ	837	;# 
  4149   000346                     CCP2CON         equ	838	;# 
  4150   000347                     CCP2CAP         equ	839	;# 
  4151   000348                     CCPR3           equ	840	;# 
  4152   000348                     CCPR3L          equ	840	;# 
  4153   000349                     CCPR3H          equ	841	;# 
  4154   00034A                     CCP3CON         equ	842	;# 
  4155   00034B                     CCP3CAP         equ	843	;# 
  4156   00034C                     CCPTMRS0        equ	844	;# 
  4157   00034F                     CRCDATA         equ	847	;# 
  4158   00034F                     CRCDATL         equ	847	;# 
  4159   000350                     CRCDATH         equ	848	;# 
  4160   000351                     CRCACC          equ	849	;# 
  4161   000351                     CRCACCL         equ	849	;# 
  4162   000352                     CRCACCH         equ	850	;# 
  4163   000353                     CRCSHFT         equ	851	;# 
  4164   000353                     CRCSHIFTL       equ	851	;# 
  4165   000354                     CRCSHIFTH       equ	852	;# 
  4166   000355                     CRCXOR          equ	853	;# 
  4167   000355                     CRCXORL         equ	853	;# 
  4168   000356                     CRCXORH         equ	854	;# 
  4169   000357                     CRCCON0         equ	855	;# 
  4170   000358                     CRCCON1         equ	856	;# 
  4171   00035A                     SCANLADR        equ	858	;# 
  4172   00035A                     SCANLADRL       equ	858	;# 
  4173   00035B                     SCANLADRH       equ	859	;# 
  4174   00035C                     SCANLADRU       equ	860	;# 
  4175   00035D                     SCANHADR        equ	861	;# 
  4176   00035D                     SCANHADRL       equ	861	;# 
  4177   00035E                     SCANHADRH       equ	862	;# 
  4178   00035F                     SCANHADRU       equ	863	;# 
  4179   000360                     SCANCON0        equ	864	;# 
  4180   000361                     SCANTRIG        equ	865	;# 
  4181   000362                     IPR0            equ	866	;# 
  4182   000363                     IPR1            equ	867	;# 
  4183   000364                     IPR2            equ	868	;# 
  4184   000365                     IPR3            equ	869	;# 
  4185   000366                     IPR4            equ	870	;# 
  4186   000367                     IPR5            equ	871	;# 
  4187   000368                     IPR6            equ	872	;# 
  4188   000369                     IPR7            equ	873	;# 
  4189   00036A                     IPR8            equ	874	;# 
  4190   00036B                     IPR9            equ	875	;# 
  4191   00036C                     IPR10           equ	876	;# 
  4192   00036D                     IPR11           equ	877	;# 
  4193   00036E                     IPR12           equ	878	;# 
  4194   00036F                     IPR13           equ	879	;# 
  4195   000370                     IPR14           equ	880	;# 
  4196   000371                     IPR15           equ	881	;# 
  4197   000373                     STATUS_CSHAD    equ	883	;# 
  4198   000374                     WREG_CSHAD      equ	884	;# 
  4199   000375                     BSR_CSHAD       equ	885	;# 
  4200   000376                     SHADCON         equ	886	;# 
  4201   000377                     STATUS_SHAD     equ	887	;# 
  4202   000378                     WREG_SHAD       equ	888	;# 
  4203   000379                     BSR_SHAD        equ	889	;# 
  4204   00037A                     PCLATH_SHAD     equ	890	;# 
  4205   00037B                     PCLATU_SHAD     equ	891	;# 
  4206   00037C                     FSR0SH          equ	892	;# 
  4207   00037C                     FSR0L_SHAD      equ	892	;# 
  4208   00037D                     FSR0H_SHAD      equ	893	;# 
  4209   00037E                     FSR1SH          equ	894	;# 
  4210   00037E                     FSR1L_SHAD      equ	894	;# 
  4211   00037F                     FSR1H_SHAD      equ	895	;# 
  4212   000380                     FSR2SH          equ	896	;# 
  4213   000380                     FSR2L_SHAD      equ	896	;# 
  4214   000381                     FSR2H_SHAD      equ	897	;# 
  4215   000382                     PRODSH          equ	898	;# 
  4216   000382                     PRODL_SHAD      equ	898	;# 
  4217   000383                     PRODH_SHAD      equ	899	;# 
  4218   0003BC                     CWG1CLK         equ	956	;# 
  4219   0003BC                     CWG1CLKCON      equ	956	;# 
  4220   0003BD                     CWG1ISM         equ	957	;# 
  4221   0003BD                     CWG1DAT         equ	957	;# 
  4222   0003BE                     CWG1DBR         equ	958	;# 
  4223   0003BF                     CWG1DBF         equ	959	;# 
  4224   0003C0                     CWG1CON0        equ	960	;# 
  4225   0003C1                     CWG1CON1        equ	961	;# 
  4226   0003C2                     CWG1AS0         equ	962	;# 
  4227   0003C3                     CWG1AS1         equ	963	;# 
  4228   0003C4                     CWG1STR         equ	964	;# 
  4229   0003C5                     CWG2CLK         equ	965	;# 
  4230   0003C5                     CWG2CLKCON      equ	965	;# 
  4231   0003C6                     CWG2ISM         equ	966	;# 
  4232   0003C6                     CWG2DAT         equ	966	;# 
  4233   0003C7                     CWG2DBR         equ	967	;# 
  4234   0003C8                     CWG2DBF         equ	968	;# 
  4235   0003C9                     CWG2CON0        equ	969	;# 
  4236   0003CA                     CWG2CON1        equ	970	;# 
  4237   0003CB                     CWG2AS0         equ	971	;# 
  4238   0003CC                     CWG2AS1         equ	972	;# 
  4239   0003CD                     CWG2STR         equ	973	;# 
  4240   0003CE                     CWG3CLK         equ	974	;# 
  4241   0003CE                     CWG3CLKCON      equ	974	;# 
  4242   0003CF                     CWG3ISM         equ	975	;# 
  4243   0003CF                     CWG3DAT         equ	975	;# 
  4244   0003D0                     CWG3DBR         equ	976	;# 
  4245   0003D1                     CWG3DBF         equ	977	;# 
  4246   0003D2                     CWG3CON0        equ	978	;# 
  4247   0003D3                     CWG3CON1        equ	979	;# 
  4248   0003D4                     CWG3AS0         equ	980	;# 
  4249   0003D5                     CWG3AS1         equ	981	;# 
  4250   0003D6                     CWG3STR         equ	982	;# 
  4251   0003D7                     FVRCON          equ	983	;# 
  4252   0003D8                     ADCPCON         equ	984	;# 
  4253   0003D8                     ADCP            equ	984	;# 
  4254   0003D9                     ADLTH           equ	985	;# 
  4255   0003D9                     ADLTHL          equ	985	;# 
  4256   0003DA                     ADLTHH          equ	986	;# 
  4257   0003DB                     ADUTH           equ	987	;# 
  4258   0003DB                     ADUTHL          equ	987	;# 
  4259   0003DC                     ADUTHH          equ	988	;# 
  4260   0003DD                     ADERR           equ	989	;# 
  4261   0003DD                     ADERRL          equ	989	;# 
  4262   0003DE                     ADERRH          equ	990	;# 
  4263   0003DF                     ADSTPT          equ	991	;# 
  4264   0003DF                     ADSTPTL         equ	991	;# 
  4265   0003E0                     ADSTPTH         equ	992	;# 
  4266   0003E1                     ADFLTR          equ	993	;# 
  4267   0003E1                     ADFLTRL         equ	993	;# 
  4268   0003E2                     ADFLTRH         equ	994	;# 
  4269   0003E3                     ADACC           equ	995	;# 
  4270   0003E3                     ADACCL          equ	995	;# 
  4271   0003E4                     ADACCH          equ	996	;# 
  4272   0003E5                     ADACCU          equ	997	;# 
  4273   0003E6                     ADCNT           equ	998	;# 
  4274   0003E7                     ADRPT           equ	999	;# 
  4275   0003E8                     ADPREV          equ	1000	;# 
  4276   0003E8                     ADPREVL         equ	1000	;# 
  4277   0003E9                     ADPREVH         equ	1001	;# 
  4278   0003EA                     ADRES           equ	1002	;# 
  4279   0003EA                     ADRESL          equ	1002	;# 
  4280   0003EB                     ADRESH          equ	1003	;# 
  4281   0003EC                     ADPCH           equ	1004	;# 
  4282   0003EE                     ADACQ           equ	1006	;# 
  4283   0003EE                     ADACQL          equ	1006	;# 
  4284   0003EF                     ADACQH          equ	1007	;# 
  4285   0003F0                     ADCAP           equ	1008	;# 
  4286   0003F1                     ADPRE           equ	1009	;# 
  4287   0003F1                     ADPREL          equ	1009	;# 
  4288   0003F2                     ADPREH          equ	1010	;# 
  4289   0003F3                     ADCON0          equ	1011	;# 
  4290   0003F4                     ADCON1          equ	1012	;# 
  4291   0003F5                     ADCON2          equ	1013	;# 
  4292   0003F6                     ADCON3          equ	1014	;# 
  4293   0003F7                     ADSTAT          equ	1015	;# 
  4294   0003F8                     ADREF           equ	1016	;# 
  4295   0003F9                     ADACT           equ	1017	;# 
  4296   0003FA                     ADCLK           equ	1018	;# 
  4297   000400                     ANSELA          equ	1024	;# 
  4298   000401                     WPUA            equ	1025	;# 
  4299   000402                     ODCONA          equ	1026	;# 
  4300   000403                     SLRCONA         equ	1027	;# 
  4301   000404                     INLVLA          equ	1028	;# 
  4302   000405                     IOCAP           equ	1029	;# 
  4303   000406                     IOCAN           equ	1030	;# 
  4304   000407                     IOCAF           equ	1031	;# 
  4305   000408                     ANSELB          equ	1032	;# 
  4306   000409                     WPUB            equ	1033	;# 
  4307   00040A                     ODCONB          equ	1034	;# 
  4308   00040B                     SLRCONB         equ	1035	;# 
  4309   00040C                     INLVLB          equ	1036	;# 
  4310   00040D                     IOCBP           equ	1037	;# 
  4311   00040E                     IOCBN           equ	1038	;# 
  4312   00040F                     IOCBF           equ	1039	;# 
  4313   000410                     ANSELC          equ	1040	;# 
  4314   000411                     WPUC            equ	1041	;# 
  4315   000412                     ODCONC          equ	1042	;# 
  4316   000413                     SLRCONC         equ	1043	;# 
  4317   000414                     INLVLC          equ	1044	;# 
  4318   000415                     IOCCP           equ	1045	;# 
  4319   000416                     IOCCN           equ	1046	;# 
  4320   000417                     IOCCF           equ	1047	;# 
  4321   000418                     ANSELD          equ	1048	;# 
  4322   000419                     WPUD            equ	1049	;# 
  4323   00041A                     ODCOND          equ	1050	;# 
  4324   00041B                     SLRCOND         equ	1051	;# 
  4325   00041C                     INLVLD          equ	1052	;# 
  4326   000420                     ANSELE          equ	1056	;# 
  4327   000421                     WPUE            equ	1057	;# 
  4328   000422                     ODCONE          equ	1058	;# 
  4329   000423                     SLRCONE         equ	1059	;# 
  4330   000424                     INLVLE          equ	1060	;# 
  4331   000425                     IOCEP           equ	1061	;# 
  4332   000426                     IOCEN           equ	1062	;# 
  4333   000427                     IOCEF           equ	1063	;# 
  4334   000428                     ANSELF          equ	1064	;# 
  4335   000429                     WPUF            equ	1065	;# 
  4336   00042A                     ODCONF          equ	1066	;# 
  4337   00042B                     SLRCONF         equ	1067	;# 
  4338   00042C                     INLVLF          equ	1068	;# 
  4339   000440                     NCO1ACC         equ	1088	;# 
  4340   000440                     NCO1ACCL        equ	1088	;# 
  4341   000441                     NCO1ACCH        equ	1089	;# 
  4342   000442                     NCO1ACCU        equ	1090	;# 
  4343   000443                     NCO1INC         equ	1091	;# 
  4344   000443                     NCO1INCL        equ	1091	;# 
  4345   000444                     NCO1INCH        equ	1092	;# 
  4346   000445                     NCO1INCU        equ	1093	;# 
  4347   000446                     NCO1CON         equ	1094	;# 
  4348   000447                     NCO1CLK         equ	1095	;# 
  4349   000448                     NCO2ACC         equ	1096	;# 
  4350   000448                     NCO2ACCL        equ	1096	;# 
  4351   000449                     NCO2ACCH        equ	1097	;# 
  4352   00044A                     NCO2ACCU        equ	1098	;# 
  4353   00044B                     NCO2INC         equ	1099	;# 
  4354   00044B                     NCO2INCL        equ	1099	;# 
  4355   00044C                     NCO2INCH        equ	1100	;# 
  4356   00044D                     NCO2INCU        equ	1101	;# 
  4357   00044E                     NCO2CON         equ	1102	;# 
  4358   00044F                     NCO2CLK         equ	1103	;# 
  4359   000450                     NCO3ACC         equ	1104	;# 
  4360   000450                     NCO3ACCL        equ	1104	;# 
  4361   000451                     NCO3ACCH        equ	1105	;# 
  4362   000452                     NCO3ACCU        equ	1106	;# 
  4363   000453                     NCO3INC         equ	1107	;# 
  4364   000453                     NCO3INCL        equ	1107	;# 
  4365   000454                     NCO3INCH        equ	1108	;# 
  4366   000455                     NCO3INCU        equ	1109	;# 
  4367   000456                     NCO3CON         equ	1110	;# 
  4368   000457                     NCO3CLK         equ	1111	;# 
  4369   000459                     IVTLOCK         equ	1113	;# 
  4370   00045A                     IVTAD           equ	1114	;# 
  4371   00045A                     IVTADL          equ	1114	;# 
  4372   00045B                     IVTADH          equ	1115	;# 
  4373   00045C                     IVTADU          equ	1116	;# 
  4374   00045D                     IVTBASE         equ	1117	;# 
  4375   00045D                     IVTBASEL        equ	1117	;# 
  4376   00045E                     IVTBASEH        equ	1118	;# 
  4377   00045F                     IVTBASEU        equ	1119	;# 
  4378   000460                     PWM1ERS         equ	1120	;# 
  4379   000461                     PWM1CLK         equ	1121	;# 
  4380   000462                     PWM1LDS         equ	1122	;# 
  4381   000463                     PWM1PR          equ	1123	;# 
  4382   000463                     PWM1PRL         equ	1123	;# 
  4383   000464                     PWM1PRH         equ	1124	;# 
  4384   000465                     PWM1CPRE        equ	1125	;# 
  4385   000466                     PWM1PIPOS       equ	1126	;# 
  4386   000467                     PWM1GIR         equ	1127	;# 
  4387   000468                     PWM1GIE         equ	1128	;# 
  4388   000469                     PWM1CON         equ	1129	;# 
  4389   00046A                     PWM1S1CFG       equ	1130	;# 
  4390   00046B                     PWM1S1P1        equ	1131	;# 
  4391   00046B                     PWM1S1P1L       equ	1131	;# 
  4392   00046C                     PWM1S1P1H       equ	1132	;# 
  4393   00046D                     PWM1S1P2        equ	1133	;# 
  4394   00046D                     PWM1S1P2L       equ	1133	;# 
  4395   00046E                     PWM1S1P2H       equ	1134	;# 
  4396   00046F                     PWM2ERS         equ	1135	;# 
  4397   000470                     PWM2CLK         equ	1136	;# 
  4398   000471                     PWM2LDS         equ	1137	;# 
  4399   000472                     PWM2PR          equ	1138	;# 
  4400   000472                     PWM2PRL         equ	1138	;# 
  4401   000473                     PWM2PRH         equ	1139	;# 
  4402   000474                     PWM2CPRE        equ	1140	;# 
  4403   000475                     PWM2PIPOS       equ	1141	;# 
  4404   000476                     PWM2GIR         equ	1142	;# 
  4405   000477                     PWM2GIE         equ	1143	;# 
  4406   000478                     PWM2CON         equ	1144	;# 
  4407   000479                     PWM2S1CFG       equ	1145	;# 
  4408   00047A                     PWM2S1P1        equ	1146	;# 
  4409   00047A                     PWM2S1P1L       equ	1146	;# 
  4410   00047B                     PWM2S1P1H       equ	1147	;# 
  4411   00047C                     PWM2S1P2        equ	1148	;# 
  4412   00047C                     PWM2S1P2L       equ	1148	;# 
  4413   00047D                     PWM2S1P2H       equ	1149	;# 
  4414   00047E                     PWM3ERS         equ	1150	;# 
  4415   00047F                     PWM3CLK         equ	1151	;# 
  4416   000480                     PWM3LDS         equ	1152	;# 
  4417   000481                     PWM3PR          equ	1153	;# 
  4418   000481                     PWM3PRL         equ	1153	;# 
  4419   000482                     PWM3PRH         equ	1154	;# 
  4420   000483                     PWM3CPRE        equ	1155	;# 
  4421   000484                     PWM3PIPOS       equ	1156	;# 
  4422   000485                     PWM3GIR         equ	1157	;# 
  4423   000486                     PWM3GIE         equ	1158	;# 
  4424   000487                     PWM3CON         equ	1159	;# 
  4425   000488                     PWM3S1CFG       equ	1160	;# 
  4426   000489                     PWM3S1P1        equ	1161	;# 
  4427   000489                     PWM3S1P1L       equ	1161	;# 
  4428   00048A                     PWM3S1P1H       equ	1162	;# 
  4429   00048B                     PWM3S1P2        equ	1163	;# 
  4430   00048B                     PWM3S1P2L       equ	1163	;# 
  4431   00048C                     PWM3S1P2H       equ	1164	;# 
  4432   00049C                     PWMLOAD         equ	1180	;# 
  4433   00049D                     PWMEN           equ	1181	;# 
  4434   00049E                     PIE0            equ	1182	;# 
  4435   00049F                     PIE1            equ	1183	;# 
  4436   0004A0                     PIE2            equ	1184	;# 
  4437   0004A1                     PIE3            equ	1185	;# 
  4438   0004A2                     PIE4            equ	1186	;# 
  4439   0004A3                     PIE5            equ	1187	;# 
  4440   0004A4                     PIE6            equ	1188	;# 
  4441   0004A5                     PIE7            equ	1189	;# 
  4442   0004A6                     PIE8            equ	1190	;# 
  4443   0004A7                     PIE9            equ	1191	;# 
  4444   0004A8                     PIE10           equ	1192	;# 
  4445   0004A9                     PIE11           equ	1193	;# 
  4446   0004AA                     PIE12           equ	1194	;# 
  4447   0004AB                     PIE13           equ	1195	;# 
  4448   0004AC                     PIE14           equ	1196	;# 
  4449   0004AD                     PIE15           equ	1197	;# 
  4450   0004AE                     PIR0            equ	1198	;# 
  4451   0004AF                     PIR1            equ	1199	;# 
  4452   0004B0                     PIR2            equ	1200	;# 
  4453   0004B1                     PIR3            equ	1201	;# 
  4454   0004B2                     PIR4            equ	1202	;# 
  4455   0004B3                     PIR5            equ	1203	;# 
  4456   0004B4                     PIR6            equ	1204	;# 
  4457   0004B5                     PIR7            equ	1205	;# 
  4458   0004B6                     PIR8            equ	1206	;# 
  4459   0004B7                     PIR9            equ	1207	;# 
  4460   0004B8                     PIR10           equ	1208	;# 
  4461   0004B9                     PIR11           equ	1209	;# 
  4462   0004BA                     PIR12           equ	1210	;# 
  4463   0004BB                     PIR13           equ	1211	;# 
  4464   0004BC                     PIR14           equ	1212	;# 
  4465   0004BD                     PIR15           equ	1213	;# 
  4466   0004BE                     LATA            equ	1214	;# 
  4467   0004BF                     LATB            equ	1215	;# 
  4468   0004C0                     LATC            equ	1216	;# 
  4469   0004C1                     LATD            equ	1217	;# 
  4470   0004C2                     LATE            equ	1218	;# 
  4471   0004C3                     LATF            equ	1219	;# 
  4472   0004C6                     TRISA           equ	1222	;# 
  4473   0004C7                     TRISB           equ	1223	;# 
  4474   0004C8                     TRISC           equ	1224	;# 
  4475   0004C9                     TRISD           equ	1225	;# 
  4476   0004CA                     TRISE           equ	1226	;# 
  4477   0004CB                     TRISF           equ	1227	;# 
  4478   0004CE                     PORTA           equ	1230	;# 
  4479   0004CF                     PORTB           equ	1231	;# 
  4480   0004D0                     PORTC           equ	1232	;# 
  4481   0004D1                     PORTD           equ	1233	;# 
  4482   0004D2                     PORTE           equ	1234	;# 
  4483   0004D3                     PORTF           equ	1235	;# 
  4484   0004D6                     INTCON0         equ	1238	;# 
  4485   0004D7                     INTCON1         equ	1239	;# 
  4486   0004D8                     STATUS          equ	1240	;# 
  4487   0004D9                     FSR2            equ	1241	;# 
  4488   0004D9                     FSR2L           equ	1241	;# 
  4489   0004DA                     FSR2H           equ	1242	;# 
  4490   0004DB                     PLUSW2          equ	1243	;# 
  4491   0004DC                     PREINC2         equ	1244	;# 
  4492   0004DD                     POSTDEC2        equ	1245	;# 
  4493   0004DE                     POSTINC2        equ	1246	;# 
  4494   0004DF                     INDF2           equ	1247	;# 
  4495   0004E0                     BSR             equ	1248	;# 
  4496   0004E1                     FSR1            equ	1249	;# 
  4497   0004E1                     FSR1L           equ	1249	;# 
  4498   0004E2                     FSR1H           equ	1250	;# 
  4499   0004E3                     PLUSW1          equ	1251	;# 
  4500   0004E4                     PREINC1         equ	1252	;# 
  4501   0004E5                     POSTDEC1        equ	1253	;# 
  4502   0004E6                     POSTINC1        equ	1254	;# 
  4503   0004E7                     INDF1           equ	1255	;# 
  4504   0004E8                     WREG            equ	1256	;# 
  4505   0004E9                     FSR0            equ	1257	;# 
  4506   0004E9                     FSR0L           equ	1257	;# 
  4507   0004EA                     FSR0H           equ	1258	;# 
  4508   0004EB                     PLUSW0          equ	1259	;# 
  4509   0004EC                     PREINC0         equ	1260	;# 
  4510   0004ED                     POSTDEC0        equ	1261	;# 
  4511   0004EE                     POSTINC0        equ	1262	;# 
  4512   0004EF                     INDF0           equ	1263	;# 
  4513   0004F0                     PCON0           equ	1264	;# 
  4514   0004F1                     PCON1           equ	1265	;# 
  4515   0004F2                     CPUDOZE         equ	1266	;# 
  4516   0004F3                     PROD            equ	1267	;# 
  4517   0004F3                     PRODL           equ	1267	;# 
  4518   0004F4                     PRODH           equ	1268	;# 
  4519   0004F5                     TABLAT          equ	1269	;# 
  4520   0004F6                     TBLPTR          equ	1270	;# 
  4521   0004F6                     TBLPTRL         equ	1270	;# 
  4522   0004F7                     TBLPTRH         equ	1271	;# 
  4523   0004F8                     TBLPTRU         equ	1272	;# 
  4524   0004F9                     PCLAT           equ	1273	;# 
  4525   0004F9                     PCL             equ	1273	;# 
  4526   0004FA                     PCLATH          equ	1274	;# 
  4527   0004FB                     PCLATU          equ	1275	;# 
  4528   0004FC                     STKPTR          equ	1276	;# 
  4529   0004FD                     TOS             equ	1277	;# 
  4530   0004FD                     TOSL            equ	1277	;# 
  4531   0004FE                     TOSH            equ	1278	;# 
  4532   0004FF                     TOSU            equ	1279	;# 
  4533   000039                     CLKRCON         equ	57	;# 
  4534   00003A                     CLKRCLK         equ	58	;# 
  4535   000040                     NVMCON0         equ	64	;# 
  4536   000041                     NVMCON1         equ	65	;# 
  4537   000042                     NVMLOCK         equ	66	;# 
  4538   000043                     NVMADR          equ	67	;# 
  4539   000043                     NVMADRL         equ	67	;# 
  4540   000044                     NVMADRH         equ	68	;# 
  4541   000045                     NVMADRU         equ	69	;# 
  4542   000046                     NVMDAT          equ	70	;# 
  4543   000046                     NVMDATL         equ	70	;# 
  4544   000047                     NVMDATH         equ	71	;# 
  4545   000048                     VREGCON         equ	72	;# 
  4546   000049                     BORCON          equ	73	;# 
  4547   00004A                     HLVDCON0        equ	74	;# 
  4548   00004B                     HLVDCON1        equ	75	;# 
  4549   00004C                     ZCDCON          equ	76	;# 
  4550   000060                     PMD0            equ	96	;# 
  4551   000061                     PMD1            equ	97	;# 
  4552   000063                     PMD3            equ	99	;# 
  4553   000064                     PMD4            equ	100	;# 
  4554   000065                     PMD5            equ	101	;# 
  4555   000066                     PMD6            equ	102	;# 
  4556   000067                     PMD7            equ	103	;# 
  4557   000068                     PMD8            equ	104	;# 
  4558   00006A                     MD1CON0         equ	106	;# 
  4559   00006B                     MD1CON1         equ	107	;# 
  4560   00006C                     MD1SRC          equ	108	;# 
  4561   00006D                     MD1CARL         equ	109	;# 
  4562   00006E                     MD1CARH         equ	110	;# 
  4563   00006F                     CMOUT           equ	111	;# 
  4564   000070                     CM1CON0         equ	112	;# 
  4565   000071                     CM1CON1         equ	113	;# 
  4566   000072                     CM1NCH          equ	114	;# 
  4567   000073                     CM1PCH          equ	115	;# 
  4568   000074                     CM2CON0         equ	116	;# 
  4569   000075                     CM2CON1         equ	117	;# 
  4570   000076                     CM2NCH          equ	118	;# 
  4571   000077                     CM2PCH          equ	119	;# 
  4572   000078                     WDTCON0         equ	120	;# 
  4573   000079                     WDTCON1         equ	121	;# 
  4574   00007A                     WDTPS           equ	122	;# 
  4575   00007A                     WDTPSL          equ	122	;# 
  4576   00007B                     WDTPSH          equ	123	;# 
  4577   00007C                     WDTTMR          equ	124	;# 
  4578   00007D                     DAC1DAT         equ	125	;# 
  4579   00007D                     DAC1DATL        equ	125	;# 
  4580   00007F                     DAC1CON         equ	127	;# 
  4581   000080                     SPI1RXB         equ	128	;# 
  4582   000081                     SPI1TXB         equ	129	;# 
  4583   000082                     SPI1TCNT        equ	130	;# 
  4584   000082                     SPI1TCNTL       equ	130	;# 
  4585   000083                     SPI1TCNTH       equ	131	;# 
  4586   000084                     SPI1CON0        equ	132	;# 
  4587   000085                     SPI1CON1        equ	133	;# 
  4588   000086                     SPI1CON2        equ	134	;# 
  4589   000087                     SPI1STATUS      equ	135	;# 
  4590   000088                     SPI1TWIDTH      equ	136	;# 
  4591   000089                     SPI1BAUD        equ	137	;# 
  4592   00008A                     SPI1INTF        equ	138	;# 
  4593   00008B                     SPI1INTE        equ	139	;# 
  4594   00008C                     SPI1CLK         equ	140	;# 
  4595   00008D                     SPI2RXB         equ	141	;# 
  4596   00008E                     SPI2TXB         equ	142	;# 
  4597   00008F                     SPI2TCNT        equ	143	;# 
  4598   00008F                     SPI2TCNTL       equ	143	;# 
  4599   000090                     SPI2TCNTH       equ	144	;# 
  4600   000091                     SPI2CON0        equ	145	;# 
  4601   000092                     SPI2CON1        equ	146	;# 
  4602   000093                     SPI2CON2        equ	147	;# 
  4603   000094                     SPI2STATUS      equ	148	;# 
  4604   000095                     SPI2TWIDTH      equ	149	;# 
  4605   000096                     SPI2BAUD        equ	150	;# 
  4606   000097                     SPI2INTF        equ	151	;# 
  4607   000098                     SPI2INTE        equ	152	;# 
  4608   000099                     SPI2CLK         equ	153	;# 
  4609   0000AC                     ACTCON          equ	172	;# 
  4610   0000AD                     OSCCON1         equ	173	;# 
  4611   0000AE                     OSCCON2         equ	174	;# 
  4612   0000AF                     OSCCON3         equ	175	;# 
  4613   0000B0                     OSCTUNE         equ	176	;# 
  4614   0000B1                     OSCFRQ          equ	177	;# 
  4615   0000B1                     OSCFREQ         equ	177	;# 
  4616   0000B2                     OSCSTAT         equ	178	;# 
  4617   0000B2                     OSCSTAT1        equ	178	;# 
  4618   0000B3                     OSCEN           equ	179	;# 
  4619   0000B4                     PRLOCK          equ	180	;# 
  4620   0000B5                     SCANPR          equ	181	;# 
  4621   0000B6                     DMA1PR          equ	182	;# 
  4622   0000B7                     DMA2PR          equ	183	;# 
  4623   0000B8                     DMA3PR          equ	184	;# 
  4624   0000B9                     DMA4PR          equ	185	;# 
  4625   0000BA                     DMA5PR          equ	186	;# 
  4626   0000BB                     DMA6PR          equ	187	;# 
  4627   0000BE                     MAINPR          equ	190	;# 
  4628   0000BF                     ISRPR           equ	191	;# 
  4629   0000D4                     CLCDATA         equ	212	;# 
  4630   0000D5                     CLCSELECT       equ	213	;# 
  4631   0000D6                     CLCnCON         equ	214	;# 
  4632   0000D7                     CLCnPOL         equ	215	;# 
  4633   0000D8                     CLCnSEL0        equ	216	;# 
  4634   0000D9                     CLCnSEL1        equ	217	;# 
  4635   0000DA                     CLCnSEL2        equ	218	;# 
  4636   0000DB                     CLCnSEL3        equ	219	;# 
  4637   0000DC                     CLCnGLS0        equ	220	;# 
  4638   0000DD                     CLCnGLS1        equ	221	;# 
  4639   0000DE                     CLCnGLS2        equ	222	;# 
  4640   0000DF                     CLCnGLS3        equ	223	;# 
  4641   0000E8                     DMASELECT       equ	232	;# 
  4642   0000E9                     DMAnBUF         equ	233	;# 
  4643   0000EA                     DMAnDCNT        equ	234	;# 
  4644   0000EA                     DMAnDCNTL       equ	234	;# 
  4645   0000EB                     DMAnDCNTH       equ	235	;# 
  4646   0000EC                     DMAnDPTR        equ	236	;# 
  4647   0000EC                     DMAnDPTRL       equ	236	;# 
  4648   0000ED                     DMAnDPTRH       equ	237	;# 
  4649   0000EE                     DMAnDSZ         equ	238	;# 
  4650   0000EE                     DMAnDSZL        equ	238	;# 
  4651   0000EF                     DMAnDSZH        equ	239	;# 
  4652   0000F0                     DMAnDSA         equ	240	;# 
  4653   0000F0                     DMAnDSAL        equ	240	;# 
  4654   0000F1                     DMAnDSAH        equ	241	;# 
  4655   0000F2                     DMAnSCNT        equ	242	;# 
  4656   0000F2                     DMAnSCNTL       equ	242	;# 
  4657   0000F3                     DMAnSCNTH       equ	243	;# 
  4658   0000F4                     DMAnSPTR        equ	244	;# 
  4659   0000F4                     DMAnSPTRL       equ	244	;# 
  4660   0000F5                     DMAnSPTRH       equ	245	;# 
  4661   0000F6                     DMAnSPTRU       equ	246	;# 
  4662   0000F7                     DMAnSSZ         equ	247	;# 
  4663   0000F7                     DMAnSSZL        equ	247	;# 
  4664   0000F8                     DMAnSSZH        equ	248	;# 
  4665   0000F9                     DMAnSSA         equ	249	;# 
  4666   0000F9                     DMAnSSAL        equ	249	;# 
  4667   0000FA                     DMAnSSAH        equ	250	;# 
  4668   0000FB                     DMAnSSAU        equ	251	;# 
  4669   0000FC                     DMAnCON0        equ	252	;# 
  4670   0000FD                     DMAnCON1        equ	253	;# 
  4671   0000FE                     DMAnAIRQ        equ	254	;# 
  4672   0000FF                     DMAnSIRQ        equ	255	;# 
  4673   000200                     PPSLOCK         equ	512	;# 
  4674   000201                     RA0PPS          equ	513	;# 
  4675   000202                     RA1PPS          equ	514	;# 
  4676   000203                     RA2PPS          equ	515	;# 
  4677   000204                     RA3PPS          equ	516	;# 
  4678   000205                     RA4PPS          equ	517	;# 
  4679   000206                     RA5PPS          equ	518	;# 
  4680   000207                     RA6PPS          equ	519	;# 
  4681   000208                     RA7PPS          equ	520	;# 
  4682   000209                     RB0PPS          equ	521	;# 
  4683   00020A                     RB1PPS          equ	522	;# 
  4684   00020B                     RB2PPS          equ	523	;# 
  4685   00020C                     RB3PPS          equ	524	;# 
  4686   00020D                     RB4PPS          equ	525	;# 
  4687   00020E                     RB5PPS          equ	526	;# 
  4688   00020F                     RB6PPS          equ	527	;# 
  4689   000210                     RB7PPS          equ	528	;# 
  4690   000211                     RC0PPS          equ	529	;# 
  4691   000212                     RC1PPS          equ	530	;# 
  4692   000213                     RC2PPS          equ	531	;# 
  4693   000214                     RC3PPS          equ	532	;# 
  4694   000215                     RC4PPS          equ	533	;# 
  4695   000216                     RC5PPS          equ	534	;# 
  4696   000217                     RC6PPS          equ	535	;# 
  4697   000218                     RC7PPS          equ	536	;# 
  4698   000219                     RD0PPS          equ	537	;# 
  4699   00021A                     RD1PPS          equ	538	;# 
  4700   00021B                     RD2PPS          equ	539	;# 
  4701   00021C                     RD3PPS          equ	540	;# 
  4702   00021D                     RD4PPS          equ	541	;# 
  4703   00021E                     RD5PPS          equ	542	;# 
  4704   00021F                     RD6PPS          equ	543	;# 
  4705   000220                     RD7PPS          equ	544	;# 
  4706   000221                     RE0PPS          equ	545	;# 
  4707   000222                     RE1PPS          equ	546	;# 
  4708   000223                     RE2PPS          equ	547	;# 
  4709   000229                     RF0PPS          equ	553	;# 
  4710   00022A                     RF1PPS          equ	554	;# 
  4711   00022B                     RF2PPS          equ	555	;# 
  4712   00022C                     RF3PPS          equ	556	;# 
  4713   00022D                     RF4PPS          equ	557	;# 
  4714   00022E                     RF5PPS          equ	558	;# 
  4715   00022F                     RF6PPS          equ	559	;# 
  4716   000230                     RF7PPS          equ	560	;# 
  4717   00023E                     INT0PPS         equ	574	;# 
  4718   00023F                     INT1PPS         equ	575	;# 
  4719   000240                     INT2PPS         equ	576	;# 
  4720   000241                     T0CKIPPS        equ	577	;# 
  4721   000242                     T1CKIPPS        equ	578	;# 
  4722   000243                     T1GPPS          equ	579	;# 
  4723   000244                     T3CKIPPS        equ	580	;# 
  4724   000245                     T3GPPS          equ	581	;# 
  4725   000246                     T5CKIPPS        equ	582	;# 
  4726   000247                     T5GPPS          equ	583	;# 
  4727   000248                     T2INPPS         equ	584	;# 
  4728   000249                     T4INPPS         equ	585	;# 
  4729   00024A                     T6INPPS         equ	586	;# 
  4730   00024F                     CCP1PPS         equ	591	;# 
  4731   000250                     CCP2PPS         equ	592	;# 
  4732   000251                     CCP3PPS         equ	593	;# 
  4733   000253                     PWM1ERSPPS      equ	595	;# 
  4734   000254                     PWM2ERSPPS      equ	596	;# 
  4735   000255                     PWM3ERSPPS      equ	597	;# 
  4736   000257                     PWMIN0PPS       equ	599	;# 
  4737   000258                     PWMIN1PPS       equ	600	;# 
  4738   000259                     SMT1WINPPS      equ	601	;# 
  4739   00025A                     SMT1SIGPPS      equ	602	;# 
  4740   00025B                     CWG1PPS         equ	603	;# 
  4741   00025B                     CWG1INPPS       equ	603	;# 
  4742   00025C                     CWG2PPS         equ	604	;# 
  4743   00025C                     CWG2INPPS       equ	604	;# 
  4744   00025D                     CWG3PPS         equ	605	;# 
  4745   00025D                     CWG3INPPS       equ	605	;# 
  4746   00025E                     MD1CARLPPS      equ	606	;# 
  4747   00025E                     MDCARLPPS       equ	606	;# 
  4748   00025F                     MD1CARHPPS      equ	607	;# 
  4749   00025F                     MDCARHPPS       equ	607	;# 
  4750   000260                     MD1SRCPPS       equ	608	;# 
  4751   000260                     MDSRCPPS        equ	608	;# 
  4752   000261                     CLCIN0PPS       equ	609	;# 
  4753   000262                     CLCIN1PPS       equ	610	;# 
  4754   000263                     CLCIN2PPS       equ	611	;# 
  4755   000264                     CLCIN3PPS       equ	612	;# 
  4756   000265                     CLCIN4PPS       equ	613	;# 
  4757   000266                     CLCIN5PPS       equ	614	;# 
  4758   000267                     CLCIN6PPS       equ	615	;# 
  4759   000268                     CLCIN7PPS       equ	616	;# 
  4760   000269                     ADACTPPS        equ	617	;# 
  4761   00026A                     SPI1SCKPPS      equ	618	;# 
  4762   00026B                     SPI1SDIPPS      equ	619	;# 
  4763   00026C                     SPI1SSPPS       equ	620	;# 
  4764   00026D                     SPI2SCKPPS      equ	621	;# 
  4765   00026E                     SPI2SDIPPS      equ	622	;# 
  4766   00026F                     SPI2SSPPS       equ	623	;# 
  4767   000270                     I2C1SDAPPS      equ	624	;# 
  4768   000271                     I2C1SCLPPS      equ	625	;# 
  4769   000272                     U1RXPPS         equ	626	;# 
  4770   000273                     U1CTSPPS        equ	627	;# 
  4771   000274                     U2RXPPS         equ	628	;# 
  4772   000275                     U2CTSPPS        equ	629	;# 
  4773   000276                     U3RXPPS         equ	630	;# 
  4774   000277                     U3CTSPPS        equ	631	;# 
  4775   000278                     U4RXPPS         equ	632	;# 
  4776   000279                     U4CTSPPS        equ	633	;# 
  4777   00027A                     U5RXPPS         equ	634	;# 
  4778   00027B                     U5CTSPPS        equ	635	;# 
  4779   000286                     RC4I2C          equ	646	;# 
  4780   000287                     RC3I2C          equ	647	;# 
  4781   000288                     RB2I2C          equ	648	;# 
  4782   000289                     RB1I2C          equ	649	;# 
  4783   00028B                     I2C1RXB         equ	651	;# 
  4784   00028C                     I2C1TXB         equ	652	;# 
  4785   00028D                     I2C1CNT         equ	653	;# 
  4786   00028E                     I2C1ADB0        equ	654	;# 
  4787   00028F                     I2C1ADB1        equ	655	;# 
  4788   000290                     I2C1ADR0        equ	656	;# 
  4789   000291                     I2C1ADR1        equ	657	;# 
  4790   000292                     I2C1ADR2        equ	658	;# 
  4791   000293                     I2C1ADR3        equ	659	;# 
  4792   000294                     I2C1CON0        equ	660	;# 
  4793   000295                     I2C1CON1        equ	661	;# 
  4794   000296                     I2C1CON2        equ	662	;# 
  4795   000297                     I2C1ERR         equ	663	;# 
  4796   000298                     I2C1STAT0       equ	664	;# 
  4797   000299                     I2C1STAT1       equ	665	;# 
  4798   00029A                     I2C1PIR         equ	666	;# 
  4799   00029B                     I2C1PIE         equ	667	;# 
  4800   00029C                     I2C1CLK         equ	668	;# 
  4801   00029D                     I2C1BTO         equ	669	;# 
  4802   0002A1                     U1RXB           equ	673	;# 
  4803   0002A1                     U1RXBL          equ	673	;# 
  4804   0002A2                     U1RXCHK         equ	674	;# 
  4805   0002A3                     U1TXB           equ	675	;# 
  4806   0002A3                     U1TXBL          equ	675	;# 
  4807   0002A4                     U1TXCHK         equ	676	;# 
  4808   0002A5                     U1P1            equ	677	;# 
  4809   0002A5                     U1P1L           equ	677	;# 
  4810   0002A6                     U1P1H           equ	678	;# 
  4811   0002A7                     U1P2            equ	679	;# 
  4812   0002A7                     U1P2L           equ	679	;# 
  4813   0002A8                     U1P2H           equ	680	;# 
  4814   0002A9                     U1P3            equ	681	;# 
  4815   0002A9                     U1P3L           equ	681	;# 
  4816   0002AA                     U1P3H           equ	682	;# 
  4817   0002AB                     U1CON0          equ	683	;# 
  4818   0002AC                     U1CON1          equ	684	;# 
  4819   0002AD                     U1CON2          equ	685	;# 
  4820   0002AE                     U1BRG           equ	686	;# 
  4821   0002AE                     U1BRGL          equ	686	;# 
  4822   0002AF                     U1BRGH          equ	687	;# 
  4823   0002B0                     U1FIFO          equ	688	;# 
  4824   0002B1                     U1UIR           equ	689	;# 
  4825   0002B2                     U1ERRIR         equ	690	;# 
  4826   0002B3                     U1ERRIE         equ	691	;# 
  4827   0002B4                     U2RXB           equ	692	;# 
  4828   0002B4                     U2RXBL          equ	692	;# 
  4829   0002B6                     U2TXB           equ	694	;# 
  4830   0002B6                     U2TXBL          equ	694	;# 
  4831   0002B8                     U2P1            equ	696	;# 
  4832   0002B8                     U2P1L           equ	696	;# 
  4833   0002BA                     U2P2            equ	698	;# 
  4834   0002BA                     U2P2L           equ	698	;# 
  4835   0002BC                     U2P3            equ	700	;# 
  4836   0002BC                     U2P3L           equ	700	;# 
  4837   0002BE                     U2CON0          equ	702	;# 
  4838   0002BF                     U2CON1          equ	703	;# 
  4839   0002C0                     U2CON2          equ	704	;# 
  4840   0002C1                     U2BRG           equ	705	;# 
  4841   0002C1                     U2BRGL          equ	705	;# 
  4842   0002C2                     U2BRGH          equ	706	;# 
  4843   0002C3                     U2FIFO          equ	707	;# 
  4844   0002C4                     U2UIR           equ	708	;# 
  4845   0002C5                     U2ERRIR         equ	709	;# 
  4846   0002C6                     U2ERRIE         equ	710	;# 
  4847   0002C7                     U3RXB           equ	711	;# 
  4848   0002C7                     U3RXBL          equ	711	;# 
  4849   0002C9                     U3TXB           equ	713	;# 
  4850   0002C9                     U3TXBL          equ	713	;# 
  4851   0002CB                     U3P1            equ	715	;# 
  4852   0002CB                     U3P1L           equ	715	;# 
  4853   0002CD                     U3P2            equ	717	;# 
  4854   0002CD                     U3P2L           equ	717	;# 
  4855   0002CF                     U3P3            equ	719	;# 
  4856   0002CF                     U3P3L           equ	719	;# 
  4857   0002D1                     U3CON0          equ	721	;# 
  4858   0002D2                     U3CON1          equ	722	;# 
  4859   0002D3                     U3CON2          equ	723	;# 
  4860   0002D4                     U3BRG           equ	724	;# 
  4861   0002D4                     U3BRGL          equ	724	;# 
  4862   0002D5                     U3BRGH          equ	725	;# 
  4863   0002D6                     U3FIFO          equ	726	;# 
  4864   0002D7                     U3UIR           equ	727	;# 
  4865   0002D8                     U3ERRIR         equ	728	;# 
  4866   0002D9                     U3ERRIE         equ	729	;# 
  4867   0002DA                     U4RXB           equ	730	;# 
  4868   0002DA                     U4RXBL          equ	730	;# 
  4869   0002DC                     U4TXB           equ	732	;# 
  4870   0002DC                     U4TXBL          equ	732	;# 
  4871   0002DE                     U4P1            equ	734	;# 
  4872   0002DE                     U4P1L           equ	734	;# 
  4873   0002E0                     U4P2            equ	736	;# 
  4874   0002E0                     U4P2L           equ	736	;# 
  4875   0002E2                     U4P3            equ	738	;# 
  4876   0002E2                     U4P3L           equ	738	;# 
  4877   0002E4                     U4CON0          equ	740	;# 
  4878   0002E5                     U4CON1          equ	741	;# 
  4879   0002E6                     U4CON2          equ	742	;# 
  4880   0002E7                     U4BRG           equ	743	;# 
  4881   0002E7                     U4BRGL          equ	743	;# 
  4882   0002E8                     U4BRGH          equ	744	;# 
  4883   0002E9                     U4FIFO          equ	745	;# 
  4884   0002EA                     U4UIR           equ	746	;# 
  4885   0002EB                     U4ERRIR         equ	747	;# 
  4886   0002EC                     U4ERRIE         equ	748	;# 
  4887   0002ED                     U5RXB           equ	749	;# 
  4888   0002ED                     U5RXBL          equ	749	;# 
  4889   0002EF                     U5TXB           equ	751	;# 
  4890   0002EF                     U5TXBL          equ	751	;# 
  4891   0002F1                     U5P1            equ	753	;# 
  4892   0002F1                     U5P1L           equ	753	;# 
  4893   0002F3                     U5P2            equ	755	;# 
  4894   0002F3                     U5P2L           equ	755	;# 
  4895   0002F5                     U5P3            equ	757	;# 
  4896   0002F5                     U5P3L           equ	757	;# 
  4897   0002F7                     U5CON0          equ	759	;# 
  4898   0002F8                     U5CON1          equ	760	;# 
  4899   0002F9                     U5CON2          equ	761	;# 
  4900   0002FA                     U5BRG           equ	762	;# 
  4901   0002FA                     U5BRGL          equ	762	;# 
  4902   0002FB                     U5BRGH          equ	763	;# 
  4903   0002FC                     U5FIFO          equ	764	;# 
  4904   0002FD                     U5UIR           equ	765	;# 
  4905   0002FE                     U5ERRIR         equ	766	;# 
  4906   0002FF                     U5ERRIE         equ	767	;# 
  4907   000300                     SMT1TMR         equ	768	;# 
  4908   000300                     SMT1TMRL        equ	768	;# 
  4909   000301                     SMT1TMRH        equ	769	;# 
  4910   000302                     SMT1TMRU        equ	770	;# 
  4911   000303                     SMT1CPR         equ	771	;# 
  4912   000303                     SMT1CPRL        equ	771	;# 
  4913   000304                     SMT1CPRH        equ	772	;# 
  4914   000305                     SMT1CPRU        equ	773	;# 
  4915   000306                     SMT1CPW         equ	774	;# 
  4916   000306                     SMT1CPWL        equ	774	;# 
  4917   000307                     SMT1CPWH        equ	775	;# 
  4918   000308                     SMT1CPWU        equ	776	;# 
  4919   000309                     SMT1PR          equ	777	;# 
  4920   000309                     SMT1PRL         equ	777	;# 
  4921   00030A                     SMT1PRH         equ	778	;# 
  4922   00030B                     SMT1PRU         equ	779	;# 
  4923   00030C                     SMT1CON0        equ	780	;# 
  4924   00030D                     SMT1CON1        equ	781	;# 
  4925   00030E                     SMT1STAT        equ	782	;# 
  4926   00030F                     SMT1CLK         equ	783	;# 
  4927   000310                     SMT1SIG         equ	784	;# 
  4928   000311                     SMT1WIN         equ	785	;# 
  4929   000318                     TMR0L           equ	792	;# 
  4930   000318                     TMR0            equ	792	;# 
  4931   000319                     TMR0H           equ	793	;# 
  4932   000319                     PR0             equ	793	;# 
  4933   00031A                     T0CON0          equ	794	;# 
  4934   00031B                     T0CON1          equ	795	;# 
  4935   00031C                     TMR1            equ	796	;# 
  4936   00031C                     TMR1L           equ	796	;# 
  4937   00031D                     TMR1H           equ	797	;# 
  4938   00031E                     T1CON           equ	798	;# 
  4939   00031E                     TMR1CON         equ	798	;# 
  4940   00031F                     T1GCON          equ	799	;# 
  4941   00031F                     TMR1GCON        equ	799	;# 
  4942   000320                     T1GATE          equ	800	;# 
  4943   000320                     TMR1GATE        equ	800	;# 
  4944   000321                     T1CLK           equ	801	;# 
  4945   000321                     TMR1CLK         equ	801	;# 
  4946   000321                     PR1             equ	801	;# 
  4947   000322                     T2TMR           equ	802	;# 
  4948   000322                     TMR2            equ	802	;# 
  4949   000323                     T2PR            equ	803	;# 
  4950   000323                     PR2             equ	803	;# 
  4951   000324                     T2CON           equ	804	;# 
  4952   000325                     T2HLT           equ	805	;# 
  4953   000326                     T2CLKCON        equ	806	;# 
  4954   000326                     T2CLK           equ	806	;# 
  4955   000327                     T2RST           equ	807	;# 
  4956   000328                     TMR3            equ	808	;# 
  4957   000328                     TMR3L           equ	808	;# 
  4958   000329                     TMR3H           equ	809	;# 
  4959   00032A                     T3CON           equ	810	;# 
  4960   00032A                     TMR3CON         equ	810	;# 
  4961   00032B                     T3GCON          equ	811	;# 
  4962   00032B                     TMR3GCON        equ	811	;# 
  4963   00032C                     T3GATE          equ	812	;# 
  4964   00032C                     TMR3GATE        equ	812	;# 
  4965   00032D                     T3CLK           equ	813	;# 
  4966   00032D                     TMR3CLK         equ	813	;# 
  4967   00032D                     PR3             equ	813	;# 
  4968   00032E                     T4TMR           equ	814	;# 
  4969   00032E                     TMR4            equ	814	;# 
  4970   00032F                     T4PR            equ	815	;# 
  4971   00032F                     PR4             equ	815	;# 
  4972   000330                     T4CON           equ	816	;# 
  4973   000331                     T4HLT           equ	817	;# 
  4974   000332                     T4CLKCON        equ	818	;# 
  4975   000332                     T4CLK           equ	818	;# 
  4976   000333                     T4RST           equ	819	;# 
  4977   000334                     TMR5            equ	820	;# 
  4978   000334                     TMR5L           equ	820	;# 
  4979   000335                     TMR5H           equ	821	;# 
  4980   000336                     T5CON           equ	822	;# 
  4981   000336                     TMR5CON         equ	822	;# 
  4982   000337                     T5GCON          equ	823	;# 
  4983   000337                     TMR5GCON        equ	823	;# 
  4984   000338                     T5GATE          equ	824	;# 
  4985   000338                     TMR5GATE        equ	824	;# 
  4986   000339                     T5CLK           equ	825	;# 
  4987   000339                     TMR5CLK         equ	825	;# 
  4988   000339                     PR5             equ	825	;# 
  4989   00033A                     T6TMR           equ	826	;# 
  4990   00033A                     TMR6            equ	826	;# 
  4991   00033B                     T6PR            equ	827	;# 
  4992   00033B                     PR6             equ	827	;# 
  4993   00033C                     T6CON           equ	828	;# 
  4994   00033D                     T6HLT           equ	829	;# 
  4995   00033E                     T6CLKCON        equ	830	;# 
  4996   00033E                     T6CLK           equ	830	;# 
  4997   00033F                     T6RST           equ	831	;# 
  4998   000340                     CCPR1           equ	832	;# 
  4999   000340                     CCPR1L          equ	832	;# 
  5000   000341                     CCPR1H          equ	833	;# 
  5001   000342                     CCP1CON         equ	834	;# 
  5002   000343                     CCP1CAP         equ	835	;# 
  5003   000344                     CCPR2           equ	836	;# 
  5004   000344                     CCPR2L          equ	836	;# 
  5005   000345                     CCPR2H          equ	837	;# 
  5006   000346                     CCP2CON         equ	838	;# 
  5007   000347                     CCP2CAP         equ	839	;# 
  5008   000348                     CCPR3           equ	840	;# 
  5009   000348                     CCPR3L          equ	840	;# 
  5010   000349                     CCPR3H          equ	841	;# 
  5011   00034A                     CCP3CON         equ	842	;# 
  5012   00034B                     CCP3CAP         equ	843	;# 
  5013   00034C                     CCPTMRS0        equ	844	;# 
  5014   00034F                     CRCDATA         equ	847	;# 
  5015   00034F                     CRCDATL         equ	847	;# 
  5016   000350                     CRCDATH         equ	848	;# 
  5017   000351                     CRCACC          equ	849	;# 
  5018   000351                     CRCACCL         equ	849	;# 
  5019   000352                     CRCACCH         equ	850	;# 
  5020   000353                     CRCSHFT         equ	851	;# 
  5021   000353                     CRCSHIFTL       equ	851	;# 
  5022   000354                     CRCSHIFTH       equ	852	;# 
  5023   000355                     CRCXOR          equ	853	;# 
  5024   000355                     CRCXORL         equ	853	;# 
  5025   000356                     CRCXORH         equ	854	;# 
  5026   000357                     CRCCON0         equ	855	;# 
  5027   000358                     CRCCON1         equ	856	;# 
  5028   00035A                     SCANLADR        equ	858	;# 
  5029   00035A                     SCANLADRL       equ	858	;# 
  5030   00035B                     SCANLADRH       equ	859	;# 
  5031   00035C                     SCANLADRU       equ	860	;# 
  5032   00035D                     SCANHADR        equ	861	;# 
  5033   00035D                     SCANHADRL       equ	861	;# 
  5034   00035E                     SCANHADRH       equ	862	;# 
  5035   00035F                     SCANHADRU       equ	863	;# 
  5036   000360                     SCANCON0        equ	864	;# 
  5037   000361                     SCANTRIG        equ	865	;# 
  5038   000362                     IPR0            equ	866	;# 
  5039   000363                     IPR1            equ	867	;# 
  5040   000364                     IPR2            equ	868	;# 
  5041   000365                     IPR3            equ	869	;# 
  5042   000366                     IPR4            equ	870	;# 
  5043   000367                     IPR5            equ	871	;# 
  5044   000368                     IPR6            equ	872	;# 
  5045   000369                     IPR7            equ	873	;# 
  5046   00036A                     IPR8            equ	874	;# 
  5047   00036B                     IPR9            equ	875	;# 
  5048   00036C                     IPR10           equ	876	;# 
  5049   00036D                     IPR11           equ	877	;# 
  5050   00036E                     IPR12           equ	878	;# 
  5051   00036F                     IPR13           equ	879	;# 
  5052   000370                     IPR14           equ	880	;# 
  5053   000371                     IPR15           equ	881	;# 
  5054   000373                     STATUS_CSHAD    equ	883	;# 
  5055   000374                     WREG_CSHAD      equ	884	;# 
  5056   000375                     BSR_CSHAD       equ	885	;# 
  5057   000376                     SHADCON         equ	886	;# 
  5058   000377                     STATUS_SHAD     equ	887	;# 
  5059   000378                     WREG_SHAD       equ	888	;# 
  5060   000379                     BSR_SHAD        equ	889	;# 
  5061   00037A                     PCLATH_SHAD     equ	890	;# 
  5062   00037B                     PCLATU_SHAD     equ	891	;# 
  5063   00037C                     FSR0SH          equ	892	;# 
  5064   00037C                     FSR0L_SHAD      equ	892	;# 
  5065   00037D                     FSR0H_SHAD      equ	893	;# 
  5066   00037E                     FSR1SH          equ	894	;# 
  5067   00037E                     FSR1L_SHAD      equ	894	;# 
  5068   00037F                     FSR1H_SHAD      equ	895	;# 
  5069   000380                     FSR2SH          equ	896	;# 
  5070   000380                     FSR2L_SHAD      equ	896	;# 
  5071   000381                     FSR2H_SHAD      equ	897	;# 
  5072   000382                     PRODSH          equ	898	;# 
  5073   000382                     PRODL_SHAD      equ	898	;# 
  5074   000383                     PRODH_SHAD      equ	899	;# 
  5075   0003BC                     CWG1CLK         equ	956	;# 
  5076   0003BC                     CWG1CLKCON      equ	956	;# 
  5077   0003BD                     CWG1ISM         equ	957	;# 
  5078   0003BD                     CWG1DAT         equ	957	;# 
  5079   0003BE                     CWG1DBR         equ	958	;# 
  5080   0003BF                     CWG1DBF         equ	959	;# 
  5081   0003C0                     CWG1CON0        equ	960	;# 
  5082   0003C1                     CWG1CON1        equ	961	;# 
  5083   0003C2                     CWG1AS0         equ	962	;# 
  5084   0003C3                     CWG1AS1         equ	963	;# 
  5085   0003C4                     CWG1STR         equ	964	;# 
  5086   0003C5                     CWG2CLK         equ	965	;# 
  5087   0003C5                     CWG2CLKCON      equ	965	;# 
  5088   0003C6                     CWG2ISM         equ	966	;# 
  5089   0003C6                     CWG2DAT         equ	966	;# 
  5090   0003C7                     CWG2DBR         equ	967	;# 
  5091   0003C8                     CWG2DBF         equ	968	;# 
  5092   0003C9                     CWG2CON0        equ	969	;# 
  5093   0003CA                     CWG2CON1        equ	970	;# 
  5094   0003CB                     CWG2AS0         equ	971	;# 
  5095   0003CC                     CWG2AS1         equ	972	;# 
  5096   0003CD                     CWG2STR         equ	973	;# 
  5097   0003CE                     CWG3CLK         equ	974	;# 
  5098   0003CE                     CWG3CLKCON      equ	974	;# 
  5099   0003CF                     CWG3ISM         equ	975	;# 
  5100   0003CF                     CWG3DAT         equ	975	;# 
  5101   0003D0                     CWG3DBR         equ	976	;# 
  5102   0003D1                     CWG3DBF         equ	977	;# 
  5103   0003D2                     CWG3CON0        equ	978	;# 
  5104   0003D3                     CWG3CON1        equ	979	;# 
  5105   0003D4                     CWG3AS0         equ	980	;# 
  5106   0003D5                     CWG3AS1         equ	981	;# 
  5107   0003D6                     CWG3STR         equ	982	;# 
  5108   0003D7                     FVRCON          equ	983	;# 
  5109   0003D8                     ADCPCON         equ	984	;# 
  5110   0003D8                     ADCP            equ	984	;# 
  5111   0003D9                     ADLTH           equ	985	;# 
  5112   0003D9                     ADLTHL          equ	985	;# 
  5113   0003DA                     ADLTHH          equ	986	;# 
  5114   0003DB                     ADUTH           equ	987	;# 
  5115   0003DB                     ADUTHL          equ	987	;# 
  5116   0003DC                     ADUTHH          equ	988	;# 
  5117   0003DD                     ADERR           equ	989	;# 
  5118   0003DD                     ADERRL          equ	989	;# 
  5119   0003DE                     ADERRH          equ	990	;# 
  5120   0003DF                     ADSTPT          equ	991	;# 
  5121   0003DF                     ADSTPTL         equ	991	;# 
  5122   0003E0                     ADSTPTH         equ	992	;# 
  5123   0003E1                     ADFLTR          equ	993	;# 
  5124   0003E1                     ADFLTRL         equ	993	;# 
  5125   0003E2                     ADFLTRH         equ	994	;# 
  5126   0003E3                     ADACC           equ	995	;# 
  5127   0003E3                     ADACCL          equ	995	;# 
  5128   0003E4                     ADACCH          equ	996	;# 
  5129   0003E5                     ADACCU          equ	997	;# 
  5130   0003E6                     ADCNT           equ	998	;# 
  5131   0003E7                     ADRPT           equ	999	;# 
  5132   0003E8                     ADPREV          equ	1000	;# 
  5133   0003E8                     ADPREVL         equ	1000	;# 
  5134   0003E9                     ADPREVH         equ	1001	;# 
  5135   0003EA                     ADRES           equ	1002	;# 
  5136   0003EA                     ADRESL          equ	1002	;# 
  5137   0003EB                     ADRESH          equ	1003	;# 
  5138   0003EC                     ADPCH           equ	1004	;# 
  5139   0003EE                     ADACQ           equ	1006	;# 
  5140   0003EE                     ADACQL          equ	1006	;# 
  5141   0003EF                     ADACQH          equ	1007	;# 
  5142   0003F0                     ADCAP           equ	1008	;# 
  5143   0003F1                     ADPRE           equ	1009	;# 
  5144   0003F1                     ADPREL          equ	1009	;# 
  5145   0003F2                     ADPREH          equ	1010	;# 
  5146   0003F3                     ADCON0          equ	1011	;# 
  5147   0003F4                     ADCON1          equ	1012	;# 
  5148   0003F5                     ADCON2          equ	1013	;# 
  5149   0003F6                     ADCON3          equ	1014	;# 
  5150   0003F7                     ADSTAT          equ	1015	;# 
  5151   0003F8                     ADREF           equ	1016	;# 
  5152   0003F9                     ADACT           equ	1017	;# 
  5153   0003FA                     ADCLK           equ	1018	;# 
  5154   000400                     ANSELA          equ	1024	;# 
  5155   000401                     WPUA            equ	1025	;# 
  5156   000402                     ODCONA          equ	1026	;# 
  5157   000403                     SLRCONA         equ	1027	;# 
  5158   000404                     INLVLA          equ	1028	;# 
  5159   000405                     IOCAP           equ	1029	;# 
  5160   000406                     IOCAN           equ	1030	;# 
  5161   000407                     IOCAF           equ	1031	;# 
  5162   000408                     ANSELB          equ	1032	;# 
  5163   000409                     WPUB            equ	1033	;# 
  5164   00040A                     ODCONB          equ	1034	;# 
  5165   00040B                     SLRCONB         equ	1035	;# 
  5166   00040C                     INLVLB          equ	1036	;# 
  5167   00040D                     IOCBP           equ	1037	;# 
  5168   00040E                     IOCBN           equ	1038	;# 
  5169   00040F                     IOCBF           equ	1039	;# 
  5170   000410                     ANSELC          equ	1040	;# 
  5171   000411                     WPUC            equ	1041	;# 
  5172   000412                     ODCONC          equ	1042	;# 
  5173   000413                     SLRCONC         equ	1043	;# 
  5174   000414                     INLVLC          equ	1044	;# 
  5175   000415                     IOCCP           equ	1045	;# 
  5176   000416                     IOCCN           equ	1046	;# 
  5177   000417                     IOCCF           equ	1047	;# 
  5178   000418                     ANSELD          equ	1048	;# 
  5179   000419                     WPUD            equ	1049	;# 
  5180   00041A                     ODCOND          equ	1050	;# 
  5181   00041B                     SLRCOND         equ	1051	;# 
  5182   00041C                     INLVLD          equ	1052	;# 
  5183   000420                     ANSELE          equ	1056	;# 
  5184   000421                     WPUE            equ	1057	;# 
  5185   000422                     ODCONE          equ	1058	;# 
  5186   000423                     SLRCONE         equ	1059	;# 
  5187   000424                     INLVLE          equ	1060	;# 
  5188   000425                     IOCEP           equ	1061	;# 
  5189   000426                     IOCEN           equ	1062	;# 
  5190   000427                     IOCEF           equ	1063	;# 
  5191   000428                     ANSELF          equ	1064	;# 
  5192   000429                     WPUF            equ	1065	;# 
  5193   00042A                     ODCONF          equ	1066	;# 
  5194   00042B                     SLRCONF         equ	1067	;# 
  5195   00042C                     INLVLF          equ	1068	;# 
  5196   000440                     NCO1ACC         equ	1088	;# 
  5197   000440                     NCO1ACCL        equ	1088	;# 
  5198   000441                     NCO1ACCH        equ	1089	;# 
  5199   000442                     NCO1ACCU        equ	1090	;# 
  5200   000443                     NCO1INC         equ	1091	;# 
  5201   000443                     NCO1INCL        equ	1091	;# 
  5202   000444                     NCO1INCH        equ	1092	;# 
  5203   000445                     NCO1INCU        equ	1093	;# 
  5204   000446                     NCO1CON         equ	1094	;# 
  5205   000447                     NCO1CLK         equ	1095	;# 
  5206   000448                     NCO2ACC         equ	1096	;# 
  5207   000448                     NCO2ACCL        equ	1096	;# 
  5208   000449                     NCO2ACCH        equ	1097	;# 
  5209   00044A                     NCO2ACCU        equ	1098	;# 
  5210   00044B                     NCO2INC         equ	1099	;# 
  5211   00044B                     NCO2INCL        equ	1099	;# 
  5212   00044C                     NCO2INCH        equ	1100	;# 
  5213   00044D                     NCO2INCU        equ	1101	;# 
  5214   00044E                     NCO2CON         equ	1102	;# 
  5215   00044F                     NCO2CLK         equ	1103	;# 
  5216   000450                     NCO3ACC         equ	1104	;# 
  5217   000450                     NCO3ACCL        equ	1104	;# 
  5218   000451                     NCO3ACCH        equ	1105	;# 
  5219   000452                     NCO3ACCU        equ	1106	;# 
  5220   000453                     NCO3INC         equ	1107	;# 
  5221   000453                     NCO3INCL        equ	1107	;# 
  5222   000454                     NCO3INCH        equ	1108	;# 
  5223   000455                     NCO3INCU        equ	1109	;# 
  5224   000456                     NCO3CON         equ	1110	;# 
  5225   000457                     NCO3CLK         equ	1111	;# 
  5226   000459                     IVTLOCK         equ	1113	;# 
  5227   00045A                     IVTAD           equ	1114	;# 
  5228   00045A                     IVTADL          equ	1114	;# 
  5229   00045B                     IVTADH          equ	1115	;# 
  5230   00045C                     IVTADU          equ	1116	;# 
  5231   00045D                     IVTBASE         equ	1117	;# 
  5232   00045D                     IVTBASEL        equ	1117	;# 
  5233   00045E                     IVTBASEH        equ	1118	;# 
  5234   00045F                     IVTBASEU        equ	1119	;# 
  5235   000460                     PWM1ERS         equ	1120	;# 
  5236   000461                     PWM1CLK         equ	1121	;# 
  5237   000462                     PWM1LDS         equ	1122	;# 
  5238   000463                     PWM1PR          equ	1123	;# 
  5239   000463                     PWM1PRL         equ	1123	;# 
  5240   000464                     PWM1PRH         equ	1124	;# 
  5241   000465                     PWM1CPRE        equ	1125	;# 
  5242   000466                     PWM1PIPOS       equ	1126	;# 
  5243   000467                     PWM1GIR         equ	1127	;# 
  5244   000468                     PWM1GIE         equ	1128	;# 
  5245   000469                     PWM1CON         equ	1129	;# 
  5246   00046A                     PWM1S1CFG       equ	1130	;# 
  5247   00046B                     PWM1S1P1        equ	1131	;# 
  5248   00046B                     PWM1S1P1L       equ	1131	;# 
  5249   00046C                     PWM1S1P1H       equ	1132	;# 
  5250   00046D                     PWM1S1P2        equ	1133	;# 
  5251   00046D                     PWM1S1P2L       equ	1133	;# 
  5252   00046E                     PWM1S1P2H       equ	1134	;# 
  5253   00046F                     PWM2ERS         equ	1135	;# 
  5254   000470                     PWM2CLK         equ	1136	;# 
  5255   000471                     PWM2LDS         equ	1137	;# 
  5256   000472                     PWM2PR          equ	1138	;# 
  5257   000472                     PWM2PRL         equ	1138	;# 
  5258   000473                     PWM2PRH         equ	1139	;# 
  5259   000474                     PWM2CPRE        equ	1140	;# 
  5260   000475                     PWM2PIPOS       equ	1141	;# 
  5261   000476                     PWM2GIR         equ	1142	;# 
  5262   000477                     PWM2GIE         equ	1143	;# 
  5263   000478                     PWM2CON         equ	1144	;# 
  5264   000479                     PWM2S1CFG       equ	1145	;# 
  5265   00047A                     PWM2S1P1        equ	1146	;# 
  5266   00047A                     PWM2S1P1L       equ	1146	;# 
  5267   00047B                     PWM2S1P1H       equ	1147	;# 
  5268   00047C                     PWM2S1P2        equ	1148	;# 
  5269   00047C                     PWM2S1P2L       equ	1148	;# 
  5270   00047D                     PWM2S1P2H       equ	1149	;# 
  5271   00047E                     PWM3ERS         equ	1150	;# 
  5272   00047F                     PWM3CLK         equ	1151	;# 
  5273   000480                     PWM3LDS         equ	1152	;# 
  5274   000481                     PWM3PR          equ	1153	;# 
  5275   000481                     PWM3PRL         equ	1153	;# 
  5276   000482                     PWM3PRH         equ	1154	;# 
  5277   000483                     PWM3CPRE        equ	1155	;# 
  5278   000484                     PWM3PIPOS       equ	1156	;# 
  5279   000485                     PWM3GIR         equ	1157	;# 
  5280   000486                     PWM3GIE         equ	1158	;# 
  5281   000487                     PWM3CON         equ	1159	;# 
  5282   000488                     PWM3S1CFG       equ	1160	;# 
  5283   000489                     PWM3S1P1        equ	1161	;# 
  5284   000489                     PWM3S1P1L       equ	1161	;# 
  5285   00048A                     PWM3S1P1H       equ	1162	;# 
  5286   00048B                     PWM3S1P2        equ	1163	;# 
  5287   00048B                     PWM3S1P2L       equ	1163	;# 
  5288   00048C                     PWM3S1P2H       equ	1164	;# 
  5289   00049C                     PWMLOAD         equ	1180	;# 
  5290   00049D                     PWMEN           equ	1181	;# 
  5291   00049E                     PIE0            equ	1182	;# 
  5292   00049F                     PIE1            equ	1183	;# 
  5293   0004A0                     PIE2            equ	1184	;# 
  5294   0004A1                     PIE3            equ	1185	;# 
  5295   0004A2                     PIE4            equ	1186	;# 
  5296   0004A3                     PIE5            equ	1187	;# 
  5297   0004A4                     PIE6            equ	1188	;# 
  5298   0004A5                     PIE7            equ	1189	;# 
  5299   0004A6                     PIE8            equ	1190	;# 
  5300   0004A7                     PIE9            equ	1191	;# 
  5301   0004A8                     PIE10           equ	1192	;# 
  5302   0004A9                     PIE11           equ	1193	;# 
  5303   0004AA                     PIE12           equ	1194	;# 
  5304   0004AB                     PIE13           equ	1195	;# 
  5305   0004AC                     PIE14           equ	1196	;# 
  5306   0004AD                     PIE15           equ	1197	;# 
  5307   0004AE                     PIR0            equ	1198	;# 
  5308   0004AF                     PIR1            equ	1199	;# 
  5309   0004B0                     PIR2            equ	1200	;# 
  5310   0004B1                     PIR3            equ	1201	;# 
  5311   0004B2                     PIR4            equ	1202	;# 
  5312   0004B3                     PIR5            equ	1203	;# 
  5313   0004B4                     PIR6            equ	1204	;# 
  5314   0004B5                     PIR7            equ	1205	;# 
  5315   0004B6                     PIR8            equ	1206	;# 
  5316   0004B7                     PIR9            equ	1207	;# 
  5317   0004B8                     PIR10           equ	1208	;# 
  5318   0004B9                     PIR11           equ	1209	;# 
  5319   0004BA                     PIR12           equ	1210	;# 
  5320   0004BB                     PIR13           equ	1211	;# 
  5321   0004BC                     PIR14           equ	1212	;# 
  5322   0004BD                     PIR15           equ	1213	;# 
  5323   0004BE                     LATA            equ	1214	;# 
  5324   0004BF                     LATB            equ	1215	;# 
  5325   0004C0                     LATC            equ	1216	;# 
  5326   0004C1                     LATD            equ	1217	;# 
  5327   0004C2                     LATE            equ	1218	;# 
  5328   0004C3                     LATF            equ	1219	;# 
  5329   0004C6                     TRISA           equ	1222	;# 
  5330   0004C7                     TRISB           equ	1223	;# 
  5331   0004C8                     TRISC           equ	1224	;# 
  5332   0004C9                     TRISD           equ	1225	;# 
  5333   0004CA                     TRISE           equ	1226	;# 
  5334   0004CB                     TRISF           equ	1227	;# 
  5335   0004CE                     PORTA           equ	1230	;# 
  5336   0004CF                     PORTB           equ	1231	;# 
  5337   0004D0                     PORTC           equ	1232	;# 
  5338   0004D1                     PORTD           equ	1233	;# 
  5339   0004D2                     PORTE           equ	1234	;# 
  5340   0004D3                     PORTF           equ	1235	;# 
  5341   0004D6                     INTCON0         equ	1238	;# 
  5342   0004D7                     INTCON1         equ	1239	;# 
  5343   0004D8                     STATUS          equ	1240	;# 
  5344   0004D9                     FSR2            equ	1241	;# 
  5345   0004D9                     FSR2L           equ	1241	;# 
  5346   0004DA                     FSR2H           equ	1242	;# 
  5347   0004DB                     PLUSW2          equ	1243	;# 
  5348   0004DC                     PREINC2         equ	1244	;# 
  5349   0004DD                     POSTDEC2        equ	1245	;# 
  5350   0004DE                     POSTINC2        equ	1246	;# 
  5351   0004DF                     INDF2           equ	1247	;# 
  5352   0004E0                     BSR             equ	1248	;# 
  5353   0004E1                     FSR1            equ	1249	;# 
  5354   0004E1                     FSR1L           equ	1249	;# 
  5355   0004E2                     FSR1H           equ	1250	;# 
  5356   0004E3                     PLUSW1          equ	1251	;# 
  5357   0004E4                     PREINC1         equ	1252	;# 
  5358   0004E5                     POSTDEC1        equ	1253	;# 
  5359   0004E6                     POSTINC1        equ	1254	;# 
  5360   0004E7                     INDF1           equ	1255	;# 
  5361   0004E8                     WREG            equ	1256	;# 
  5362   0004E9                     FSR0            equ	1257	;# 
  5363   0004E9                     FSR0L           equ	1257	;# 
  5364   0004EA                     FSR0H           equ	1258	;# 
  5365   0004EB                     PLUSW0          equ	1259	;# 
  5366   0004EC                     PREINC0         equ	1260	;# 
  5367   0004ED                     POSTDEC0        equ	1261	;# 
  5368   0004EE                     POSTINC0        equ	1262	;# 
  5369   0004EF                     INDF0           equ	1263	;# 
  5370   0004F0                     PCON0           equ	1264	;# 
  5371   0004F1                     PCON1           equ	1265	;# 
  5372   0004F2                     CPUDOZE         equ	1266	;# 
  5373   0004F3                     PROD            equ	1267	;# 
  5374   0004F3                     PRODL           equ	1267	;# 
  5375   0004F4                     PRODH           equ	1268	;# 
  5376   0004F5                     TABLAT          equ	1269	;# 
  5377   0004F6                     TBLPTR          equ	1270	;# 
  5378   0004F6                     TBLPTRL         equ	1270	;# 
  5379   0004F7                     TBLPTRH         equ	1271	;# 
  5380   0004F8                     TBLPTRU         equ	1272	;# 
  5381   0004F9                     PCLAT           equ	1273	;# 
  5382   0004F9                     PCL             equ	1273	;# 
  5383   0004FA                     PCLATH          equ	1274	;# 
  5384   0004FB                     PCLATU          equ	1275	;# 
  5385   0004FC                     STKPTR          equ	1276	;# 
  5386   0004FD                     TOS             equ	1277	;# 
  5387   0004FD                     TOSL            equ	1277	;# 
  5388   0004FE                     TOSH            equ	1278	;# 
  5389   0004FF                     TOSU            equ	1279	;# 
  5390   000039                     CLKRCON         equ	57	;# 
  5391   00003A                     CLKRCLK         equ	58	;# 
  5392   000040                     NVMCON0         equ	64	;# 
  5393   000041                     NVMCON1         equ	65	;# 
  5394   000042                     NVMLOCK         equ	66	;# 
  5395   000043                     NVMADR          equ	67	;# 
  5396   000043                     NVMADRL         equ	67	;# 
  5397   000044                     NVMADRH         equ	68	;# 
  5398   000045                     NVMADRU         equ	69	;# 
  5399   000046                     NVMDAT          equ	70	;# 
  5400   000046                     NVMDATL         equ	70	;# 
  5401   000047                     NVMDATH         equ	71	;# 
  5402   000048                     VREGCON         equ	72	;# 
  5403   000049                     BORCON          equ	73	;# 
  5404   00004A                     HLVDCON0        equ	74	;# 
  5405   00004B                     HLVDCON1        equ	75	;# 
  5406   00004C                     ZCDCON          equ	76	;# 
  5407   000060                     PMD0            equ	96	;# 
  5408   000061                     PMD1            equ	97	;# 
  5409   000063                     PMD3            equ	99	;# 
  5410   000064                     PMD4            equ	100	;# 
  5411   000065                     PMD5            equ	101	;# 
  5412   000066                     PMD6            equ	102	;# 
  5413   000067                     PMD7            equ	103	;# 
  5414   000068                     PMD8            equ	104	;# 
  5415   00006A                     MD1CON0         equ	106	;# 
  5416   00006B                     MD1CON1         equ	107	;# 
  5417   00006C                     MD1SRC          equ	108	;# 
  5418   00006D                     MD1CARL         equ	109	;# 
  5419   00006E                     MD1CARH         equ	110	;# 
  5420   00006F                     CMOUT           equ	111	;# 
  5421   000070                     CM1CON0         equ	112	;# 
  5422   000071                     CM1CON1         equ	113	;# 
  5423   000072                     CM1NCH          equ	114	;# 
  5424   000073                     CM1PCH          equ	115	;# 
  5425   000074                     CM2CON0         equ	116	;# 
  5426   000075                     CM2CON1         equ	117	;# 
  5427   000076                     CM2NCH          equ	118	;# 
  5428   000077                     CM2PCH          equ	119	;# 
  5429   000078                     WDTCON0         equ	120	;# 
  5430   000079                     WDTCON1         equ	121	;# 
  5431   00007A                     WDTPS           equ	122	;# 
  5432   00007A                     WDTPSL          equ	122	;# 
  5433   00007B                     WDTPSH          equ	123	;# 
  5434   00007C                     WDTTMR          equ	124	;# 
  5435   00007D                     DAC1DAT         equ	125	;# 
  5436   00007D                     DAC1DATL        equ	125	;# 
  5437   00007F                     DAC1CON         equ	127	;# 
  5438   000080                     SPI1RXB         equ	128	;# 
  5439   000081                     SPI1TXB         equ	129	;# 
  5440   000082                     SPI1TCNT        equ	130	;# 
  5441   000082                     SPI1TCNTL       equ	130	;# 
  5442   000083                     SPI1TCNTH       equ	131	;# 
  5443   000084                     SPI1CON0        equ	132	;# 
  5444   000085                     SPI1CON1        equ	133	;# 
  5445   000086                     SPI1CON2        equ	134	;# 
  5446   000087                     SPI1STATUS      equ	135	;# 
  5447   000088                     SPI1TWIDTH      equ	136	;# 
  5448   000089                     SPI1BAUD        equ	137	;# 
  5449   00008A                     SPI1INTF        equ	138	;# 
  5450   00008B                     SPI1INTE        equ	139	;# 
  5451   00008C                     SPI1CLK         equ	140	;# 
  5452   00008D                     SPI2RXB         equ	141	;# 
  5453   00008E                     SPI2TXB         equ	142	;# 
  5454   00008F                     SPI2TCNT        equ	143	;# 
  5455   00008F                     SPI2TCNTL       equ	143	;# 
  5456   000090                     SPI2TCNTH       equ	144	;# 
  5457   000091                     SPI2CON0        equ	145	;# 
  5458   000092                     SPI2CON1        equ	146	;# 
  5459   000093                     SPI2CON2        equ	147	;# 
  5460   000094                     SPI2STATUS      equ	148	;# 
  5461   000095                     SPI2TWIDTH      equ	149	;# 
  5462   000096                     SPI2BAUD        equ	150	;# 
  5463   000097                     SPI2INTF        equ	151	;# 
  5464   000098                     SPI2INTE        equ	152	;# 
  5465   000099                     SPI2CLK         equ	153	;# 
  5466   0000AC                     ACTCON          equ	172	;# 
  5467   0000AD                     OSCCON1         equ	173	;# 
  5468   0000AE                     OSCCON2         equ	174	;# 
  5469   0000AF                     OSCCON3         equ	175	;# 
  5470   0000B0                     OSCTUNE         equ	176	;# 
  5471   0000B1                     OSCFRQ          equ	177	;# 
  5472   0000B1                     OSCFREQ         equ	177	;# 
  5473   0000B2                     OSCSTAT         equ	178	;# 
  5474   0000B2                     OSCSTAT1        equ	178	;# 
  5475   0000B3                     OSCEN           equ	179	;# 
  5476   0000B4                     PRLOCK          equ	180	;# 
  5477   0000B5                     SCANPR          equ	181	;# 
  5478   0000B6                     DMA1PR          equ	182	;# 
  5479   0000B7                     DMA2PR          equ	183	;# 
  5480   0000B8                     DMA3PR          equ	184	;# 
  5481   0000B9                     DMA4PR          equ	185	;# 
  5482   0000BA                     DMA5PR          equ	186	;# 
  5483   0000BB                     DMA6PR          equ	187	;# 
  5484   0000BE                     MAINPR          equ	190	;# 
  5485   0000BF                     ISRPR           equ	191	;# 
  5486   0000D4                     CLCDATA         equ	212	;# 
  5487   0000D5                     CLCSELECT       equ	213	;# 
  5488   0000D6                     CLCnCON         equ	214	;# 
  5489   0000D7                     CLCnPOL         equ	215	;# 
  5490   0000D8                     CLCnSEL0        equ	216	;# 
  5491   0000D9                     CLCnSEL1        equ	217	;# 
  5492   0000DA                     CLCnSEL2        equ	218	;# 
  5493   0000DB                     CLCnSEL3        equ	219	;# 
  5494   0000DC                     CLCnGLS0        equ	220	;# 
  5495   0000DD                     CLCnGLS1        equ	221	;# 
  5496   0000DE                     CLCnGLS2        equ	222	;# 
  5497   0000DF                     CLCnGLS3        equ	223	;# 
  5498   0000E8                     DMASELECT       equ	232	;# 
  5499   0000E9                     DMAnBUF         equ	233	;# 
  5500   0000EA                     DMAnDCNT        equ	234	;# 
  5501   0000EA                     DMAnDCNTL       equ	234	;# 
  5502   0000EB                     DMAnDCNTH       equ	235	;# 
  5503   0000EC                     DMAnDPTR        equ	236	;# 
  5504   0000EC                     DMAnDPTRL       equ	236	;# 
  5505   0000ED                     DMAnDPTRH       equ	237	;# 
  5506   0000EE                     DMAnDSZ         equ	238	;# 
  5507   0000EE                     DMAnDSZL        equ	238	;# 
  5508   0000EF                     DMAnDSZH        equ	239	;# 
  5509   0000F0                     DMAnDSA         equ	240	;# 
  5510   0000F0                     DMAnDSAL        equ	240	;# 
  5511   0000F1                     DMAnDSAH        equ	241	;# 
  5512   0000F2                     DMAnSCNT        equ	242	;# 
  5513   0000F2                     DMAnSCNTL       equ	242	;# 
  5514   0000F3                     DMAnSCNTH       equ	243	;# 
  5515   0000F4                     DMAnSPTR        equ	244	;# 
  5516   0000F4                     DMAnSPTRL       equ	244	;# 
  5517   0000F5                     DMAnSPTRH       equ	245	;# 
  5518   0000F6                     DMAnSPTRU       equ	246	;# 
  5519   0000F7                     DMAnSSZ         equ	247	;# 
  5520   0000F7                     DMAnSSZL        equ	247	;# 
  5521   0000F8                     DMAnSSZH        equ	248	;# 
  5522   0000F9                     DMAnSSA         equ	249	;# 
  5523   0000F9                     DMAnSSAL        equ	249	;# 
  5524   0000FA                     DMAnSSAH        equ	250	;# 
  5525   0000FB                     DMAnSSAU        equ	251	;# 
  5526   0000FC                     DMAnCON0        equ	252	;# 
  5527   0000FD                     DMAnCON1        equ	253	;# 
  5528   0000FE                     DMAnAIRQ        equ	254	;# 
  5529   0000FF                     DMAnSIRQ        equ	255	;# 
  5530   000200                     PPSLOCK         equ	512	;# 
  5531   000201                     RA0PPS          equ	513	;# 
  5532   000202                     RA1PPS          equ	514	;# 
  5533   000203                     RA2PPS          equ	515	;# 
  5534   000204                     RA3PPS          equ	516	;# 
  5535   000205                     RA4PPS          equ	517	;# 
  5536   000206                     RA5PPS          equ	518	;# 
  5537   000207                     RA6PPS          equ	519	;# 
  5538   000208                     RA7PPS          equ	520	;# 
  5539   000209                     RB0PPS          equ	521	;# 
  5540   00020A                     RB1PPS          equ	522	;# 
  5541   00020B                     RB2PPS          equ	523	;# 
  5542   00020C                     RB3PPS          equ	524	;# 
  5543   00020D                     RB4PPS          equ	525	;# 
  5544   00020E                     RB5PPS          equ	526	;# 
  5545   00020F                     RB6PPS          equ	527	;# 
  5546   000210                     RB7PPS          equ	528	;# 
  5547   000211                     RC0PPS          equ	529	;# 
  5548   000212                     RC1PPS          equ	530	;# 
  5549   000213                     RC2PPS          equ	531	;# 
  5550   000214                     RC3PPS          equ	532	;# 
  5551   000215                     RC4PPS          equ	533	;# 
  5552   000216                     RC5PPS          equ	534	;# 
  5553   000217                     RC6PPS          equ	535	;# 
  5554   000218                     RC7PPS          equ	536	;# 
  5555   000219                     RD0PPS          equ	537	;# 
  5556   00021A                     RD1PPS          equ	538	;# 
  5557   00021B                     RD2PPS          equ	539	;# 
  5558   00021C                     RD3PPS          equ	540	;# 
  5559   00021D                     RD4PPS          equ	541	;# 
  5560   00021E                     RD5PPS          equ	542	;# 
  5561   00021F                     RD6PPS          equ	543	;# 
  5562   000220                     RD7PPS          equ	544	;# 
  5563   000221                     RE0PPS          equ	545	;# 
  5564   000222                     RE1PPS          equ	546	;# 
  5565   000223                     RE2PPS          equ	547	;# 
  5566   000229                     RF0PPS          equ	553	;# 
  5567   00022A                     RF1PPS          equ	554	;# 
  5568   00022B                     RF2PPS          equ	555	;# 
  5569   00022C                     RF3PPS          equ	556	;# 
  5570   00022D                     RF4PPS          equ	557	;# 
  5571   00022E                     RF5PPS          equ	558	;# 
  5572   00022F                     RF6PPS          equ	559	;# 
  5573   000230                     RF7PPS          equ	560	;# 
  5574   00023E                     INT0PPS         equ	574	;# 
  5575   00023F                     INT1PPS         equ	575	;# 
  5576   000240                     INT2PPS         equ	576	;# 
  5577   000241                     T0CKIPPS        equ	577	;# 
  5578   000242                     T1CKIPPS        equ	578	;# 
  5579   000243                     T1GPPS          equ	579	;# 
  5580   000244                     T3CKIPPS        equ	580	;# 
  5581   000245                     T3GPPS          equ	581	;# 
  5582   000246                     T5CKIPPS        equ	582	;# 
  5583   000247                     T5GPPS          equ	583	;# 
  5584   000248                     T2INPPS         equ	584	;# 
  5585   000249                     T4INPPS         equ	585	;# 
  5586   00024A                     T6INPPS         equ	586	;# 
  5587   00024F                     CCP1PPS         equ	591	;# 
  5588   000250                     CCP2PPS         equ	592	;# 
  5589   000251                     CCP3PPS         equ	593	;# 
  5590   000253                     PWM1ERSPPS      equ	595	;# 
  5591   000254                     PWM2ERSPPS      equ	596	;# 
  5592   000255                     PWM3ERSPPS      equ	597	;# 
  5593   000257                     PWMIN0PPS       equ	599	;# 
  5594   000258                     PWMIN1PPS       equ	600	;# 
  5595   000259                     SMT1WINPPS      equ	601	;# 
  5596   00025A                     SMT1SIGPPS      equ	602	;# 
  5597   00025B                     CWG1PPS         equ	603	;# 
  5598   00025B                     CWG1INPPS       equ	603	;# 
  5599   00025C                     CWG2PPS         equ	604	;# 
  5600   00025C                     CWG2INPPS       equ	604	;# 
  5601   00025D                     CWG3PPS         equ	605	;# 
  5602   00025D                     CWG3INPPS       equ	605	;# 
  5603   00025E                     MD1CARLPPS      equ	606	;# 
  5604   00025E                     MDCARLPPS       equ	606	;# 
  5605   00025F                     MD1CARHPPS      equ	607	;# 
  5606   00025F                     MDCARHPPS       equ	607	;# 
  5607   000260                     MD1SRCPPS       equ	608	;# 
  5608   000260                     MDSRCPPS        equ	608	;# 
  5609   000261                     CLCIN0PPS       equ	609	;# 
  5610   000262                     CLCIN1PPS       equ	610	;# 
  5611   000263                     CLCIN2PPS       equ	611	;# 
  5612   000264                     CLCIN3PPS       equ	612	;# 
  5613   000265                     CLCIN4PPS       equ	613	;# 
  5614   000266                     CLCIN5PPS       equ	614	;# 
  5615   000267                     CLCIN6PPS       equ	615	;# 
  5616   000268                     CLCIN7PPS       equ	616	;# 
  5617   000269                     ADACTPPS        equ	617	;# 
  5618   00026A                     SPI1SCKPPS      equ	618	;# 
  5619   00026B                     SPI1SDIPPS      equ	619	;# 
  5620   00026C                     SPI1SSPPS       equ	620	;# 
  5621   00026D                     SPI2SCKPPS      equ	621	;# 
  5622   00026E                     SPI2SDIPPS      equ	622	;# 
  5623   00026F                     SPI2SSPPS       equ	623	;# 
  5624   000270                     I2C1SDAPPS      equ	624	;# 
  5625   000271                     I2C1SCLPPS      equ	625	;# 
  5626   000272                     U1RXPPS         equ	626	;# 
  5627   000273                     U1CTSPPS        equ	627	;# 
  5628   000274                     U2RXPPS         equ	628	;# 
  5629   000275                     U2CTSPPS        equ	629	;# 
  5630   000276                     U3RXPPS         equ	630	;# 
  5631   000277                     U3CTSPPS        equ	631	;# 
  5632   000278                     U4RXPPS         equ	632	;# 
  5633   000279                     U4CTSPPS        equ	633	;# 
  5634   00027A                     U5RXPPS         equ	634	;# 
  5635   00027B                     U5CTSPPS        equ	635	;# 
  5636   000286                     RC4I2C          equ	646	;# 
  5637   000287                     RC3I2C          equ	647	;# 
  5638   000288                     RB2I2C          equ	648	;# 
  5639   000289                     RB1I2C          equ	649	;# 
  5640   00028B                     I2C1RXB         equ	651	;# 
  5641   00028C                     I2C1TXB         equ	652	;# 
  5642   00028D                     I2C1CNT         equ	653	;# 
  5643   00028E                     I2C1ADB0        equ	654	;# 
  5644   00028F                     I2C1ADB1        equ	655	;# 
  5645   000290                     I2C1ADR0        equ	656	;# 
  5646   000291                     I2C1ADR1        equ	657	;# 
  5647   000292                     I2C1ADR2        equ	658	;# 
  5648   000293                     I2C1ADR3        equ	659	;# 
  5649   000294                     I2C1CON0        equ	660	;# 
  5650   000295                     I2C1CON1        equ	661	;# 
  5651   000296                     I2C1CON2        equ	662	;# 
  5652   000297                     I2C1ERR         equ	663	;# 
  5653   000298                     I2C1STAT0       equ	664	;# 
  5654   000299                     I2C1STAT1       equ	665	;# 
  5655   00029A                     I2C1PIR         equ	666	;# 
  5656   00029B                     I2C1PIE         equ	667	;# 
  5657   00029C                     I2C1CLK         equ	668	;# 
  5658   00029D                     I2C1BTO         equ	669	;# 
  5659   0002A1                     U1RXB           equ	673	;# 
  5660   0002A1                     U1RXBL          equ	673	;# 
  5661   0002A2                     U1RXCHK         equ	674	;# 
  5662   0002A3                     U1TXB           equ	675	;# 
  5663   0002A3                     U1TXBL          equ	675	;# 
  5664   0002A4                     U1TXCHK         equ	676	;# 
  5665   0002A5                     U1P1            equ	677	;# 
  5666   0002A5                     U1P1L           equ	677	;# 
  5667   0002A6                     U1P1H           equ	678	;# 
  5668   0002A7                     U1P2            equ	679	;# 
  5669   0002A7                     U1P2L           equ	679	;# 
  5670   0002A8                     U1P2H           equ	680	;# 
  5671   0002A9                     U1P3            equ	681	;# 
  5672   0002A9                     U1P3L           equ	681	;# 
  5673   0002AA                     U1P3H           equ	682	;# 
  5674   0002AB                     U1CON0          equ	683	;# 
  5675   0002AC                     U1CON1          equ	684	;# 
  5676   0002AD                     U1CON2          equ	685	;# 
  5677   0002AE                     U1BRG           equ	686	;# 
  5678   0002AE                     U1BRGL          equ	686	;# 
  5679   0002AF                     U1BRGH          equ	687	;# 
  5680   0002B0                     U1FIFO          equ	688	;# 
  5681   0002B1                     U1UIR           equ	689	;# 
  5682   0002B2                     U1ERRIR         equ	690	;# 
  5683   0002B3                     U1ERRIE         equ	691	;# 
  5684   0002B4                     U2RXB           equ	692	;# 
  5685   0002B4                     U2RXBL          equ	692	;# 
  5686   0002B6                     U2TXB           equ	694	;# 
  5687   0002B6                     U2TXBL          equ	694	;# 
  5688   0002B8                     U2P1            equ	696	;# 
  5689   0002B8                     U2P1L           equ	696	;# 
  5690   0002BA                     U2P2            equ	698	;# 
  5691   0002BA                     U2P2L           equ	698	;# 
  5692   0002BC                     U2P3            equ	700	;# 
  5693   0002BC                     U2P3L           equ	700	;# 
  5694   0002BE                     U2CON0          equ	702	;# 
  5695   0002BF                     U2CON1          equ	703	;# 
  5696   0002C0                     U2CON2          equ	704	;# 
  5697   0002C1                     U2BRG           equ	705	;# 
  5698   0002C1                     U2BRGL          equ	705	;# 
  5699   0002C2                     U2BRGH          equ	706	;# 
  5700   0002C3                     U2FIFO          equ	707	;# 
  5701   0002C4                     U2UIR           equ	708	;# 
  5702   0002C5                     U2ERRIR         equ	709	;# 
  5703   0002C6                     U2ERRIE         equ	710	;# 
  5704   0002C7                     U3RXB           equ	711	;# 
  5705   0002C7                     U3RXBL          equ	711	;# 
  5706   0002C9                     U3TXB           equ	713	;# 
  5707   0002C9                     U3TXBL          equ	713	;# 
  5708   0002CB                     U3P1            equ	715	;# 
  5709   0002CB                     U3P1L           equ	715	;# 
  5710   0002CD                     U3P2            equ	717	;# 
  5711   0002CD                     U3P2L           equ	717	;# 
  5712   0002CF                     U3P3            equ	719	;# 
  5713   0002CF                     U3P3L           equ	719	;# 
  5714   0002D1                     U3CON0          equ	721	;# 
  5715   0002D2                     U3CON1          equ	722	;# 
  5716   0002D3                     U3CON2          equ	723	;# 
  5717   0002D4                     U3BRG           equ	724	;# 
  5718   0002D4                     U3BRGL          equ	724	;# 
  5719   0002D5                     U3BRGH          equ	725	;# 
  5720   0002D6                     U3FIFO          equ	726	;# 
  5721   0002D7                     U3UIR           equ	727	;# 
  5722   0002D8                     U3ERRIR         equ	728	;# 
  5723   0002D9                     U3ERRIE         equ	729	;# 
  5724   0002DA                     U4RXB           equ	730	;# 
  5725   0002DA                     U4RXBL          equ	730	;# 
  5726   0002DC                     U4TXB           equ	732	;# 
  5727   0002DC                     U4TXBL          equ	732	;# 
  5728   0002DE                     U4P1            equ	734	;# 
  5729   0002DE                     U4P1L           equ	734	;# 
  5730   0002E0                     U4P2            equ	736	;# 
  5731   0002E0                     U4P2L           equ	736	;# 
  5732   0002E2                     U4P3            equ	738	;# 
  5733   0002E2                     U4P3L           equ	738	;# 
  5734   0002E4                     U4CON0          equ	740	;# 
  5735   0002E5                     U4CON1          equ	741	;# 
  5736   0002E6                     U4CON2          equ	742	;# 
  5737   0002E7                     U4BRG           equ	743	;# 
  5738   0002E7                     U4BRGL          equ	743	;# 
  5739   0002E8                     U4BRGH          equ	744	;# 
  5740   0002E9                     U4FIFO          equ	745	;# 
  5741   0002EA                     U4UIR           equ	746	;# 
  5742   0002EB                     U4ERRIR         equ	747	;# 
  5743   0002EC                     U4ERRIE         equ	748	;# 
  5744   0002ED                     U5RXB           equ	749	;# 
  5745   0002ED                     U5RXBL          equ	749	;# 
  5746   0002EF                     U5TXB           equ	751	;# 
  5747   0002EF                     U5TXBL          equ	751	;# 
  5748   0002F1                     U5P1            equ	753	;# 
  5749   0002F1                     U5P1L           equ	753	;# 
  5750   0002F3                     U5P2            equ	755	;# 
  5751   0002F3                     U5P2L           equ	755	;# 
  5752   0002F5                     U5P3            equ	757	;# 
  5753   0002F5                     U5P3L           equ	757	;# 
  5754   0002F7                     U5CON0          equ	759	;# 
  5755   0002F8                     U5CON1          equ	760	;# 
  5756   0002F9                     U5CON2          equ	761	;# 
  5757   0002FA                     U5BRG           equ	762	;# 
  5758   0002FA                     U5BRGL          equ	762	;# 
  5759   0002FB                     U5BRGH          equ	763	;# 
  5760   0002FC                     U5FIFO          equ	764	;# 
  5761   0002FD                     U5UIR           equ	765	;# 
  5762   0002FE                     U5ERRIR         equ	766	;# 
  5763   0002FF                     U5ERRIE         equ	767	;# 
  5764   000300                     SMT1TMR         equ	768	;# 
  5765   000300                     SMT1TMRL        equ	768	;# 
  5766   000301                     SMT1TMRH        equ	769	;# 
  5767   000302                     SMT1TMRU        equ	770	;# 
  5768   000303                     SMT1CPR         equ	771	;# 
  5769   000303                     SMT1CPRL        equ	771	;# 
  5770   000304                     SMT1CPRH        equ	772	;# 
  5771   000305                     SMT1CPRU        equ	773	;# 
  5772   000306                     SMT1CPW         equ	774	;# 
  5773   000306                     SMT1CPWL        equ	774	;# 
  5774   000307                     SMT1CPWH        equ	775	;# 
  5775   000308                     SMT1CPWU        equ	776	;# 
  5776   000309                     SMT1PR          equ	777	;# 
  5777   000309                     SMT1PRL         equ	777	;# 
  5778   00030A                     SMT1PRH         equ	778	;# 
  5779   00030B                     SMT1PRU         equ	779	;# 
  5780   00030C                     SMT1CON0        equ	780	;# 
  5781   00030D                     SMT1CON1        equ	781	;# 
  5782   00030E                     SMT1STAT        equ	782	;# 
  5783   00030F                     SMT1CLK         equ	783	;# 
  5784   000310                     SMT1SIG         equ	784	;# 
  5785   000311                     SMT1WIN         equ	785	;# 
  5786   000318                     TMR0L           equ	792	;# 
  5787   000318                     TMR0            equ	792	;# 
  5788   000319                     TMR0H           equ	793	;# 
  5789   000319                     PR0             equ	793	;# 
  5790   00031A                     T0CON0          equ	794	;# 
  5791   00031B                     T0CON1          equ	795	;# 
  5792   00031C                     TMR1            equ	796	;# 
  5793   00031C                     TMR1L           equ	796	;# 
  5794   00031D                     TMR1H           equ	797	;# 
  5795   00031E                     T1CON           equ	798	;# 
  5796   00031E                     TMR1CON         equ	798	;# 
  5797   00031F                     T1GCON          equ	799	;# 
  5798   00031F                     TMR1GCON        equ	799	;# 
  5799   000320                     T1GATE          equ	800	;# 
  5800   000320                     TMR1GATE        equ	800	;# 
  5801   000321                     T1CLK           equ	801	;# 
  5802   000321                     TMR1CLK         equ	801	;# 
  5803   000321                     PR1             equ	801	;# 
  5804   000322                     T2TMR           equ	802	;# 
  5805   000322                     TMR2            equ	802	;# 
  5806   000323                     T2PR            equ	803	;# 
  5807   000323                     PR2             equ	803	;# 
  5808   000324                     T2CON           equ	804	;# 
  5809   000325                     T2HLT           equ	805	;# 
  5810   000326                     T2CLKCON        equ	806	;# 
  5811   000326                     T2CLK           equ	806	;# 
  5812   000327                     T2RST           equ	807	;# 
  5813   000328                     TMR3            equ	808	;# 
  5814   000328                     TMR3L           equ	808	;# 
  5815   000329                     TMR3H           equ	809	;# 
  5816   00032A                     T3CON           equ	810	;# 
  5817   00032A                     TMR3CON         equ	810	;# 
  5818   00032B                     T3GCON          equ	811	;# 
  5819   00032B                     TMR3GCON        equ	811	;# 
  5820   00032C                     T3GATE          equ	812	;# 
  5821   00032C                     TMR3GATE        equ	812	;# 
  5822   00032D                     T3CLK           equ	813	;# 
  5823   00032D                     TMR3CLK         equ	813	;# 
  5824   00032D                     PR3             equ	813	;# 
  5825   00032E                     T4TMR           equ	814	;# 
  5826   00032E                     TMR4            equ	814	;# 
  5827   00032F                     T4PR            equ	815	;# 
  5828   00032F                     PR4             equ	815	;# 
  5829   000330                     T4CON           equ	816	;# 
  5830   000331                     T4HLT           equ	817	;# 
  5831   000332                     T4CLKCON        equ	818	;# 
  5832   000332                     T4CLK           equ	818	;# 
  5833   000333                     T4RST           equ	819	;# 
  5834   000334                     TMR5            equ	820	;# 
  5835   000334                     TMR5L           equ	820	;# 
  5836   000335                     TMR5H           equ	821	;# 
  5837   000336                     T5CON           equ	822	;# 
  5838   000336                     TMR5CON         equ	822	;# 
  5839   000337                     T5GCON          equ	823	;# 
  5840   000337                     TMR5GCON        equ	823	;# 
  5841   000338                     T5GATE          equ	824	;# 
  5842   000338                     TMR5GATE        equ	824	;# 
  5843   000339                     T5CLK           equ	825	;# 
  5844   000339                     TMR5CLK         equ	825	;# 
  5845   000339                     PR5             equ	825	;# 
  5846   00033A                     T6TMR           equ	826	;# 
  5847   00033A                     TMR6            equ	826	;# 
  5848   00033B                     T6PR            equ	827	;# 
  5849   00033B                     PR6             equ	827	;# 
  5850   00033C                     T6CON           equ	828	;# 
  5851   00033D                     T6HLT           equ	829	;# 
  5852   00033E                     T6CLKCON        equ	830	;# 
  5853   00033E                     T6CLK           equ	830	;# 
  5854   00033F                     T6RST           equ	831	;# 
  5855   000340                     CCPR1           equ	832	;# 
  5856   000340                     CCPR1L          equ	832	;# 
  5857   000341                     CCPR1H          equ	833	;# 
  5858   000342                     CCP1CON         equ	834	;# 
  5859   000343                     CCP1CAP         equ	835	;# 
  5860   000344                     CCPR2           equ	836	;# 
  5861   000344                     CCPR2L          equ	836	;# 
  5862   000345                     CCPR2H          equ	837	;# 
  5863   000346                     CCP2CON         equ	838	;# 
  5864   000347                     CCP2CAP         equ	839	;# 
  5865   000348                     CCPR3           equ	840	;# 
  5866   000348                     CCPR3L          equ	840	;# 
  5867   000349                     CCPR3H          equ	841	;# 
  5868   00034A                     CCP3CON         equ	842	;# 
  5869   00034B                     CCP3CAP         equ	843	;# 
  5870   00034C                     CCPTMRS0        equ	844	;# 
  5871   00034F                     CRCDATA         equ	847	;# 
  5872   00034F                     CRCDATL         equ	847	;# 
  5873   000350                     CRCDATH         equ	848	;# 
  5874   000351                     CRCACC          equ	849	;# 
  5875   000351                     CRCACCL         equ	849	;# 
  5876   000352                     CRCACCH         equ	850	;# 
  5877   000353                     CRCSHFT         equ	851	;# 
  5878   000353                     CRCSHIFTL       equ	851	;# 
  5879   000354                     CRCSHIFTH       equ	852	;# 
  5880   000355                     CRCXOR          equ	853	;# 
  5881   000355                     CRCXORL         equ	853	;# 
  5882   000356                     CRCXORH         equ	854	;# 
  5883   000357                     CRCCON0         equ	855	;# 
  5884   000358                     CRCCON1         equ	856	;# 
  5885   00035A                     SCANLADR        equ	858	;# 
  5886   00035A                     SCANLADRL       equ	858	;# 
  5887   00035B                     SCANLADRH       equ	859	;# 
  5888   00035C                     SCANLADRU       equ	860	;# 
  5889   00035D                     SCANHADR        equ	861	;# 
  5890   00035D                     SCANHADRL       equ	861	;# 
  5891   00035E                     SCANHADRH       equ	862	;# 
  5892   00035F                     SCANHADRU       equ	863	;# 
  5893   000360                     SCANCON0        equ	864	;# 
  5894   000361                     SCANTRIG        equ	865	;# 
  5895   000362                     IPR0            equ	866	;# 
  5896   000363                     IPR1            equ	867	;# 
  5897   000364                     IPR2            equ	868	;# 
  5898   000365                     IPR3            equ	869	;# 
  5899   000366                     IPR4            equ	870	;# 
  5900   000367                     IPR5            equ	871	;# 
  5901   000368                     IPR6            equ	872	;# 
  5902   000369                     IPR7            equ	873	;# 
  5903   00036A                     IPR8            equ	874	;# 
  5904   00036B                     IPR9            equ	875	;# 
  5905   00036C                     IPR10           equ	876	;# 
  5906   00036D                     IPR11           equ	877	;# 
  5907   00036E                     IPR12           equ	878	;# 
  5908   00036F                     IPR13           equ	879	;# 
  5909   000370                     IPR14           equ	880	;# 
  5910   000371                     IPR15           equ	881	;# 
  5911   000373                     STATUS_CSHAD    equ	883	;# 
  5912   000374                     WREG_CSHAD      equ	884	;# 
  5913   000375                     BSR_CSHAD       equ	885	;# 
  5914   000376                     SHADCON         equ	886	;# 
  5915   000377                     STATUS_SHAD     equ	887	;# 
  5916   000378                     WREG_SHAD       equ	888	;# 
  5917   000379                     BSR_SHAD        equ	889	;# 
  5918   00037A                     PCLATH_SHAD     equ	890	;# 
  5919   00037B                     PCLATU_SHAD     equ	891	;# 
  5920   00037C                     FSR0SH          equ	892	;# 
  5921   00037C                     FSR0L_SHAD      equ	892	;# 
  5922   00037D                     FSR0H_SHAD      equ	893	;# 
  5923   00037E                     FSR1SH          equ	894	;# 
  5924   00037E                     FSR1L_SHAD      equ	894	;# 
  5925   00037F                     FSR1H_SHAD      equ	895	;# 
  5926   000380                     FSR2SH          equ	896	;# 
  5927   000380                     FSR2L_SHAD      equ	896	;# 
  5928   000381                     FSR2H_SHAD      equ	897	;# 
  5929   000382                     PRODSH          equ	898	;# 
  5930   000382                     PRODL_SHAD      equ	898	;# 
  5931   000383                     PRODH_SHAD      equ	899	;# 
  5932   0003BC                     CWG1CLK         equ	956	;# 
  5933   0003BC                     CWG1CLKCON      equ	956	;# 
  5934   0003BD                     CWG1ISM         equ	957	;# 
  5935   0003BD                     CWG1DAT         equ	957	;# 
  5936   0003BE                     CWG1DBR         equ	958	;# 
  5937   0003BF                     CWG1DBF         equ	959	;# 
  5938   0003C0                     CWG1CON0        equ	960	;# 
  5939   0003C1                     CWG1CON1        equ	961	;# 
  5940   0003C2                     CWG1AS0         equ	962	;# 
  5941   0003C3                     CWG1AS1         equ	963	;# 
  5942   0003C4                     CWG1STR         equ	964	;# 
  5943   0003C5                     CWG2CLK         equ	965	;# 
  5944   0003C5                     CWG2CLKCON      equ	965	;# 
  5945   0003C6                     CWG2ISM         equ	966	;# 
  5946   0003C6                     CWG2DAT         equ	966	;# 
  5947   0003C7                     CWG2DBR         equ	967	;# 
  5948   0003C8                     CWG2DBF         equ	968	;# 
  5949   0003C9                     CWG2CON0        equ	969	;# 
  5950   0003CA                     CWG2CON1        equ	970	;# 
  5951   0003CB                     CWG2AS0         equ	971	;# 
  5952   0003CC                     CWG2AS1         equ	972	;# 
  5953   0003CD                     CWG2STR         equ	973	;# 
  5954   0003CE                     CWG3CLK         equ	974	;# 
  5955   0003CE                     CWG3CLKCON      equ	974	;# 
  5956   0003CF                     CWG3ISM         equ	975	;# 
  5957   0003CF                     CWG3DAT         equ	975	;# 
  5958   0003D0                     CWG3DBR         equ	976	;# 
  5959   0003D1                     CWG3DBF         equ	977	;# 
  5960   0003D2                     CWG3CON0        equ	978	;# 
  5961   0003D3                     CWG3CON1        equ	979	;# 
  5962   0003D4                     CWG3AS0         equ	980	;# 
  5963   0003D5                     CWG3AS1         equ	981	;# 
  5964   0003D6                     CWG3STR         equ	982	;# 
  5965   0003D7                     FVRCON          equ	983	;# 
  5966   0003D8                     ADCPCON         equ	984	;# 
  5967   0003D8                     ADCP            equ	984	;# 
  5968   0003D9                     ADLTH           equ	985	;# 
  5969   0003D9                     ADLTHL          equ	985	;# 
  5970   0003DA                     ADLTHH          equ	986	;# 
  5971   0003DB                     ADUTH           equ	987	;# 
  5972   0003DB                     ADUTHL          equ	987	;# 
  5973   0003DC                     ADUTHH          equ	988	;# 
  5974   0003DD                     ADERR           equ	989	;# 
  5975   0003DD                     ADERRL          equ	989	;# 
  5976   0003DE                     ADERRH          equ	990	;# 
  5977   0003DF                     ADSTPT          equ	991	;# 
  5978   0003DF                     ADSTPTL         equ	991	;# 
  5979   0003E0                     ADSTPTH         equ	992	;# 
  5980   0003E1                     ADFLTR          equ	993	;# 
  5981   0003E1                     ADFLTRL         equ	993	;# 
  5982   0003E2                     ADFLTRH         equ	994	;# 
  5983   0003E3                     ADACC           equ	995	;# 
  5984   0003E3                     ADACCL          equ	995	;# 
  5985   0003E4                     ADACCH          equ	996	;# 
  5986   0003E5                     ADACCU          equ	997	;# 
  5987   0003E6                     ADCNT           equ	998	;# 
  5988   0003E7                     ADRPT           equ	999	;# 
  5989   0003E8                     ADPREV          equ	1000	;# 
  5990   0003E8                     ADPREVL         equ	1000	;# 
  5991   0003E9                     ADPREVH         equ	1001	;# 
  5992   0003EA                     ADRES           equ	1002	;# 
  5993   0003EA                     ADRESL          equ	1002	;# 
  5994   0003EB                     ADRESH          equ	1003	;# 
  5995   0003EC                     ADPCH           equ	1004	;# 
  5996   0003EE                     ADACQ           equ	1006	;# 
  5997   0003EE                     ADACQL          equ	1006	;# 
  5998   0003EF                     ADACQH          equ	1007	;# 
  5999   0003F0                     ADCAP           equ	1008	;# 
  6000   0003F1                     ADPRE           equ	1009	;# 
  6001   0003F1                     ADPREL          equ	1009	;# 
  6002   0003F2                     ADPREH          equ	1010	;# 
  6003   0003F3                     ADCON0          equ	1011	;# 
  6004   0003F4                     ADCON1          equ	1012	;# 
  6005   0003F5                     ADCON2          equ	1013	;# 
  6006   0003F6                     ADCON3          equ	1014	;# 
  6007   0003F7                     ADSTAT          equ	1015	;# 
  6008   0003F8                     ADREF           equ	1016	;# 
  6009   0003F9                     ADACT           equ	1017	;# 
  6010   0003FA                     ADCLK           equ	1018	;# 
  6011   000400                     ANSELA          equ	1024	;# 
  6012   000401                     WPUA            equ	1025	;# 
  6013   000402                     ODCONA          equ	1026	;# 
  6014   000403                     SLRCONA         equ	1027	;# 
  6015   000404                     INLVLA          equ	1028	;# 
  6016   000405                     IOCAP           equ	1029	;# 
  6017   000406                     IOCAN           equ	1030	;# 
  6018   000407                     IOCAF           equ	1031	;# 
  6019   000408                     ANSELB          equ	1032	;# 
  6020   000409                     WPUB            equ	1033	;# 
  6021   00040A                     ODCONB          equ	1034	;# 
  6022   00040B                     SLRCONB         equ	1035	;# 
  6023   00040C                     INLVLB          equ	1036	;# 
  6024   00040D                     IOCBP           equ	1037	;# 
  6025   00040E                     IOCBN           equ	1038	;# 
  6026   00040F                     IOCBF           equ	1039	;# 
  6027   000410                     ANSELC          equ	1040	;# 
  6028   000411                     WPUC            equ	1041	;# 
  6029   000412                     ODCONC          equ	1042	;# 
  6030   000413                     SLRCONC         equ	1043	;# 
  6031   000414                     INLVLC          equ	1044	;# 
  6032   000415                     IOCCP           equ	1045	;# 
  6033   000416                     IOCCN           equ	1046	;# 
  6034   000417                     IOCCF           equ	1047	;# 
  6035   000418                     ANSELD          equ	1048	;# 
  6036   000419                     WPUD            equ	1049	;# 
  6037   00041A                     ODCOND          equ	1050	;# 
  6038   00041B                     SLRCOND         equ	1051	;# 
  6039   00041C                     INLVLD          equ	1052	;# 
  6040   000420                     ANSELE          equ	1056	;# 
  6041   000421                     WPUE            equ	1057	;# 
  6042   000422                     ODCONE          equ	1058	;# 
  6043   000423                     SLRCONE         equ	1059	;# 
  6044   000424                     INLVLE          equ	1060	;# 
  6045   000425                     IOCEP           equ	1061	;# 
  6046   000426                     IOCEN           equ	1062	;# 
  6047   000427                     IOCEF           equ	1063	;# 
  6048   000428                     ANSELF          equ	1064	;# 
  6049   000429                     WPUF            equ	1065	;# 
  6050   00042A                     ODCONF          equ	1066	;# 
  6051   00042B                     SLRCONF         equ	1067	;# 
  6052   00042C                     INLVLF          equ	1068	;# 
  6053   000440                     NCO1ACC         equ	1088	;# 
  6054   000440                     NCO1ACCL        equ	1088	;# 
  6055   000441                     NCO1ACCH        equ	1089	;# 
  6056   000442                     NCO1ACCU        equ	1090	;# 
  6057   000443                     NCO1INC         equ	1091	;# 
  6058   000443                     NCO1INCL        equ	1091	;# 
  6059   000444                     NCO1INCH        equ	1092	;# 
  6060   000445                     NCO1INCU        equ	1093	;# 
  6061   000446                     NCO1CON         equ	1094	;# 
  6062   000447                     NCO1CLK         equ	1095	;# 
  6063   000448                     NCO2ACC         equ	1096	;# 
  6064   000448                     NCO2ACCL        equ	1096	;# 
  6065   000449                     NCO2ACCH        equ	1097	;# 
  6066   00044A                     NCO2ACCU        equ	1098	;# 
  6067   00044B                     NCO2INC         equ	1099	;# 
  6068   00044B                     NCO2INCL        equ	1099	;# 
  6069   00044C                     NCO2INCH        equ	1100	;# 
  6070   00044D                     NCO2INCU        equ	1101	;# 
  6071   00044E                     NCO2CON         equ	1102	;# 
  6072   00044F                     NCO2CLK         equ	1103	;# 
  6073   000450                     NCO3ACC         equ	1104	;# 
  6074   000450                     NCO3ACCL        equ	1104	;# 
  6075   000451                     NCO3ACCH        equ	1105	;# 
  6076   000452                     NCO3ACCU        equ	1106	;# 
  6077   000453                     NCO3INC         equ	1107	;# 
  6078   000453                     NCO3INCL        equ	1107	;# 
  6079   000454                     NCO3INCH        equ	1108	;# 
  6080   000455                     NCO3INCU        equ	1109	;# 
  6081   000456                     NCO3CON         equ	1110	;# 
  6082   000457                     NCO3CLK         equ	1111	;# 
  6083   000459                     IVTLOCK         equ	1113	;# 
  6084   00045A                     IVTAD           equ	1114	;# 
  6085   00045A                     IVTADL          equ	1114	;# 
  6086   00045B                     IVTADH          equ	1115	;# 
  6087   00045C                     IVTADU          equ	1116	;# 
  6088   00045D                     IVTBASE         equ	1117	;# 
  6089   00045D                     IVTBASEL        equ	1117	;# 
  6090   00045E                     IVTBASEH        equ	1118	;# 
  6091   00045F                     IVTBASEU        equ	1119	;# 
  6092   000460                     PWM1ERS         equ	1120	;# 
  6093   000461                     PWM1CLK         equ	1121	;# 
  6094   000462                     PWM1LDS         equ	1122	;# 
  6095   000463                     PWM1PR          equ	1123	;# 
  6096   000463                     PWM1PRL         equ	1123	;# 
  6097   000464                     PWM1PRH         equ	1124	;# 
  6098   000465                     PWM1CPRE        equ	1125	;# 
  6099   000466                     PWM1PIPOS       equ	1126	;# 
  6100   000467                     PWM1GIR         equ	1127	;# 
  6101   000468                     PWM1GIE         equ	1128	;# 
  6102   000469                     PWM1CON         equ	1129	;# 
  6103   00046A                     PWM1S1CFG       equ	1130	;# 
  6104   00046B                     PWM1S1P1        equ	1131	;# 
  6105   00046B                     PWM1S1P1L       equ	1131	;# 
  6106   00046C                     PWM1S1P1H       equ	1132	;# 
  6107   00046D                     PWM1S1P2        equ	1133	;# 
  6108   00046D                     PWM1S1P2L       equ	1133	;# 
  6109   00046E                     PWM1S1P2H       equ	1134	;# 
  6110   00046F                     PWM2ERS         equ	1135	;# 
  6111   000470                     PWM2CLK         equ	1136	;# 
  6112   000471                     PWM2LDS         equ	1137	;# 
  6113   000472                     PWM2PR          equ	1138	;# 
  6114   000472                     PWM2PRL         equ	1138	;# 
  6115   000473                     PWM2PRH         equ	1139	;# 
  6116   000474                     PWM2CPRE        equ	1140	;# 
  6117   000475                     PWM2PIPOS       equ	1141	;# 
  6118   000476                     PWM2GIR         equ	1142	;# 
  6119   000477                     PWM2GIE         equ	1143	;# 
  6120   000478                     PWM2CON         equ	1144	;# 
  6121   000479                     PWM2S1CFG       equ	1145	;# 
  6122   00047A                     PWM2S1P1        equ	1146	;# 
  6123   00047A                     PWM2S1P1L       equ	1146	;# 
  6124   00047B                     PWM2S1P1H       equ	1147	;# 
  6125   00047C                     PWM2S1P2        equ	1148	;# 
  6126   00047C                     PWM2S1P2L       equ	1148	;# 
  6127   00047D                     PWM2S1P2H       equ	1149	;# 
  6128   00047E                     PWM3ERS         equ	1150	;# 
  6129   00047F                     PWM3CLK         equ	1151	;# 
  6130   000480                     PWM3LDS         equ	1152	;# 
  6131   000481                     PWM3PR          equ	1153	;# 
  6132   000481                     PWM3PRL         equ	1153	;# 
  6133   000482                     PWM3PRH         equ	1154	;# 
  6134   000483                     PWM3CPRE        equ	1155	;# 
  6135   000484                     PWM3PIPOS       equ	1156	;# 
  6136   000485                     PWM3GIR         equ	1157	;# 
  6137   000486                     PWM3GIE         equ	1158	;# 
  6138   000487                     PWM3CON         equ	1159	;# 
  6139   000488                     PWM3S1CFG       equ	1160	;# 
  6140   000489                     PWM3S1P1        equ	1161	;# 
  6141   000489                     PWM3S1P1L       equ	1161	;# 
  6142   00048A                     PWM3S1P1H       equ	1162	;# 
  6143   00048B                     PWM3S1P2        equ	1163	;# 
  6144   00048B                     PWM3S1P2L       equ	1163	;# 
  6145   00048C                     PWM3S1P2H       equ	1164	;# 
  6146   00049C                     PWMLOAD         equ	1180	;# 
  6147   00049D                     PWMEN           equ	1181	;# 
  6148   00049E                     PIE0            equ	1182	;# 
  6149   00049F                     PIE1            equ	1183	;# 
  6150   0004A0                     PIE2            equ	1184	;# 
  6151   0004A1                     PIE3            equ	1185	;# 
  6152   0004A2                     PIE4            equ	1186	;# 
  6153   0004A3                     PIE5            equ	1187	;# 
  6154   0004A4                     PIE6            equ	1188	;# 
  6155   0004A5                     PIE7            equ	1189	;# 
  6156   0004A6                     PIE8            equ	1190	;# 
  6157   0004A7                     PIE9            equ	1191	;# 
  6158   0004A8                     PIE10           equ	1192	;# 
  6159   0004A9                     PIE11           equ	1193	;# 
  6160   0004AA                     PIE12           equ	1194	;# 
  6161   0004AB                     PIE13           equ	1195	;# 
  6162   0004AC                     PIE14           equ	1196	;# 
  6163   0004AD                     PIE15           equ	1197	;# 
  6164   0004AE                     PIR0            equ	1198	;# 
  6165   0004AF                     PIR1            equ	1199	;# 
  6166   0004B0                     PIR2            equ	1200	;# 
  6167   0004B1                     PIR3            equ	1201	;# 
  6168   0004B2                     PIR4            equ	1202	;# 
  6169   0004B3                     PIR5            equ	1203	;# 
  6170   0004B4                     PIR6            equ	1204	;# 
  6171   0004B5                     PIR7            equ	1205	;# 
  6172   0004B6                     PIR8            equ	1206	;# 
  6173   0004B7                     PIR9            equ	1207	;# 
  6174   0004B8                     PIR10           equ	1208	;# 
  6175   0004B9                     PIR11           equ	1209	;# 
  6176   0004BA                     PIR12           equ	1210	;# 
  6177   0004BB                     PIR13           equ	1211	;# 
  6178   0004BC                     PIR14           equ	1212	;# 
  6179   0004BD                     PIR15           equ	1213	;# 
  6180   0004BE                     LATA            equ	1214	;# 
  6181   0004BF                     LATB            equ	1215	;# 
  6182   0004C0                     LATC            equ	1216	;# 
  6183   0004C1                     LATD            equ	1217	;# 
  6184   0004C2                     LATE            equ	1218	;# 
  6185   0004C3                     LATF            equ	1219	;# 
  6186   0004C6                     TRISA           equ	1222	;# 
  6187   0004C7                     TRISB           equ	1223	;# 
  6188   0004C8                     TRISC           equ	1224	;# 
  6189   0004C9                     TRISD           equ	1225	;# 
  6190   0004CA                     TRISE           equ	1226	;# 
  6191   0004CB                     TRISF           equ	1227	;# 
  6192   0004CE                     PORTA           equ	1230	;# 
  6193   0004CF                     PORTB           equ	1231	;# 
  6194   0004D0                     PORTC           equ	1232	;# 
  6195   0004D1                     PORTD           equ	1233	;# 
  6196   0004D2                     PORTE           equ	1234	;# 
  6197   0004D3                     PORTF           equ	1235	;# 
  6198   0004D6                     INTCON0         equ	1238	;# 
  6199   0004D7                     INTCON1         equ	1239	;# 
  6200   0004D8                     STATUS          equ	1240	;# 
  6201   0004D9                     FSR2            equ	1241	;# 
  6202   0004D9                     FSR2L           equ	1241	;# 
  6203   0004DA                     FSR2H           equ	1242	;# 
  6204   0004DB                     PLUSW2          equ	1243	;# 
  6205   0004DC                     PREINC2         equ	1244	;# 
  6206   0004DD                     POSTDEC2        equ	1245	;# 
  6207   0004DE                     POSTINC2        equ	1246	;# 
  6208   0004DF                     INDF2           equ	1247	;# 
  6209   0004E0                     BSR             equ	1248	;# 
  6210   0004E1                     FSR1            equ	1249	;# 
  6211   0004E1                     FSR1L           equ	1249	;# 
  6212   0004E2                     FSR1H           equ	1250	;# 
  6213   0004E3                     PLUSW1          equ	1251	;# 
  6214   0004E4                     PREINC1         equ	1252	;# 
  6215   0004E5                     POSTDEC1        equ	1253	;# 
  6216   0004E6                     POSTINC1        equ	1254	;# 
  6217   0004E7                     INDF1           equ	1255	;# 
  6218   0004E8                     WREG            equ	1256	;# 
  6219   0004E9                     FSR0            equ	1257	;# 
  6220   0004E9                     FSR0L           equ	1257	;# 
  6221   0004EA                     FSR0H           equ	1258	;# 
  6222   0004EB                     PLUSW0          equ	1259	;# 
  6223   0004EC                     PREINC0         equ	1260	;# 
  6224   0004ED                     POSTDEC0        equ	1261	;# 
  6225   0004EE                     POSTINC0        equ	1262	;# 
  6226   0004EF                     INDF0           equ	1263	;# 
  6227   0004F0                     PCON0           equ	1264	;# 
  6228   0004F1                     PCON1           equ	1265	;# 
  6229   0004F2                     CPUDOZE         equ	1266	;# 
  6230   0004F3                     PROD            equ	1267	;# 
  6231   0004F3                     PRODL           equ	1267	;# 
  6232   0004F4                     PRODH           equ	1268	;# 
  6233   0004F5                     TABLAT          equ	1269	;# 
  6234   0004F6                     TBLPTR          equ	1270	;# 
  6235   0004F6                     TBLPTRL         equ	1270	;# 
  6236   0004F7                     TBLPTRH         equ	1271	;# 
  6237   0004F8                     TBLPTRU         equ	1272	;# 
  6238   0004F9                     PCLAT           equ	1273	;# 
  6239   0004F9                     PCL             equ	1273	;# 
  6240   0004FA                     PCLATH          equ	1274	;# 
  6241   0004FB                     PCLATU          equ	1275	;# 
  6242   0004FC                     STKPTR          equ	1276	;# 
  6243   0004FD                     TOS             equ	1277	;# 
  6244   0004FD                     TOSL            equ	1277	;# 
  6245   0004FE                     TOSH            equ	1278	;# 
  6246   0004FF                     TOSU            equ	1279	;# 
  6247   000039                     CLKRCON         equ	57	;# 
  6248   00003A                     CLKRCLK         equ	58	;# 
  6249   000040                     NVMCON0         equ	64	;# 
  6250   000041                     NVMCON1         equ	65	;# 
  6251   000042                     NVMLOCK         equ	66	;# 
  6252   000043                     NVMADR          equ	67	;# 
  6253   000043                     NVMADRL         equ	67	;# 
  6254   000044                     NVMADRH         equ	68	;# 
  6255   000045                     NVMADRU         equ	69	;# 
  6256   000046                     NVMDAT          equ	70	;# 
  6257   000046                     NVMDATL         equ	70	;# 
  6258   000047                     NVMDATH         equ	71	;# 
  6259   000048                     VREGCON         equ	72	;# 
  6260   000049                     BORCON          equ	73	;# 
  6261   00004A                     HLVDCON0        equ	74	;# 
  6262   00004B                     HLVDCON1        equ	75	;# 
  6263   00004C                     ZCDCON          equ	76	;# 
  6264   000060                     PMD0            equ	96	;# 
  6265   000061                     PMD1            equ	97	;# 
  6266   000063                     PMD3            equ	99	;# 
  6267   000064                     PMD4            equ	100	;# 
  6268   000065                     PMD5            equ	101	;# 
  6269   000066                     PMD6            equ	102	;# 
  6270   000067                     PMD7            equ	103	;# 
  6271   000068                     PMD8            equ	104	;# 
  6272   00006A                     MD1CON0         equ	106	;# 
  6273   00006B                     MD1CON1         equ	107	;# 
  6274   00006C                     MD1SRC          equ	108	;# 
  6275   00006D                     MD1CARL         equ	109	;# 
  6276   00006E                     MD1CARH         equ	110	;# 
  6277   00006F                     CMOUT           equ	111	;# 
  6278   000070                     CM1CON0         equ	112	;# 
  6279   000071                     CM1CON1         equ	113	;# 
  6280   000072                     CM1NCH          equ	114	;# 
  6281   000073                     CM1PCH          equ	115	;# 
  6282   000074                     CM2CON0         equ	116	;# 
  6283   000075                     CM2CON1         equ	117	;# 
  6284   000076                     CM2NCH          equ	118	;# 
  6285   000077                     CM2PCH          equ	119	;# 
  6286   000078                     WDTCON0         equ	120	;# 
  6287   000079                     WDTCON1         equ	121	;# 
  6288   00007A                     WDTPS           equ	122	;# 
  6289   00007A                     WDTPSL          equ	122	;# 
  6290   00007B                     WDTPSH          equ	123	;# 
  6291   00007C                     WDTTMR          equ	124	;# 
  6292   00007D                     DAC1DAT         equ	125	;# 
  6293   00007D                     DAC1DATL        equ	125	;# 
  6294   00007F                     DAC1CON         equ	127	;# 
  6295   000080                     SPI1RXB         equ	128	;# 
  6296   000081                     SPI1TXB         equ	129	;# 
  6297   000082                     SPI1TCNT        equ	130	;# 
  6298   000082                     SPI1TCNTL       equ	130	;# 
  6299   000083                     SPI1TCNTH       equ	131	;# 
  6300   000084                     SPI1CON0        equ	132	;# 
  6301   000085                     SPI1CON1        equ	133	;# 
  6302   000086                     SPI1CON2        equ	134	;# 
  6303   000087                     SPI1STATUS      equ	135	;# 
  6304   000088                     SPI1TWIDTH      equ	136	;# 
  6305   000089                     SPI1BAUD        equ	137	;# 
  6306   00008A                     SPI1INTF        equ	138	;# 
  6307   00008B                     SPI1INTE        equ	139	;# 
  6308   00008C                     SPI1CLK         equ	140	;# 
  6309   00008D                     SPI2RXB         equ	141	;# 
  6310   00008E                     SPI2TXB         equ	142	;# 
  6311   00008F                     SPI2TCNT        equ	143	;# 
  6312   00008F                     SPI2TCNTL       equ	143	;# 
  6313   000090                     SPI2TCNTH       equ	144	;# 
  6314   000091                     SPI2CON0        equ	145	;# 
  6315   000092                     SPI2CON1        equ	146	;# 
  6316   000093                     SPI2CON2        equ	147	;# 
  6317   000094                     SPI2STATUS      equ	148	;# 
  6318   000095                     SPI2TWIDTH      equ	149	;# 
  6319   000096                     SPI2BAUD        equ	150	;# 
  6320   000097                     SPI2INTF        equ	151	;# 
  6321   000098                     SPI2INTE        equ	152	;# 
  6322   000099                     SPI2CLK         equ	153	;# 
  6323   0000AC                     ACTCON          equ	172	;# 
  6324   0000AD                     OSCCON1         equ	173	;# 
  6325   0000AE                     OSCCON2         equ	174	;# 
  6326   0000AF                     OSCCON3         equ	175	;# 
  6327   0000B0                     OSCTUNE         equ	176	;# 
  6328   0000B1                     OSCFRQ          equ	177	;# 
  6329   0000B1                     OSCFREQ         equ	177	;# 
  6330   0000B2                     OSCSTAT         equ	178	;# 
  6331   0000B2                     OSCSTAT1        equ	178	;# 
  6332   0000B3                     OSCEN           equ	179	;# 
  6333   0000B4                     PRLOCK          equ	180	;# 
  6334   0000B5                     SCANPR          equ	181	;# 
  6335   0000B6                     DMA1PR          equ	182	;# 
  6336   0000B7                     DMA2PR          equ	183	;# 
  6337   0000B8                     DMA3PR          equ	184	;# 
  6338   0000B9                     DMA4PR          equ	185	;# 
  6339   0000BA                     DMA5PR          equ	186	;# 
  6340   0000BB                     DMA6PR          equ	187	;# 
  6341   0000BE                     MAINPR          equ	190	;# 
  6342   0000BF                     ISRPR           equ	191	;# 
  6343   0000D4                     CLCDATA         equ	212	;# 
  6344   0000D5                     CLCSELECT       equ	213	;# 
  6345   0000D6                     CLCnCON         equ	214	;# 
  6346   0000D7                     CLCnPOL         equ	215	;# 
  6347   0000D8                     CLCnSEL0        equ	216	;# 
  6348   0000D9                     CLCnSEL1        equ	217	;# 
  6349   0000DA                     CLCnSEL2        equ	218	;# 
  6350   0000DB                     CLCnSEL3        equ	219	;# 
  6351   0000DC                     CLCnGLS0        equ	220	;# 
  6352   0000DD                     CLCnGLS1        equ	221	;# 
  6353   0000DE                     CLCnGLS2        equ	222	;# 
  6354   0000DF                     CLCnGLS3        equ	223	;# 
  6355   0000E8                     DMASELECT       equ	232	;# 
  6356   0000E9                     DMAnBUF         equ	233	;# 
  6357   0000EA                     DMAnDCNT        equ	234	;# 
  6358   0000EA                     DMAnDCNTL       equ	234	;# 
  6359   0000EB                     DMAnDCNTH       equ	235	;# 
  6360   0000EC                     DMAnDPTR        equ	236	;# 
  6361   0000EC                     DMAnDPTRL       equ	236	;# 
  6362   0000ED                     DMAnDPTRH       equ	237	;# 
  6363   0000EE                     DMAnDSZ         equ	238	;# 
  6364   0000EE                     DMAnDSZL        equ	238	;# 
  6365   0000EF                     DMAnDSZH        equ	239	;# 
  6366   0000F0                     DMAnDSA         equ	240	;# 
  6367   0000F0                     DMAnDSAL        equ	240	;# 
  6368   0000F1                     DMAnDSAH        equ	241	;# 
  6369   0000F2                     DMAnSCNT        equ	242	;# 
  6370   0000F2                     DMAnSCNTL       equ	242	;# 
  6371   0000F3                     DMAnSCNTH       equ	243	;# 
  6372   0000F4                     DMAnSPTR        equ	244	;# 
  6373   0000F4                     DMAnSPTRL       equ	244	;# 
  6374   0000F5                     DMAnSPTRH       equ	245	;# 
  6375   0000F6                     DMAnSPTRU       equ	246	;# 
  6376   0000F7                     DMAnSSZ         equ	247	;# 
  6377   0000F7                     DMAnSSZL        equ	247	;# 
  6378   0000F8                     DMAnSSZH        equ	248	;# 
  6379   0000F9                     DMAnSSA         equ	249	;# 
  6380   0000F9                     DMAnSSAL        equ	249	;# 
  6381   0000FA                     DMAnSSAH        equ	250	;# 
  6382   0000FB                     DMAnSSAU        equ	251	;# 
  6383   0000FC                     DMAnCON0        equ	252	;# 
  6384   0000FD                     DMAnCON1        equ	253	;# 
  6385   0000FE                     DMAnAIRQ        equ	254	;# 
  6386   0000FF                     DMAnSIRQ        equ	255	;# 
  6387   000200                     PPSLOCK         equ	512	;# 
  6388   000201                     RA0PPS          equ	513	;# 
  6389   000202                     RA1PPS          equ	514	;# 
  6390   000203                     RA2PPS          equ	515	;# 
  6391   000204                     RA3PPS          equ	516	;# 
  6392   000205                     RA4PPS          equ	517	;# 
  6393   000206                     RA5PPS          equ	518	;# 
  6394   000207                     RA6PPS          equ	519	;# 
  6395   000208                     RA7PPS          equ	520	;# 
  6396   000209                     RB0PPS          equ	521	;# 
  6397   00020A                     RB1PPS          equ	522	;# 
  6398   00020B                     RB2PPS          equ	523	;# 
  6399   00020C                     RB3PPS          equ	524	;# 
  6400   00020D                     RB4PPS          equ	525	;# 
  6401   00020E                     RB5PPS          equ	526	;# 
  6402   00020F                     RB6PPS          equ	527	;# 
  6403   000210                     RB7PPS          equ	528	;# 
  6404   000211                     RC0PPS          equ	529	;# 
  6405   000212                     RC1PPS          equ	530	;# 
  6406   000213                     RC2PPS          equ	531	;# 
  6407   000214                     RC3PPS          equ	532	;# 
  6408   000215                     RC4PPS          equ	533	;# 
  6409   000216                     RC5PPS          equ	534	;# 
  6410   000217                     RC6PPS          equ	535	;# 
  6411   000218                     RC7PPS          equ	536	;# 
  6412   000219                     RD0PPS          equ	537	;# 
  6413   00021A                     RD1PPS          equ	538	;# 
  6414   00021B                     RD2PPS          equ	539	;# 
  6415   00021C                     RD3PPS          equ	540	;# 
  6416   00021D                     RD4PPS          equ	541	;# 
  6417   00021E                     RD5PPS          equ	542	;# 
  6418   00021F                     RD6PPS          equ	543	;# 
  6419   000220                     RD7PPS          equ	544	;# 
  6420   000221                     RE0PPS          equ	545	;# 
  6421   000222                     RE1PPS          equ	546	;# 
  6422   000223                     RE2PPS          equ	547	;# 
  6423   000229                     RF0PPS          equ	553	;# 
  6424   00022A                     RF1PPS          equ	554	;# 
  6425   00022B                     RF2PPS          equ	555	;# 
  6426   00022C                     RF3PPS          equ	556	;# 
  6427   00022D                     RF4PPS          equ	557	;# 
  6428   00022E                     RF5PPS          equ	558	;# 
  6429   00022F                     RF6PPS          equ	559	;# 
  6430   000230                     RF7PPS          equ	560	;# 
  6431   00023E                     INT0PPS         equ	574	;# 
  6432   00023F                     INT1PPS         equ	575	;# 
  6433   000240                     INT2PPS         equ	576	;# 
  6434   000241                     T0CKIPPS        equ	577	;# 
  6435   000242                     T1CKIPPS        equ	578	;# 
  6436   000243                     T1GPPS          equ	579	;# 
  6437   000244                     T3CKIPPS        equ	580	;# 
  6438   000245                     T3GPPS          equ	581	;# 
  6439   000246                     T5CKIPPS        equ	582	;# 
  6440   000247                     T5GPPS          equ	583	;# 
  6441   000248                     T2INPPS         equ	584	;# 
  6442   000249                     T4INPPS         equ	585	;# 
  6443   00024A                     T6INPPS         equ	586	;# 
  6444   00024F                     CCP1PPS         equ	591	;# 
  6445   000250                     CCP2PPS         equ	592	;# 
  6446   000251                     CCP3PPS         equ	593	;# 
  6447   000253                     PWM1ERSPPS      equ	595	;# 
  6448   000254                     PWM2ERSPPS      equ	596	;# 
  6449   000255                     PWM3ERSPPS      equ	597	;# 
  6450   000257                     PWMIN0PPS       equ	599	;# 
  6451   000258                     PWMIN1PPS       equ	600	;# 
  6452   000259                     SMT1WINPPS      equ	601	;# 
  6453   00025A                     SMT1SIGPPS      equ	602	;# 
  6454   00025B                     CWG1PPS         equ	603	;# 
  6455   00025B                     CWG1INPPS       equ	603	;# 
  6456   00025C                     CWG2PPS         equ	604	;# 
  6457   00025C                     CWG2INPPS       equ	604	;# 
  6458   00025D                     CWG3PPS         equ	605	;# 
  6459   00025D                     CWG3INPPS       equ	605	;# 
  6460   00025E                     MD1CARLPPS      equ	606	;# 
  6461   00025E                     MDCARLPPS       equ	606	;# 
  6462   00025F                     MD1CARHPPS      equ	607	;# 
  6463   00025F                     MDCARHPPS       equ	607	;# 
  6464   000260                     MD1SRCPPS       equ	608	;# 
  6465   000260                     MDSRCPPS        equ	608	;# 
  6466   000261                     CLCIN0PPS       equ	609	;# 
  6467   000262                     CLCIN1PPS       equ	610	;# 
  6468   000263                     CLCIN2PPS       equ	611	;# 
  6469   000264                     CLCIN3PPS       equ	612	;# 
  6470   000265                     CLCIN4PPS       equ	613	;# 
  6471   000266                     CLCIN5PPS       equ	614	;# 
  6472   000267                     CLCIN6PPS       equ	615	;# 
  6473   000268                     CLCIN7PPS       equ	616	;# 
  6474   000269                     ADACTPPS        equ	617	;# 
  6475   00026A                     SPI1SCKPPS      equ	618	;# 
  6476   00026B                     SPI1SDIPPS      equ	619	;# 
  6477   00026C                     SPI1SSPPS       equ	620	;# 
  6478   00026D                     SPI2SCKPPS      equ	621	;# 
  6479   00026E                     SPI2SDIPPS      equ	622	;# 
  6480   00026F                     SPI2SSPPS       equ	623	;# 
  6481   000270                     I2C1SDAPPS      equ	624	;# 
  6482   000271                     I2C1SCLPPS      equ	625	;# 
  6483   000272                     U1RXPPS         equ	626	;# 
  6484   000273                     U1CTSPPS        equ	627	;# 
  6485   000274                     U2RXPPS         equ	628	;# 
  6486   000275                     U2CTSPPS        equ	629	;# 
  6487   000276                     U3RXPPS         equ	630	;# 
  6488   000277                     U3CTSPPS        equ	631	;# 
  6489   000278                     U4RXPPS         equ	632	;# 
  6490   000279                     U4CTSPPS        equ	633	;# 
  6491   00027A                     U5RXPPS         equ	634	;# 
  6492   00027B                     U5CTSPPS        equ	635	;# 
  6493   000286                     RC4I2C          equ	646	;# 
  6494   000287                     RC3I2C          equ	647	;# 
  6495   000288                     RB2I2C          equ	648	;# 
  6496   000289                     RB1I2C          equ	649	;# 
  6497   00028B                     I2C1RXB         equ	651	;# 
  6498   00028C                     I2C1TXB         equ	652	;# 
  6499   00028D                     I2C1CNT         equ	653	;# 
  6500   00028E                     I2C1ADB0        equ	654	;# 
  6501   00028F                     I2C1ADB1        equ	655	;# 
  6502   000290                     I2C1ADR0        equ	656	;# 
  6503   000291                     I2C1ADR1        equ	657	;# 
  6504   000292                     I2C1ADR2        equ	658	;# 
  6505   000293                     I2C1ADR3        equ	659	;# 
  6506   000294                     I2C1CON0        equ	660	;# 
  6507   000295                     I2C1CON1        equ	661	;# 
  6508   000296                     I2C1CON2        equ	662	;# 
  6509   000297                     I2C1ERR         equ	663	;# 
  6510   000298                     I2C1STAT0       equ	664	;# 
  6511   000299                     I2C1STAT1       equ	665	;# 
  6512   00029A                     I2C1PIR         equ	666	;# 
  6513   00029B                     I2C1PIE         equ	667	;# 
  6514   00029C                     I2C1CLK         equ	668	;# 
  6515   00029D                     I2C1BTO         equ	669	;# 
  6516   0002A1                     U1RXB           equ	673	;# 
  6517   0002A1                     U1RXBL          equ	673	;# 
  6518   0002A2                     U1RXCHK         equ	674	;# 
  6519   0002A3                     U1TXB           equ	675	;# 
  6520   0002A3                     U1TXBL          equ	675	;# 
  6521   0002A4                     U1TXCHK         equ	676	;# 
  6522   0002A5                     U1P1            equ	677	;# 
  6523   0002A5                     U1P1L           equ	677	;# 
  6524   0002A6                     U1P1H           equ	678	;# 
  6525   0002A7                     U1P2            equ	679	;# 
  6526   0002A7                     U1P2L           equ	679	;# 
  6527   0002A8                     U1P2H           equ	680	;# 
  6528   0002A9                     U1P3            equ	681	;# 
  6529   0002A9                     U1P3L           equ	681	;# 
  6530   0002AA                     U1P3H           equ	682	;# 
  6531   0002AB                     U1CON0          equ	683	;# 
  6532   0002AC                     U1CON1          equ	684	;# 
  6533   0002AD                     U1CON2          equ	685	;# 
  6534   0002AE                     U1BRG           equ	686	;# 
  6535   0002AE                     U1BRGL          equ	686	;# 
  6536   0002AF                     U1BRGH          equ	687	;# 
  6537   0002B0                     U1FIFO          equ	688	;# 
  6538   0002B1                     U1UIR           equ	689	;# 
  6539   0002B2                     U1ERRIR         equ	690	;# 
  6540   0002B3                     U1ERRIE         equ	691	;# 
  6541   0002B4                     U2RXB           equ	692	;# 
  6542   0002B4                     U2RXBL          equ	692	;# 
  6543   0002B6                     U2TXB           equ	694	;# 
  6544   0002B6                     U2TXBL          equ	694	;# 
  6545   0002B8                     U2P1            equ	696	;# 
  6546   0002B8                     U2P1L           equ	696	;# 
  6547   0002BA                     U2P2            equ	698	;# 
  6548   0002BA                     U2P2L           equ	698	;# 
  6549   0002BC                     U2P3            equ	700	;# 
  6550   0002BC                     U2P3L           equ	700	;# 
  6551   0002BE                     U2CON0          equ	702	;# 
  6552   0002BF                     U2CON1          equ	703	;# 
  6553   0002C0                     U2CON2          equ	704	;# 
  6554   0002C1                     U2BRG           equ	705	;# 
  6555   0002C1                     U2BRGL          equ	705	;# 
  6556   0002C2                     U2BRGH          equ	706	;# 
  6557   0002C3                     U2FIFO          equ	707	;# 
  6558   0002C4                     U2UIR           equ	708	;# 
  6559   0002C5                     U2ERRIR         equ	709	;# 
  6560   0002C6                     U2ERRIE         equ	710	;# 
  6561   0002C7                     U3RXB           equ	711	;# 
  6562   0002C7                     U3RXBL          equ	711	;# 
  6563   0002C9                     U3TXB           equ	713	;# 
  6564   0002C9                     U3TXBL          equ	713	;# 
  6565   0002CB                     U3P1            equ	715	;# 
  6566   0002CB                     U3P1L           equ	715	;# 
  6567   0002CD                     U3P2            equ	717	;# 
  6568   0002CD                     U3P2L           equ	717	;# 
  6569   0002CF                     U3P3            equ	719	;# 
  6570   0002CF                     U3P3L           equ	719	;# 
  6571   0002D1                     U3CON0          equ	721	;# 
  6572   0002D2                     U3CON1          equ	722	;# 
  6573   0002D3                     U3CON2          equ	723	;# 
  6574   0002D4                     U3BRG           equ	724	;# 
  6575   0002D4                     U3BRGL          equ	724	;# 
  6576   0002D5                     U3BRGH          equ	725	;# 
  6577   0002D6                     U3FIFO          equ	726	;# 
  6578   0002D7                     U3UIR           equ	727	;# 
  6579   0002D8                     U3ERRIR         equ	728	;# 
  6580   0002D9                     U3ERRIE         equ	729	;# 
  6581   0002DA                     U4RXB           equ	730	;# 
  6582   0002DA                     U4RXBL          equ	730	;# 
  6583   0002DC                     U4TXB           equ	732	;# 
  6584   0002DC                     U4TXBL          equ	732	;# 
  6585   0002DE                     U4P1            equ	734	;# 
  6586   0002DE                     U4P1L           equ	734	;# 
  6587   0002E0                     U4P2            equ	736	;# 
  6588   0002E0                     U4P2L           equ	736	;# 
  6589   0002E2                     U4P3            equ	738	;# 
  6590   0002E2                     U4P3L           equ	738	;# 
  6591   0002E4                     U4CON0          equ	740	;# 
  6592   0002E5                     U4CON1          equ	741	;# 
  6593   0002E6                     U4CON2          equ	742	;# 
  6594   0002E7                     U4BRG           equ	743	;# 
  6595   0002E7                     U4BRGL          equ	743	;# 
  6596   0002E8                     U4BRGH          equ	744	;# 
  6597   0002E9                     U4FIFO          equ	745	;# 
  6598   0002EA                     U4UIR           equ	746	;# 
  6599   0002EB                     U4ERRIR         equ	747	;# 
  6600   0002EC                     U4ERRIE         equ	748	;# 
  6601   0002ED                     U5RXB           equ	749	;# 
  6602   0002ED                     U5RXBL          equ	749	;# 
  6603   0002EF                     U5TXB           equ	751	;# 
  6604   0002EF                     U5TXBL          equ	751	;# 
  6605   0002F1                     U5P1            equ	753	;# 
  6606   0002F1                     U5P1L           equ	753	;# 
  6607   0002F3                     U5P2            equ	755	;# 
  6608   0002F3                     U5P2L           equ	755	;# 
  6609   0002F5                     U5P3            equ	757	;# 
  6610   0002F5                     U5P3L           equ	757	;# 
  6611   0002F7                     U5CON0          equ	759	;# 
  6612   0002F8                     U5CON1          equ	760	;# 
  6613   0002F9                     U5CON2          equ	761	;# 
  6614   0002FA                     U5BRG           equ	762	;# 
  6615   0002FA                     U5BRGL          equ	762	;# 
  6616   0002FB                     U5BRGH          equ	763	;# 
  6617   0002FC                     U5FIFO          equ	764	;# 
  6618   0002FD                     U5UIR           equ	765	;# 
  6619   0002FE                     U5ERRIR         equ	766	;# 
  6620   0002FF                     U5ERRIE         equ	767	;# 
  6621   000300                     SMT1TMR         equ	768	;# 
  6622   000300                     SMT1TMRL        equ	768	;# 
  6623   000301                     SMT1TMRH        equ	769	;# 
  6624   000302                     SMT1TMRU        equ	770	;# 
  6625   000303                     SMT1CPR         equ	771	;# 
  6626   000303                     SMT1CPRL        equ	771	;# 
  6627   000304                     SMT1CPRH        equ	772	;# 
  6628   000305                     SMT1CPRU        equ	773	;# 
  6629   000306                     SMT1CPW         equ	774	;# 
  6630   000306                     SMT1CPWL        equ	774	;# 
  6631   000307                     SMT1CPWH        equ	775	;# 
  6632   000308                     SMT1CPWU        equ	776	;# 
  6633   000309                     SMT1PR          equ	777	;# 
  6634   000309                     SMT1PRL         equ	777	;# 
  6635   00030A                     SMT1PRH         equ	778	;# 
  6636   00030B                     SMT1PRU         equ	779	;# 
  6637   00030C                     SMT1CON0        equ	780	;# 
  6638   00030D                     SMT1CON1        equ	781	;# 
  6639   00030E                     SMT1STAT        equ	782	;# 
  6640   00030F                     SMT1CLK         equ	783	;# 
  6641   000310                     SMT1SIG         equ	784	;# 
  6642   000311                     SMT1WIN         equ	785	;# 
  6643   000318                     TMR0L           equ	792	;# 
  6644   000318                     TMR0            equ	792	;# 
  6645   000319                     TMR0H           equ	793	;# 
  6646   000319                     PR0             equ	793	;# 
  6647   00031A                     T0CON0          equ	794	;# 
  6648   00031B                     T0CON1          equ	795	;# 
  6649   00031C                     TMR1            equ	796	;# 
  6650   00031C                     TMR1L           equ	796	;# 
  6651   00031D                     TMR1H           equ	797	;# 
  6652   00031E                     T1CON           equ	798	;# 
  6653   00031E                     TMR1CON         equ	798	;# 
  6654   00031F                     T1GCON          equ	799	;# 
  6655   00031F                     TMR1GCON        equ	799	;# 
  6656   000320                     T1GATE          equ	800	;# 
  6657   000320                     TMR1GATE        equ	800	;# 
  6658   000321                     T1CLK           equ	801	;# 
  6659   000321                     TMR1CLK         equ	801	;# 
  6660   000321                     PR1             equ	801	;# 
  6661   000322                     T2TMR           equ	802	;# 
  6662   000322                     TMR2            equ	802	;# 
  6663   000323                     T2PR            equ	803	;# 
  6664   000323                     PR2             equ	803	;# 
  6665   000324                     T2CON           equ	804	;# 
  6666   000325                     T2HLT           equ	805	;# 
  6667   000326                     T2CLKCON        equ	806	;# 
  6668   000326                     T2CLK           equ	806	;# 
  6669   000327                     T2RST           equ	807	;# 
  6670   000328                     TMR3            equ	808	;# 
  6671   000328                     TMR3L           equ	808	;# 
  6672   000329                     TMR3H           equ	809	;# 
  6673   00032A                     T3CON           equ	810	;# 
  6674   00032A                     TMR3CON         equ	810	;# 
  6675   00032B                     T3GCON          equ	811	;# 
  6676   00032B                     TMR3GCON        equ	811	;# 
  6677   00032C                     T3GATE          equ	812	;# 
  6678   00032C                     TMR3GATE        equ	812	;# 
  6679   00032D                     T3CLK           equ	813	;# 
  6680   00032D                     TMR3CLK         equ	813	;# 
  6681   00032D                     PR3             equ	813	;# 
  6682   00032E                     T4TMR           equ	814	;# 
  6683   00032E                     TMR4            equ	814	;# 
  6684   00032F                     T4PR            equ	815	;# 
  6685   00032F                     PR4             equ	815	;# 
  6686   000330                     T4CON           equ	816	;# 
  6687   000331                     T4HLT           equ	817	;# 
  6688   000332                     T4CLKCON        equ	818	;# 
  6689   000332                     T4CLK           equ	818	;# 
  6690   000333                     T4RST           equ	819	;# 
  6691   000334                     TMR5            equ	820	;# 
  6692   000334                     TMR5L           equ	820	;# 
  6693   000335                     TMR5H           equ	821	;# 
  6694   000336                     T5CON           equ	822	;# 
  6695   000336                     TMR5CON         equ	822	;# 
  6696   000337                     T5GCON          equ	823	;# 
  6697   000337                     TMR5GCON        equ	823	;# 
  6698   000338                     T5GATE          equ	824	;# 
  6699   000338                     TMR5GATE        equ	824	;# 
  6700   000339                     T5CLK           equ	825	;# 
  6701   000339                     TMR5CLK         equ	825	;# 
  6702   000339                     PR5             equ	825	;# 
  6703   00033A                     T6TMR           equ	826	;# 
  6704   00033A                     TMR6            equ	826	;# 
  6705   00033B                     T6PR            equ	827	;# 
  6706   00033B                     PR6             equ	827	;# 
  6707   00033C                     T6CON           equ	828	;# 
  6708   00033D                     T6HLT           equ	829	;# 
  6709   00033E                     T6CLKCON        equ	830	;# 
  6710   00033E                     T6CLK           equ	830	;# 
  6711   00033F                     T6RST           equ	831	;# 
  6712   000340                     CCPR1           equ	832	;# 
  6713   000340                     CCPR1L          equ	832	;# 
  6714   000341                     CCPR1H          equ	833	;# 
  6715   000342                     CCP1CON         equ	834	;# 
  6716   000343                     CCP1CAP         equ	835	;# 
  6717   000344                     CCPR2           equ	836	;# 
  6718   000344                     CCPR2L          equ	836	;# 
  6719   000345                     CCPR2H          equ	837	;# 
  6720   000346                     CCP2CON         equ	838	;# 
  6721   000347                     CCP2CAP         equ	839	;# 
  6722   000348                     CCPR3           equ	840	;# 
  6723   000348                     CCPR3L          equ	840	;# 
  6724   000349                     CCPR3H          equ	841	;# 
  6725   00034A                     CCP3CON         equ	842	;# 
  6726   00034B                     CCP3CAP         equ	843	;# 
  6727   00034C                     CCPTMRS0        equ	844	;# 
  6728   00034F                     CRCDATA         equ	847	;# 
  6729   00034F                     CRCDATL         equ	847	;# 
  6730   000350                     CRCDATH         equ	848	;# 
  6731   000351                     CRCACC          equ	849	;# 
  6732   000351                     CRCACCL         equ	849	;# 
  6733   000352                     CRCACCH         equ	850	;# 
  6734   000353                     CRCSHFT         equ	851	;# 
  6735   000353                     CRCSHIFTL       equ	851	;# 
  6736   000354                     CRCSHIFTH       equ	852	;# 
  6737   000355                     CRCXOR          equ	853	;# 
  6738   000355                     CRCXORL         equ	853	;# 
  6739   000356                     CRCXORH         equ	854	;# 
  6740   000357                     CRCCON0         equ	855	;# 
  6741   000358                     CRCCON1         equ	856	;# 
  6742   00035A                     SCANLADR        equ	858	;# 
  6743   00035A                     SCANLADRL       equ	858	;# 
  6744   00035B                     SCANLADRH       equ	859	;# 
  6745   00035C                     SCANLADRU       equ	860	;# 
  6746   00035D                     SCANHADR        equ	861	;# 
  6747   00035D                     SCANHADRL       equ	861	;# 
  6748   00035E                     SCANHADRH       equ	862	;# 
  6749   00035F                     SCANHADRU       equ	863	;# 
  6750   000360                     SCANCON0        equ	864	;# 
  6751   000361                     SCANTRIG        equ	865	;# 
  6752   000362                     IPR0            equ	866	;# 
  6753   000363                     IPR1            equ	867	;# 
  6754   000364                     IPR2            equ	868	;# 
  6755   000365                     IPR3            equ	869	;# 
  6756   000366                     IPR4            equ	870	;# 
  6757   000367                     IPR5            equ	871	;# 
  6758   000368                     IPR6            equ	872	;# 
  6759   000369                     IPR7            equ	873	;# 
  6760   00036A                     IPR8            equ	874	;# 
  6761   00036B                     IPR9            equ	875	;# 
  6762   00036C                     IPR10           equ	876	;# 
  6763   00036D                     IPR11           equ	877	;# 
  6764   00036E                     IPR12           equ	878	;# 
  6765   00036F                     IPR13           equ	879	;# 
  6766   000370                     IPR14           equ	880	;# 
  6767   000371                     IPR15           equ	881	;# 
  6768   000373                     STATUS_CSHAD    equ	883	;# 
  6769   000374                     WREG_CSHAD      equ	884	;# 
  6770   000375                     BSR_CSHAD       equ	885	;# 
  6771   000376                     SHADCON         equ	886	;# 
  6772   000377                     STATUS_SHAD     equ	887	;# 
  6773   000378                     WREG_SHAD       equ	888	;# 
  6774   000379                     BSR_SHAD        equ	889	;# 
  6775   00037A                     PCLATH_SHAD     equ	890	;# 
  6776   00037B                     PCLATU_SHAD     equ	891	;# 
  6777   00037C                     FSR0SH          equ	892	;# 
  6778   00037C                     FSR0L_SHAD      equ	892	;# 
  6779   00037D                     FSR0H_SHAD      equ	893	;# 
  6780   00037E                     FSR1SH          equ	894	;# 
  6781   00037E                     FSR1L_SHAD      equ	894	;# 
  6782   00037F                     FSR1H_SHAD      equ	895	;# 
  6783   000380                     FSR2SH          equ	896	;# 
  6784   000380                     FSR2L_SHAD      equ	896	;# 
  6785   000381                     FSR2H_SHAD      equ	897	;# 
  6786   000382                     PRODSH          equ	898	;# 
  6787   000382                     PRODL_SHAD      equ	898	;# 
  6788   000383                     PRODH_SHAD      equ	899	;# 
  6789   0003BC                     CWG1CLK         equ	956	;# 
  6790   0003BC                     CWG1CLKCON      equ	956	;# 
  6791   0003BD                     CWG1ISM         equ	957	;# 
  6792   0003BD                     CWG1DAT         equ	957	;# 
  6793   0003BE                     CWG1DBR         equ	958	;# 
  6794   0003BF                     CWG1DBF         equ	959	;# 
  6795   0003C0                     CWG1CON0        equ	960	;# 
  6796   0003C1                     CWG1CON1        equ	961	;# 
  6797   0003C2                     CWG1AS0         equ	962	;# 
  6798   0003C3                     CWG1AS1         equ	963	;# 
  6799   0003C4                     CWG1STR         equ	964	;# 
  6800   0003C5                     CWG2CLK         equ	965	;# 
  6801   0003C5                     CWG2CLKCON      equ	965	;# 
  6802   0003C6                     CWG2ISM         equ	966	;# 
  6803   0003C6                     CWG2DAT         equ	966	;# 
  6804   0003C7                     CWG2DBR         equ	967	;# 
  6805   0003C8                     CWG2DBF         equ	968	;# 
  6806   0003C9                     CWG2CON0        equ	969	;# 
  6807   0003CA                     CWG2CON1        equ	970	;# 
  6808   0003CB                     CWG2AS0         equ	971	;# 
  6809   0003CC                     CWG2AS1         equ	972	;# 
  6810   0003CD                     CWG2STR         equ	973	;# 
  6811   0003CE                     CWG3CLK         equ	974	;# 
  6812   0003CE                     CWG3CLKCON      equ	974	;# 
  6813   0003CF                     CWG3ISM         equ	975	;# 
  6814   0003CF                     CWG3DAT         equ	975	;# 
  6815   0003D0                     CWG3DBR         equ	976	;# 
  6816   0003D1                     CWG3DBF         equ	977	;# 
  6817   0003D2                     CWG3CON0        equ	978	;# 
  6818   0003D3                     CWG3CON1        equ	979	;# 
  6819   0003D4                     CWG3AS0         equ	980	;# 
  6820   0003D5                     CWG3AS1         equ	981	;# 
  6821   0003D6                     CWG3STR         equ	982	;# 
  6822   0003D7                     FVRCON          equ	983	;# 
  6823   0003D8                     ADCPCON         equ	984	;# 
  6824   0003D8                     ADCP            equ	984	;# 
  6825   0003D9                     ADLTH           equ	985	;# 
  6826   0003D9                     ADLTHL          equ	985	;# 
  6827   0003DA                     ADLTHH          equ	986	;# 
  6828   0003DB                     ADUTH           equ	987	;# 
  6829   0003DB                     ADUTHL          equ	987	;# 
  6830   0003DC                     ADUTHH          equ	988	;# 
  6831   0003DD                     ADERR           equ	989	;# 
  6832   0003DD                     ADERRL          equ	989	;# 
  6833   0003DE                     ADERRH          equ	990	;# 
  6834   0003DF                     ADSTPT          equ	991	;# 
  6835   0003DF                     ADSTPTL         equ	991	;# 
  6836   0003E0                     ADSTPTH         equ	992	;# 
  6837   0003E1                     ADFLTR          equ	993	;# 
  6838   0003E1                     ADFLTRL         equ	993	;# 
  6839   0003E2                     ADFLTRH         equ	994	;# 
  6840   0003E3                     ADACC           equ	995	;# 
  6841   0003E3                     ADACCL          equ	995	;# 
  6842   0003E4                     ADACCH          equ	996	;# 
  6843   0003E5                     ADACCU          equ	997	;# 
  6844   0003E6                     ADCNT           equ	998	;# 
  6845   0003E7                     ADRPT           equ	999	;# 
  6846   0003E8                     ADPREV          equ	1000	;# 
  6847   0003E8                     ADPREVL         equ	1000	;# 
  6848   0003E9                     ADPREVH         equ	1001	;# 
  6849   0003EA                     ADRES           equ	1002	;# 
  6850   0003EA                     ADRESL          equ	1002	;# 
  6851   0003EB                     ADRESH          equ	1003	;# 
  6852   0003EC                     ADPCH           equ	1004	;# 
  6853   0003EE                     ADACQ           equ	1006	;# 
  6854   0003EE                     ADACQL          equ	1006	;# 
  6855   0003EF                     ADACQH          equ	1007	;# 
  6856   0003F0                     ADCAP           equ	1008	;# 
  6857   0003F1                     ADPRE           equ	1009	;# 
  6858   0003F1                     ADPREL          equ	1009	;# 
  6859   0003F2                     ADPREH          equ	1010	;# 
  6860   0003F3                     ADCON0          equ	1011	;# 
  6861   0003F4                     ADCON1          equ	1012	;# 
  6862   0003F5                     ADCON2          equ	1013	;# 
  6863   0003F6                     ADCON3          equ	1014	;# 
  6864   0003F7                     ADSTAT          equ	1015	;# 
  6865   0003F8                     ADREF           equ	1016	;# 
  6866   0003F9                     ADACT           equ	1017	;# 
  6867   0003FA                     ADCLK           equ	1018	;# 
  6868   000400                     ANSELA          equ	1024	;# 
  6869   000401                     WPUA            equ	1025	;# 
  6870   000402                     ODCONA          equ	1026	;# 
  6871   000403                     SLRCONA         equ	1027	;# 
  6872   000404                     INLVLA          equ	1028	;# 
  6873   000405                     IOCAP           equ	1029	;# 
  6874   000406                     IOCAN           equ	1030	;# 
  6875   000407                     IOCAF           equ	1031	;# 
  6876   000408                     ANSELB          equ	1032	;# 
  6877   000409                     WPUB            equ	1033	;# 
  6878   00040A                     ODCONB          equ	1034	;# 
  6879   00040B                     SLRCONB         equ	1035	;# 
  6880   00040C                     INLVLB          equ	1036	;# 
  6881   00040D                     IOCBP           equ	1037	;# 
  6882   00040E                     IOCBN           equ	1038	;# 
  6883   00040F                     IOCBF           equ	1039	;# 
  6884   000410                     ANSELC          equ	1040	;# 
  6885   000411                     WPUC            equ	1041	;# 
  6886   000412                     ODCONC          equ	1042	;# 
  6887   000413                     SLRCONC         equ	1043	;# 
  6888   000414                     INLVLC          equ	1044	;# 
  6889   000415                     IOCCP           equ	1045	;# 
  6890   000416                     IOCCN           equ	1046	;# 
  6891   000417                     IOCCF           equ	1047	;# 
  6892   000418                     ANSELD          equ	1048	;# 
  6893   000419                     WPUD            equ	1049	;# 
  6894   00041A                     ODCOND          equ	1050	;# 
  6895   00041B                     SLRCOND         equ	1051	;# 
  6896   00041C                     INLVLD          equ	1052	;# 
  6897   000420                     ANSELE          equ	1056	;# 
  6898   000421                     WPUE            equ	1057	;# 
  6899   000422                     ODCONE          equ	1058	;# 
  6900   000423                     SLRCONE         equ	1059	;# 
  6901   000424                     INLVLE          equ	1060	;# 
  6902   000425                     IOCEP           equ	1061	;# 
  6903   000426                     IOCEN           equ	1062	;# 
  6904   000427                     IOCEF           equ	1063	;# 
  6905   000428                     ANSELF          equ	1064	;# 
  6906   000429                     WPUF            equ	1065	;# 
  6907   00042A                     ODCONF          equ	1066	;# 
  6908   00042B                     SLRCONF         equ	1067	;# 
  6909   00042C                     INLVLF          equ	1068	;# 
  6910   000440                     NCO1ACC         equ	1088	;# 
  6911   000440                     NCO1ACCL        equ	1088	;# 
  6912   000441                     NCO1ACCH        equ	1089	;# 
  6913   000442                     NCO1ACCU        equ	1090	;# 
  6914   000443                     NCO1INC         equ	1091	;# 
  6915   000443                     NCO1INCL        equ	1091	;# 
  6916   000444                     NCO1INCH        equ	1092	;# 
  6917   000445                     NCO1INCU        equ	1093	;# 
  6918   000446                     NCO1CON         equ	1094	;# 
  6919   000447                     NCO1CLK         equ	1095	;# 
  6920   000448                     NCO2ACC         equ	1096	;# 
  6921   000448                     NCO2ACCL        equ	1096	;# 
  6922   000449                     NCO2ACCH        equ	1097	;# 
  6923   00044A                     NCO2ACCU        equ	1098	;# 
  6924   00044B                     NCO2INC         equ	1099	;# 
  6925   00044B                     NCO2INCL        equ	1099	;# 
  6926   00044C                     NCO2INCH        equ	1100	;# 
  6927   00044D                     NCO2INCU        equ	1101	;# 
  6928   00044E                     NCO2CON         equ	1102	;# 
  6929   00044F                     NCO2CLK         equ	1103	;# 
  6930   000450                     NCO3ACC         equ	1104	;# 
  6931   000450                     NCO3ACCL        equ	1104	;# 
  6932   000451                     NCO3ACCH        equ	1105	;# 
  6933   000452                     NCO3ACCU        equ	1106	;# 
  6934   000453                     NCO3INC         equ	1107	;# 
  6935   000453                     NCO3INCL        equ	1107	;# 
  6936   000454                     NCO3INCH        equ	1108	;# 
  6937   000455                     NCO3INCU        equ	1109	;# 
  6938   000456                     NCO3CON         equ	1110	;# 
  6939   000457                     NCO3CLK         equ	1111	;# 
  6940   000459                     IVTLOCK         equ	1113	;# 
  6941   00045A                     IVTAD           equ	1114	;# 
  6942   00045A                     IVTADL          equ	1114	;# 
  6943   00045B                     IVTADH          equ	1115	;# 
  6944   00045C                     IVTADU          equ	1116	;# 
  6945   00045D                     IVTBASE         equ	1117	;# 
  6946   00045D                     IVTBASEL        equ	1117	;# 
  6947   00045E                     IVTBASEH        equ	1118	;# 
  6948   00045F                     IVTBASEU        equ	1119	;# 
  6949   000460                     PWM1ERS         equ	1120	;# 
  6950   000461                     PWM1CLK         equ	1121	;# 
  6951   000462                     PWM1LDS         equ	1122	;# 
  6952   000463                     PWM1PR          equ	1123	;# 
  6953   000463                     PWM1PRL         equ	1123	;# 
  6954   000464                     PWM1PRH         equ	1124	;# 
  6955   000465                     PWM1CPRE        equ	1125	;# 
  6956   000466                     PWM1PIPOS       equ	1126	;# 
  6957   000467                     PWM1GIR         equ	1127	;# 
  6958   000468                     PWM1GIE         equ	1128	;# 
  6959   000469                     PWM1CON         equ	1129	;# 
  6960   00046A                     PWM1S1CFG       equ	1130	;# 
  6961   00046B                     PWM1S1P1        equ	1131	;# 
  6962   00046B                     PWM1S1P1L       equ	1131	;# 
  6963   00046C                     PWM1S1P1H       equ	1132	;# 
  6964   00046D                     PWM1S1P2        equ	1133	;# 
  6965   00046D                     PWM1S1P2L       equ	1133	;# 
  6966   00046E                     PWM1S1P2H       equ	1134	;# 
  6967   00046F                     PWM2ERS         equ	1135	;# 
  6968   000470                     PWM2CLK         equ	1136	;# 
  6969   000471                     PWM2LDS         equ	1137	;# 
  6970   000472                     PWM2PR          equ	1138	;# 
  6971   000472                     PWM2PRL         equ	1138	;# 
  6972   000473                     PWM2PRH         equ	1139	;# 
  6973   000474                     PWM2CPRE        equ	1140	;# 
  6974   000475                     PWM2PIPOS       equ	1141	;# 
  6975   000476                     PWM2GIR         equ	1142	;# 
  6976   000477                     PWM2GIE         equ	1143	;# 
  6977   000478                     PWM2CON         equ	1144	;# 
  6978   000479                     PWM2S1CFG       equ	1145	;# 
  6979   00047A                     PWM2S1P1        equ	1146	;# 
  6980   00047A                     PWM2S1P1L       equ	1146	;# 
  6981   00047B                     PWM2S1P1H       equ	1147	;# 
  6982   00047C                     PWM2S1P2        equ	1148	;# 
  6983   00047C                     PWM2S1P2L       equ	1148	;# 
  6984   00047D                     PWM2S1P2H       equ	1149	;# 
  6985   00047E                     PWM3ERS         equ	1150	;# 
  6986   00047F                     PWM3CLK         equ	1151	;# 
  6987   000480                     PWM3LDS         equ	1152	;# 
  6988   000481                     PWM3PR          equ	1153	;# 
  6989   000481                     PWM3PRL         equ	1153	;# 
  6990   000482                     PWM3PRH         equ	1154	;# 
  6991   000483                     PWM3CPRE        equ	1155	;# 
  6992   000484                     PWM3PIPOS       equ	1156	;# 
  6993   000485                     PWM3GIR         equ	1157	;# 
  6994   000486                     PWM3GIE         equ	1158	;# 
  6995   000487                     PWM3CON         equ	1159	;# 
  6996   000488                     PWM3S1CFG       equ	1160	;# 
  6997   000489                     PWM3S1P1        equ	1161	;# 
  6998   000489                     PWM3S1P1L       equ	1161	;# 
  6999   00048A                     PWM3S1P1H       equ	1162	;# 
  7000   00048B                     PWM3S1P2        equ	1163	;# 
  7001   00048B                     PWM3S1P2L       equ	1163	;# 
  7002   00048C                     PWM3S1P2H       equ	1164	;# 
  7003   00049C                     PWMLOAD         equ	1180	;# 
  7004   00049D                     PWMEN           equ	1181	;# 
  7005   00049E                     PIE0            equ	1182	;# 
  7006   00049F                     PIE1            equ	1183	;# 
  7007   0004A0                     PIE2            equ	1184	;# 
  7008   0004A1                     PIE3            equ	1185	;# 
  7009   0004A2                     PIE4            equ	1186	;# 
  7010   0004A3                     PIE5            equ	1187	;# 
  7011   0004A4                     PIE6            equ	1188	;# 
  7012   0004A5                     PIE7            equ	1189	;# 
  7013   0004A6                     PIE8            equ	1190	;# 
  7014   0004A7                     PIE9            equ	1191	;# 
  7015   0004A8                     PIE10           equ	1192	;# 
  7016   0004A9                     PIE11           equ	1193	;# 
  7017   0004AA                     PIE12           equ	1194	;# 
  7018   0004AB                     PIE13           equ	1195	;# 
  7019   0004AC                     PIE14           equ	1196	;# 
  7020   0004AD                     PIE15           equ	1197	;# 
  7021   0004AE                     PIR0            equ	1198	;# 
  7022   0004AF                     PIR1            equ	1199	;# 
  7023   0004B0                     PIR2            equ	1200	;# 
  7024   0004B1                     PIR3            equ	1201	;# 
  7025   0004B2                     PIR4            equ	1202	;# 
  7026   0004B3                     PIR5            equ	1203	;# 
  7027   0004B4                     PIR6            equ	1204	;# 
  7028   0004B5                     PIR7            equ	1205	;# 
  7029   0004B6                     PIR8            equ	1206	;# 
  7030   0004B7                     PIR9            equ	1207	;# 
  7031   0004B8                     PIR10           equ	1208	;# 
  7032   0004B9                     PIR11           equ	1209	;# 
  7033   0004BA                     PIR12           equ	1210	;# 
  7034   0004BB                     PIR13           equ	1211	;# 
  7035   0004BC                     PIR14           equ	1212	;# 
  7036   0004BD                     PIR15           equ	1213	;# 
  7037   0004BE                     LATA            equ	1214	;# 
  7038   0004BF                     LATB            equ	1215	;# 
  7039   0004C0                     LATC            equ	1216	;# 
  7040   0004C1                     LATD            equ	1217	;# 
  7041   0004C2                     LATE            equ	1218	;# 
  7042   0004C3                     LATF            equ	1219	;# 
  7043   0004C6                     TRISA           equ	1222	;# 
  7044   0004C7                     TRISB           equ	1223	;# 
  7045   0004C8                     TRISC           equ	1224	;# 
  7046   0004C9                     TRISD           equ	1225	;# 
  7047   0004CA                     TRISE           equ	1226	;# 
  7048   0004CB                     TRISF           equ	1227	;# 
  7049   0004CE                     PORTA           equ	1230	;# 
  7050   0004CF                     PORTB           equ	1231	;# 
  7051   0004D0                     PORTC           equ	1232	;# 
  7052   0004D1                     PORTD           equ	1233	;# 
  7053   0004D2                     PORTE           equ	1234	;# 
  7054   0004D3                     PORTF           equ	1235	;# 
  7055   0004D6                     INTCON0         equ	1238	;# 
  7056   0004D7                     INTCON1         equ	1239	;# 
  7057   0004D8                     STATUS          equ	1240	;# 
  7058   0004D9                     FSR2            equ	1241	;# 
  7059   0004D9                     FSR2L           equ	1241	;# 
  7060   0004DA                     FSR2H           equ	1242	;# 
  7061   0004DB                     PLUSW2          equ	1243	;# 
  7062   0004DC                     PREINC2         equ	1244	;# 
  7063   0004DD                     POSTDEC2        equ	1245	;# 
  7064   0004DE                     POSTINC2        equ	1246	;# 
  7065   0004DF                     INDF2           equ	1247	;# 
  7066   0004E0                     BSR             equ	1248	;# 
  7067   0004E1                     FSR1            equ	1249	;# 
  7068   0004E1                     FSR1L           equ	1249	;# 
  7069   0004E2                     FSR1H           equ	1250	;# 
  7070   0004E3                     PLUSW1          equ	1251	;# 
  7071   0004E4                     PREINC1         equ	1252	;# 
  7072   0004E5                     POSTDEC1        equ	1253	;# 
  7073   0004E6                     POSTINC1        equ	1254	;# 
  7074   0004E7                     INDF1           equ	1255	;# 
  7075   0004E8                     WREG            equ	1256	;# 
  7076   0004E9                     FSR0            equ	1257	;# 
  7077   0004E9                     FSR0L           equ	1257	;# 
  7078   0004EA                     FSR0H           equ	1258	;# 
  7079   0004EB                     PLUSW0          equ	1259	;# 
  7080   0004EC                     PREINC0         equ	1260	;# 
  7081   0004ED                     POSTDEC0        equ	1261	;# 
  7082   0004EE                     POSTINC0        equ	1262	;# 
  7083   0004EF                     INDF0           equ	1263	;# 
  7084   0004F0                     PCON0           equ	1264	;# 
  7085   0004F1                     PCON1           equ	1265	;# 
  7086   0004F2                     CPUDOZE         equ	1266	;# 
  7087   0004F3                     PROD            equ	1267	;# 
  7088   0004F3                     PRODL           equ	1267	;# 
  7089   0004F4                     PRODH           equ	1268	;# 
  7090   0004F5                     TABLAT          equ	1269	;# 
  7091   0004F6                     TBLPTR          equ	1270	;# 
  7092   0004F6                     TBLPTRL         equ	1270	;# 
  7093   0004F7                     TBLPTRH         equ	1271	;# 
  7094   0004F8                     TBLPTRU         equ	1272	;# 
  7095   0004F9                     PCLAT           equ	1273	;# 
  7096   0004F9                     PCL             equ	1273	;# 
  7097   0004FA                     PCLATH          equ	1274	;# 
  7098   0004FB                     PCLATU          equ	1275	;# 
  7099   0004FC                     STKPTR          equ	1276	;# 
  7100   0004FD                     TOS             equ	1277	;# 
  7101   0004FD                     TOSL            equ	1277	;# 
  7102   0004FE                     TOSH            equ	1278	;# 
  7103   0004FF                     TOSU            equ	1279	;# 
  7104   000039                     CLKRCON         equ	57	;# 
  7105   00003A                     CLKRCLK         equ	58	;# 
  7106   000040                     NVMCON0         equ	64	;# 
  7107   000041                     NVMCON1         equ	65	;# 
  7108   000042                     NVMLOCK         equ	66	;# 
  7109   000043                     NVMADR          equ	67	;# 
  7110   000043                     NVMADRL         equ	67	;# 
  7111   000044                     NVMADRH         equ	68	;# 
  7112   000045                     NVMADRU         equ	69	;# 
  7113   000046                     NVMDAT          equ	70	;# 
  7114   000046                     NVMDATL         equ	70	;# 
  7115   000047                     NVMDATH         equ	71	;# 
  7116   000048                     VREGCON         equ	72	;# 
  7117   000049                     BORCON          equ	73	;# 
  7118   00004A                     HLVDCON0        equ	74	;# 
  7119   00004B                     HLVDCON1        equ	75	;# 
  7120   00004C                     ZCDCON          equ	76	;# 
  7121   000060                     PMD0            equ	96	;# 
  7122   000061                     PMD1            equ	97	;# 
  7123   000063                     PMD3            equ	99	;# 
  7124   000064                     PMD4            equ	100	;# 
  7125   000065                     PMD5            equ	101	;# 
  7126   000066                     PMD6            equ	102	;# 
  7127   000067                     PMD7            equ	103	;# 
  7128   000068                     PMD8            equ	104	;# 
  7129   00006A                     MD1CON0         equ	106	;# 
  7130   00006B                     MD1CON1         equ	107	;# 
  7131   00006C                     MD1SRC          equ	108	;# 
  7132   00006D                     MD1CARL         equ	109	;# 
  7133   00006E                     MD1CARH         equ	110	;# 
  7134   00006F                     CMOUT           equ	111	;# 
  7135   000070                     CM1CON0         equ	112	;# 
  7136   000071                     CM1CON1         equ	113	;# 
  7137   000072                     CM1NCH          equ	114	;# 
  7138   000073                     CM1PCH          equ	115	;# 
  7139   000074                     CM2CON0         equ	116	;# 
  7140   000075                     CM2CON1         equ	117	;# 
  7141   000076                     CM2NCH          equ	118	;# 
  7142   000077                     CM2PCH          equ	119	;# 
  7143   000078                     WDTCON0         equ	120	;# 
  7144   000079                     WDTCON1         equ	121	;# 
  7145   00007A                     WDTPS           equ	122	;# 
  7146   00007A                     WDTPSL          equ	122	;# 
  7147   00007B                     WDTPSH          equ	123	;# 
  7148   00007C                     WDTTMR          equ	124	;# 
  7149   00007D                     DAC1DAT         equ	125	;# 
  7150   00007D                     DAC1DATL        equ	125	;# 
  7151   00007F                     DAC1CON         equ	127	;# 
  7152   000080                     SPI1RXB         equ	128	;# 
  7153   000081                     SPI1TXB         equ	129	;# 
  7154   000082                     SPI1TCNT        equ	130	;# 
  7155   000082                     SPI1TCNTL       equ	130	;# 
  7156   000083                     SPI1TCNTH       equ	131	;# 
  7157   000084                     SPI1CON0        equ	132	;# 
  7158   000085                     SPI1CON1        equ	133	;# 
  7159   000086                     SPI1CON2        equ	134	;# 
  7160   000087                     SPI1STATUS      equ	135	;# 
  7161   000088                     SPI1TWIDTH      equ	136	;# 
  7162   000089                     SPI1BAUD        equ	137	;# 
  7163   00008A                     SPI1INTF        equ	138	;# 
  7164   00008B                     SPI1INTE        equ	139	;# 
  7165   00008C                     SPI1CLK         equ	140	;# 
  7166   00008D                     SPI2RXB         equ	141	;# 
  7167   00008E                     SPI2TXB         equ	142	;# 
  7168   00008F                     SPI2TCNT        equ	143	;# 
  7169   00008F                     SPI2TCNTL       equ	143	;# 
  7170   000090                     SPI2TCNTH       equ	144	;# 
  7171   000091                     SPI2CON0        equ	145	;# 
  7172   000092                     SPI2CON1        equ	146	;# 
  7173   000093                     SPI2CON2        equ	147	;# 
  7174   000094                     SPI2STATUS      equ	148	;# 
  7175   000095                     SPI2TWIDTH      equ	149	;# 
  7176   000096                     SPI2BAUD        equ	150	;# 
  7177   000097                     SPI2INTF        equ	151	;# 
  7178   000098                     SPI2INTE        equ	152	;# 
  7179   000099                     SPI2CLK         equ	153	;# 
  7180   0000AC                     ACTCON          equ	172	;# 
  7181   0000AD                     OSCCON1         equ	173	;# 
  7182   0000AE                     OSCCON2         equ	174	;# 
  7183   0000AF                     OSCCON3         equ	175	;# 
  7184   0000B0                     OSCTUNE         equ	176	;# 
  7185   0000B1                     OSCFRQ          equ	177	;# 
  7186   0000B1                     OSCFREQ         equ	177	;# 
  7187   0000B2                     OSCSTAT         equ	178	;# 
  7188   0000B2                     OSCSTAT1        equ	178	;# 
  7189   0000B3                     OSCEN           equ	179	;# 
  7190   0000B4                     PRLOCK          equ	180	;# 
  7191   0000B5                     SCANPR          equ	181	;# 
  7192   0000B6                     DMA1PR          equ	182	;# 
  7193   0000B7                     DMA2PR          equ	183	;# 
  7194   0000B8                     DMA3PR          equ	184	;# 
  7195   0000B9                     DMA4PR          equ	185	;# 
  7196   0000BA                     DMA5PR          equ	186	;# 
  7197   0000BB                     DMA6PR          equ	187	;# 
  7198   0000BE                     MAINPR          equ	190	;# 
  7199   0000BF                     ISRPR           equ	191	;# 
  7200   0000D4                     CLCDATA         equ	212	;# 
  7201   0000D5                     CLCSELECT       equ	213	;# 
  7202   0000D6                     CLCnCON         equ	214	;# 
  7203   0000D7                     CLCnPOL         equ	215	;# 
  7204   0000D8                     CLCnSEL0        equ	216	;# 
  7205   0000D9                     CLCnSEL1        equ	217	;# 
  7206   0000DA                     CLCnSEL2        equ	218	;# 
  7207   0000DB                     CLCnSEL3        equ	219	;# 
  7208   0000DC                     CLCnGLS0        equ	220	;# 
  7209   0000DD                     CLCnGLS1        equ	221	;# 
  7210   0000DE                     CLCnGLS2        equ	222	;# 
  7211   0000DF                     CLCnGLS3        equ	223	;# 
  7212   0000E8                     DMASELECT       equ	232	;# 
  7213   0000E9                     DMAnBUF         equ	233	;# 
  7214   0000EA                     DMAnDCNT        equ	234	;# 
  7215   0000EA                     DMAnDCNTL       equ	234	;# 
  7216   0000EB                     DMAnDCNTH       equ	235	;# 
  7217   0000EC                     DMAnDPTR        equ	236	;# 
  7218   0000EC                     DMAnDPTRL       equ	236	;# 
  7219   0000ED                     DMAnDPTRH       equ	237	;# 
  7220   0000EE                     DMAnDSZ         equ	238	;# 
  7221   0000EE                     DMAnDSZL        equ	238	;# 
  7222   0000EF                     DMAnDSZH        equ	239	;# 
  7223   0000F0                     DMAnDSA         equ	240	;# 
  7224   0000F0                     DMAnDSAL        equ	240	;# 
  7225   0000F1                     DMAnDSAH        equ	241	;# 
  7226   0000F2                     DMAnSCNT        equ	242	;# 
  7227   0000F2                     DMAnSCNTL       equ	242	;# 
  7228   0000F3                     DMAnSCNTH       equ	243	;# 
  7229   0000F4                     DMAnSPTR        equ	244	;# 
  7230   0000F4                     DMAnSPTRL       equ	244	;# 
  7231   0000F5                     DMAnSPTRH       equ	245	;# 
  7232   0000F6                     DMAnSPTRU       equ	246	;# 
  7233   0000F7                     DMAnSSZ         equ	247	;# 
  7234   0000F7                     DMAnSSZL        equ	247	;# 
  7235   0000F8                     DMAnSSZH        equ	248	;# 
  7236   0000F9                     DMAnSSA         equ	249	;# 
  7237   0000F9                     DMAnSSAL        equ	249	;# 
  7238   0000FA                     DMAnSSAH        equ	250	;# 
  7239   0000FB                     DMAnSSAU        equ	251	;# 
  7240   0000FC                     DMAnCON0        equ	252	;# 
  7241   0000FD                     DMAnCON1        equ	253	;# 
  7242   0000FE                     DMAnAIRQ        equ	254	;# 
  7243   0000FF                     DMAnSIRQ        equ	255	;# 
  7244   000200                     PPSLOCK         equ	512	;# 
  7245   000201                     RA0PPS          equ	513	;# 
  7246   000202                     RA1PPS          equ	514	;# 
  7247   000203                     RA2PPS          equ	515	;# 
  7248   000204                     RA3PPS          equ	516	;# 
  7249   000205                     RA4PPS          equ	517	;# 
  7250   000206                     RA5PPS          equ	518	;# 
  7251   000207                     RA6PPS          equ	519	;# 
  7252   000208                     RA7PPS          equ	520	;# 
  7253   000209                     RB0PPS          equ	521	;# 
  7254   00020A                     RB1PPS          equ	522	;# 
  7255   00020B                     RB2PPS          equ	523	;# 
  7256   00020C                     RB3PPS          equ	524	;# 
  7257   00020D                     RB4PPS          equ	525	;# 
  7258   00020E                     RB5PPS          equ	526	;# 
  7259   00020F                     RB6PPS          equ	527	;# 
  7260   000210                     RB7PPS          equ	528	;# 
  7261   000211                     RC0PPS          equ	529	;# 
  7262   000212                     RC1PPS          equ	530	;# 
  7263   000213                     RC2PPS          equ	531	;# 
  7264   000214                     RC3PPS          equ	532	;# 
  7265   000215                     RC4PPS          equ	533	;# 
  7266   000216                     RC5PPS          equ	534	;# 
  7267   000217                     RC6PPS          equ	535	;# 
  7268   000218                     RC7PPS          equ	536	;# 
  7269   000219                     RD0PPS          equ	537	;# 
  7270   00021A                     RD1PPS          equ	538	;# 
  7271   00021B                     RD2PPS          equ	539	;# 
  7272   00021C                     RD3PPS          equ	540	;# 
  7273   00021D                     RD4PPS          equ	541	;# 
  7274   00021E                     RD5PPS          equ	542	;# 
  7275   00021F                     RD6PPS          equ	543	;# 
  7276   000220                     RD7PPS          equ	544	;# 
  7277   000221                     RE0PPS          equ	545	;# 
  7278   000222                     RE1PPS          equ	546	;# 
  7279   000223                     RE2PPS          equ	547	;# 
  7280   000229                     RF0PPS          equ	553	;# 
  7281   00022A                     RF1PPS          equ	554	;# 
  7282   00022B                     RF2PPS          equ	555	;# 
  7283   00022C                     RF3PPS          equ	556	;# 
  7284   00022D                     RF4PPS          equ	557	;# 
  7285   00022E                     RF5PPS          equ	558	;# 
  7286   00022F                     RF6PPS          equ	559	;# 
  7287   000230                     RF7PPS          equ	560	;# 
  7288   00023E                     INT0PPS         equ	574	;# 
  7289   00023F                     INT1PPS         equ	575	;# 
  7290   000240                     INT2PPS         equ	576	;# 
  7291   000241                     T0CKIPPS        equ	577	;# 
  7292   000242                     T1CKIPPS        equ	578	;# 
  7293   000243                     T1GPPS          equ	579	;# 
  7294   000244                     T3CKIPPS        equ	580	;# 
  7295   000245                     T3GPPS          equ	581	;# 
  7296   000246                     T5CKIPPS        equ	582	;# 
  7297   000247                     T5GPPS          equ	583	;# 
  7298   000248                     T2INPPS         equ	584	;# 
  7299   000249                     T4INPPS         equ	585	;# 
  7300   00024A                     T6INPPS         equ	586	;# 
  7301   00024F                     CCP1PPS         equ	591	;# 
  7302   000250                     CCP2PPS         equ	592	;# 
  7303   000251                     CCP3PPS         equ	593	;# 
  7304   000253                     PWM1ERSPPS      equ	595	;# 
  7305   000254                     PWM2ERSPPS      equ	596	;# 
  7306   000255                     PWM3ERSPPS      equ	597	;# 
  7307   000257                     PWMIN0PPS       equ	599	;# 
  7308   000258                     PWMIN1PPS       equ	600	;# 
  7309   000259                     SMT1WINPPS      equ	601	;# 
  7310   00025A                     SMT1SIGPPS      equ	602	;# 
  7311   00025B                     CWG1PPS         equ	603	;# 
  7312   00025B                     CWG1INPPS       equ	603	;# 
  7313   00025C                     CWG2PPS         equ	604	;# 
  7314   00025C                     CWG2INPPS       equ	604	;# 
  7315   00025D                     CWG3PPS         equ	605	;# 
  7316   00025D                     CWG3INPPS       equ	605	;# 
  7317   00025E                     MD1CARLPPS      equ	606	;# 
  7318   00025E                     MDCARLPPS       equ	606	;# 
  7319   00025F                     MD1CARHPPS      equ	607	;# 
  7320   00025F                     MDCARHPPS       equ	607	;# 
  7321   000260                     MD1SRCPPS       equ	608	;# 
  7322   000260                     MDSRCPPS        equ	608	;# 
  7323   000261                     CLCIN0PPS       equ	609	;# 
  7324   000262                     CLCIN1PPS       equ	610	;# 
  7325   000263                     CLCIN2PPS       equ	611	;# 
  7326   000264                     CLCIN3PPS       equ	612	;# 
  7327   000265                     CLCIN4PPS       equ	613	;# 
  7328   000266                     CLCIN5PPS       equ	614	;# 
  7329   000267                     CLCIN6PPS       equ	615	;# 
  7330   000268                     CLCIN7PPS       equ	616	;# 
  7331   000269                     ADACTPPS        equ	617	;# 
  7332   00026A                     SPI1SCKPPS      equ	618	;# 
  7333   00026B                     SPI1SDIPPS      equ	619	;# 
  7334   00026C                     SPI1SSPPS       equ	620	;# 
  7335   00026D                     SPI2SCKPPS      equ	621	;# 
  7336   00026E                     SPI2SDIPPS      equ	622	;# 
  7337   00026F                     SPI2SSPPS       equ	623	;# 
  7338   000270                     I2C1SDAPPS      equ	624	;# 
  7339   000271                     I2C1SCLPPS      equ	625	;# 
  7340   000272                     U1RXPPS         equ	626	;# 
  7341   000273                     U1CTSPPS        equ	627	;# 
  7342   000274                     U2RXPPS         equ	628	;# 
  7343   000275                     U2CTSPPS        equ	629	;# 
  7344   000276                     U3RXPPS         equ	630	;# 
  7345   000277                     U3CTSPPS        equ	631	;# 
  7346   000278                     U4RXPPS         equ	632	;# 
  7347   000279                     U4CTSPPS        equ	633	;# 
  7348   00027A                     U5RXPPS         equ	634	;# 
  7349   00027B                     U5CTSPPS        equ	635	;# 
  7350   000286                     RC4I2C          equ	646	;# 
  7351   000287                     RC3I2C          equ	647	;# 
  7352   000288                     RB2I2C          equ	648	;# 
  7353   000289                     RB1I2C          equ	649	;# 
  7354   00028B                     I2C1RXB         equ	651	;# 
  7355   00028C                     I2C1TXB         equ	652	;# 
  7356   00028D                     I2C1CNT         equ	653	;# 
  7357   00028E                     I2C1ADB0        equ	654	;# 
  7358   00028F                     I2C1ADB1        equ	655	;# 
  7359   000290                     I2C1ADR0        equ	656	;# 
  7360   000291                     I2C1ADR1        equ	657	;# 
  7361   000292                     I2C1ADR2        equ	658	;# 
  7362   000293                     I2C1ADR3        equ	659	;# 
  7363   000294                     I2C1CON0        equ	660	;# 
  7364   000295                     I2C1CON1        equ	661	;# 
  7365   000296                     I2C1CON2        equ	662	;# 
  7366   000297                     I2C1ERR         equ	663	;# 
  7367   000298                     I2C1STAT0       equ	664	;# 
  7368   000299                     I2C1STAT1       equ	665	;# 
  7369   00029A                     I2C1PIR         equ	666	;# 
  7370   00029B                     I2C1PIE         equ	667	;# 
  7371   00029C                     I2C1CLK         equ	668	;# 
  7372   00029D                     I2C1BTO         equ	669	;# 
  7373   0002A1                     U1RXB           equ	673	;# 
  7374   0002A1                     U1RXBL          equ	673	;# 
  7375   0002A2                     U1RXCHK         equ	674	;# 
  7376   0002A3                     U1TXB           equ	675	;# 
  7377   0002A3                     U1TXBL          equ	675	;# 
  7378   0002A4                     U1TXCHK         equ	676	;# 
  7379   0002A5                     U1P1            equ	677	;# 
  7380   0002A5                     U1P1L           equ	677	;# 
  7381   0002A6                     U1P1H           equ	678	;# 
  7382   0002A7                     U1P2            equ	679	;# 
  7383   0002A7                     U1P2L           equ	679	;# 
  7384   0002A8                     U1P2H           equ	680	;# 
  7385   0002A9                     U1P3            equ	681	;# 
  7386   0002A9                     U1P3L           equ	681	;# 
  7387   0002AA                     U1P3H           equ	682	;# 
  7388   0002AB                     U1CON0          equ	683	;# 
  7389   0002AC                     U1CON1          equ	684	;# 
  7390   0002AD                     U1CON2          equ	685	;# 
  7391   0002AE                     U1BRG           equ	686	;# 
  7392   0002AE                     U1BRGL          equ	686	;# 
  7393   0002AF                     U1BRGH          equ	687	;# 
  7394   0002B0                     U1FIFO          equ	688	;# 
  7395   0002B1                     U1UIR           equ	689	;# 
  7396   0002B2                     U1ERRIR         equ	690	;# 
  7397   0002B3                     U1ERRIE         equ	691	;# 
  7398   0002B4                     U2RXB           equ	692	;# 
  7399   0002B4                     U2RXBL          equ	692	;# 
  7400   0002B6                     U2TXB           equ	694	;# 
  7401   0002B6                     U2TXBL          equ	694	;# 
  7402   0002B8                     U2P1            equ	696	;# 
  7403   0002B8                     U2P1L           equ	696	;# 
  7404   0002BA                     U2P2            equ	698	;# 
  7405   0002BA                     U2P2L           equ	698	;# 
  7406   0002BC                     U2P3            equ	700	;# 
  7407   0002BC                     U2P3L           equ	700	;# 
  7408   0002BE                     U2CON0          equ	702	;# 
  7409   0002BF                     U2CON1          equ	703	;# 
  7410   0002C0                     U2CON2          equ	704	;# 
  7411   0002C1                     U2BRG           equ	705	;# 
  7412   0002C1                     U2BRGL          equ	705	;# 
  7413   0002C2                     U2BRGH          equ	706	;# 
  7414   0002C3                     U2FIFO          equ	707	;# 
  7415   0002C4                     U2UIR           equ	708	;# 
  7416   0002C5                     U2ERRIR         equ	709	;# 
  7417   0002C6                     U2ERRIE         equ	710	;# 
  7418   0002C7                     U3RXB           equ	711	;# 
  7419   0002C7                     U3RXBL          equ	711	;# 
  7420   0002C9                     U3TXB           equ	713	;# 
  7421   0002C9                     U3TXBL          equ	713	;# 
  7422   0002CB                     U3P1            equ	715	;# 
  7423   0002CB                     U3P1L           equ	715	;# 
  7424   0002CD                     U3P2            equ	717	;# 
  7425   0002CD                     U3P2L           equ	717	;# 
  7426   0002CF                     U3P3            equ	719	;# 
  7427   0002CF                     U3P3L           equ	719	;# 
  7428   0002D1                     U3CON0          equ	721	;# 
  7429   0002D2                     U3CON1          equ	722	;# 
  7430   0002D3                     U3CON2          equ	723	;# 
  7431   0002D4                     U3BRG           equ	724	;# 
  7432   0002D4                     U3BRGL          equ	724	;# 
  7433   0002D5                     U3BRGH          equ	725	;# 
  7434   0002D6                     U3FIFO          equ	726	;# 
  7435   0002D7                     U3UIR           equ	727	;# 
  7436   0002D8                     U3ERRIR         equ	728	;# 
  7437   0002D9                     U3ERRIE         equ	729	;# 
  7438   0002DA                     U4RXB           equ	730	;# 
  7439   0002DA                     U4RXBL          equ	730	;# 
  7440   0002DC                     U4TXB           equ	732	;# 
  7441   0002DC                     U4TXBL          equ	732	;# 
  7442   0002DE                     U4P1            equ	734	;# 
  7443   0002DE                     U4P1L           equ	734	;# 
  7444   0002E0                     U4P2            equ	736	;# 
  7445   0002E0                     U4P2L           equ	736	;# 
  7446   0002E2                     U4P3            equ	738	;# 
  7447   0002E2                     U4P3L           equ	738	;# 
  7448   0002E4                     U4CON0          equ	740	;# 
  7449   0002E5                     U4CON1          equ	741	;# 
  7450   0002E6                     U4CON2          equ	742	;# 
  7451   0002E7                     U4BRG           equ	743	;# 
  7452   0002E7                     U4BRGL          equ	743	;# 
  7453   0002E8                     U4BRGH          equ	744	;# 
  7454   0002E9                     U4FIFO          equ	745	;# 
  7455   0002EA                     U4UIR           equ	746	;# 
  7456   0002EB                     U4ERRIR         equ	747	;# 
  7457   0002EC                     U4ERRIE         equ	748	;# 
  7458   0002ED                     U5RXB           equ	749	;# 
  7459   0002ED                     U5RXBL          equ	749	;# 
  7460   0002EF                     U5TXB           equ	751	;# 
  7461   0002EF                     U5TXBL          equ	751	;# 
  7462   0002F1                     U5P1            equ	753	;# 
  7463   0002F1                     U5P1L           equ	753	;# 
  7464   0002F3                     U5P2            equ	755	;# 
  7465   0002F3                     U5P2L           equ	755	;# 
  7466   0002F5                     U5P3            equ	757	;# 
  7467   0002F5                     U5P3L           equ	757	;# 
  7468   0002F7                     U5CON0          equ	759	;# 
  7469   0002F8                     U5CON1          equ	760	;# 
  7470   0002F9                     U5CON2          equ	761	;# 
  7471   0002FA                     U5BRG           equ	762	;# 
  7472   0002FA                     U5BRGL          equ	762	;# 
  7473   0002FB                     U5BRGH          equ	763	;# 
  7474   0002FC                     U5FIFO          equ	764	;# 
  7475   0002FD                     U5UIR           equ	765	;# 
  7476   0002FE                     U5ERRIR         equ	766	;# 
  7477   0002FF                     U5ERRIE         equ	767	;# 
  7478   000300                     SMT1TMR         equ	768	;# 
  7479   000300                     SMT1TMRL        equ	768	;# 
  7480   000301                     SMT1TMRH        equ	769	;# 
  7481   000302                     SMT1TMRU        equ	770	;# 
  7482   000303                     SMT1CPR         equ	771	;# 
  7483   000303                     SMT1CPRL        equ	771	;# 
  7484   000304                     SMT1CPRH        equ	772	;# 
  7485   000305                     SMT1CPRU        equ	773	;# 
  7486   000306                     SMT1CPW         equ	774	;# 
  7487   000306                     SMT1CPWL        equ	774	;# 
  7488   000307                     SMT1CPWH        equ	775	;# 
  7489   000308                     SMT1CPWU        equ	776	;# 
  7490   000309                     SMT1PR          equ	777	;# 
  7491   000309                     SMT1PRL         equ	777	;# 
  7492   00030A                     SMT1PRH         equ	778	;# 
  7493   00030B                     SMT1PRU         equ	779	;# 
  7494   00030C                     SMT1CON0        equ	780	;# 
  7495   00030D                     SMT1CON1        equ	781	;# 
  7496   00030E                     SMT1STAT        equ	782	;# 
  7497   00030F                     SMT1CLK         equ	783	;# 
  7498   000310                     SMT1SIG         equ	784	;# 
  7499   000311                     SMT1WIN         equ	785	;# 
  7500   000318                     TMR0L           equ	792	;# 
  7501   000318                     TMR0            equ	792	;# 
  7502   000319                     TMR0H           equ	793	;# 
  7503   000319                     PR0             equ	793	;# 
  7504   00031A                     T0CON0          equ	794	;# 
  7505   00031B                     T0CON1          equ	795	;# 
  7506   00031C                     TMR1            equ	796	;# 
  7507   00031C                     TMR1L           equ	796	;# 
  7508   00031D                     TMR1H           equ	797	;# 
  7509   00031E                     T1CON           equ	798	;# 
  7510   00031E                     TMR1CON         equ	798	;# 
  7511   00031F                     T1GCON          equ	799	;# 
  7512   00031F                     TMR1GCON        equ	799	;# 
  7513   000320                     T1GATE          equ	800	;# 
  7514   000320                     TMR1GATE        equ	800	;# 
  7515   000321                     T1CLK           equ	801	;# 
  7516   000321                     TMR1CLK         equ	801	;# 
  7517   000321                     PR1             equ	801	;# 
  7518   000322                     T2TMR           equ	802	;# 
  7519   000322                     TMR2            equ	802	;# 
  7520   000323                     T2PR            equ	803	;# 
  7521   000323                     PR2             equ	803	;# 
  7522   000324                     T2CON           equ	804	;# 
  7523   000325                     T2HLT           equ	805	;# 
  7524   000326                     T2CLKCON        equ	806	;# 
  7525   000326                     T2CLK           equ	806	;# 
  7526   000327                     T2RST           equ	807	;# 
  7527   000328                     TMR3            equ	808	;# 
  7528   000328                     TMR3L           equ	808	;# 
  7529   000329                     TMR3H           equ	809	;# 
  7530   00032A                     T3CON           equ	810	;# 
  7531   00032A                     TMR3CON         equ	810	;# 
  7532   00032B                     T3GCON          equ	811	;# 
  7533   00032B                     TMR3GCON        equ	811	;# 
  7534   00032C                     T3GATE          equ	812	;# 
  7535   00032C                     TMR3GATE        equ	812	;# 
  7536   00032D                     T3CLK           equ	813	;# 
  7537   00032D                     TMR3CLK         equ	813	;# 
  7538   00032D                     PR3             equ	813	;# 
  7539   00032E                     T4TMR           equ	814	;# 
  7540   00032E                     TMR4            equ	814	;# 
  7541   00032F                     T4PR            equ	815	;# 
  7542   00032F                     PR4             equ	815	;# 
  7543   000330                     T4CON           equ	816	;# 
  7544   000331                     T4HLT           equ	817	;# 
  7545   000332                     T4CLKCON        equ	818	;# 
  7546   000332                     T4CLK           equ	818	;# 
  7547   000333                     T4RST           equ	819	;# 
  7548   000334                     TMR5            equ	820	;# 
  7549   000334                     TMR5L           equ	820	;# 
  7550   000335                     TMR5H           equ	821	;# 
  7551   000336                     T5CON           equ	822	;# 
  7552   000336                     TMR5CON         equ	822	;# 
  7553   000337                     T5GCON          equ	823	;# 
  7554   000337                     TMR5GCON        equ	823	;# 
  7555   000338                     T5GATE          equ	824	;# 
  7556   000338                     TMR5GATE        equ	824	;# 
  7557   000339                     T5CLK           equ	825	;# 
  7558   000339                     TMR5CLK         equ	825	;# 
  7559   000339                     PR5             equ	825	;# 
  7560   00033A                     T6TMR           equ	826	;# 
  7561   00033A                     TMR6            equ	826	;# 
  7562   00033B                     T6PR            equ	827	;# 
  7563   00033B                     PR6             equ	827	;# 
  7564   00033C                     T6CON           equ	828	;# 
  7565   00033D                     T6HLT           equ	829	;# 
  7566   00033E                     T6CLKCON        equ	830	;# 
  7567   00033E                     T6CLK           equ	830	;# 
  7568   00033F                     T6RST           equ	831	;# 
  7569   000340                     CCPR1           equ	832	;# 
  7570   000340                     CCPR1L          equ	832	;# 
  7571   000341                     CCPR1H          equ	833	;# 
  7572   000342                     CCP1CON         equ	834	;# 
  7573   000343                     CCP1CAP         equ	835	;# 
  7574   000344                     CCPR2           equ	836	;# 
  7575   000344                     CCPR2L          equ	836	;# 
  7576   000345                     CCPR2H          equ	837	;# 
  7577   000346                     CCP2CON         equ	838	;# 
  7578   000347                     CCP2CAP         equ	839	;# 
  7579   000348                     CCPR3           equ	840	;# 
  7580   000348                     CCPR3L          equ	840	;# 
  7581   000349                     CCPR3H          equ	841	;# 
  7582   00034A                     CCP3CON         equ	842	;# 
  7583   00034B                     CCP3CAP         equ	843	;# 
  7584   00034C                     CCPTMRS0        equ	844	;# 
  7585   00034F                     CRCDATA         equ	847	;# 
  7586   00034F                     CRCDATL         equ	847	;# 
  7587   000350                     CRCDATH         equ	848	;# 
  7588   000351                     CRCACC          equ	849	;# 
  7589   000351                     CRCACCL         equ	849	;# 
  7590   000352                     CRCACCH         equ	850	;# 
  7591   000353                     CRCSHFT         equ	851	;# 
  7592   000353                     CRCSHIFTL       equ	851	;# 
  7593   000354                     CRCSHIFTH       equ	852	;# 
  7594   000355                     CRCXOR          equ	853	;# 
  7595   000355                     CRCXORL         equ	853	;# 
  7596   000356                     CRCXORH         equ	854	;# 
  7597   000357                     CRCCON0         equ	855	;# 
  7598   000358                     CRCCON1         equ	856	;# 
  7599   00035A                     SCANLADR        equ	858	;# 
  7600   00035A                     SCANLADRL       equ	858	;# 
  7601   00035B                     SCANLADRH       equ	859	;# 
  7602   00035C                     SCANLADRU       equ	860	;# 
  7603   00035D                     SCANHADR        equ	861	;# 
  7604   00035D                     SCANHADRL       equ	861	;# 
  7605   00035E                     SCANHADRH       equ	862	;# 
  7606   00035F                     SCANHADRU       equ	863	;# 
  7607   000360                     SCANCON0        equ	864	;# 
  7608   000361                     SCANTRIG        equ	865	;# 
  7609   000362                     IPR0            equ	866	;# 
  7610   000363                     IPR1            equ	867	;# 
  7611   000364                     IPR2            equ	868	;# 
  7612   000365                     IPR3            equ	869	;# 
  7613   000366                     IPR4            equ	870	;# 
  7614   000367                     IPR5            equ	871	;# 
  7615   000368                     IPR6            equ	872	;# 
  7616   000369                     IPR7            equ	873	;# 
  7617   00036A                     IPR8            equ	874	;# 
  7618   00036B                     IPR9            equ	875	;# 
  7619   00036C                     IPR10           equ	876	;# 
  7620   00036D                     IPR11           equ	877	;# 
  7621   00036E                     IPR12           equ	878	;# 
  7622   00036F                     IPR13           equ	879	;# 
  7623   000370                     IPR14           equ	880	;# 
  7624   000371                     IPR15           equ	881	;# 
  7625   000373                     STATUS_CSHAD    equ	883	;# 
  7626   000374                     WREG_CSHAD      equ	884	;# 
  7627   000375                     BSR_CSHAD       equ	885	;# 
  7628   000376                     SHADCON         equ	886	;# 
  7629   000377                     STATUS_SHAD     equ	887	;# 
  7630   000378                     WREG_SHAD       equ	888	;# 
  7631   000379                     BSR_SHAD        equ	889	;# 
  7632   00037A                     PCLATH_SHAD     equ	890	;# 
  7633   00037B                     PCLATU_SHAD     equ	891	;# 
  7634   00037C                     FSR0SH          equ	892	;# 
  7635   00037C                     FSR0L_SHAD      equ	892	;# 
  7636   00037D                     FSR0H_SHAD      equ	893	;# 
  7637   00037E                     FSR1SH          equ	894	;# 
  7638   00037E                     FSR1L_SHAD      equ	894	;# 
  7639   00037F                     FSR1H_SHAD      equ	895	;# 
  7640   000380                     FSR2SH          equ	896	;# 
  7641   000380                     FSR2L_SHAD      equ	896	;# 
  7642   000381                     FSR2H_SHAD      equ	897	;# 
  7643   000382                     PRODSH          equ	898	;# 
  7644   000382                     PRODL_SHAD      equ	898	;# 
  7645   000383                     PRODH_SHAD      equ	899	;# 
  7646   0003BC                     CWG1CLK         equ	956	;# 
  7647   0003BC                     CWG1CLKCON      equ	956	;# 
  7648   0003BD                     CWG1ISM         equ	957	;# 
  7649   0003BD                     CWG1DAT         equ	957	;# 
  7650   0003BE                     CWG1DBR         equ	958	;# 
  7651   0003BF                     CWG1DBF         equ	959	;# 
  7652   0003C0                     CWG1CON0        equ	960	;# 
  7653   0003C1                     CWG1CON1        equ	961	;# 
  7654   0003C2                     CWG1AS0         equ	962	;# 
  7655   0003C3                     CWG1AS1         equ	963	;# 
  7656   0003C4                     CWG1STR         equ	964	;# 
  7657   0003C5                     CWG2CLK         equ	965	;# 
  7658   0003C5                     CWG2CLKCON      equ	965	;# 
  7659   0003C6                     CWG2ISM         equ	966	;# 
  7660   0003C6                     CWG2DAT         equ	966	;# 
  7661   0003C7                     CWG2DBR         equ	967	;# 
  7662   0003C8                     CWG2DBF         equ	968	;# 
  7663   0003C9                     CWG2CON0        equ	969	;# 
  7664   0003CA                     CWG2CON1        equ	970	;# 
  7665   0003CB                     CWG2AS0         equ	971	;# 
  7666   0003CC                     CWG2AS1         equ	972	;# 
  7667   0003CD                     CWG2STR         equ	973	;# 
  7668   0003CE                     CWG3CLK         equ	974	;# 
  7669   0003CE                     CWG3CLKCON      equ	974	;# 
  7670   0003CF                     CWG3ISM         equ	975	;# 
  7671   0003CF                     CWG3DAT         equ	975	;# 
  7672   0003D0                     CWG3DBR         equ	976	;# 
  7673   0003D1                     CWG3DBF         equ	977	;# 
  7674   0003D2                     CWG3CON0        equ	978	;# 
  7675   0003D3                     CWG3CON1        equ	979	;# 
  7676   0003D4                     CWG3AS0         equ	980	;# 
  7677   0003D5                     CWG3AS1         equ	981	;# 
  7678   0003D6                     CWG3STR         equ	982	;# 
  7679   0003D7                     FVRCON          equ	983	;# 
  7680   0003D8                     ADCPCON         equ	984	;# 
  7681   0003D8                     ADCP            equ	984	;# 
  7682   0003D9                     ADLTH           equ	985	;# 
  7683   0003D9                     ADLTHL          equ	985	;# 
  7684   0003DA                     ADLTHH          equ	986	;# 
  7685   0003DB                     ADUTH           equ	987	;# 
  7686   0003DB                     ADUTHL          equ	987	;# 
  7687   0003DC                     ADUTHH          equ	988	;# 
  7688   0003DD                     ADERR           equ	989	;# 
  7689   0003DD                     ADERRL          equ	989	;# 
  7690   0003DE                     ADERRH          equ	990	;# 
  7691   0003DF                     ADSTPT          equ	991	;# 
  7692   0003DF                     ADSTPTL         equ	991	;# 
  7693   0003E0                     ADSTPTH         equ	992	;# 
  7694   0003E1                     ADFLTR          equ	993	;# 
  7695   0003E1                     ADFLTRL         equ	993	;# 
  7696   0003E2                     ADFLTRH         equ	994	;# 
  7697   0003E3                     ADACC           equ	995	;# 
  7698   0003E3                     ADACCL          equ	995	;# 
  7699   0003E4                     ADACCH          equ	996	;# 
  7700   0003E5                     ADACCU          equ	997	;# 
  7701   0003E6                     ADCNT           equ	998	;# 
  7702   0003E7                     ADRPT           equ	999	;# 
  7703   0003E8                     ADPREV          equ	1000	;# 
  7704   0003E8                     ADPREVL         equ	1000	;# 
  7705   0003E9                     ADPREVH         equ	1001	;# 
  7706   0003EA                     ADRES           equ	1002	;# 
  7707   0003EA                     ADRESL          equ	1002	;# 
  7708   0003EB                     ADRESH          equ	1003	;# 
  7709   0003EC                     ADPCH           equ	1004	;# 
  7710   0003EE                     ADACQ           equ	1006	;# 
  7711   0003EE                     ADACQL          equ	1006	;# 
  7712   0003EF                     ADACQH          equ	1007	;# 
  7713   0003F0                     ADCAP           equ	1008	;# 
  7714   0003F1                     ADPRE           equ	1009	;# 
  7715   0003F1                     ADPREL          equ	1009	;# 
  7716   0003F2                     ADPREH          equ	1010	;# 
  7717   0003F3                     ADCON0          equ	1011	;# 
  7718   0003F4                     ADCON1          equ	1012	;# 
  7719   0003F5                     ADCON2          equ	1013	;# 
  7720   0003F6                     ADCON3          equ	1014	;# 
  7721   0003F7                     ADSTAT          equ	1015	;# 
  7722   0003F8                     ADREF           equ	1016	;# 
  7723   0003F9                     ADACT           equ	1017	;# 
  7724   0003FA                     ADCLK           equ	1018	;# 
  7725   000400                     ANSELA          equ	1024	;# 
  7726   000401                     WPUA            equ	1025	;# 
  7727   000402                     ODCONA          equ	1026	;# 
  7728   000403                     SLRCONA         equ	1027	;# 
  7729   000404                     INLVLA          equ	1028	;# 
  7730   000405                     IOCAP           equ	1029	;# 
  7731   000406                     IOCAN           equ	1030	;# 
  7732   000407                     IOCAF           equ	1031	;# 
  7733   000408                     ANSELB          equ	1032	;# 
  7734   000409                     WPUB            equ	1033	;# 
  7735   00040A                     ODCONB          equ	1034	;# 
  7736   00040B                     SLRCONB         equ	1035	;# 
  7737   00040C                     INLVLB          equ	1036	;# 
  7738   00040D                     IOCBP           equ	1037	;# 
  7739   00040E                     IOCBN           equ	1038	;# 
  7740   00040F                     IOCBF           equ	1039	;# 
  7741   000410                     ANSELC          equ	1040	;# 
  7742   000411                     WPUC            equ	1041	;# 
  7743   000412                     ODCONC          equ	1042	;# 
  7744   000413                     SLRCONC         equ	1043	;# 
  7745   000414                     INLVLC          equ	1044	;# 
  7746   000415                     IOCCP           equ	1045	;# 
  7747   000416                     IOCCN           equ	1046	;# 
  7748   000417                     IOCCF           equ	1047	;# 
  7749   000418                     ANSELD          equ	1048	;# 
  7750   000419                     WPUD            equ	1049	;# 
  7751   00041A                     ODCOND          equ	1050	;# 
  7752   00041B                     SLRCOND         equ	1051	;# 
  7753   00041C                     INLVLD          equ	1052	;# 
  7754   000420                     ANSELE          equ	1056	;# 
  7755   000421                     WPUE            equ	1057	;# 
  7756   000422                     ODCONE          equ	1058	;# 
  7757   000423                     SLRCONE         equ	1059	;# 
  7758   000424                     INLVLE          equ	1060	;# 
  7759   000425                     IOCEP           equ	1061	;# 
  7760   000426                     IOCEN           equ	1062	;# 
  7761   000427                     IOCEF           equ	1063	;# 
  7762   000428                     ANSELF          equ	1064	;# 
  7763   000429                     WPUF            equ	1065	;# 
  7764   00042A                     ODCONF          equ	1066	;# 
  7765   00042B                     SLRCONF         equ	1067	;# 
  7766   00042C                     INLVLF          equ	1068	;# 
  7767   000440                     NCO1ACC         equ	1088	;# 
  7768   000440                     NCO1ACCL        equ	1088	;# 
  7769   000441                     NCO1ACCH        equ	1089	;# 
  7770   000442                     NCO1ACCU        equ	1090	;# 
  7771   000443                     NCO1INC         equ	1091	;# 
  7772   000443                     NCO1INCL        equ	1091	;# 
  7773   000444                     NCO1INCH        equ	1092	;# 
  7774   000445                     NCO1INCU        equ	1093	;# 
  7775   000446                     NCO1CON         equ	1094	;# 
  7776   000447                     NCO1CLK         equ	1095	;# 
  7777   000448                     NCO2ACC         equ	1096	;# 
  7778   000448                     NCO2ACCL        equ	1096	;# 
  7779   000449                     NCO2ACCH        equ	1097	;# 
  7780   00044A                     NCO2ACCU        equ	1098	;# 
  7781   00044B                     NCO2INC         equ	1099	;# 
  7782   00044B                     NCO2INCL        equ	1099	;# 
  7783   00044C                     NCO2INCH        equ	1100	;# 
  7784   00044D                     NCO2INCU        equ	1101	;# 
  7785   00044E                     NCO2CON         equ	1102	;# 
  7786   00044F                     NCO2CLK         equ	1103	;# 
  7787   000450                     NCO3ACC         equ	1104	;# 
  7788   000450                     NCO3ACCL        equ	1104	;# 
  7789   000451                     NCO3ACCH        equ	1105	;# 
  7790   000452                     NCO3ACCU        equ	1106	;# 
  7791   000453                     NCO3INC         equ	1107	;# 
  7792   000453                     NCO3INCL        equ	1107	;# 
  7793   000454                     NCO3INCH        equ	1108	;# 
  7794   000455                     NCO3INCU        equ	1109	;# 
  7795   000456                     NCO3CON         equ	1110	;# 
  7796   000457                     NCO3CLK         equ	1111	;# 
  7797   000459                     IVTLOCK         equ	1113	;# 
  7798   00045A                     IVTAD           equ	1114	;# 
  7799   00045A                     IVTADL          equ	1114	;# 
  7800   00045B                     IVTADH          equ	1115	;# 
  7801   00045C                     IVTADU          equ	1116	;# 
  7802   00045D                     IVTBASE         equ	1117	;# 
  7803   00045D                     IVTBASEL        equ	1117	;# 
  7804   00045E                     IVTBASEH        equ	1118	;# 
  7805   00045F                     IVTBASEU        equ	1119	;# 
  7806   000460                     PWM1ERS         equ	1120	;# 
  7807   000461                     PWM1CLK         equ	1121	;# 
  7808   000462                     PWM1LDS         equ	1122	;# 
  7809   000463                     PWM1PR          equ	1123	;# 
  7810   000463                     PWM1PRL         equ	1123	;# 
  7811   000464                     PWM1PRH         equ	1124	;# 
  7812   000465                     PWM1CPRE        equ	1125	;# 
  7813   000466                     PWM1PIPOS       equ	1126	;# 
  7814   000467                     PWM1GIR         equ	1127	;# 
  7815   000468                     PWM1GIE         equ	1128	;# 
  7816   000469                     PWM1CON         equ	1129	;# 
  7817   00046A                     PWM1S1CFG       equ	1130	;# 
  7818   00046B                     PWM1S1P1        equ	1131	;# 
  7819   00046B                     PWM1S1P1L       equ	1131	;# 
  7820   00046C                     PWM1S1P1H       equ	1132	;# 
  7821   00046D                     PWM1S1P2        equ	1133	;# 
  7822   00046D                     PWM1S1P2L       equ	1133	;# 
  7823   00046E                     PWM1S1P2H       equ	1134	;# 
  7824   00046F                     PWM2ERS         equ	1135	;# 
  7825   000470                     PWM2CLK         equ	1136	;# 
  7826   000471                     PWM2LDS         equ	1137	;# 
  7827   000472                     PWM2PR          equ	1138	;# 
  7828   000472                     PWM2PRL         equ	1138	;# 
  7829   000473                     PWM2PRH         equ	1139	;# 
  7830   000474                     PWM2CPRE        equ	1140	;# 
  7831   000475                     PWM2PIPOS       equ	1141	;# 
  7832   000476                     PWM2GIR         equ	1142	;# 
  7833   000477                     PWM2GIE         equ	1143	;# 
  7834   000478                     PWM2CON         equ	1144	;# 
  7835   000479                     PWM2S1CFG       equ	1145	;# 
  7836   00047A                     PWM2S1P1        equ	1146	;# 
  7837   00047A                     PWM2S1P1L       equ	1146	;# 
  7838   00047B                     PWM2S1P1H       equ	1147	;# 
  7839   00047C                     PWM2S1P2        equ	1148	;# 
  7840   00047C                     PWM2S1P2L       equ	1148	;# 
  7841   00047D                     PWM2S1P2H       equ	1149	;# 
  7842   00047E                     PWM3ERS         equ	1150	;# 
  7843   00047F                     PWM3CLK         equ	1151	;# 
  7844   000480                     PWM3LDS         equ	1152	;# 
  7845   000481                     PWM3PR          equ	1153	;# 
  7846   000481                     PWM3PRL         equ	1153	;# 
  7847   000482                     PWM3PRH         equ	1154	;# 
  7848   000483                     PWM3CPRE        equ	1155	;# 
  7849   000484                     PWM3PIPOS       equ	1156	;# 
  7850   000485                     PWM3GIR         equ	1157	;# 
  7851   000486                     PWM3GIE         equ	1158	;# 
  7852   000487                     PWM3CON         equ	1159	;# 
  7853   000488                     PWM3S1CFG       equ	1160	;# 
  7854   000489                     PWM3S1P1        equ	1161	;# 
  7855   000489                     PWM3S1P1L       equ	1161	;# 
  7856   00048A                     PWM3S1P1H       equ	1162	;# 
  7857   00048B                     PWM3S1P2        equ	1163	;# 
  7858   00048B                     PWM3S1P2L       equ	1163	;# 
  7859   00048C                     PWM3S1P2H       equ	1164	;# 
  7860   00049C                     PWMLOAD         equ	1180	;# 
  7861   00049D                     PWMEN           equ	1181	;# 
  7862   00049E                     PIE0            equ	1182	;# 
  7863   00049F                     PIE1            equ	1183	;# 
  7864   0004A0                     PIE2            equ	1184	;# 
  7865   0004A1                     PIE3            equ	1185	;# 
  7866   0004A2                     PIE4            equ	1186	;# 
  7867   0004A3                     PIE5            equ	1187	;# 
  7868   0004A4                     PIE6            equ	1188	;# 
  7869   0004A5                     PIE7            equ	1189	;# 
  7870   0004A6                     PIE8            equ	1190	;# 
  7871   0004A7                     PIE9            equ	1191	;# 
  7872   0004A8                     PIE10           equ	1192	;# 
  7873   0004A9                     PIE11           equ	1193	;# 
  7874   0004AA                     PIE12           equ	1194	;# 
  7875   0004AB                     PIE13           equ	1195	;# 
  7876   0004AC                     PIE14           equ	1196	;# 
  7877   0004AD                     PIE15           equ	1197	;# 
  7878   0004AE                     PIR0            equ	1198	;# 
  7879   0004AF                     PIR1            equ	1199	;# 
  7880   0004B0                     PIR2            equ	1200	;# 
  7881   0004B1                     PIR3            equ	1201	;# 
  7882   0004B2                     PIR4            equ	1202	;# 
  7883   0004B3                     PIR5            equ	1203	;# 
  7884   0004B4                     PIR6            equ	1204	;# 
  7885   0004B5                     PIR7            equ	1205	;# 
  7886   0004B6                     PIR8            equ	1206	;# 
  7887   0004B7                     PIR9            equ	1207	;# 
  7888   0004B8                     PIR10           equ	1208	;# 
  7889   0004B9                     PIR11           equ	1209	;# 
  7890   0004BA                     PIR12           equ	1210	;# 
  7891   0004BB                     PIR13           equ	1211	;# 
  7892   0004BC                     PIR14           equ	1212	;# 
  7893   0004BD                     PIR15           equ	1213	;# 
  7894   0004BE                     LATA            equ	1214	;# 
  7895   0004BF                     LATB            equ	1215	;# 
  7896   0004C0                     LATC            equ	1216	;# 
  7897   0004C1                     LATD            equ	1217	;# 
  7898   0004C2                     LATE            equ	1218	;# 
  7899   0004C3                     LATF            equ	1219	;# 
  7900   0004C6                     TRISA           equ	1222	;# 
  7901   0004C7                     TRISB           equ	1223	;# 
  7902   0004C8                     TRISC           equ	1224	;# 
  7903   0004C9                     TRISD           equ	1225	;# 
  7904   0004CA                     TRISE           equ	1226	;# 
  7905   0004CB                     TRISF           equ	1227	;# 
  7906   0004CE                     PORTA           equ	1230	;# 
  7907   0004CF                     PORTB           equ	1231	;# 
  7908   0004D0                     PORTC           equ	1232	;# 
  7909   0004D1                     PORTD           equ	1233	;# 
  7910   0004D2                     PORTE           equ	1234	;# 
  7911   0004D3                     PORTF           equ	1235	;# 
  7912   0004D6                     INTCON0         equ	1238	;# 
  7913   0004D7                     INTCON1         equ	1239	;# 
  7914   0004D8                     STATUS          equ	1240	;# 
  7915   0004D9                     FSR2            equ	1241	;# 
  7916   0004D9                     FSR2L           equ	1241	;# 
  7917   0004DA                     FSR2H           equ	1242	;# 
  7918   0004DB                     PLUSW2          equ	1243	;# 
  7919   0004DC                     PREINC2         equ	1244	;# 
  7920   0004DD                     POSTDEC2        equ	1245	;# 
  7921   0004DE                     POSTINC2        equ	1246	;# 
  7922   0004DF                     INDF2           equ	1247	;# 
  7923   0004E0                     BSR             equ	1248	;# 
  7924   0004E1                     FSR1            equ	1249	;# 
  7925   0004E1                     FSR1L           equ	1249	;# 
  7926   0004E2                     FSR1H           equ	1250	;# 
  7927   0004E3                     PLUSW1          equ	1251	;# 
  7928   0004E4                     PREINC1         equ	1252	;# 
  7929   0004E5                     POSTDEC1        equ	1253	;# 
  7930   0004E6                     POSTINC1        equ	1254	;# 
  7931   0004E7                     INDF1           equ	1255	;# 
  7932   0004E8                     WREG            equ	1256	;# 
  7933   0004E9                     FSR0            equ	1257	;# 
  7934   0004E9                     FSR0L           equ	1257	;# 
  7935   0004EA                     FSR0H           equ	1258	;# 
  7936   0004EB                     PLUSW0          equ	1259	;# 
  7937   0004EC                     PREINC0         equ	1260	;# 
  7938   0004ED                     POSTDEC0        equ	1261	;# 
  7939   0004EE                     POSTINC0        equ	1262	;# 
  7940   0004EF                     INDF0           equ	1263	;# 
  7941   0004F0                     PCON0           equ	1264	;# 
  7942   0004F1                     PCON1           equ	1265	;# 
  7943   0004F2                     CPUDOZE         equ	1266	;# 
  7944   0004F3                     PROD            equ	1267	;# 
  7945   0004F3                     PRODL           equ	1267	;# 
  7946   0004F4                     PRODH           equ	1268	;# 
  7947   0004F5                     TABLAT          equ	1269	;# 
  7948   0004F6                     TBLPTR          equ	1270	;# 
  7949   0004F6                     TBLPTRL         equ	1270	;# 
  7950   0004F7                     TBLPTRH         equ	1271	;# 
  7951   0004F8                     TBLPTRU         equ	1272	;# 
  7952   0004F9                     PCLAT           equ	1273	;# 
  7953   0004F9                     PCL             equ	1273	;# 
  7954   0004FA                     PCLATH          equ	1274	;# 
  7955   0004FB                     PCLATU          equ	1275	;# 
  7956   0004FC                     STKPTR          equ	1276	;# 
  7957   0004FD                     TOS             equ	1277	;# 
  7958   0004FD                     TOSL            equ	1277	;# 
  7959   0004FE                     TOSH            equ	1278	;# 
  7960   0004FF                     TOSU            equ	1279	;# 
  7961   000039                     CLKRCON         equ	57	;# 
  7962   00003A                     CLKRCLK         equ	58	;# 
  7963   000040                     NVMCON0         equ	64	;# 
  7964   000041                     NVMCON1         equ	65	;# 
  7965   000042                     NVMLOCK         equ	66	;# 
  7966   000043                     NVMADR          equ	67	;# 
  7967   000043                     NVMADRL         equ	67	;# 
  7968   000044                     NVMADRH         equ	68	;# 
  7969   000045                     NVMADRU         equ	69	;# 
  7970   000046                     NVMDAT          equ	70	;# 
  7971   000046                     NVMDATL         equ	70	;# 
  7972   000047                     NVMDATH         equ	71	;# 
  7973   000048                     VREGCON         equ	72	;# 
  7974   000049                     BORCON          equ	73	;# 
  7975   00004A                     HLVDCON0        equ	74	;# 
  7976   00004B                     HLVDCON1        equ	75	;# 
  7977   00004C                     ZCDCON          equ	76	;# 
  7978   000060                     PMD0            equ	96	;# 
  7979   000061                     PMD1            equ	97	;# 
  7980   000063                     PMD3            equ	99	;# 
  7981   000064                     PMD4            equ	100	;# 
  7982   000065                     PMD5            equ	101	;# 
  7983   000066                     PMD6            equ	102	;# 
  7984   000067                     PMD7            equ	103	;# 
  7985   000068                     PMD8            equ	104	;# 
  7986   00006A                     MD1CON0         equ	106	;# 
  7987   00006B                     MD1CON1         equ	107	;# 
  7988   00006C                     MD1SRC          equ	108	;# 
  7989   00006D                     MD1CARL         equ	109	;# 
  7990   00006E                     MD1CARH         equ	110	;# 
  7991   00006F                     CMOUT           equ	111	;# 
  7992   000070                     CM1CON0         equ	112	;# 
  7993   000071                     CM1CON1         equ	113	;# 
  7994   000072                     CM1NCH          equ	114	;# 
  7995   000073                     CM1PCH          equ	115	;# 
  7996   000074                     CM2CON0         equ	116	;# 
  7997   000075                     CM2CON1         equ	117	;# 
  7998   000076                     CM2NCH          equ	118	;# 
  7999   000077                     CM2PCH          equ	119	;# 
  8000   000078                     WDTCON0         equ	120	;# 
  8001   000079                     WDTCON1         equ	121	;# 
  8002   00007A                     WDTPS           equ	122	;# 
  8003   00007A                     WDTPSL          equ	122	;# 
  8004   00007B                     WDTPSH          equ	123	;# 
  8005   00007C                     WDTTMR          equ	124	;# 
  8006   00007D                     DAC1DAT         equ	125	;# 
  8007   00007D                     DAC1DATL        equ	125	;# 
  8008   00007F                     DAC1CON         equ	127	;# 
  8009   000080                     SPI1RXB         equ	128	;# 
  8010   000081                     SPI1TXB         equ	129	;# 
  8011   000082                     SPI1TCNT        equ	130	;# 
  8012   000082                     SPI1TCNTL       equ	130	;# 
  8013   000083                     SPI1TCNTH       equ	131	;# 
  8014   000084                     SPI1CON0        equ	132	;# 
  8015   000085                     SPI1CON1        equ	133	;# 
  8016   000086                     SPI1CON2        equ	134	;# 
  8017   000087                     SPI1STATUS      equ	135	;# 
  8018   000088                     SPI1TWIDTH      equ	136	;# 
  8019   000089                     SPI1BAUD        equ	137	;# 
  8020   00008A                     SPI1INTF        equ	138	;# 
  8021   00008B                     SPI1INTE        equ	139	;# 
  8022   00008C                     SPI1CLK         equ	140	;# 
  8023   00008D                     SPI2RXB         equ	141	;# 
  8024   00008E                     SPI2TXB         equ	142	;# 
  8025   00008F                     SPI2TCNT        equ	143	;# 
  8026   00008F                     SPI2TCNTL       equ	143	;# 
  8027   000090                     SPI2TCNTH       equ	144	;# 
  8028   000091                     SPI2CON0        equ	145	;# 
  8029   000092                     SPI2CON1        equ	146	;# 
  8030   000093                     SPI2CON2        equ	147	;# 
  8031   000094                     SPI2STATUS      equ	148	;# 
  8032   000095                     SPI2TWIDTH      equ	149	;# 
  8033   000096                     SPI2BAUD        equ	150	;# 
  8034   000097                     SPI2INTF        equ	151	;# 
  8035   000098                     SPI2INTE        equ	152	;# 
  8036   000099                     SPI2CLK         equ	153	;# 
  8037   0000AC                     ACTCON          equ	172	;# 
  8038   0000AD                     OSCCON1         equ	173	;# 
  8039   0000AE                     OSCCON2         equ	174	;# 
  8040   0000AF                     OSCCON3         equ	175	;# 
  8041   0000B0                     OSCTUNE         equ	176	;# 
  8042   0000B1                     OSCFRQ          equ	177	;# 
  8043   0000B1                     OSCFREQ         equ	177	;# 
  8044   0000B2                     OSCSTAT         equ	178	;# 
  8045   0000B2                     OSCSTAT1        equ	178	;# 
  8046   0000B3                     OSCEN           equ	179	;# 
  8047   0000B4                     PRLOCK          equ	180	;# 
  8048   0000B5                     SCANPR          equ	181	;# 
  8049   0000B6                     DMA1PR          equ	182	;# 
  8050   0000B7                     DMA2PR          equ	183	;# 
  8051   0000B8                     DMA3PR          equ	184	;# 
  8052   0000B9                     DMA4PR          equ	185	;# 
  8053   0000BA                     DMA5PR          equ	186	;# 
  8054   0000BB                     DMA6PR          equ	187	;# 
  8055   0000BE                     MAINPR          equ	190	;# 
  8056   0000BF                     ISRPR           equ	191	;# 
  8057   0000D4                     CLCDATA         equ	212	;# 
  8058   0000D5                     CLCSELECT       equ	213	;# 
  8059   0000D6                     CLCnCON         equ	214	;# 
  8060   0000D7                     CLCnPOL         equ	215	;# 
  8061   0000D8                     CLCnSEL0        equ	216	;# 
  8062   0000D9                     CLCnSEL1        equ	217	;# 
  8063   0000DA                     CLCnSEL2        equ	218	;# 
  8064   0000DB                     CLCnSEL3        equ	219	;# 
  8065   0000DC                     CLCnGLS0        equ	220	;# 
  8066   0000DD                     CLCnGLS1        equ	221	;# 
  8067   0000DE                     CLCnGLS2        equ	222	;# 
  8068   0000DF                     CLCnGLS3        equ	223	;# 
  8069   0000E8                     DMASELECT       equ	232	;# 
  8070   0000E9                     DMAnBUF         equ	233	;# 
  8071   0000EA                     DMAnDCNT        equ	234	;# 
  8072   0000EA                     DMAnDCNTL       equ	234	;# 
  8073   0000EB                     DMAnDCNTH       equ	235	;# 
  8074   0000EC                     DMAnDPTR        equ	236	;# 
  8075   0000EC                     DMAnDPTRL       equ	236	;# 
  8076   0000ED                     DMAnDPTRH       equ	237	;# 
  8077   0000EE                     DMAnDSZ         equ	238	;# 
  8078   0000EE                     DMAnDSZL        equ	238	;# 
  8079   0000EF                     DMAnDSZH        equ	239	;# 
  8080   0000F0                     DMAnDSA         equ	240	;# 
  8081   0000F0                     DMAnDSAL        equ	240	;# 
  8082   0000F1                     DMAnDSAH        equ	241	;# 
  8083   0000F2                     DMAnSCNT        equ	242	;# 
  8084   0000F2                     DMAnSCNTL       equ	242	;# 
  8085   0000F3                     DMAnSCNTH       equ	243	;# 
  8086   0000F4                     DMAnSPTR        equ	244	;# 
  8087   0000F4                     DMAnSPTRL       equ	244	;# 
  8088   0000F5                     DMAnSPTRH       equ	245	;# 
  8089   0000F6                     DMAnSPTRU       equ	246	;# 
  8090   0000F7                     DMAnSSZ         equ	247	;# 
  8091   0000F7                     DMAnSSZL        equ	247	;# 
  8092   0000F8                     DMAnSSZH        equ	248	;# 
  8093   0000F9                     DMAnSSA         equ	249	;# 
  8094   0000F9                     DMAnSSAL        equ	249	;# 
  8095   0000FA                     DMAnSSAH        equ	250	;# 
  8096   0000FB                     DMAnSSAU        equ	251	;# 
  8097   0000FC                     DMAnCON0        equ	252	;# 
  8098   0000FD                     DMAnCON1        equ	253	;# 
  8099   0000FE                     DMAnAIRQ        equ	254	;# 
  8100   0000FF                     DMAnSIRQ        equ	255	;# 
  8101   000200                     PPSLOCK         equ	512	;# 
  8102   000201                     RA0PPS          equ	513	;# 
  8103   000202                     RA1PPS          equ	514	;# 
  8104   000203                     RA2PPS          equ	515	;# 
  8105   000204                     RA3PPS          equ	516	;# 
  8106   000205                     RA4PPS          equ	517	;# 
  8107   000206                     RA5PPS          equ	518	;# 
  8108   000207                     RA6PPS          equ	519	;# 
  8109   000208                     RA7PPS          equ	520	;# 
  8110   000209                     RB0PPS          equ	521	;# 
  8111   00020A                     RB1PPS          equ	522	;# 
  8112   00020B                     RB2PPS          equ	523	;# 
  8113   00020C                     RB3PPS          equ	524	;# 
  8114   00020D                     RB4PPS          equ	525	;# 
  8115   00020E                     RB5PPS          equ	526	;# 
  8116   00020F                     RB6PPS          equ	527	;# 
  8117   000210                     RB7PPS          equ	528	;# 
  8118   000211                     RC0PPS          equ	529	;# 
  8119   000212                     RC1PPS          equ	530	;# 
  8120   000213                     RC2PPS          equ	531	;# 
  8121   000214                     RC3PPS          equ	532	;# 
  8122   000215                     RC4PPS          equ	533	;# 
  8123   000216                     RC5PPS          equ	534	;# 
  8124   000217                     RC6PPS          equ	535	;# 
  8125   000218                     RC7PPS          equ	536	;# 
  8126   000219                     RD0PPS          equ	537	;# 
  8127   00021A                     RD1PPS          equ	538	;# 
  8128   00021B                     RD2PPS          equ	539	;# 
  8129   00021C                     RD3PPS          equ	540	;# 
  8130   00021D                     RD4PPS          equ	541	;# 
  8131   00021E                     RD5PPS          equ	542	;# 
  8132   00021F                     RD6PPS          equ	543	;# 
  8133   000220                     RD7PPS          equ	544	;# 
  8134   000221                     RE0PPS          equ	545	;# 
  8135   000222                     RE1PPS          equ	546	;# 
  8136   000223                     RE2PPS          equ	547	;# 
  8137   000229                     RF0PPS          equ	553	;# 
  8138   00022A                     RF1PPS          equ	554	;# 
  8139   00022B                     RF2PPS          equ	555	;# 
  8140   00022C                     RF3PPS          equ	556	;# 
  8141   00022D                     RF4PPS          equ	557	;# 
  8142   00022E                     RF5PPS          equ	558	;# 
  8143   00022F                     RF6PPS          equ	559	;# 
  8144   000230                     RF7PPS          equ	560	;# 
  8145   00023E                     INT0PPS         equ	574	;# 
  8146   00023F                     INT1PPS         equ	575	;# 
  8147   000240                     INT2PPS         equ	576	;# 
  8148   000241                     T0CKIPPS        equ	577	;# 
  8149   000242                     T1CKIPPS        equ	578	;# 
  8150   000243                     T1GPPS          equ	579	;# 
  8151   000244                     T3CKIPPS        equ	580	;# 
  8152   000245                     T3GPPS          equ	581	;# 
  8153   000246                     T5CKIPPS        equ	582	;# 
  8154   000247                     T5GPPS          equ	583	;# 
  8155   000248                     T2INPPS         equ	584	;# 
  8156   000249                     T4INPPS         equ	585	;# 
  8157   00024A                     T6INPPS         equ	586	;# 
  8158   00024F                     CCP1PPS         equ	591	;# 
  8159   000250                     CCP2PPS         equ	592	;# 
  8160   000251                     CCP3PPS         equ	593	;# 
  8161   000253                     PWM1ERSPPS      equ	595	;# 
  8162   000254                     PWM2ERSPPS      equ	596	;# 
  8163   000255                     PWM3ERSPPS      equ	597	;# 
  8164   000257                     PWMIN0PPS       equ	599	;# 
  8165   000258                     PWMIN1PPS       equ	600	;# 
  8166   000259                     SMT1WINPPS      equ	601	;# 
  8167   00025A                     SMT1SIGPPS      equ	602	;# 
  8168   00025B                     CWG1PPS         equ	603	;# 
  8169   00025B                     CWG1INPPS       equ	603	;# 
  8170   00025C                     CWG2PPS         equ	604	;# 
  8171   00025C                     CWG2INPPS       equ	604	;# 
  8172   00025D                     CWG3PPS         equ	605	;# 
  8173   00025D                     CWG3INPPS       equ	605	;# 
  8174   00025E                     MD1CARLPPS      equ	606	;# 
  8175   00025E                     MDCARLPPS       equ	606	;# 
  8176   00025F                     MD1CARHPPS      equ	607	;# 
  8177   00025F                     MDCARHPPS       equ	607	;# 
  8178   000260                     MD1SRCPPS       equ	608	;# 
  8179   000260                     MDSRCPPS        equ	608	;# 
  8180   000261                     CLCIN0PPS       equ	609	;# 
  8181   000262                     CLCIN1PPS       equ	610	;# 
  8182   000263                     CLCIN2PPS       equ	611	;# 
  8183   000264                     CLCIN3PPS       equ	612	;# 
  8184   000265                     CLCIN4PPS       equ	613	;# 
  8185   000266                     CLCIN5PPS       equ	614	;# 
  8186   000267                     CLCIN6PPS       equ	615	;# 
  8187   000268                     CLCIN7PPS       equ	616	;# 
  8188   000269                     ADACTPPS        equ	617	;# 
  8189   00026A                     SPI1SCKPPS      equ	618	;# 
  8190   00026B                     SPI1SDIPPS      equ	619	;# 
  8191   00026C                     SPI1SSPPS       equ	620	;# 
  8192   00026D                     SPI2SCKPPS      equ	621	;# 
  8193   00026E                     SPI2SDIPPS      equ	622	;# 
  8194   00026F                     SPI2SSPPS       equ	623	;# 
  8195   000270                     I2C1SDAPPS      equ	624	;# 
  8196   000271                     I2C1SCLPPS      equ	625	;# 
  8197   000272                     U1RXPPS         equ	626	;# 
  8198   000273                     U1CTSPPS        equ	627	;# 
  8199   000274                     U2RXPPS         equ	628	;# 
  8200   000275                     U2CTSPPS        equ	629	;# 
  8201   000276                     U3RXPPS         equ	630	;# 
  8202   000277                     U3CTSPPS        equ	631	;# 
  8203   000278                     U4RXPPS         equ	632	;# 
  8204   000279                     U4CTSPPS        equ	633	;# 
  8205   00027A                     U5RXPPS         equ	634	;# 
  8206   00027B                     U5CTSPPS        equ	635	;# 
  8207   000286                     RC4I2C          equ	646	;# 
  8208   000287                     RC3I2C          equ	647	;# 
  8209   000288                     RB2I2C          equ	648	;# 
  8210   000289                     RB1I2C          equ	649	;# 
  8211   00028B                     I2C1RXB         equ	651	;# 
  8212   00028C                     I2C1TXB         equ	652	;# 
  8213   00028D                     I2C1CNT         equ	653	;# 
  8214   00028E                     I2C1ADB0        equ	654	;# 
  8215   00028F                     I2C1ADB1        equ	655	;# 
  8216   000290                     I2C1ADR0        equ	656	;# 
  8217   000291                     I2C1ADR1        equ	657	;# 
  8218   000292                     I2C1ADR2        equ	658	;# 
  8219   000293                     I2C1ADR3        equ	659	;# 
  8220   000294                     I2C1CON0        equ	660	;# 
  8221   000295                     I2C1CON1        equ	661	;# 
  8222   000296                     I2C1CON2        equ	662	;# 
  8223   000297                     I2C1ERR         equ	663	;# 
  8224   000298                     I2C1STAT0       equ	664	;# 
  8225   000299                     I2C1STAT1       equ	665	;# 
  8226   00029A                     I2C1PIR         equ	666	;# 
  8227   00029B                     I2C1PIE         equ	667	;# 
  8228   00029C                     I2C1CLK         equ	668	;# 
  8229   00029D                     I2C1BTO         equ	669	;# 
  8230   0002A1                     U1RXB           equ	673	;# 
  8231   0002A1                     U1RXBL          equ	673	;# 
  8232   0002A2                     U1RXCHK         equ	674	;# 
  8233   0002A3                     U1TXB           equ	675	;# 
  8234   0002A3                     U1TXBL          equ	675	;# 
  8235   0002A4                     U1TXCHK         equ	676	;# 
  8236   0002A5                     U1P1            equ	677	;# 
  8237   0002A5                     U1P1L           equ	677	;# 
  8238   0002A6                     U1P1H           equ	678	;# 
  8239   0002A7                     U1P2            equ	679	;# 
  8240   0002A7                     U1P2L           equ	679	;# 
  8241   0002A8                     U1P2H           equ	680	;# 
  8242   0002A9                     U1P3            equ	681	;# 
  8243   0002A9                     U1P3L           equ	681	;# 
  8244   0002AA                     U1P3H           equ	682	;# 
  8245   0002AB                     U1CON0          equ	683	;# 
  8246   0002AC                     U1CON1          equ	684	;# 
  8247   0002AD                     U1CON2          equ	685	;# 
  8248   0002AE                     U1BRG           equ	686	;# 
  8249   0002AE                     U1BRGL          equ	686	;# 
  8250   0002AF                     U1BRGH          equ	687	;# 
  8251   0002B0                     U1FIFO          equ	688	;# 
  8252   0002B1                     U1UIR           equ	689	;# 
  8253   0002B2                     U1ERRIR         equ	690	;# 
  8254   0002B3                     U1ERRIE         equ	691	;# 
  8255   0002B4                     U2RXB           equ	692	;# 
  8256   0002B4                     U2RXBL          equ	692	;# 
  8257   0002B6                     U2TXB           equ	694	;# 
  8258   0002B6                     U2TXBL          equ	694	;# 
  8259   0002B8                     U2P1            equ	696	;# 
  8260   0002B8                     U2P1L           equ	696	;# 
  8261   0002BA                     U2P2            equ	698	;# 
  8262   0002BA                     U2P2L           equ	698	;# 
  8263   0002BC                     U2P3            equ	700	;# 
  8264   0002BC                     U2P3L           equ	700	;# 
  8265   0002BE                     U2CON0          equ	702	;# 
  8266   0002BF                     U2CON1          equ	703	;# 
  8267   0002C0                     U2CON2          equ	704	;# 
  8268   0002C1                     U2BRG           equ	705	;# 
  8269   0002C1                     U2BRGL          equ	705	;# 
  8270   0002C2                     U2BRGH          equ	706	;# 
  8271   0002C3                     U2FIFO          equ	707	;# 
  8272   0002C4                     U2UIR           equ	708	;# 
  8273   0002C5                     U2ERRIR         equ	709	;# 
  8274   0002C6                     U2ERRIE         equ	710	;# 
  8275   0002C7                     U3RXB           equ	711	;# 
  8276   0002C7                     U3RXBL          equ	711	;# 
  8277   0002C9                     U3TXB           equ	713	;# 
  8278   0002C9                     U3TXBL          equ	713	;# 
  8279   0002CB                     U3P1            equ	715	;# 
  8280   0002CB                     U3P1L           equ	715	;# 
  8281   0002CD                     U3P2            equ	717	;# 
  8282   0002CD                     U3P2L           equ	717	;# 
  8283   0002CF                     U3P3            equ	719	;# 
  8284   0002CF                     U3P3L           equ	719	;# 
  8285   0002D1                     U3CON0          equ	721	;# 
  8286   0002D2                     U3CON1          equ	722	;# 
  8287   0002D3                     U3CON2          equ	723	;# 
  8288   0002D4                     U3BRG           equ	724	;# 
  8289   0002D4                     U3BRGL          equ	724	;# 
  8290   0002D5                     U3BRGH          equ	725	;# 
  8291   0002D6                     U3FIFO          equ	726	;# 
  8292   0002D7                     U3UIR           equ	727	;# 
  8293   0002D8                     U3ERRIR         equ	728	;# 
  8294   0002D9                     U3ERRIE         equ	729	;# 
  8295   0002DA                     U4RXB           equ	730	;# 
  8296   0002DA                     U4RXBL          equ	730	;# 
  8297   0002DC                     U4TXB           equ	732	;# 
  8298   0002DC                     U4TXBL          equ	732	;# 
  8299   0002DE                     U4P1            equ	734	;# 
  8300   0002DE                     U4P1L           equ	734	;# 
  8301   0002E0                     U4P2            equ	736	;# 
  8302   0002E0                     U4P2L           equ	736	;# 
  8303   0002E2                     U4P3            equ	738	;# 
  8304   0002E2                     U4P3L           equ	738	;# 
  8305   0002E4                     U4CON0          equ	740	;# 
  8306   0002E5                     U4CON1          equ	741	;# 
  8307   0002E6                     U4CON2          equ	742	;# 
  8308   0002E7                     U4BRG           equ	743	;# 
  8309   0002E7                     U4BRGL          equ	743	;# 
  8310   0002E8                     U4BRGH          equ	744	;# 
  8311   0002E9                     U4FIFO          equ	745	;# 
  8312   0002EA                     U4UIR           equ	746	;# 
  8313   0002EB                     U4ERRIR         equ	747	;# 
  8314   0002EC                     U4ERRIE         equ	748	;# 
  8315   0002ED                     U5RXB           equ	749	;# 
  8316   0002ED                     U5RXBL          equ	749	;# 
  8317   0002EF                     U5TXB           equ	751	;# 
  8318   0002EF                     U5TXBL          equ	751	;# 
  8319   0002F1                     U5P1            equ	753	;# 
  8320   0002F1                     U5P1L           equ	753	;# 
  8321   0002F3                     U5P2            equ	755	;# 
  8322   0002F3                     U5P2L           equ	755	;# 
  8323   0002F5                     U5P3            equ	757	;# 
  8324   0002F5                     U5P3L           equ	757	;# 
  8325   0002F7                     U5CON0          equ	759	;# 
  8326   0002F8                     U5CON1          equ	760	;# 
  8327   0002F9                     U5CON2          equ	761	;# 
  8328   0002FA                     U5BRG           equ	762	;# 
  8329   0002FA                     U5BRGL          equ	762	;# 
  8330   0002FB                     U5BRGH          equ	763	;# 
  8331   0002FC                     U5FIFO          equ	764	;# 
  8332   0002FD                     U5UIR           equ	765	;# 
  8333   0002FE                     U5ERRIR         equ	766	;# 
  8334   0002FF                     U5ERRIE         equ	767	;# 
  8335   000300                     SMT1TMR         equ	768	;# 
  8336   000300                     SMT1TMRL        equ	768	;# 
  8337   000301                     SMT1TMRH        equ	769	;# 
  8338   000302                     SMT1TMRU        equ	770	;# 
  8339   000303                     SMT1CPR         equ	771	;# 
  8340   000303                     SMT1CPRL        equ	771	;# 
  8341   000304                     SMT1CPRH        equ	772	;# 
  8342   000305                     SMT1CPRU        equ	773	;# 
  8343   000306                     SMT1CPW         equ	774	;# 
  8344   000306                     SMT1CPWL        equ	774	;# 
  8345   000307                     SMT1CPWH        equ	775	;# 
  8346   000308                     SMT1CPWU        equ	776	;# 
  8347   000309                     SMT1PR          equ	777	;# 
  8348   000309                     SMT1PRL         equ	777	;# 
  8349   00030A                     SMT1PRH         equ	778	;# 
  8350   00030B                     SMT1PRU         equ	779	;# 
  8351   00030C                     SMT1CON0        equ	780	;# 
  8352   00030D                     SMT1CON1        equ	781	;# 
  8353   00030E                     SMT1STAT        equ	782	;# 
  8354   00030F                     SMT1CLK         equ	783	;# 
  8355   000310                     SMT1SIG         equ	784	;# 
  8356   000311                     SMT1WIN         equ	785	;# 
  8357   000318                     TMR0L           equ	792	;# 
  8358   000318                     TMR0            equ	792	;# 
  8359   000319                     TMR0H           equ	793	;# 
  8360   000319                     PR0             equ	793	;# 
  8361   00031A                     T0CON0          equ	794	;# 
  8362   00031B                     T0CON1          equ	795	;# 
  8363   00031C                     TMR1            equ	796	;# 
  8364   00031C                     TMR1L           equ	796	;# 
  8365   00031D                     TMR1H           equ	797	;# 
  8366   00031E                     T1CON           equ	798	;# 
  8367   00031E                     TMR1CON         equ	798	;# 
  8368   00031F                     T1GCON          equ	799	;# 
  8369   00031F                     TMR1GCON        equ	799	;# 
  8370   000320                     T1GATE          equ	800	;# 
  8371   000320                     TMR1GATE        equ	800	;# 
  8372   000321                     T1CLK           equ	801	;# 
  8373   000321                     TMR1CLK         equ	801	;# 
  8374   000321                     PR1             equ	801	;# 
  8375   000322                     T2TMR           equ	802	;# 
  8376   000322                     TMR2            equ	802	;# 
  8377   000323                     T2PR            equ	803	;# 
  8378   000323                     PR2             equ	803	;# 
  8379   000324                     T2CON           equ	804	;# 
  8380   000325                     T2HLT           equ	805	;# 
  8381   000326                     T2CLKCON        equ	806	;# 
  8382   000326                     T2CLK           equ	806	;# 
  8383   000327                     T2RST           equ	807	;# 
  8384   000328                     TMR3            equ	808	;# 
  8385   000328                     TMR3L           equ	808	;# 
  8386   000329                     TMR3H           equ	809	;# 
  8387   00032A                     T3CON           equ	810	;# 
  8388   00032A                     TMR3CON         equ	810	;# 
  8389   00032B                     T3GCON          equ	811	;# 
  8390   00032B                     TMR3GCON        equ	811	;# 
  8391   00032C                     T3GATE          equ	812	;# 
  8392   00032C                     TMR3GATE        equ	812	;# 
  8393   00032D                     T3CLK           equ	813	;# 
  8394   00032D                     TMR3CLK         equ	813	;# 
  8395   00032D                     PR3             equ	813	;# 
  8396   00032E                     T4TMR           equ	814	;# 
  8397   00032E                     TMR4            equ	814	;# 
  8398   00032F                     T4PR            equ	815	;# 
  8399   00032F                     PR4             equ	815	;# 
  8400   000330                     T4CON           equ	816	;# 
  8401   000331                     T4HLT           equ	817	;# 
  8402   000332                     T4CLKCON        equ	818	;# 
  8403   000332                     T4CLK           equ	818	;# 
  8404   000333                     T4RST           equ	819	;# 
  8405   000334                     TMR5            equ	820	;# 
  8406   000334                     TMR5L           equ	820	;# 
  8407   000335                     TMR5H           equ	821	;# 
  8408   000336                     T5CON           equ	822	;# 
  8409   000336                     TMR5CON         equ	822	;# 
  8410   000337                     T5GCON          equ	823	;# 
  8411   000337                     TMR5GCON        equ	823	;# 
  8412   000338                     T5GATE          equ	824	;# 
  8413   000338                     TMR5GATE        equ	824	;# 
  8414   000339                     T5CLK           equ	825	;# 
  8415   000339                     TMR5CLK         equ	825	;# 
  8416   000339                     PR5             equ	825	;# 
  8417   00033A                     T6TMR           equ	826	;# 
  8418   00033A                     TMR6            equ	826	;# 
  8419   00033B                     T6PR            equ	827	;# 
  8420   00033B                     PR6             equ	827	;# 
  8421   00033C                     T6CON           equ	828	;# 
  8422   00033D                     T6HLT           equ	829	;# 
  8423   00033E                     T6CLKCON        equ	830	;# 
  8424   00033E                     T6CLK           equ	830	;# 
  8425   00033F                     T6RST           equ	831	;# 
  8426   000340                     CCPR1           equ	832	;# 
  8427   000340                     CCPR1L          equ	832	;# 
  8428   000341                     CCPR1H          equ	833	;# 
  8429   000342                     CCP1CON         equ	834	;# 
  8430   000343                     CCP1CAP         equ	835	;# 
  8431   000344                     CCPR2           equ	836	;# 
  8432   000344                     CCPR2L          equ	836	;# 
  8433   000345                     CCPR2H          equ	837	;# 
  8434   000346                     CCP2CON         equ	838	;# 
  8435   000347                     CCP2CAP         equ	839	;# 
  8436   000348                     CCPR3           equ	840	;# 
  8437   000348                     CCPR3L          equ	840	;# 
  8438   000349                     CCPR3H          equ	841	;# 
  8439   00034A                     CCP3CON         equ	842	;# 
  8440   00034B                     CCP3CAP         equ	843	;# 
  8441   00034C                     CCPTMRS0        equ	844	;# 
  8442   00034F                     CRCDATA         equ	847	;# 
  8443   00034F                     CRCDATL         equ	847	;# 
  8444   000350                     CRCDATH         equ	848	;# 
  8445   000351                     CRCACC          equ	849	;# 
  8446   000351                     CRCACCL         equ	849	;# 
  8447   000352                     CRCACCH         equ	850	;# 
  8448   000353                     CRCSHFT         equ	851	;# 
  8449   000353                     CRCSHIFTL       equ	851	;# 
  8450   000354                     CRCSHIFTH       equ	852	;# 
  8451   000355                     CRCXOR          equ	853	;# 
  8452   000355                     CRCXORL         equ	853	;# 
  8453   000356                     CRCXORH         equ	854	;# 
  8454   000357                     CRCCON0         equ	855	;# 
  8455   000358                     CRCCON1         equ	856	;# 
  8456   00035A                     SCANLADR        equ	858	;# 
  8457   00035A                     SCANLADRL       equ	858	;# 
  8458   00035B                     SCANLADRH       equ	859	;# 
  8459   00035C                     SCANLADRU       equ	860	;# 
  8460   00035D                     SCANHADR        equ	861	;# 
  8461   00035D                     SCANHADRL       equ	861	;# 
  8462   00035E                     SCANHADRH       equ	862	;# 
  8463   00035F                     SCANHADRU       equ	863	;# 
  8464   000360                     SCANCON0        equ	864	;# 
  8465   000361                     SCANTRIG        equ	865	;# 
  8466   000362                     IPR0            equ	866	;# 
  8467   000363                     IPR1            equ	867	;# 
  8468   000364                     IPR2            equ	868	;# 
  8469   000365                     IPR3            equ	869	;# 
  8470   000366                     IPR4            equ	870	;# 
  8471   000367                     IPR5            equ	871	;# 
  8472   000368                     IPR6            equ	872	;# 
  8473   000369                     IPR7            equ	873	;# 
  8474   00036A                     IPR8            equ	874	;# 
  8475   00036B                     IPR9            equ	875	;# 
  8476   00036C                     IPR10           equ	876	;# 
  8477   00036D                     IPR11           equ	877	;# 
  8478   00036E                     IPR12           equ	878	;# 
  8479   00036F                     IPR13           equ	879	;# 
  8480   000370                     IPR14           equ	880	;# 
  8481   000371                     IPR15           equ	881	;# 
  8482   000373                     STATUS_CSHAD    equ	883	;# 
  8483   000374                     WREG_CSHAD      equ	884	;# 
  8484   000375                     BSR_CSHAD       equ	885	;# 
  8485   000376                     SHADCON         equ	886	;# 
  8486   000377                     STATUS_SHAD     equ	887	;# 
  8487   000378                     WREG_SHAD       equ	888	;# 
  8488   000379                     BSR_SHAD        equ	889	;# 
  8489   00037A                     PCLATH_SHAD     equ	890	;# 
  8490   00037B                     PCLATU_SHAD     equ	891	;# 
  8491   00037C                     FSR0SH          equ	892	;# 
  8492   00037C                     FSR0L_SHAD      equ	892	;# 
  8493   00037D                     FSR0H_SHAD      equ	893	;# 
  8494   00037E                     FSR1SH          equ	894	;# 
  8495   00037E                     FSR1L_SHAD      equ	894	;# 
  8496   00037F                     FSR1H_SHAD      equ	895	;# 
  8497   000380                     FSR2SH          equ	896	;# 
  8498   000380                     FSR2L_SHAD      equ	896	;# 
  8499   000381                     FSR2H_SHAD      equ	897	;# 
  8500   000382                     PRODSH          equ	898	;# 
  8501   000382                     PRODL_SHAD      equ	898	;# 
  8502   000383                     PRODH_SHAD      equ	899	;# 
  8503   0003BC                     CWG1CLK         equ	956	;# 
  8504   0003BC                     CWG1CLKCON      equ	956	;# 
  8505   0003BD                     CWG1ISM         equ	957	;# 
  8506   0003BD                     CWG1DAT         equ	957	;# 
  8507   0003BE                     CWG1DBR         equ	958	;# 
  8508   0003BF                     CWG1DBF         equ	959	;# 
  8509   0003C0                     CWG1CON0        equ	960	;# 
  8510   0003C1                     CWG1CON1        equ	961	;# 
  8511   0003C2                     CWG1AS0         equ	962	;# 
  8512   0003C3                     CWG1AS1         equ	963	;# 
  8513   0003C4                     CWG1STR         equ	964	;# 
  8514   0003C5                     CWG2CLK         equ	965	;# 
  8515   0003C5                     CWG2CLKCON      equ	965	;# 
  8516   0003C6                     CWG2ISM         equ	966	;# 
  8517   0003C6                     CWG2DAT         equ	966	;# 
  8518   0003C7                     CWG2DBR         equ	967	;# 
  8519   0003C8                     CWG2DBF         equ	968	;# 
  8520   0003C9                     CWG2CON0        equ	969	;# 
  8521   0003CA                     CWG2CON1        equ	970	;# 
  8522   0003CB                     CWG2AS0         equ	971	;# 
  8523   0003CC                     CWG2AS1         equ	972	;# 
  8524   0003CD                     CWG2STR         equ	973	;# 
  8525   0003CE                     CWG3CLK         equ	974	;# 
  8526   0003CE                     CWG3CLKCON      equ	974	;# 
  8527   0003CF                     CWG3ISM         equ	975	;# 
  8528   0003CF                     CWG3DAT         equ	975	;# 
  8529   0003D0                     CWG3DBR         equ	976	;# 
  8530   0003D1                     CWG3DBF         equ	977	;# 
  8531   0003D2                     CWG3CON0        equ	978	;# 
  8532   0003D3                     CWG3CON1        equ	979	;# 
  8533   0003D4                     CWG3AS0         equ	980	;# 
  8534   0003D5                     CWG3AS1         equ	981	;# 
  8535   0003D6                     CWG3STR         equ	982	;# 
  8536   0003D7                     FVRCON          equ	983	;# 
  8537   0003D8                     ADCPCON         equ	984	;# 
  8538   0003D8                     ADCP            equ	984	;# 
  8539   0003D9                     ADLTH           equ	985	;# 
  8540   0003D9                     ADLTHL          equ	985	;# 
  8541   0003DA                     ADLTHH          equ	986	;# 
  8542   0003DB                     ADUTH           equ	987	;# 
  8543   0003DB                     ADUTHL          equ	987	;# 
  8544   0003DC                     ADUTHH          equ	988	;# 
  8545   0003DD                     ADERR           equ	989	;# 
  8546   0003DD                     ADERRL          equ	989	;# 
  8547   0003DE                     ADERRH          equ	990	;# 
  8548   0003DF                     ADSTPT          equ	991	;# 
  8549   0003DF                     ADSTPTL         equ	991	;# 
  8550   0003E0                     ADSTPTH         equ	992	;# 
  8551   0003E1                     ADFLTR          equ	993	;# 
  8552   0003E1                     ADFLTRL         equ	993	;# 
  8553   0003E2                     ADFLTRH         equ	994	;# 
  8554   0003E3                     ADACC           equ	995	;# 
  8555   0003E3                     ADACCL          equ	995	;# 
  8556   0003E4                     ADACCH          equ	996	;# 
  8557   0003E5                     ADACCU          equ	997	;# 
  8558   0003E6                     ADCNT           equ	998	;# 
  8559   0003E7                     ADRPT           equ	999	;# 
  8560   0003E8                     ADPREV          equ	1000	;# 
  8561   0003E8                     ADPREVL         equ	1000	;# 
  8562   0003E9                     ADPREVH         equ	1001	;# 
  8563   0003EA                     ADRES           equ	1002	;# 
  8564   0003EA                     ADRESL          equ	1002	;# 
  8565   0003EB                     ADRESH          equ	1003	;# 
  8566   0003EC                     ADPCH           equ	1004	;# 
  8567   0003EE                     ADACQ           equ	1006	;# 
  8568   0003EE                     ADACQL          equ	1006	;# 
  8569   0003EF                     ADACQH          equ	1007	;# 
  8570   0003F0                     ADCAP           equ	1008	;# 
  8571   0003F1                     ADPRE           equ	1009	;# 
  8572   0003F1                     ADPREL          equ	1009	;# 
  8573   0003F2                     ADPREH          equ	1010	;# 
  8574   0003F3                     ADCON0          equ	1011	;# 
  8575   0003F4                     ADCON1          equ	1012	;# 
  8576   0003F5                     ADCON2          equ	1013	;# 
  8577   0003F6                     ADCON3          equ	1014	;# 
  8578   0003F7                     ADSTAT          equ	1015	;# 
  8579   0003F8                     ADREF           equ	1016	;# 
  8580   0003F9                     ADACT           equ	1017	;# 
  8581   0003FA                     ADCLK           equ	1018	;# 
  8582   000400                     ANSELA          equ	1024	;# 
  8583   000401                     WPUA            equ	1025	;# 
  8584   000402                     ODCONA          equ	1026	;# 
  8585   000403                     SLRCONA         equ	1027	;# 
  8586   000404                     INLVLA          equ	1028	;# 
  8587   000405                     IOCAP           equ	1029	;# 
  8588   000406                     IOCAN           equ	1030	;# 
  8589   000407                     IOCAF           equ	1031	;# 
  8590   000408                     ANSELB          equ	1032	;# 
  8591   000409                     WPUB            equ	1033	;# 
  8592   00040A                     ODCONB          equ	1034	;# 
  8593   00040B                     SLRCONB         equ	1035	;# 
  8594   00040C                     INLVLB          equ	1036	;# 
  8595   00040D                     IOCBP           equ	1037	;# 
  8596   00040E                     IOCBN           equ	1038	;# 
  8597   00040F                     IOCBF           equ	1039	;# 
  8598   000410                     ANSELC          equ	1040	;# 
  8599   000411                     WPUC            equ	1041	;# 
  8600   000412                     ODCONC          equ	1042	;# 
  8601   000413                     SLRCONC         equ	1043	;# 
  8602   000414                     INLVLC          equ	1044	;# 
  8603   000415                     IOCCP           equ	1045	;# 
  8604   000416                     IOCCN           equ	1046	;# 
  8605   000417                     IOCCF           equ	1047	;# 
  8606   000418                     ANSELD          equ	1048	;# 
  8607   000419                     WPUD            equ	1049	;# 
  8608   00041A                     ODCOND          equ	1050	;# 
  8609   00041B                     SLRCOND         equ	1051	;# 
  8610   00041C                     INLVLD          equ	1052	;# 
  8611   000420                     ANSELE          equ	1056	;# 
  8612   000421                     WPUE            equ	1057	;# 
  8613   000422                     ODCONE          equ	1058	;# 
  8614   000423                     SLRCONE         equ	1059	;# 
  8615   000424                     INLVLE          equ	1060	;# 
  8616   000425                     IOCEP           equ	1061	;# 
  8617   000426                     IOCEN           equ	1062	;# 
  8618   000427                     IOCEF           equ	1063	;# 
  8619   000428                     ANSELF          equ	1064	;# 
  8620   000429                     WPUF            equ	1065	;# 
  8621   00042A                     ODCONF          equ	1066	;# 
  8622   00042B                     SLRCONF         equ	1067	;# 
  8623   00042C                     INLVLF          equ	1068	;# 
  8624   000440                     NCO1ACC         equ	1088	;# 
  8625   000440                     NCO1ACCL        equ	1088	;# 
  8626   000441                     NCO1ACCH        equ	1089	;# 
  8627   000442                     NCO1ACCU        equ	1090	;# 
  8628   000443                     NCO1INC         equ	1091	;# 
  8629   000443                     NCO1INCL        equ	1091	;# 
  8630   000444                     NCO1INCH        equ	1092	;# 
  8631   000445                     NCO1INCU        equ	1093	;# 
  8632   000446                     NCO1CON         equ	1094	;# 
  8633   000447                     NCO1CLK         equ	1095	;# 
  8634   000448                     NCO2ACC         equ	1096	;# 
  8635   000448                     NCO2ACCL        equ	1096	;# 
  8636   000449                     NCO2ACCH        equ	1097	;# 
  8637   00044A                     NCO2ACCU        equ	1098	;# 
  8638   00044B                     NCO2INC         equ	1099	;# 
  8639   00044B                     NCO2INCL        equ	1099	;# 
  8640   00044C                     NCO2INCH        equ	1100	;# 
  8641   00044D                     NCO2INCU        equ	1101	;# 
  8642   00044E                     NCO2CON         equ	1102	;# 
  8643   00044F                     NCO2CLK         equ	1103	;# 
  8644   000450                     NCO3ACC         equ	1104	;# 
  8645   000450                     NCO3ACCL        equ	1104	;# 
  8646   000451                     NCO3ACCH        equ	1105	;# 
  8647   000452                     NCO3ACCU        equ	1106	;# 
  8648   000453                     NCO3INC         equ	1107	;# 
  8649   000453                     NCO3INCL        equ	1107	;# 
  8650   000454                     NCO3INCH        equ	1108	;# 
  8651   000455                     NCO3INCU        equ	1109	;# 
  8652   000456                     NCO3CON         equ	1110	;# 
  8653   000457                     NCO3CLK         equ	1111	;# 
  8654   000459                     IVTLOCK         equ	1113	;# 
  8655   00045A                     IVTAD           equ	1114	;# 
  8656   00045A                     IVTADL          equ	1114	;# 
  8657   00045B                     IVTADH          equ	1115	;# 
  8658   00045C                     IVTADU          equ	1116	;# 
  8659   00045D                     IVTBASE         equ	1117	;# 
  8660   00045D                     IVTBASEL        equ	1117	;# 
  8661   00045E                     IVTBASEH        equ	1118	;# 
  8662   00045F                     IVTBASEU        equ	1119	;# 
  8663   000460                     PWM1ERS         equ	1120	;# 
  8664   000461                     PWM1CLK         equ	1121	;# 
  8665   000462                     PWM1LDS         equ	1122	;# 
  8666   000463                     PWM1PR          equ	1123	;# 
  8667   000463                     PWM1PRL         equ	1123	;# 
  8668   000464                     PWM1PRH         equ	1124	;# 
  8669   000465                     PWM1CPRE        equ	1125	;# 
  8670   000466                     PWM1PIPOS       equ	1126	;# 
  8671   000467                     PWM1GIR         equ	1127	;# 
  8672   000468                     PWM1GIE         equ	1128	;# 
  8673   000469                     PWM1CON         equ	1129	;# 
  8674   00046A                     PWM1S1CFG       equ	1130	;# 
  8675   00046B                     PWM1S1P1        equ	1131	;# 
  8676   00046B                     PWM1S1P1L       equ	1131	;# 
  8677   00046C                     PWM1S1P1H       equ	1132	;# 
  8678   00046D                     PWM1S1P2        equ	1133	;# 
  8679   00046D                     PWM1S1P2L       equ	1133	;# 
  8680   00046E                     PWM1S1P2H       equ	1134	;# 
  8681   00046F                     PWM2ERS         equ	1135	;# 
  8682   000470                     PWM2CLK         equ	1136	;# 
  8683   000471                     PWM2LDS         equ	1137	;# 
  8684   000472                     PWM2PR          equ	1138	;# 
  8685   000472                     PWM2PRL         equ	1138	;# 
  8686   000473                     PWM2PRH         equ	1139	;# 
  8687   000474                     PWM2CPRE        equ	1140	;# 
  8688   000475                     PWM2PIPOS       equ	1141	;# 
  8689   000476                     PWM2GIR         equ	1142	;# 
  8690   000477                     PWM2GIE         equ	1143	;# 
  8691   000478                     PWM2CON         equ	1144	;# 
  8692   000479                     PWM2S1CFG       equ	1145	;# 
  8693   00047A                     PWM2S1P1        equ	1146	;# 
  8694   00047A                     PWM2S1P1L       equ	1146	;# 
  8695   00047B                     PWM2S1P1H       equ	1147	;# 
  8696   00047C                     PWM2S1P2        equ	1148	;# 
  8697   00047C                     PWM2S1P2L       equ	1148	;# 
  8698   00047D                     PWM2S1P2H       equ	1149	;# 
  8699   00047E                     PWM3ERS         equ	1150	;# 
  8700   00047F                     PWM3CLK         equ	1151	;# 
  8701   000480                     PWM3LDS         equ	1152	;# 
  8702   000481                     PWM3PR          equ	1153	;# 
  8703   000481                     PWM3PRL         equ	1153	;# 
  8704   000482                     PWM3PRH         equ	1154	;# 
  8705   000483                     PWM3CPRE        equ	1155	;# 
  8706   000484                     PWM3PIPOS       equ	1156	;# 
  8707   000485                     PWM3GIR         equ	1157	;# 
  8708   000486                     PWM3GIE         equ	1158	;# 
  8709   000487                     PWM3CON         equ	1159	;# 
  8710   000488                     PWM3S1CFG       equ	1160	;# 
  8711   000489                     PWM3S1P1        equ	1161	;# 
  8712   000489                     PWM3S1P1L       equ	1161	;# 
  8713   00048A                     PWM3S1P1H       equ	1162	;# 
  8714   00048B                     PWM3S1P2        equ	1163	;# 
  8715   00048B                     PWM3S1P2L       equ	1163	;# 
  8716   00048C                     PWM3S1P2H       equ	1164	;# 
  8717   00049C                     PWMLOAD         equ	1180	;# 
  8718   00049D                     PWMEN           equ	1181	;# 
  8719   00049E                     PIE0            equ	1182	;# 
  8720   00049F                     PIE1            equ	1183	;# 
  8721   0004A0                     PIE2            equ	1184	;# 
  8722   0004A1                     PIE3            equ	1185	;# 
  8723   0004A2                     PIE4            equ	1186	;# 
  8724   0004A3                     PIE5            equ	1187	;# 
  8725   0004A4                     PIE6            equ	1188	;# 
  8726   0004A5                     PIE7            equ	1189	;# 
  8727   0004A6                     PIE8            equ	1190	;# 
  8728   0004A7                     PIE9            equ	1191	;# 
  8729   0004A8                     PIE10           equ	1192	;# 
  8730   0004A9                     PIE11           equ	1193	;# 
  8731   0004AA                     PIE12           equ	1194	;# 
  8732   0004AB                     PIE13           equ	1195	;# 
  8733   0004AC                     PIE14           equ	1196	;# 
  8734   0004AD                     PIE15           equ	1197	;# 
  8735   0004AE                     PIR0            equ	1198	;# 
  8736   0004AF                     PIR1            equ	1199	;# 
  8737   0004B0                     PIR2            equ	1200	;# 
  8738   0004B1                     PIR3            equ	1201	;# 
  8739   0004B2                     PIR4            equ	1202	;# 
  8740   0004B3                     PIR5            equ	1203	;# 
  8741   0004B4                     PIR6            equ	1204	;# 
  8742   0004B5                     PIR7            equ	1205	;# 
  8743   0004B6                     PIR8            equ	1206	;# 
  8744   0004B7                     PIR9            equ	1207	;# 
  8745   0004B8                     PIR10           equ	1208	;# 
  8746   0004B9                     PIR11           equ	1209	;# 
  8747   0004BA                     PIR12           equ	1210	;# 
  8748   0004BB                     PIR13           equ	1211	;# 
  8749   0004BC                     PIR14           equ	1212	;# 
  8750   0004BD                     PIR15           equ	1213	;# 
  8751   0004BE                     LATA            equ	1214	;# 
  8752   0004BF                     LATB            equ	1215	;# 
  8753   0004C0                     LATC            equ	1216	;# 
  8754   0004C1                     LATD            equ	1217	;# 
  8755   0004C2                     LATE            equ	1218	;# 
  8756   0004C3                     LATF            equ	1219	;# 
  8757   0004C6                     TRISA           equ	1222	;# 
  8758   0004C7                     TRISB           equ	1223	;# 
  8759   0004C8                     TRISC           equ	1224	;# 
  8760   0004C9                     TRISD           equ	1225	;# 
  8761   0004CA                     TRISE           equ	1226	;# 
  8762   0004CB                     TRISF           equ	1227	;# 
  8763   0004CE                     PORTA           equ	1230	;# 
  8764   0004CF                     PORTB           equ	1231	;# 
  8765   0004D0                     PORTC           equ	1232	;# 
  8766   0004D1                     PORTD           equ	1233	;# 
  8767   0004D2                     PORTE           equ	1234	;# 
  8768   0004D3                     PORTF           equ	1235	;# 
  8769   0004D6                     INTCON0         equ	1238	;# 
  8770   0004D7                     INTCON1         equ	1239	;# 
  8771   0004D8                     STATUS          equ	1240	;# 
  8772   0004D9                     FSR2            equ	1241	;# 
  8773   0004D9                     FSR2L           equ	1241	;# 
  8774   0004DA                     FSR2H           equ	1242	;# 
  8775   0004DB                     PLUSW2          equ	1243	;# 
  8776   0004DC                     PREINC2         equ	1244	;# 
  8777   0004DD                     POSTDEC2        equ	1245	;# 
  8778   0004DE                     POSTINC2        equ	1246	;# 
  8779   0004DF                     INDF2           equ	1247	;# 
  8780   0004E0                     BSR             equ	1248	;# 
  8781   0004E1                     FSR1            equ	1249	;# 
  8782   0004E1                     FSR1L           equ	1249	;# 
  8783   0004E2                     FSR1H           equ	1250	;# 
  8784   0004E3                     PLUSW1          equ	1251	;# 
  8785   0004E4                     PREINC1         equ	1252	;# 
  8786   0004E5                     POSTDEC1        equ	1253	;# 
  8787   0004E6                     POSTINC1        equ	1254	;# 
  8788   0004E7                     INDF1           equ	1255	;# 
  8789   0004E8                     WREG            equ	1256	;# 
  8790   0004E9                     FSR0            equ	1257	;# 
  8791   0004E9                     FSR0L           equ	1257	;# 
  8792   0004EA                     FSR0H           equ	1258	;# 
  8793   0004EB                     PLUSW0          equ	1259	;# 
  8794   0004EC                     PREINC0         equ	1260	;# 
  8795   0004ED                     POSTDEC0        equ	1261	;# 
  8796   0004EE                     POSTINC0        equ	1262	;# 
  8797   0004EF                     INDF0           equ	1263	;# 
  8798   0004F0                     PCON0           equ	1264	;# 
  8799   0004F1                     PCON1           equ	1265	;# 
  8800   0004F2                     CPUDOZE         equ	1266	;# 
  8801   0004F3                     PROD            equ	1267	;# 
  8802   0004F3                     PRODL           equ	1267	;# 
  8803   0004F4                     PRODH           equ	1268	;# 
  8804   0004F5                     TABLAT          equ	1269	;# 
  8805   0004F6                     TBLPTR          equ	1270	;# 
  8806   0004F6                     TBLPTRL         equ	1270	;# 
  8807   0004F7                     TBLPTRH         equ	1271	;# 
  8808   0004F8                     TBLPTRU         equ	1272	;# 
  8809   0004F9                     PCLAT           equ	1273	;# 
  8810   0004F9                     PCL             equ	1273	;# 
  8811   0004FA                     PCLATH          equ	1274	;# 
  8812   0004FB                     PCLATU          equ	1275	;# 
  8813   0004FC                     STKPTR          equ	1276	;# 
  8814   0004FD                     TOS             equ	1277	;# 
  8815   0004FD                     TOSL            equ	1277	;# 
  8816   0004FE                     TOSH            equ	1278	;# 
  8817   0004FF                     TOSU            equ	1279	;# 
  8818   000039                     CLKRCON         equ	57	;# 
  8819   00003A                     CLKRCLK         equ	58	;# 
  8820   000040                     NVMCON0         equ	64	;# 
  8821   000041                     NVMCON1         equ	65	;# 
  8822   000042                     NVMLOCK         equ	66	;# 
  8823   000043                     NVMADR          equ	67	;# 
  8824   000043                     NVMADRL         equ	67	;# 
  8825   000044                     NVMADRH         equ	68	;# 
  8826   000045                     NVMADRU         equ	69	;# 
  8827   000046                     NVMDAT          equ	70	;# 
  8828   000046                     NVMDATL         equ	70	;# 
  8829   000047                     NVMDATH         equ	71	;# 
  8830   000048                     VREGCON         equ	72	;# 
  8831   000049                     BORCON          equ	73	;# 
  8832   00004A                     HLVDCON0        equ	74	;# 
  8833   00004B                     HLVDCON1        equ	75	;# 
  8834   00004C                     ZCDCON          equ	76	;# 
  8835   000060                     PMD0            equ	96	;# 
  8836   000061                     PMD1            equ	97	;# 
  8837   000063                     PMD3            equ	99	;# 
  8838   000064                     PMD4            equ	100	;# 
  8839   000065                     PMD5            equ	101	;# 
  8840   000066                     PMD6            equ	102	;# 
  8841   000067                     PMD7            equ	103	;# 
  8842   000068                     PMD8            equ	104	;# 
  8843   00006A                     MD1CON0         equ	106	;# 
  8844   00006B                     MD1CON1         equ	107	;# 
  8845   00006C                     MD1SRC          equ	108	;# 
  8846   00006D                     MD1CARL         equ	109	;# 
  8847   00006E                     MD1CARH         equ	110	;# 
  8848   00006F                     CMOUT           equ	111	;# 
  8849   000070                     CM1CON0         equ	112	;# 
  8850   000071                     CM1CON1         equ	113	;# 
  8851   000072                     CM1NCH          equ	114	;# 
  8852   000073                     CM1PCH          equ	115	;# 
  8853   000074                     CM2CON0         equ	116	;# 
  8854   000075                     CM2CON1         equ	117	;# 
  8855   000076                     CM2NCH          equ	118	;# 
  8856   000077                     CM2PCH          equ	119	;# 
  8857   000078                     WDTCON0         equ	120	;# 
  8858   000079                     WDTCON1         equ	121	;# 
  8859   00007A                     WDTPS           equ	122	;# 
  8860   00007A                     WDTPSL          equ	122	;# 
  8861   00007B                     WDTPSH          equ	123	;# 
  8862   00007C                     WDTTMR          equ	124	;# 
  8863   00007D                     DAC1DAT         equ	125	;# 
  8864   00007D                     DAC1DATL        equ	125	;# 
  8865   00007F                     DAC1CON         equ	127	;# 
  8866   000080                     SPI1RXB         equ	128	;# 
  8867   000081                     SPI1TXB         equ	129	;# 
  8868   000082                     SPI1TCNT        equ	130	;# 
  8869   000082                     SPI1TCNTL       equ	130	;# 
  8870   000083                     SPI1TCNTH       equ	131	;# 
  8871   000084                     SPI1CON0        equ	132	;# 
  8872   000085                     SPI1CON1        equ	133	;# 
  8873   000086                     SPI1CON2        equ	134	;# 
  8874   000087                     SPI1STATUS      equ	135	;# 
  8875   000088                     SPI1TWIDTH      equ	136	;# 
  8876   000089                     SPI1BAUD        equ	137	;# 
  8877   00008A                     SPI1INTF        equ	138	;# 
  8878   00008B                     SPI1INTE        equ	139	;# 
  8879   00008C                     SPI1CLK         equ	140	;# 
  8880   00008D                     SPI2RXB         equ	141	;# 
  8881   00008E                     SPI2TXB         equ	142	;# 
  8882   00008F                     SPI2TCNT        equ	143	;# 
  8883   00008F                     SPI2TCNTL       equ	143	;# 
  8884   000090                     SPI2TCNTH       equ	144	;# 
  8885   000091                     SPI2CON0        equ	145	;# 
  8886   000092                     SPI2CON1        equ	146	;# 
  8887   000093                     SPI2CON2        equ	147	;# 
  8888   000094                     SPI2STATUS      equ	148	;# 
  8889   000095                     SPI2TWIDTH      equ	149	;# 
  8890   000096                     SPI2BAUD        equ	150	;# 
  8891   000097                     SPI2INTF        equ	151	;# 
  8892   000098                     SPI2INTE        equ	152	;# 
  8893   000099                     SPI2CLK         equ	153	;# 
  8894   0000AC                     ACTCON          equ	172	;# 
  8895   0000AD                     OSCCON1         equ	173	;# 
  8896   0000AE                     OSCCON2         equ	174	;# 
  8897   0000AF                     OSCCON3         equ	175	;# 
  8898   0000B0                     OSCTUNE         equ	176	;# 
  8899   0000B1                     OSCFRQ          equ	177	;# 
  8900   0000B1                     OSCFREQ         equ	177	;# 
  8901   0000B2                     OSCSTAT         equ	178	;# 
  8902   0000B2                     OSCSTAT1        equ	178	;# 
  8903   0000B3                     OSCEN           equ	179	;# 
  8904   0000B4                     PRLOCK          equ	180	;# 
  8905   0000B5                     SCANPR          equ	181	;# 
  8906   0000B6                     DMA1PR          equ	182	;# 
  8907   0000B7                     DMA2PR          equ	183	;# 
  8908   0000B8                     DMA3PR          equ	184	;# 
  8909   0000B9                     DMA4PR          equ	185	;# 
  8910   0000BA                     DMA5PR          equ	186	;# 
  8911   0000BB                     DMA6PR          equ	187	;# 
  8912   0000BE                     MAINPR          equ	190	;# 
  8913   0000BF                     ISRPR           equ	191	;# 
  8914   0000D4                     CLCDATA         equ	212	;# 
  8915   0000D5                     CLCSELECT       equ	213	;# 
  8916   0000D6                     CLCnCON         equ	214	;# 
  8917   0000D7                     CLCnPOL         equ	215	;# 
  8918   0000D8                     CLCnSEL0        equ	216	;# 
  8919   0000D9                     CLCnSEL1        equ	217	;# 
  8920   0000DA                     CLCnSEL2        equ	218	;# 
  8921   0000DB                     CLCnSEL3        equ	219	;# 
  8922   0000DC                     CLCnGLS0        equ	220	;# 
  8923   0000DD                     CLCnGLS1        equ	221	;# 
  8924   0000DE                     CLCnGLS2        equ	222	;# 
  8925   0000DF                     CLCnGLS3        equ	223	;# 
  8926   0000E8                     DMASELECT       equ	232	;# 
  8927   0000E9                     DMAnBUF         equ	233	;# 
  8928   0000EA                     DMAnDCNT        equ	234	;# 
  8929   0000EA                     DMAnDCNTL       equ	234	;# 
  8930   0000EB                     DMAnDCNTH       equ	235	;# 
  8931   0000EC                     DMAnDPTR        equ	236	;# 
  8932   0000EC                     DMAnDPTRL       equ	236	;# 
  8933   0000ED                     DMAnDPTRH       equ	237	;# 
  8934   0000EE                     DMAnDSZ         equ	238	;# 
  8935   0000EE                     DMAnDSZL        equ	238	;# 
  8936   0000EF                     DMAnDSZH        equ	239	;# 
  8937   0000F0                     DMAnDSA         equ	240	;# 
  8938   0000F0                     DMAnDSAL        equ	240	;# 
  8939   0000F1                     DMAnDSAH        equ	241	;# 
  8940   0000F2                     DMAnSCNT        equ	242	;# 
  8941   0000F2                     DMAnSCNTL       equ	242	;# 
  8942   0000F3                     DMAnSCNTH       equ	243	;# 
  8943   0000F4                     DMAnSPTR        equ	244	;# 
  8944   0000F4                     DMAnSPTRL       equ	244	;# 
  8945   0000F5                     DMAnSPTRH       equ	245	;# 
  8946   0000F6                     DMAnSPTRU       equ	246	;# 
  8947   0000F7                     DMAnSSZ         equ	247	;# 
  8948   0000F7                     DMAnSSZL        equ	247	;# 
  8949   0000F8                     DMAnSSZH        equ	248	;# 
  8950   0000F9                     DMAnSSA         equ	249	;# 
  8951   0000F9                     DMAnSSAL        equ	249	;# 
  8952   0000FA                     DMAnSSAH        equ	250	;# 
  8953   0000FB                     DMAnSSAU        equ	251	;# 
  8954   0000FC                     DMAnCON0        equ	252	;# 
  8955   0000FD                     DMAnCON1        equ	253	;# 
  8956   0000FE                     DMAnAIRQ        equ	254	;# 
  8957   0000FF                     DMAnSIRQ        equ	255	;# 
  8958   000200                     PPSLOCK         equ	512	;# 
  8959   000201                     RA0PPS          equ	513	;# 
  8960   000202                     RA1PPS          equ	514	;# 
  8961   000203                     RA2PPS          equ	515	;# 
  8962   000204                     RA3PPS          equ	516	;# 
  8963   000205                     RA4PPS          equ	517	;# 
  8964   000206                     RA5PPS          equ	518	;# 
  8965   000207                     RA6PPS          equ	519	;# 
  8966   000208                     RA7PPS          equ	520	;# 
  8967   000209                     RB0PPS          equ	521	;# 
  8968   00020A                     RB1PPS          equ	522	;# 
  8969   00020B                     RB2PPS          equ	523	;# 
  8970   00020C                     RB3PPS          equ	524	;# 
  8971   00020D                     RB4PPS          equ	525	;# 
  8972   00020E                     RB5PPS          equ	526	;# 
  8973   00020F                     RB6PPS          equ	527	;# 
  8974   000210                     RB7PPS          equ	528	;# 
  8975   000211                     RC0PPS          equ	529	;# 
  8976   000212                     RC1PPS          equ	530	;# 
  8977   000213                     RC2PPS          equ	531	;# 
  8978   000214                     RC3PPS          equ	532	;# 
  8979   000215                     RC4PPS          equ	533	;# 
  8980   000216                     RC5PPS          equ	534	;# 
  8981   000217                     RC6PPS          equ	535	;# 
  8982   000218                     RC7PPS          equ	536	;# 
  8983   000219                     RD0PPS          equ	537	;# 
  8984   00021A                     RD1PPS          equ	538	;# 
  8985   00021B                     RD2PPS          equ	539	;# 
  8986   00021C                     RD3PPS          equ	540	;# 
  8987   00021D                     RD4PPS          equ	541	;# 
  8988   00021E                     RD5PPS          equ	542	;# 
  8989   00021F                     RD6PPS          equ	543	;# 
  8990   000220                     RD7PPS          equ	544	;# 
  8991   000221                     RE0PPS          equ	545	;# 
  8992   000222                     RE1PPS          equ	546	;# 
  8993   000223                     RE2PPS          equ	547	;# 
  8994   000229                     RF0PPS          equ	553	;# 
  8995   00022A                     RF1PPS          equ	554	;# 
  8996   00022B                     RF2PPS          equ	555	;# 
  8997   00022C                     RF3PPS          equ	556	;# 
  8998   00022D                     RF4PPS          equ	557	;# 
  8999   00022E                     RF5PPS          equ	558	;# 
  9000   00022F                     RF6PPS          equ	559	;# 
  9001   000230                     RF7PPS          equ	560	;# 
  9002   00023E                     INT0PPS         equ	574	;# 
  9003   00023F                     INT1PPS         equ	575	;# 
  9004   000240                     INT2PPS         equ	576	;# 
  9005   000241                     T0CKIPPS        equ	577	;# 
  9006   000242                     T1CKIPPS        equ	578	;# 
  9007   000243                     T1GPPS          equ	579	;# 
  9008   000244                     T3CKIPPS        equ	580	;# 
  9009   000245                     T3GPPS          equ	581	;# 
  9010   000246                     T5CKIPPS        equ	582	;# 
  9011   000247                     T5GPPS          equ	583	;# 
  9012   000248                     T2INPPS         equ	584	;# 
  9013   000249                     T4INPPS         equ	585	;# 
  9014   00024A                     T6INPPS         equ	586	;# 
  9015   00024F                     CCP1PPS         equ	591	;# 
  9016   000250                     CCP2PPS         equ	592	;# 
  9017   000251                     CCP3PPS         equ	593	;# 
  9018   000253                     PWM1ERSPPS      equ	595	;# 
  9019   000254                     PWM2ERSPPS      equ	596	;# 
  9020   000255                     PWM3ERSPPS      equ	597	;# 
  9021   000257                     PWMIN0PPS       equ	599	;# 
  9022   000258                     PWMIN1PPS       equ	600	;# 
  9023   000259                     SMT1WINPPS      equ	601	;# 
  9024   00025A                     SMT1SIGPPS      equ	602	;# 
  9025   00025B                     CWG1PPS         equ	603	;# 
  9026   00025B                     CWG1INPPS       equ	603	;# 
  9027   00025C                     CWG2PPS         equ	604	;# 
  9028   00025C                     CWG2INPPS       equ	604	;# 
  9029   00025D                     CWG3PPS         equ	605	;# 
  9030   00025D                     CWG3INPPS       equ	605	;# 
  9031   00025E                     MD1CARLPPS      equ	606	;# 
  9032   00025E                     MDCARLPPS       equ	606	;# 
  9033   00025F                     MD1CARHPPS      equ	607	;# 
  9034   00025F                     MDCARHPPS       equ	607	;# 
  9035   000260                     MD1SRCPPS       equ	608	;# 
  9036   000260                     MDSRCPPS        equ	608	;# 
  9037   000261                     CLCIN0PPS       equ	609	;# 
  9038   000262                     CLCIN1PPS       equ	610	;# 
  9039   000263                     CLCIN2PPS       equ	611	;# 
  9040   000264                     CLCIN3PPS       equ	612	;# 
  9041   000265                     CLCIN4PPS       equ	613	;# 
  9042   000266                     CLCIN5PPS       equ	614	;# 
  9043   000267                     CLCIN6PPS       equ	615	;# 
  9044   000268                     CLCIN7PPS       equ	616	;# 
  9045   000269                     ADACTPPS        equ	617	;# 
  9046   00026A                     SPI1SCKPPS      equ	618	;# 
  9047   00026B                     SPI1SDIPPS      equ	619	;# 
  9048   00026C                     SPI1SSPPS       equ	620	;# 
  9049   00026D                     SPI2SCKPPS      equ	621	;# 
  9050   00026E                     SPI2SDIPPS      equ	622	;# 
  9051   00026F                     SPI2SSPPS       equ	623	;# 
  9052   000270                     I2C1SDAPPS      equ	624	;# 
  9053   000271                     I2C1SCLPPS      equ	625	;# 
  9054   000272                     U1RXPPS         equ	626	;# 
  9055   000273                     U1CTSPPS        equ	627	;# 
  9056   000274                     U2RXPPS         equ	628	;# 
  9057   000275                     U2CTSPPS        equ	629	;# 
  9058   000276                     U3RXPPS         equ	630	;# 
  9059   000277                     U3CTSPPS        equ	631	;# 
  9060   000278                     U4RXPPS         equ	632	;# 
  9061   000279                     U4CTSPPS        equ	633	;# 
  9062   00027A                     U5RXPPS         equ	634	;# 
  9063   00027B                     U5CTSPPS        equ	635	;# 
  9064   000286                     RC4I2C          equ	646	;# 
  9065   000287                     RC3I2C          equ	647	;# 
  9066   000288                     RB2I2C          equ	648	;# 
  9067   000289                     RB1I2C          equ	649	;# 
  9068   00028B                     I2C1RXB         equ	651	;# 
  9069   00028C                     I2C1TXB         equ	652	;# 
  9070   00028D                     I2C1CNT         equ	653	;# 
  9071   00028E                     I2C1ADB0        equ	654	;# 
  9072   00028F                     I2C1ADB1        equ	655	;# 
  9073   000290                     I2C1ADR0        equ	656	;# 
  9074   000291                     I2C1ADR1        equ	657	;# 
  9075   000292                     I2C1ADR2        equ	658	;# 
  9076   000293                     I2C1ADR3        equ	659	;# 
  9077   000294                     I2C1CON0        equ	660	;# 
  9078   000295                     I2C1CON1        equ	661	;# 
  9079   000296                     I2C1CON2        equ	662	;# 
  9080   000297                     I2C1ERR         equ	663	;# 
  9081   000298                     I2C1STAT0       equ	664	;# 
  9082   000299                     I2C1STAT1       equ	665	;# 
  9083   00029A                     I2C1PIR         equ	666	;# 
  9084   00029B                     I2C1PIE         equ	667	;# 
  9085   00029C                     I2C1CLK         equ	668	;# 
  9086   00029D                     I2C1BTO         equ	669	;# 
  9087   0002A1                     U1RXB           equ	673	;# 
  9088   0002A1                     U1RXBL          equ	673	;# 
  9089   0002A2                     U1RXCHK         equ	674	;# 
  9090   0002A3                     U1TXB           equ	675	;# 
  9091   0002A3                     U1TXBL          equ	675	;# 
  9092   0002A4                     U1TXCHK         equ	676	;# 
  9093   0002A5                     U1P1            equ	677	;# 
  9094   0002A5                     U1P1L           equ	677	;# 
  9095   0002A6                     U1P1H           equ	678	;# 
  9096   0002A7                     U1P2            equ	679	;# 
  9097   0002A7                     U1P2L           equ	679	;# 
  9098   0002A8                     U1P2H           equ	680	;# 
  9099   0002A9                     U1P3            equ	681	;# 
  9100   0002A9                     U1P3L           equ	681	;# 
  9101   0002AA                     U1P3H           equ	682	;# 
  9102   0002AB                     U1CON0          equ	683	;# 
  9103   0002AC                     U1CON1          equ	684	;# 
  9104   0002AD                     U1CON2          equ	685	;# 
  9105   0002AE                     U1BRG           equ	686	;# 
  9106   0002AE                     U1BRGL          equ	686	;# 
  9107   0002AF                     U1BRGH          equ	687	;# 
  9108   0002B0                     U1FIFO          equ	688	;# 
  9109   0002B1                     U1UIR           equ	689	;# 
  9110   0002B2                     U1ERRIR         equ	690	;# 
  9111   0002B3                     U1ERRIE         equ	691	;# 
  9112   0002B4                     U2RXB           equ	692	;# 
  9113   0002B4                     U2RXBL          equ	692	;# 
  9114   0002B6                     U2TXB           equ	694	;# 
  9115   0002B6                     U2TXBL          equ	694	;# 
  9116   0002B8                     U2P1            equ	696	;# 
  9117   0002B8                     U2P1L           equ	696	;# 
  9118   0002BA                     U2P2            equ	698	;# 
  9119   0002BA                     U2P2L           equ	698	;# 
  9120   0002BC                     U2P3            equ	700	;# 
  9121   0002BC                     U2P3L           equ	700	;# 
  9122   0002BE                     U2CON0          equ	702	;# 
  9123   0002BF                     U2CON1          equ	703	;# 
  9124   0002C0                     U2CON2          equ	704	;# 
  9125   0002C1                     U2BRG           equ	705	;# 
  9126   0002C1                     U2BRGL          equ	705	;# 
  9127   0002C2                     U2BRGH          equ	706	;# 
  9128   0002C3                     U2FIFO          equ	707	;# 
  9129   0002C4                     U2UIR           equ	708	;# 
  9130   0002C5                     U2ERRIR         equ	709	;# 
  9131   0002C6                     U2ERRIE         equ	710	;# 
  9132   0002C7                     U3RXB           equ	711	;# 
  9133   0002C7                     U3RXBL          equ	711	;# 
  9134   0002C9                     U3TXB           equ	713	;# 
  9135   0002C9                     U3TXBL          equ	713	;# 
  9136   0002CB                     U3P1            equ	715	;# 
  9137   0002CB                     U3P1L           equ	715	;# 
  9138   0002CD                     U3P2            equ	717	;# 
  9139   0002CD                     U3P2L           equ	717	;# 
  9140   0002CF                     U3P3            equ	719	;# 
  9141   0002CF                     U3P3L           equ	719	;# 
  9142   0002D1                     U3CON0          equ	721	;# 
  9143   0002D2                     U3CON1          equ	722	;# 
  9144   0002D3                     U3CON2          equ	723	;# 
  9145   0002D4                     U3BRG           equ	724	;# 
  9146   0002D4                     U3BRGL          equ	724	;# 
  9147   0002D5                     U3BRGH          equ	725	;# 
  9148   0002D6                     U3FIFO          equ	726	;# 
  9149   0002D7                     U3UIR           equ	727	;# 
  9150   0002D8                     U3ERRIR         equ	728	;# 
  9151   0002D9                     U3ERRIE         equ	729	;# 
  9152   0002DA                     U4RXB           equ	730	;# 
  9153   0002DA                     U4RXBL          equ	730	;# 
  9154   0002DC                     U4TXB           equ	732	;# 
  9155   0002DC                     U4TXBL          equ	732	;# 
  9156   0002DE                     U4P1            equ	734	;# 
  9157   0002DE                     U4P1L           equ	734	;# 
  9158   0002E0                     U4P2            equ	736	;# 
  9159   0002E0                     U4P2L           equ	736	;# 
  9160   0002E2                     U4P3            equ	738	;# 
  9161   0002E2                     U4P3L           equ	738	;# 
  9162   0002E4                     U4CON0          equ	740	;# 
  9163   0002E5                     U4CON1          equ	741	;# 
  9164   0002E6                     U4CON2          equ	742	;# 
  9165   0002E7                     U4BRG           equ	743	;# 
  9166   0002E7                     U4BRGL          equ	743	;# 
  9167   0002E8                     U4BRGH          equ	744	;# 
  9168   0002E9                     U4FIFO          equ	745	;# 
  9169   0002EA                     U4UIR           equ	746	;# 
  9170   0002EB                     U4ERRIR         equ	747	;# 
  9171   0002EC                     U4ERRIE         equ	748	;# 
  9172   0002ED                     U5RXB           equ	749	;# 
  9173   0002ED                     U5RXBL          equ	749	;# 
  9174   0002EF                     U5TXB           equ	751	;# 
  9175   0002EF                     U5TXBL          equ	751	;# 
  9176   0002F1                     U5P1            equ	753	;# 
  9177   0002F1                     U5P1L           equ	753	;# 
  9178   0002F3                     U5P2            equ	755	;# 
  9179   0002F3                     U5P2L           equ	755	;# 
  9180   0002F5                     U5P3            equ	757	;# 
  9181   0002F5                     U5P3L           equ	757	;# 
  9182   0002F7                     U5CON0          equ	759	;# 
  9183   0002F8                     U5CON1          equ	760	;# 
  9184   0002F9                     U5CON2          equ	761	;# 
  9185   0002FA                     U5BRG           equ	762	;# 
  9186   0002FA                     U5BRGL          equ	762	;# 
  9187   0002FB                     U5BRGH          equ	763	;# 
  9188   0002FC                     U5FIFO          equ	764	;# 
  9189   0002FD                     U5UIR           equ	765	;# 
  9190   0002FE                     U5ERRIR         equ	766	;# 
  9191   0002FF                     U5ERRIE         equ	767	;# 
  9192   000300                     SMT1TMR         equ	768	;# 
  9193   000300                     SMT1TMRL        equ	768	;# 
  9194   000301                     SMT1TMRH        equ	769	;# 
  9195   000302                     SMT1TMRU        equ	770	;# 
  9196   000303                     SMT1CPR         equ	771	;# 
  9197   000303                     SMT1CPRL        equ	771	;# 
  9198   000304                     SMT1CPRH        equ	772	;# 
  9199   000305                     SMT1CPRU        equ	773	;# 
  9200   000306                     SMT1CPW         equ	774	;# 
  9201   000306                     SMT1CPWL        equ	774	;# 
  9202   000307                     SMT1CPWH        equ	775	;# 
  9203   000308                     SMT1CPWU        equ	776	;# 
  9204   000309                     SMT1PR          equ	777	;# 
  9205   000309                     SMT1PRL         equ	777	;# 
  9206   00030A                     SMT1PRH         equ	778	;# 
  9207   00030B                     SMT1PRU         equ	779	;# 
  9208   00030C                     SMT1CON0        equ	780	;# 
  9209   00030D                     SMT1CON1        equ	781	;# 
  9210   00030E                     SMT1STAT        equ	782	;# 
  9211   00030F                     SMT1CLK         equ	783	;# 
  9212   000310                     SMT1SIG         equ	784	;# 
  9213   000311                     SMT1WIN         equ	785	;# 
  9214   000318                     TMR0L           equ	792	;# 
  9215   000318                     TMR0            equ	792	;# 
  9216   000319                     TMR0H           equ	793	;# 
  9217   000319                     PR0             equ	793	;# 
  9218   00031A                     T0CON0          equ	794	;# 
  9219   00031B                     T0CON1          equ	795	;# 
  9220   00031C                     TMR1            equ	796	;# 
  9221   00031C                     TMR1L           equ	796	;# 
  9222   00031D                     TMR1H           equ	797	;# 
  9223   00031E                     T1CON           equ	798	;# 
  9224   00031E                     TMR1CON         equ	798	;# 
  9225   00031F                     T1GCON          equ	799	;# 
  9226   00031F                     TMR1GCON        equ	799	;# 
  9227   000320                     T1GATE          equ	800	;# 
  9228   000320                     TMR1GATE        equ	800	;# 
  9229   000321                     T1CLK           equ	801	;# 
  9230   000321                     TMR1CLK         equ	801	;# 
  9231   000321                     PR1             equ	801	;# 
  9232   000322                     T2TMR           equ	802	;# 
  9233   000322                     TMR2            equ	802	;# 
  9234   000323                     T2PR            equ	803	;# 
  9235   000323                     PR2             equ	803	;# 
  9236   000324                     T2CON           equ	804	;# 
  9237   000325                     T2HLT           equ	805	;# 
  9238   000326                     T2CLKCON        equ	806	;# 
  9239   000326                     T2CLK           equ	806	;# 
  9240   000327                     T2RST           equ	807	;# 
  9241   000328                     TMR3            equ	808	;# 
  9242   000328                     TMR3L           equ	808	;# 
  9243   000329                     TMR3H           equ	809	;# 
  9244   00032A                     T3CON           equ	810	;# 
  9245   00032A                     TMR3CON         equ	810	;# 
  9246   00032B                     T3GCON          equ	811	;# 
  9247   00032B                     TMR3GCON        equ	811	;# 
  9248   00032C                     T3GATE          equ	812	;# 
  9249   00032C                     TMR3GATE        equ	812	;# 
  9250   00032D                     T3CLK           equ	813	;# 
  9251   00032D                     TMR3CLK         equ	813	;# 
  9252   00032D                     PR3             equ	813	;# 
  9253   00032E                     T4TMR           equ	814	;# 
  9254   00032E                     TMR4            equ	814	;# 
  9255   00032F                     T4PR            equ	815	;# 
  9256   00032F                     PR4             equ	815	;# 
  9257   000330                     T4CON           equ	816	;# 
  9258   000331                     T4HLT           equ	817	;# 
  9259   000332                     T4CLKCON        equ	818	;# 
  9260   000332                     T4CLK           equ	818	;# 
  9261   000333                     T4RST           equ	819	;# 
  9262   000334                     TMR5            equ	820	;# 
  9263   000334                     TMR5L           equ	820	;# 
  9264   000335                     TMR5H           equ	821	;# 
  9265   000336                     T5CON           equ	822	;# 
  9266   000336                     TMR5CON         equ	822	;# 
  9267   000337                     T5GCON          equ	823	;# 
  9268   000337                     TMR5GCON        equ	823	;# 
  9269   000338                     T5GATE          equ	824	;# 
  9270   000338                     TMR5GATE        equ	824	;# 
  9271   000339                     T5CLK           equ	825	;# 
  9272   000339                     TMR5CLK         equ	825	;# 
  9273   000339                     PR5             equ	825	;# 
  9274   00033A                     T6TMR           equ	826	;# 
  9275   00033A                     TMR6            equ	826	;# 
  9276   00033B                     T6PR            equ	827	;# 
  9277   00033B                     PR6             equ	827	;# 
  9278   00033C                     T6CON           equ	828	;# 
  9279   00033D                     T6HLT           equ	829	;# 
  9280   00033E                     T6CLKCON        equ	830	;# 
  9281   00033E                     T6CLK           equ	830	;# 
  9282   00033F                     T6RST           equ	831	;# 
  9283   000340                     CCPR1           equ	832	;# 
  9284   000340                     CCPR1L          equ	832	;# 
  9285   000341                     CCPR1H          equ	833	;# 
  9286   000342                     CCP1CON         equ	834	;# 
  9287   000343                     CCP1CAP         equ	835	;# 
  9288   000344                     CCPR2           equ	836	;# 
  9289   000344                     CCPR2L          equ	836	;# 
  9290   000345                     CCPR2H          equ	837	;# 
  9291   000346                     CCP2CON         equ	838	;# 
  9292   000347                     CCP2CAP         equ	839	;# 
  9293   000348                     CCPR3           equ	840	;# 
  9294   000348                     CCPR3L          equ	840	;# 
  9295   000349                     CCPR3H          equ	841	;# 
  9296   00034A                     CCP3CON         equ	842	;# 
  9297   00034B                     CCP3CAP         equ	843	;# 
  9298   00034C                     CCPTMRS0        equ	844	;# 
  9299   00034F                     CRCDATA         equ	847	;# 
  9300   00034F                     CRCDATL         equ	847	;# 
  9301   000350                     CRCDATH         equ	848	;# 
  9302   000351                     CRCACC          equ	849	;# 
  9303   000351                     CRCACCL         equ	849	;# 
  9304   000352                     CRCACCH         equ	850	;# 
  9305   000353                     CRCSHFT         equ	851	;# 
  9306   000353                     CRCSHIFTL       equ	851	;# 
  9307   000354                     CRCSHIFTH       equ	852	;# 
  9308   000355                     CRCXOR          equ	853	;# 
  9309   000355                     CRCXORL         equ	853	;# 
  9310   000356                     CRCXORH         equ	854	;# 
  9311   000357                     CRCCON0         equ	855	;# 
  9312   000358                     CRCCON1         equ	856	;# 
  9313   00035A                     SCANLADR        equ	858	;# 
  9314   00035A                     SCANLADRL       equ	858	;# 
  9315   00035B                     SCANLADRH       equ	859	;# 
  9316   00035C                     SCANLADRU       equ	860	;# 
  9317   00035D                     SCANHADR        equ	861	;# 
  9318   00035D                     SCANHADRL       equ	861	;# 
  9319   00035E                     SCANHADRH       equ	862	;# 
  9320   00035F                     SCANHADRU       equ	863	;# 
  9321   000360                     SCANCON0        equ	864	;# 
  9322   000361                     SCANTRIG        equ	865	;# 
  9323   000362                     IPR0            equ	866	;# 
  9324   000363                     IPR1            equ	867	;# 
  9325   000364                     IPR2            equ	868	;# 
  9326   000365                     IPR3            equ	869	;# 
  9327   000366                     IPR4            equ	870	;# 
  9328   000367                     IPR5            equ	871	;# 
  9329   000368                     IPR6            equ	872	;# 
  9330   000369                     IPR7            equ	873	;# 
  9331   00036A                     IPR8            equ	874	;# 
  9332   00036B                     IPR9            equ	875	;# 
  9333   00036C                     IPR10           equ	876	;# 
  9334   00036D                     IPR11           equ	877	;# 
  9335   00036E                     IPR12           equ	878	;# 
  9336   00036F                     IPR13           equ	879	;# 
  9337   000370                     IPR14           equ	880	;# 
  9338   000371                     IPR15           equ	881	;# 
  9339   000373                     STATUS_CSHAD    equ	883	;# 
  9340   000374                     WREG_CSHAD      equ	884	;# 
  9341   000375                     BSR_CSHAD       equ	885	;# 
  9342   000376                     SHADCON         equ	886	;# 
  9343   000377                     STATUS_SHAD     equ	887	;# 
  9344   000378                     WREG_SHAD       equ	888	;# 
  9345   000379                     BSR_SHAD        equ	889	;# 
  9346   00037A                     PCLATH_SHAD     equ	890	;# 
  9347   00037B                     PCLATU_SHAD     equ	891	;# 
  9348   00037C                     FSR0SH          equ	892	;# 
  9349   00037C                     FSR0L_SHAD      equ	892	;# 
  9350   00037D                     FSR0H_SHAD      equ	893	;# 
  9351   00037E                     FSR1SH          equ	894	;# 
  9352   00037E                     FSR1L_SHAD      equ	894	;# 
  9353   00037F                     FSR1H_SHAD      equ	895	;# 
  9354   000380                     FSR2SH          equ	896	;# 
  9355   000380                     FSR2L_SHAD      equ	896	;# 
  9356   000381                     FSR2H_SHAD      equ	897	;# 
  9357   000382                     PRODSH          equ	898	;# 
  9358   000382                     PRODL_SHAD      equ	898	;# 
  9359   000383                     PRODH_SHAD      equ	899	;# 
  9360   0003BC                     CWG1CLK         equ	956	;# 
  9361   0003BC                     CWG1CLKCON      equ	956	;# 
  9362   0003BD                     CWG1ISM         equ	957	;# 
  9363   0003BD                     CWG1DAT         equ	957	;# 
  9364   0003BE                     CWG1DBR         equ	958	;# 
  9365   0003BF                     CWG1DBF         equ	959	;# 
  9366   0003C0                     CWG1CON0        equ	960	;# 
  9367   0003C1                     CWG1CON1        equ	961	;# 
  9368   0003C2                     CWG1AS0         equ	962	;# 
  9369   0003C3                     CWG1AS1         equ	963	;# 
  9370   0003C4                     CWG1STR         equ	964	;# 
  9371   0003C5                     CWG2CLK         equ	965	;# 
  9372   0003C5                     CWG2CLKCON      equ	965	;# 
  9373   0003C6                     CWG2ISM         equ	966	;# 
  9374   0003C6                     CWG2DAT         equ	966	;# 
  9375   0003C7                     CWG2DBR         equ	967	;# 
  9376   0003C8                     CWG2DBF         equ	968	;# 
  9377   0003C9                     CWG2CON0        equ	969	;# 
  9378   0003CA                     CWG2CON1        equ	970	;# 
  9379   0003CB                     CWG2AS0         equ	971	;# 
  9380   0003CC                     CWG2AS1         equ	972	;# 
  9381   0003CD                     CWG2STR         equ	973	;# 
  9382   0003CE                     CWG3CLK         equ	974	;# 
  9383   0003CE                     CWG3CLKCON      equ	974	;# 
  9384   0003CF                     CWG3ISM         equ	975	;# 
  9385   0003CF                     CWG3DAT         equ	975	;# 
  9386   0003D0                     CWG3DBR         equ	976	;# 
  9387   0003D1                     CWG3DBF         equ	977	;# 
  9388   0003D2                     CWG3CON0        equ	978	;# 
  9389   0003D3                     CWG3CON1        equ	979	;# 
  9390   0003D4                     CWG3AS0         equ	980	;# 
  9391   0003D5                     CWG3AS1         equ	981	;# 
  9392   0003D6                     CWG3STR         equ	982	;# 
  9393   0003D7                     FVRCON          equ	983	;# 
  9394   0003D8                     ADCPCON         equ	984	;# 
  9395   0003D8                     ADCP            equ	984	;# 
  9396   0003D9                     ADLTH           equ	985	;# 
  9397   0003D9                     ADLTHL          equ	985	;# 
  9398   0003DA                     ADLTHH          equ	986	;# 
  9399   0003DB                     ADUTH           equ	987	;# 
  9400   0003DB                     ADUTHL          equ	987	;# 
  9401   0003DC                     ADUTHH          equ	988	;# 
  9402   0003DD                     ADERR           equ	989	;# 
  9403   0003DD                     ADERRL          equ	989	;# 
  9404   0003DE                     ADERRH          equ	990	;# 
  9405   0003DF                     ADSTPT          equ	991	;# 
  9406   0003DF                     ADSTPTL         equ	991	;# 
  9407   0003E0                     ADSTPTH         equ	992	;# 
  9408   0003E1                     ADFLTR          equ	993	;# 
  9409   0003E1                     ADFLTRL         equ	993	;# 
  9410   0003E2                     ADFLTRH         equ	994	;# 
  9411   0003E3                     ADACC           equ	995	;# 
  9412   0003E3                     ADACCL          equ	995	;# 
  9413   0003E4                     ADACCH          equ	996	;# 
  9414   0003E5                     ADACCU          equ	997	;# 
  9415   0003E6                     ADCNT           equ	998	;# 
  9416   0003E7                     ADRPT           equ	999	;# 
  9417   0003E8                     ADPREV          equ	1000	;# 
  9418   0003E8                     ADPREVL         equ	1000	;# 
  9419   0003E9                     ADPREVH         equ	1001	;# 
  9420   0003EA                     ADRES           equ	1002	;# 
  9421   0003EA                     ADRESL          equ	1002	;# 
  9422   0003EB                     ADRESH          equ	1003	;# 
  9423   0003EC                     ADPCH           equ	1004	;# 
  9424   0003EE                     ADACQ           equ	1006	;# 
  9425   0003EE                     ADACQL          equ	1006	;# 
  9426   0003EF                     ADACQH          equ	1007	;# 
  9427   0003F0                     ADCAP           equ	1008	;# 
  9428   0003F1                     ADPRE           equ	1009	;# 
  9429   0003F1                     ADPREL          equ	1009	;# 
  9430   0003F2                     ADPREH          equ	1010	;# 
  9431   0003F3                     ADCON0          equ	1011	;# 
  9432   0003F4                     ADCON1          equ	1012	;# 
  9433   0003F5                     ADCON2          equ	1013	;# 
  9434   0003F6                     ADCON3          equ	1014	;# 
  9435   0003F7                     ADSTAT          equ	1015	;# 
  9436   0003F8                     ADREF           equ	1016	;# 
  9437   0003F9                     ADACT           equ	1017	;# 
  9438   0003FA                     ADCLK           equ	1018	;# 
  9439   000400                     ANSELA          equ	1024	;# 
  9440   000401                     WPUA            equ	1025	;# 
  9441   000402                     ODCONA          equ	1026	;# 
  9442   000403                     SLRCONA         equ	1027	;# 
  9443   000404                     INLVLA          equ	1028	;# 
  9444   000405                     IOCAP           equ	1029	;# 
  9445   000406                     IOCAN           equ	1030	;# 
  9446   000407                     IOCAF           equ	1031	;# 
  9447   000408                     ANSELB          equ	1032	;# 
  9448   000409                     WPUB            equ	1033	;# 
  9449   00040A                     ODCONB          equ	1034	;# 
  9450   00040B                     SLRCONB         equ	1035	;# 
  9451   00040C                     INLVLB          equ	1036	;# 
  9452   00040D                     IOCBP           equ	1037	;# 
  9453   00040E                     IOCBN           equ	1038	;# 
  9454   00040F                     IOCBF           equ	1039	;# 
  9455   000410                     ANSELC          equ	1040	;# 
  9456   000411                     WPUC            equ	1041	;# 
  9457   000412                     ODCONC          equ	1042	;# 
  9458   000413                     SLRCONC         equ	1043	;# 
  9459   000414                     INLVLC          equ	1044	;# 
  9460   000415                     IOCCP           equ	1045	;# 
  9461   000416                     IOCCN           equ	1046	;# 
  9462   000417                     IOCCF           equ	1047	;# 
  9463   000418                     ANSELD          equ	1048	;# 
  9464   000419                     WPUD            equ	1049	;# 
  9465   00041A                     ODCOND          equ	1050	;# 
  9466   00041B                     SLRCOND         equ	1051	;# 
  9467   00041C                     INLVLD          equ	1052	;# 
  9468   000420                     ANSELE          equ	1056	;# 
  9469   000421                     WPUE            equ	1057	;# 
  9470   000422                     ODCONE          equ	1058	;# 
  9471   000423                     SLRCONE         equ	1059	;# 
  9472   000424                     INLVLE          equ	1060	;# 
  9473   000425                     IOCEP           equ	1061	;# 
  9474   000426                     IOCEN           equ	1062	;# 
  9475   000427                     IOCEF           equ	1063	;# 
  9476   000428                     ANSELF          equ	1064	;# 
  9477   000429                     WPUF            equ	1065	;# 
  9478   00042A                     ODCONF          equ	1066	;# 
  9479   00042B                     SLRCONF         equ	1067	;# 
  9480   00042C                     INLVLF          equ	1068	;# 
  9481   000440                     NCO1ACC         equ	1088	;# 
  9482   000440                     NCO1ACCL        equ	1088	;# 
  9483   000441                     NCO1ACCH        equ	1089	;# 
  9484   000442                     NCO1ACCU        equ	1090	;# 
  9485   000443                     NCO1INC         equ	1091	;# 
  9486   000443                     NCO1INCL        equ	1091	;# 
  9487   000444                     NCO1INCH        equ	1092	;# 
  9488   000445                     NCO1INCU        equ	1093	;# 
  9489   000446                     NCO1CON         equ	1094	;# 
  9490   000447                     NCO1CLK         equ	1095	;# 
  9491   000448                     NCO2ACC         equ	1096	;# 
  9492   000448                     NCO2ACCL        equ	1096	;# 
  9493   000449                     NCO2ACCH        equ	1097	;# 
  9494   00044A                     NCO2ACCU        equ	1098	;# 
  9495   00044B                     NCO2INC         equ	1099	;# 
  9496   00044B                     NCO2INCL        equ	1099	;# 
  9497   00044C                     NCO2INCH        equ	1100	;# 
  9498   00044D                     NCO2INCU        equ	1101	;# 
  9499   00044E                     NCO2CON         equ	1102	;# 
  9500   00044F                     NCO2CLK         equ	1103	;# 
  9501   000450                     NCO3ACC         equ	1104	;# 
  9502   000450                     NCO3ACCL        equ	1104	;# 
  9503   000451                     NCO3ACCH        equ	1105	;# 
  9504   000452                     NCO3ACCU        equ	1106	;# 
  9505   000453                     NCO3INC         equ	1107	;# 
  9506   000453                     NCO3INCL        equ	1107	;# 
  9507   000454                     NCO3INCH        equ	1108	;# 
  9508   000455                     NCO3INCU        equ	1109	;# 
  9509   000456                     NCO3CON         equ	1110	;# 
  9510   000457                     NCO3CLK         equ	1111	;# 
  9511   000459                     IVTLOCK         equ	1113	;# 
  9512   00045A                     IVTAD           equ	1114	;# 
  9513   00045A                     IVTADL          equ	1114	;# 
  9514   00045B                     IVTADH          equ	1115	;# 
  9515   00045C                     IVTADU          equ	1116	;# 
  9516   00045D                     IVTBASE         equ	1117	;# 
  9517   00045D                     IVTBASEL        equ	1117	;# 
  9518   00045E                     IVTBASEH        equ	1118	;# 
  9519   00045F                     IVTBASEU        equ	1119	;# 
  9520   000460                     PWM1ERS         equ	1120	;# 
  9521   000461                     PWM1CLK         equ	1121	;# 
  9522   000462                     PWM1LDS         equ	1122	;# 
  9523   000463                     PWM1PR          equ	1123	;# 
  9524   000463                     PWM1PRL         equ	1123	;# 
  9525   000464                     PWM1PRH         equ	1124	;# 
  9526   000465                     PWM1CPRE        equ	1125	;# 
  9527   000466                     PWM1PIPOS       equ	1126	;# 
  9528   000467                     PWM1GIR         equ	1127	;# 
  9529   000468                     PWM1GIE         equ	1128	;# 
  9530   000469                     PWM1CON         equ	1129	;# 
  9531   00046A                     PWM1S1CFG       equ	1130	;# 
  9532   00046B                     PWM1S1P1        equ	1131	;# 
  9533   00046B                     PWM1S1P1L       equ	1131	;# 
  9534   00046C                     PWM1S1P1H       equ	1132	;# 
  9535   00046D                     PWM1S1P2        equ	1133	;# 
  9536   00046D                     PWM1S1P2L       equ	1133	;# 
  9537   00046E                     PWM1S1P2H       equ	1134	;# 
  9538   00046F                     PWM2ERS         equ	1135	;# 
  9539   000470                     PWM2CLK         equ	1136	;# 
  9540   000471                     PWM2LDS         equ	1137	;# 
  9541   000472                     PWM2PR          equ	1138	;# 
  9542   000472                     PWM2PRL         equ	1138	;# 
  9543   000473                     PWM2PRH         equ	1139	;# 
  9544   000474                     PWM2CPRE        equ	1140	;# 
  9545   000475                     PWM2PIPOS       equ	1141	;# 
  9546   000476                     PWM2GIR         equ	1142	;# 
  9547   000477                     PWM2GIE         equ	1143	;# 
  9548   000478                     PWM2CON         equ	1144	;# 
  9549   000479                     PWM2S1CFG       equ	1145	;# 
  9550   00047A                     PWM2S1P1        equ	1146	;# 
  9551   00047A                     PWM2S1P1L       equ	1146	;# 
  9552   00047B                     PWM2S1P1H       equ	1147	;# 
  9553   00047C                     PWM2S1P2        equ	1148	;# 
  9554   00047C                     PWM2S1P2L       equ	1148	;# 
  9555   00047D                     PWM2S1P2H       equ	1149	;# 
  9556   00047E                     PWM3ERS         equ	1150	;# 
  9557   00047F                     PWM3CLK         equ	1151	;# 
  9558   000480                     PWM3LDS         equ	1152	;# 
  9559   000481                     PWM3PR          equ	1153	;# 
  9560   000481                     PWM3PRL         equ	1153	;# 
  9561   000482                     PWM3PRH         equ	1154	;# 
  9562   000483                     PWM3CPRE        equ	1155	;# 
  9563   000484                     PWM3PIPOS       equ	1156	;# 
  9564   000485                     PWM3GIR         equ	1157	;# 
  9565   000486                     PWM3GIE         equ	1158	;# 
  9566   000487                     PWM3CON         equ	1159	;# 
  9567   000488                     PWM3S1CFG       equ	1160	;# 
  9568   000489                     PWM3S1P1        equ	1161	;# 
  9569   000489                     PWM3S1P1L       equ	1161	;# 
  9570   00048A                     PWM3S1P1H       equ	1162	;# 
  9571   00048B                     PWM3S1P2        equ	1163	;# 
  9572   00048B                     PWM3S1P2L       equ	1163	;# 
  9573   00048C                     PWM3S1P2H       equ	1164	;# 
  9574   00049C                     PWMLOAD         equ	1180	;# 
  9575   00049D                     PWMEN           equ	1181	;# 
  9576   00049E                     PIE0            equ	1182	;# 
  9577   00049F                     PIE1            equ	1183	;# 
  9578   0004A0                     PIE2            equ	1184	;# 
  9579   0004A1                     PIE3            equ	1185	;# 
  9580   0004A2                     PIE4            equ	1186	;# 
  9581   0004A3                     PIE5            equ	1187	;# 
  9582   0004A4                     PIE6            equ	1188	;# 
  9583   0004A5                     PIE7            equ	1189	;# 
  9584   0004A6                     PIE8            equ	1190	;# 
  9585   0004A7                     PIE9            equ	1191	;# 
  9586   0004A8                     PIE10           equ	1192	;# 
  9587   0004A9                     PIE11           equ	1193	;# 
  9588   0004AA                     PIE12           equ	1194	;# 
  9589   0004AB                     PIE13           equ	1195	;# 
  9590   0004AC                     PIE14           equ	1196	;# 
  9591   0004AD                     PIE15           equ	1197	;# 
  9592   0004AE                     PIR0            equ	1198	;# 
  9593   0004AF                     PIR1            equ	1199	;# 
  9594   0004B0                     PIR2            equ	1200	;# 
  9595   0004B1                     PIR3            equ	1201	;# 
  9596   0004B2                     PIR4            equ	1202	;# 
  9597   0004B3                     PIR5            equ	1203	;# 
  9598   0004B4                     PIR6            equ	1204	;# 
  9599   0004B5                     PIR7            equ	1205	;# 
  9600   0004B6                     PIR8            equ	1206	;# 
  9601   0004B7                     PIR9            equ	1207	;# 
  9602   0004B8                     PIR10           equ	1208	;# 
  9603   0004B9                     PIR11           equ	1209	;# 
  9604   0004BA                     PIR12           equ	1210	;# 
  9605   0004BB                     PIR13           equ	1211	;# 
  9606   0004BC                     PIR14           equ	1212	;# 
  9607   0004BD                     PIR15           equ	1213	;# 
  9608   0004BE                     LATA            equ	1214	;# 
  9609   0004BF                     LATB            equ	1215	;# 
  9610   0004C0                     LATC            equ	1216	;# 
  9611   0004C1                     LATD            equ	1217	;# 
  9612   0004C2                     LATE            equ	1218	;# 
  9613   0004C3                     LATF            equ	1219	;# 
  9614   0004C6                     TRISA           equ	1222	;# 
  9615   0004C7                     TRISB           equ	1223	;# 
  9616   0004C8                     TRISC           equ	1224	;# 
  9617   0004C9                     TRISD           equ	1225	;# 
  9618   0004CA                     TRISE           equ	1226	;# 
  9619   0004CB                     TRISF           equ	1227	;# 
  9620   0004CE                     PORTA           equ	1230	;# 
  9621   0004CF                     PORTB           equ	1231	;# 
  9622   0004D0                     PORTC           equ	1232	;# 
  9623   0004D1                     PORTD           equ	1233	;# 
  9624   0004D2                     PORTE           equ	1234	;# 
  9625   0004D3                     PORTF           equ	1235	;# 
  9626   0004D6                     INTCON0         equ	1238	;# 
  9627   0004D7                     INTCON1         equ	1239	;# 
  9628   0004D8                     STATUS          equ	1240	;# 
  9629   0004D9                     FSR2            equ	1241	;# 
  9630   0004D9                     FSR2L           equ	1241	;# 
  9631   0004DA                     FSR2H           equ	1242	;# 
  9632   0004DB                     PLUSW2          equ	1243	;# 
  9633   0004DC                     PREINC2         equ	1244	;# 
  9634   0004DD                     POSTDEC2        equ	1245	;# 
  9635   0004DE                     POSTINC2        equ	1246	;# 
  9636   0004DF                     INDF2           equ	1247	;# 
  9637   0004E0                     BSR             equ	1248	;# 
  9638   0004E1                     FSR1            equ	1249	;# 
  9639   0004E1                     FSR1L           equ	1249	;# 
  9640   0004E2                     FSR1H           equ	1250	;# 
  9641   0004E3                     PLUSW1          equ	1251	;# 
  9642   0004E4                     PREINC1         equ	1252	;# 
  9643   0004E5                     POSTDEC1        equ	1253	;# 
  9644   0004E6                     POSTINC1        equ	1254	;# 
  9645   0004E7                     INDF1           equ	1255	;# 
  9646   0004E8                     WREG            equ	1256	;# 
  9647   0004E9                     FSR0            equ	1257	;# 
  9648   0004E9                     FSR0L           equ	1257	;# 
  9649   0004EA                     FSR0H           equ	1258	;# 
  9650   0004EB                     PLUSW0          equ	1259	;# 
  9651   0004EC                     PREINC0         equ	1260	;# 
  9652   0004ED                     POSTDEC0        equ	1261	;# 
  9653   0004EE                     POSTINC0        equ	1262	;# 
  9654   0004EF                     INDF0           equ	1263	;# 
  9655   0004F0                     PCON0           equ	1264	;# 
  9656   0004F1                     PCON1           equ	1265	;# 
  9657   0004F2                     CPUDOZE         equ	1266	;# 
  9658   0004F3                     PROD            equ	1267	;# 
  9659   0004F3                     PRODL           equ	1267	;# 
  9660   0004F4                     PRODH           equ	1268	;# 
  9661   0004F5                     TABLAT          equ	1269	;# 
  9662   0004F6                     TBLPTR          equ	1270	;# 
  9663   0004F6                     TBLPTRL         equ	1270	;# 
  9664   0004F7                     TBLPTRH         equ	1271	;# 
  9665   0004F8                     TBLPTRU         equ	1272	;# 
  9666   0004F9                     PCLAT           equ	1273	;# 
  9667   0004F9                     PCL             equ	1273	;# 
  9668   0004FA                     PCLATH          equ	1274	;# 
  9669   0004FB                     PCLATU          equ	1275	;# 
  9670   0004FC                     STKPTR          equ	1276	;# 
  9671   0004FD                     TOS             equ	1277	;# 
  9672   0004FD                     TOSL            equ	1277	;# 
  9673   0004FE                     TOSH            equ	1278	;# 
  9674   0004FF                     TOSU            equ	1279	;# 
  9675   000039                     CLKRCON         equ	57	;# 
  9676   00003A                     CLKRCLK         equ	58	;# 
  9677   000040                     NVMCON0         equ	64	;# 
  9678   000041                     NVMCON1         equ	65	;# 
  9679   000042                     NVMLOCK         equ	66	;# 
  9680   000043                     NVMADR          equ	67	;# 
  9681   000043                     NVMADRL         equ	67	;# 
  9682   000044                     NVMADRH         equ	68	;# 
  9683   000045                     NVMADRU         equ	69	;# 
  9684   000046                     NVMDAT          equ	70	;# 
  9685   000046                     NVMDATL         equ	70	;# 
  9686   000047                     NVMDATH         equ	71	;# 
  9687   000048                     VREGCON         equ	72	;# 
  9688   000049                     BORCON          equ	73	;# 
  9689   00004A                     HLVDCON0        equ	74	;# 
  9690   00004B                     HLVDCON1        equ	75	;# 
  9691   00004C                     ZCDCON          equ	76	;# 
  9692   000060                     PMD0            equ	96	;# 
  9693   000061                     PMD1            equ	97	;# 
  9694   000063                     PMD3            equ	99	;# 
  9695   000064                     PMD4            equ	100	;# 
  9696   000065                     PMD5            equ	101	;# 
  9697   000066                     PMD6            equ	102	;# 
  9698   000067                     PMD7            equ	103	;# 
  9699   000068                     PMD8            equ	104	;# 
  9700   00006A                     MD1CON0         equ	106	;# 
  9701   00006B                     MD1CON1         equ	107	;# 
  9702   00006C                     MD1SRC          equ	108	;# 
  9703   00006D                     MD1CARL         equ	109	;# 
  9704   00006E                     MD1CARH         equ	110	;# 
  9705   00006F                     CMOUT           equ	111	;# 
  9706   000070                     CM1CON0         equ	112	;# 
  9707   000071                     CM1CON1         equ	113	;# 
  9708   000072                     CM1NCH          equ	114	;# 
  9709   000073                     CM1PCH          equ	115	;# 
  9710   000074                     CM2CON0         equ	116	;# 
  9711   000075                     CM2CON1         equ	117	;# 
  9712   000076                     CM2NCH          equ	118	;# 
  9713   000077                     CM2PCH          equ	119	;# 
  9714   000078                     WDTCON0         equ	120	;# 
  9715   000079                     WDTCON1         equ	121	;# 
  9716   00007A                     WDTPS           equ	122	;# 
  9717   00007A                     WDTPSL          equ	122	;# 
  9718   00007B                     WDTPSH          equ	123	;# 
  9719   00007C                     WDTTMR          equ	124	;# 
  9720   00007D                     DAC1DAT         equ	125	;# 
  9721   00007D                     DAC1DATL        equ	125	;# 
  9722   00007F                     DAC1CON         equ	127	;# 
  9723   000080                     SPI1RXB         equ	128	;# 
  9724   000081                     SPI1TXB         equ	129	;# 
  9725   000082                     SPI1TCNT        equ	130	;# 
  9726   000082                     SPI1TCNTL       equ	130	;# 
  9727   000083                     SPI1TCNTH       equ	131	;# 
  9728   000084                     SPI1CON0        equ	132	;# 
  9729   000085                     SPI1CON1        equ	133	;# 
  9730   000086                     SPI1CON2        equ	134	;# 
  9731   000087                     SPI1STATUS      equ	135	;# 
  9732   000088                     SPI1TWIDTH      equ	136	;# 
  9733   000089                     SPI1BAUD        equ	137	;# 
  9734   00008A                     SPI1INTF        equ	138	;# 
  9735   00008B                     SPI1INTE        equ	139	;# 
  9736   00008C                     SPI1CLK         equ	140	;# 
  9737   00008D                     SPI2RXB         equ	141	;# 
  9738   00008E                     SPI2TXB         equ	142	;# 
  9739   00008F                     SPI2TCNT        equ	143	;# 
  9740   00008F                     SPI2TCNTL       equ	143	;# 
  9741   000090                     SPI2TCNTH       equ	144	;# 
  9742   000091                     SPI2CON0        equ	145	;# 
  9743   000092                     SPI2CON1        equ	146	;# 
  9744   000093                     SPI2CON2        equ	147	;# 
  9745   000094                     SPI2STATUS      equ	148	;# 
  9746   000095                     SPI2TWIDTH      equ	149	;# 
  9747   000096                     SPI2BAUD        equ	150	;# 
  9748   000097                     SPI2INTF        equ	151	;# 
  9749   000098                     SPI2INTE        equ	152	;# 
  9750   000099                     SPI2CLK         equ	153	;# 
  9751   0000AC                     ACTCON          equ	172	;# 
  9752   0000AD                     OSCCON1         equ	173	;# 
  9753   0000AE                     OSCCON2         equ	174	;# 
  9754   0000AF                     OSCCON3         equ	175	;# 
  9755   0000B0                     OSCTUNE         equ	176	;# 
  9756   0000B1                     OSCFRQ          equ	177	;# 
  9757   0000B1                     OSCFREQ         equ	177	;# 
  9758   0000B2                     OSCSTAT         equ	178	;# 
  9759   0000B2                     OSCSTAT1        equ	178	;# 
  9760   0000B3                     OSCEN           equ	179	;# 
  9761   0000B4                     PRLOCK          equ	180	;# 
  9762   0000B5                     SCANPR          equ	181	;# 
  9763   0000B6                     DMA1PR          equ	182	;# 
  9764   0000B7                     DMA2PR          equ	183	;# 
  9765   0000B8                     DMA3PR          equ	184	;# 
  9766   0000B9                     DMA4PR          equ	185	;# 
  9767   0000BA                     DMA5PR          equ	186	;# 
  9768   0000BB                     DMA6PR          equ	187	;# 
  9769   0000BE                     MAINPR          equ	190	;# 
  9770   0000BF                     ISRPR           equ	191	;# 
  9771   0000D4                     CLCDATA         equ	212	;# 
  9772   0000D5                     CLCSELECT       equ	213	;# 
  9773   0000D6                     CLCnCON         equ	214	;# 
  9774   0000D7                     CLCnPOL         equ	215	;# 
  9775   0000D8                     CLCnSEL0        equ	216	;# 
  9776   0000D9                     CLCnSEL1        equ	217	;# 
  9777   0000DA                     CLCnSEL2        equ	218	;# 
  9778   0000DB                     CLCnSEL3        equ	219	;# 
  9779   0000DC                     CLCnGLS0        equ	220	;# 
  9780   0000DD                     CLCnGLS1        equ	221	;# 
  9781   0000DE                     CLCnGLS2        equ	222	;# 
  9782   0000DF                     CLCnGLS3        equ	223	;# 
  9783   0000E8                     DMASELECT       equ	232	;# 
  9784   0000E9                     DMAnBUF         equ	233	;# 
  9785   0000EA                     DMAnDCNT        equ	234	;# 
  9786   0000EA                     DMAnDCNTL       equ	234	;# 
  9787   0000EB                     DMAnDCNTH       equ	235	;# 
  9788   0000EC                     DMAnDPTR        equ	236	;# 
  9789   0000EC                     DMAnDPTRL       equ	236	;# 
  9790   0000ED                     DMAnDPTRH       equ	237	;# 
  9791   0000EE                     DMAnDSZ         equ	238	;# 
  9792   0000EE                     DMAnDSZL        equ	238	;# 
  9793   0000EF                     DMAnDSZH        equ	239	;# 
  9794   0000F0                     DMAnDSA         equ	240	;# 
  9795   0000F0                     DMAnDSAL        equ	240	;# 
  9796   0000F1                     DMAnDSAH        equ	241	;# 
  9797   0000F2                     DMAnSCNT        equ	242	;# 
  9798   0000F2                     DMAnSCNTL       equ	242	;# 
  9799   0000F3                     DMAnSCNTH       equ	243	;# 
  9800   0000F4                     DMAnSPTR        equ	244	;# 
  9801   0000F4                     DMAnSPTRL       equ	244	;# 
  9802   0000F5                     DMAnSPTRH       equ	245	;# 
  9803   0000F6                     DMAnSPTRU       equ	246	;# 
  9804   0000F7                     DMAnSSZ         equ	247	;# 
  9805   0000F7                     DMAnSSZL        equ	247	;# 
  9806   0000F8                     DMAnSSZH        equ	248	;# 
  9807   0000F9                     DMAnSSA         equ	249	;# 
  9808   0000F9                     DMAnSSAL        equ	249	;# 
  9809   0000FA                     DMAnSSAH        equ	250	;# 
  9810   0000FB                     DMAnSSAU        equ	251	;# 
  9811   0000FC                     DMAnCON0        equ	252	;# 
  9812   0000FD                     DMAnCON1        equ	253	;# 
  9813   0000FE                     DMAnAIRQ        equ	254	;# 
  9814   0000FF                     DMAnSIRQ        equ	255	;# 
  9815   000200                     PPSLOCK         equ	512	;# 
  9816   000201                     RA0PPS          equ	513	;# 
  9817   000202                     RA1PPS          equ	514	;# 
  9818   000203                     RA2PPS          equ	515	;# 
  9819   000204                     RA3PPS          equ	516	;# 
  9820   000205                     RA4PPS          equ	517	;# 
  9821   000206                     RA5PPS          equ	518	;# 
  9822   000207                     RA6PPS          equ	519	;# 
  9823   000208                     RA7PPS          equ	520	;# 
  9824   000209                     RB0PPS          equ	521	;# 
  9825   00020A                     RB1PPS          equ	522	;# 
  9826   00020B                     RB2PPS          equ	523	;# 
  9827   00020C                     RB3PPS          equ	524	;# 
  9828   00020D                     RB4PPS          equ	525	;# 
  9829   00020E                     RB5PPS          equ	526	;# 
  9830   00020F                     RB6PPS          equ	527	;# 
  9831   000210                     RB7PPS          equ	528	;# 
  9832   000211                     RC0PPS          equ	529	;# 
  9833   000212                     RC1PPS          equ	530	;# 
  9834   000213                     RC2PPS          equ	531	;# 
  9835   000214                     RC3PPS          equ	532	;# 
  9836   000215                     RC4PPS          equ	533	;# 
  9837   000216                     RC5PPS          equ	534	;# 
  9838   000217                     RC6PPS          equ	535	;# 
  9839   000218                     RC7PPS          equ	536	;# 
  9840   000219                     RD0PPS          equ	537	;# 
  9841   00021A                     RD1PPS          equ	538	;# 
  9842   00021B                     RD2PPS          equ	539	;# 
  9843   00021C                     RD3PPS          equ	540	;# 
  9844   00021D                     RD4PPS          equ	541	;# 
  9845   00021E                     RD5PPS          equ	542	;# 
  9846   00021F                     RD6PPS          equ	543	;# 
  9847   000220                     RD7PPS          equ	544	;# 
  9848   000221                     RE0PPS          equ	545	;# 
  9849   000222                     RE1PPS          equ	546	;# 
  9850   000223                     RE2PPS          equ	547	;# 
  9851   000229                     RF0PPS          equ	553	;# 
  9852   00022A                     RF1PPS          equ	554	;# 
  9853   00022B                     RF2PPS          equ	555	;# 
  9854   00022C                     RF3PPS          equ	556	;# 
  9855   00022D                     RF4PPS          equ	557	;# 
  9856   00022E                     RF5PPS          equ	558	;# 
  9857   00022F                     RF6PPS          equ	559	;# 
  9858   000230                     RF7PPS          equ	560	;# 
  9859   00023E                     INT0PPS         equ	574	;# 
  9860   00023F                     INT1PPS         equ	575	;# 
  9861   000240                     INT2PPS         equ	576	;# 
  9862   000241                     T0CKIPPS        equ	577	;# 
  9863   000242                     T1CKIPPS        equ	578	;# 
  9864   000243                     T1GPPS          equ	579	;# 
  9865   000244                     T3CKIPPS        equ	580	;# 
  9866   000245                     T3GPPS          equ	581	;# 
  9867   000246                     T5CKIPPS        equ	582	;# 
  9868   000247                     T5GPPS          equ	583	;# 
  9869   000248                     T2INPPS         equ	584	;# 
  9870   000249                     T4INPPS         equ	585	;# 
  9871   00024A                     T6INPPS         equ	586	;# 
  9872   00024F                     CCP1PPS         equ	591	;# 
  9873   000250                     CCP2PPS         equ	592	;# 
  9874   000251                     CCP3PPS         equ	593	;# 
  9875   000253                     PWM1ERSPPS      equ	595	;# 
  9876   000254                     PWM2ERSPPS      equ	596	;# 
  9877   000255                     PWM3ERSPPS      equ	597	;# 
  9878   000257                     PWMIN0PPS       equ	599	;# 
  9879   000258                     PWMIN1PPS       equ	600	;# 
  9880   000259                     SMT1WINPPS      equ	601	;# 
  9881   00025A                     SMT1SIGPPS      equ	602	;# 
  9882   00025B                     CWG1PPS         equ	603	;# 
  9883   00025B                     CWG1INPPS       equ	603	;# 
  9884   00025C                     CWG2PPS         equ	604	;# 
  9885   00025C                     CWG2INPPS       equ	604	;# 
  9886   00025D                     CWG3PPS         equ	605	;# 
  9887   00025D                     CWG3INPPS       equ	605	;# 
  9888   00025E                     MD1CARLPPS      equ	606	;# 
  9889   00025E                     MDCARLPPS       equ	606	;# 
  9890   00025F                     MD1CARHPPS      equ	607	;# 
  9891   00025F                     MDCARHPPS       equ	607	;# 
  9892   000260                     MD1SRCPPS       equ	608	;# 
  9893   000260                     MDSRCPPS        equ	608	;# 
  9894   000261                     CLCIN0PPS       equ	609	;# 
  9895   000262                     CLCIN1PPS       equ	610	;# 
  9896   000263                     CLCIN2PPS       equ	611	;# 
  9897   000264                     CLCIN3PPS       equ	612	;# 
  9898   000265                     CLCIN4PPS       equ	613	;# 
  9899   000266                     CLCIN5PPS       equ	614	;# 
  9900   000267                     CLCIN6PPS       equ	615	;# 
  9901   000268                     CLCIN7PPS       equ	616	;# 
  9902   000269                     ADACTPPS        equ	617	;# 
  9903   00026A                     SPI1SCKPPS      equ	618	;# 
  9904   00026B                     SPI1SDIPPS      equ	619	;# 
  9905   00026C                     SPI1SSPPS       equ	620	;# 
  9906   00026D                     SPI2SCKPPS      equ	621	;# 
  9907   00026E                     SPI2SDIPPS      equ	622	;# 
  9908   00026F                     SPI2SSPPS       equ	623	;# 
  9909   000270                     I2C1SDAPPS      equ	624	;# 
  9910   000271                     I2C1SCLPPS      equ	625	;# 
  9911   000272                     U1RXPPS         equ	626	;# 
  9912   000273                     U1CTSPPS        equ	627	;# 
  9913   000274                     U2RXPPS         equ	628	;# 
  9914   000275                     U2CTSPPS        equ	629	;# 
  9915   000276                     U3RXPPS         equ	630	;# 
  9916   000277                     U3CTSPPS        equ	631	;# 
  9917   000278                     U4RXPPS         equ	632	;# 
  9918   000279                     U4CTSPPS        equ	633	;# 
  9919   00027A                     U5RXPPS         equ	634	;# 
  9920   00027B                     U5CTSPPS        equ	635	;# 
  9921   000286                     RC4I2C          equ	646	;# 
  9922   000287                     RC3I2C          equ	647	;# 
  9923   000288                     RB2I2C          equ	648	;# 
  9924   000289                     RB1I2C          equ	649	;# 
  9925   00028B                     I2C1RXB         equ	651	;# 
  9926   00028C                     I2C1TXB         equ	652	;# 
  9927   00028D                     I2C1CNT         equ	653	;# 
  9928   00028E                     I2C1ADB0        equ	654	;# 
  9929   00028F                     I2C1ADB1        equ	655	;# 
  9930   000290                     I2C1ADR0        equ	656	;# 
  9931   000291                     I2C1ADR1        equ	657	;# 
  9932   000292                     I2C1ADR2        equ	658	;# 
  9933   000293                     I2C1ADR3        equ	659	;# 
  9934   000294                     I2C1CON0        equ	660	;# 
  9935   000295                     I2C1CON1        equ	661	;# 
  9936   000296                     I2C1CON2        equ	662	;# 
  9937   000297                     I2C1ERR         equ	663	;# 
  9938   000298                     I2C1STAT0       equ	664	;# 
  9939   000299                     I2C1STAT1       equ	665	;# 
  9940   00029A                     I2C1PIR         equ	666	;# 
  9941   00029B                     I2C1PIE         equ	667	;# 
  9942   00029C                     I2C1CLK         equ	668	;# 
  9943   00029D                     I2C1BTO         equ	669	;# 
  9944   0002A1                     U1RXB           equ	673	;# 
  9945   0002A1                     U1RXBL          equ	673	;# 
  9946   0002A2                     U1RXCHK         equ	674	;# 
  9947   0002A3                     U1TXB           equ	675	;# 
  9948   0002A3                     U1TXBL          equ	675	;# 
  9949   0002A4                     U1TXCHK         equ	676	;# 
  9950   0002A5                     U1P1            equ	677	;# 
  9951   0002A5                     U1P1L           equ	677	;# 
  9952   0002A6                     U1P1H           equ	678	;# 
  9953   0002A7                     U1P2            equ	679	;# 
  9954   0002A7                     U1P2L           equ	679	;# 
  9955   0002A8                     U1P2H           equ	680	;# 
  9956   0002A9                     U1P3            equ	681	;# 
  9957   0002A9                     U1P3L           equ	681	;# 
  9958   0002AA                     U1P3H           equ	682	;# 
  9959   0002AB                     U1CON0          equ	683	;# 
  9960   0002AC                     U1CON1          equ	684	;# 
  9961   0002AD                     U1CON2          equ	685	;# 
  9962   0002AE                     U1BRG           equ	686	;# 
  9963   0002AE                     U1BRGL          equ	686	;# 
  9964   0002AF                     U1BRGH          equ	687	;# 
  9965   0002B0                     U1FIFO          equ	688	;# 
  9966   0002B1                     U1UIR           equ	689	;# 
  9967   0002B2                     U1ERRIR         equ	690	;# 
  9968   0002B3                     U1ERRIE         equ	691	;# 
  9969   0002B4                     U2RXB           equ	692	;# 
  9970   0002B4                     U2RXBL          equ	692	;# 
  9971   0002B6                     U2TXB           equ	694	;# 
  9972   0002B6                     U2TXBL          equ	694	;# 
  9973   0002B8                     U2P1            equ	696	;# 
  9974   0002B8                     U2P1L           equ	696	;# 
  9975   0002BA                     U2P2            equ	698	;# 
  9976   0002BA                     U2P2L           equ	698	;# 
  9977   0002BC                     U2P3            equ	700	;# 
  9978   0002BC                     U2P3L           equ	700	;# 
  9979   0002BE                     U2CON0          equ	702	;# 
  9980   0002BF                     U2CON1          equ	703	;# 
  9981   0002C0                     U2CON2          equ	704	;# 
  9982   0002C1                     U2BRG           equ	705	;# 
  9983   0002C1                     U2BRGL          equ	705	;# 
  9984   0002C2                     U2BRGH          equ	706	;# 
  9985   0002C3                     U2FIFO          equ	707	;# 
  9986   0002C4                     U2UIR           equ	708	;# 
  9987   0002C5                     U2ERRIR         equ	709	;# 
  9988   0002C6                     U2ERRIE         equ	710	;# 
  9989   0002C7                     U3RXB           equ	711	;# 
  9990   0002C7                     U3RXBL          equ	711	;# 
  9991   0002C9                     U3TXB           equ	713	;# 
  9992   0002C9                     U3TXBL          equ	713	;# 
  9993   0002CB                     U3P1            equ	715	;# 
  9994   0002CB                     U3P1L           equ	715	;# 
  9995   0002CD                     U3P2            equ	717	;# 
  9996   0002CD                     U3P2L           equ	717	;# 
  9997   0002CF                     U3P3            equ	719	;# 
  9998   0002CF                     U3P3L           equ	719	;# 
  9999   0002D1                     U3CON0          equ	721	;# 
 10000   0002D2                     U3CON1          equ	722	;# 
 10001   0002D3                     U3CON2          equ	723	;# 
 10002   0002D4                     U3BRG           equ	724	;# 
 10003   0002D4                     U3BRGL          equ	724	;# 
 10004   0002D5                     U3BRGH          equ	725	;# 
 10005   0002D6                     U3FIFO          equ	726	;# 
 10006   0002D7                     U3UIR           equ	727	;# 
 10007   0002D8                     U3ERRIR         equ	728	;# 
 10008   0002D9                     U3ERRIE         equ	729	;# 
 10009   0002DA                     U4RXB           equ	730	;# 
 10010   0002DA                     U4RXBL          equ	730	;# 
 10011   0002DC                     U4TXB           equ	732	;# 
 10012   0002DC                     U4TXBL          equ	732	;# 
 10013   0002DE                     U4P1            equ	734	;# 
 10014   0002DE                     U4P1L           equ	734	;# 
 10015   0002E0                     U4P2            equ	736	;# 
 10016   0002E0                     U4P2L           equ	736	;# 
 10017   0002E2                     U4P3            equ	738	;# 
 10018   0002E2                     U4P3L           equ	738	;# 
 10019   0002E4                     U4CON0          equ	740	;# 
 10020   0002E5                     U4CON1          equ	741	;# 
 10021   0002E6                     U4CON2          equ	742	;# 
 10022   0002E7                     U4BRG           equ	743	;# 
 10023   0002E7                     U4BRGL          equ	743	;# 
 10024   0002E8                     U4BRGH          equ	744	;# 
 10025   0002E9                     U4FIFO          equ	745	;# 
 10026   0002EA                     U4UIR           equ	746	;# 
 10027   0002EB                     U4ERRIR         equ	747	;# 
 10028   0002EC                     U4ERRIE         equ	748	;# 
 10029   0002ED                     U5RXB           equ	749	;# 
 10030   0002ED                     U5RXBL          equ	749	;# 
 10031   0002EF                     U5TXB           equ	751	;# 
 10032   0002EF                     U5TXBL          equ	751	;# 
 10033   0002F1                     U5P1            equ	753	;# 
 10034   0002F1                     U5P1L           equ	753	;# 
 10035   0002F3                     U5P2            equ	755	;# 
 10036   0002F3                     U5P2L           equ	755	;# 
 10037   0002F5                     U5P3            equ	757	;# 
 10038   0002F5                     U5P3L           equ	757	;# 
 10039   0002F7                     U5CON0          equ	759	;# 
 10040   0002F8                     U5CON1          equ	760	;# 
 10041   0002F9                     U5CON2          equ	761	;# 
 10042   0002FA                     U5BRG           equ	762	;# 
 10043   0002FA                     U5BRGL          equ	762	;# 
 10044   0002FB                     U5BRGH          equ	763	;# 
 10045   0002FC                     U5FIFO          equ	764	;# 
 10046   0002FD                     U5UIR           equ	765	;# 
 10047   0002FE                     U5ERRIR         equ	766	;# 
 10048   0002FF                     U5ERRIE         equ	767	;# 
 10049   000300                     SMT1TMR         equ	768	;# 
 10050   000300                     SMT1TMRL        equ	768	;# 
 10051   000301                     SMT1TMRH        equ	769	;# 
 10052   000302                     SMT1TMRU        equ	770	;# 
 10053   000303                     SMT1CPR         equ	771	;# 
 10054   000303                     SMT1CPRL        equ	771	;# 
 10055   000304                     SMT1CPRH        equ	772	;# 
 10056   000305                     SMT1CPRU        equ	773	;# 
 10057   000306                     SMT1CPW         equ	774	;# 
 10058   000306                     SMT1CPWL        equ	774	;# 
 10059   000307                     SMT1CPWH        equ	775	;# 
 10060   000308                     SMT1CPWU        equ	776	;# 
 10061   000309                     SMT1PR          equ	777	;# 
 10062   000309                     SMT1PRL         equ	777	;# 
 10063   00030A                     SMT1PRH         equ	778	;# 
 10064   00030B                     SMT1PRU         equ	779	;# 
 10065   00030C                     SMT1CON0        equ	780	;# 
 10066   00030D                     SMT1CON1        equ	781	;# 
 10067   00030E                     SMT1STAT        equ	782	;# 
 10068   00030F                     SMT1CLK         equ	783	;# 
 10069   000310                     SMT1SIG         equ	784	;# 
 10070   000311                     SMT1WIN         equ	785	;# 
 10071   000318                     TMR0L           equ	792	;# 
 10072   000318                     TMR0            equ	792	;# 
 10073   000319                     TMR0H           equ	793	;# 
 10074   000319                     PR0             equ	793	;# 
 10075   00031A                     T0CON0          equ	794	;# 
 10076   00031B                     T0CON1          equ	795	;# 
 10077   00031C                     TMR1            equ	796	;# 
 10078   00031C                     TMR1L           equ	796	;# 
 10079   00031D                     TMR1H           equ	797	;# 
 10080   00031E                     T1CON           equ	798	;# 
 10081   00031E                     TMR1CON         equ	798	;# 
 10082   00031F                     T1GCON          equ	799	;# 
 10083   00031F                     TMR1GCON        equ	799	;# 
 10084   000320                     T1GATE          equ	800	;# 
 10085   000320                     TMR1GATE        equ	800	;# 
 10086   000321                     T1CLK           equ	801	;# 
 10087   000321                     TMR1CLK         equ	801	;# 
 10088   000321                     PR1             equ	801	;# 
 10089   000322                     T2TMR           equ	802	;# 
 10090   000322                     TMR2            equ	802	;# 
 10091   000323                     T2PR            equ	803	;# 
 10092   000323                     PR2             equ	803	;# 
 10093   000324                     T2CON           equ	804	;# 
 10094   000325                     T2HLT           equ	805	;# 
 10095   000326                     T2CLKCON        equ	806	;# 
 10096   000326                     T2CLK           equ	806	;# 
 10097   000327                     T2RST           equ	807	;# 
 10098   000328                     TMR3            equ	808	;# 
 10099   000328                     TMR3L           equ	808	;# 
 10100   000329                     TMR3H           equ	809	;# 
 10101   00032A                     T3CON           equ	810	;# 
 10102   00032A                     TMR3CON         equ	810	;# 
 10103   00032B                     T3GCON          equ	811	;# 
 10104   00032B                     TMR3GCON        equ	811	;# 
 10105   00032C                     T3GATE          equ	812	;# 
 10106   00032C                     TMR3GATE        equ	812	;# 
 10107   00032D                     T3CLK           equ	813	;# 
 10108   00032D                     TMR3CLK         equ	813	;# 
 10109   00032D                     PR3             equ	813	;# 
 10110   00032E                     T4TMR           equ	814	;# 
 10111   00032E                     TMR4            equ	814	;# 
 10112   00032F                     T4PR            equ	815	;# 
 10113   00032F                     PR4             equ	815	;# 
 10114   000330                     T4CON           equ	816	;# 
 10115   000331                     T4HLT           equ	817	;# 
 10116   000332                     T4CLKCON        equ	818	;# 
 10117   000332                     T4CLK           equ	818	;# 
 10118   000333                     T4RST           equ	819	;# 
 10119   000334                     TMR5            equ	820	;# 
 10120   000334                     TMR5L           equ	820	;# 
 10121   000335                     TMR5H           equ	821	;# 
 10122   000336                     T5CON           equ	822	;# 
 10123   000336                     TMR5CON         equ	822	;# 
 10124   000337                     T5GCON          equ	823	;# 
 10125   000337                     TMR5GCON        equ	823	;# 
 10126   000338                     T5GATE          equ	824	;# 
 10127   000338                     TMR5GATE        equ	824	;# 
 10128   000339                     T5CLK           equ	825	;# 
 10129   000339                     TMR5CLK         equ	825	;# 
 10130   000339                     PR5             equ	825	;# 
 10131   00033A                     T6TMR           equ	826	;# 
 10132   00033A                     TMR6            equ	826	;# 
 10133   00033B                     T6PR            equ	827	;# 
 10134   00033B                     PR6             equ	827	;# 
 10135   00033C                     T6CON           equ	828	;# 
 10136   00033D                     T6HLT           equ	829	;# 
 10137   00033E                     T6CLKCON        equ	830	;# 
 10138   00033E                     T6CLK           equ	830	;# 
 10139   00033F                     T6RST           equ	831	;# 
 10140   000340                     CCPR1           equ	832	;# 
 10141   000340                     CCPR1L          equ	832	;# 
 10142   000341                     CCPR1H          equ	833	;# 
 10143   000342                     CCP1CON         equ	834	;# 
 10144   000343                     CCP1CAP         equ	835	;# 
 10145   000344                     CCPR2           equ	836	;# 
 10146   000344                     CCPR2L          equ	836	;# 
 10147   000345                     CCPR2H          equ	837	;# 
 10148   000346                     CCP2CON         equ	838	;# 
 10149   000347                     CCP2CAP         equ	839	;# 
 10150   000348                     CCPR3           equ	840	;# 
 10151   000348                     CCPR3L          equ	840	;# 
 10152   000349                     CCPR3H          equ	841	;# 
 10153   00034A                     CCP3CON         equ	842	;# 
 10154   00034B                     CCP3CAP         equ	843	;# 
 10155   00034C                     CCPTMRS0        equ	844	;# 
 10156   00034F                     CRCDATA         equ	847	;# 
 10157   00034F                     CRCDATL         equ	847	;# 
 10158   000350                     CRCDATH         equ	848	;# 
 10159   000351                     CRCACC          equ	849	;# 
 10160   000351                     CRCACCL         equ	849	;# 
 10161   000352                     CRCACCH         equ	850	;# 
 10162   000353                     CRCSHFT         equ	851	;# 
 10163   000353                     CRCSHIFTL       equ	851	;# 
 10164   000354                     CRCSHIFTH       equ	852	;# 
 10165   000355                     CRCXOR          equ	853	;# 
 10166   000355                     CRCXORL         equ	853	;# 
 10167   000356                     CRCXORH         equ	854	;# 
 10168   000357                     CRCCON0         equ	855	;# 
 10169   000358                     CRCCON1         equ	856	;# 
 10170   00035A                     SCANLADR        equ	858	;# 
 10171   00035A                     SCANLADRL       equ	858	;# 
 10172   00035B                     SCANLADRH       equ	859	;# 
 10173   00035C                     SCANLADRU       equ	860	;# 
 10174   00035D                     SCANHADR        equ	861	;# 
 10175   00035D                     SCANHADRL       equ	861	;# 
 10176   00035E                     SCANHADRH       equ	862	;# 
 10177   00035F                     SCANHADRU       equ	863	;# 
 10178   000360                     SCANCON0        equ	864	;# 
 10179   000361                     SCANTRIG        equ	865	;# 
 10180   000362                     IPR0            equ	866	;# 
 10181   000363                     IPR1            equ	867	;# 
 10182   000364                     IPR2            equ	868	;# 
 10183   000365                     IPR3            equ	869	;# 
 10184   000366                     IPR4            equ	870	;# 
 10185   000367                     IPR5            equ	871	;# 
 10186   000368                     IPR6            equ	872	;# 
 10187   000369                     IPR7            equ	873	;# 
 10188   00036A                     IPR8            equ	874	;# 
 10189   00036B                     IPR9            equ	875	;# 
 10190   00036C                     IPR10           equ	876	;# 
 10191   00036D                     IPR11           equ	877	;# 
 10192   00036E                     IPR12           equ	878	;# 
 10193   00036F                     IPR13           equ	879	;# 
 10194   000370                     IPR14           equ	880	;# 
 10195   000371                     IPR15           equ	881	;# 
 10196   000373                     STATUS_CSHAD    equ	883	;# 
 10197   000374                     WREG_CSHAD      equ	884	;# 
 10198   000375                     BSR_CSHAD       equ	885	;# 
 10199   000376                     SHADCON         equ	886	;# 
 10200   000377                     STATUS_SHAD     equ	887	;# 
 10201   000378                     WREG_SHAD       equ	888	;# 
 10202   000379                     BSR_SHAD        equ	889	;# 
 10203   00037A                     PCLATH_SHAD     equ	890	;# 
 10204   00037B                     PCLATU_SHAD     equ	891	;# 
 10205   00037C                     FSR0SH          equ	892	;# 
 10206   00037C                     FSR0L_SHAD      equ	892	;# 
 10207   00037D                     FSR0H_SHAD      equ	893	;# 
 10208   00037E                     FSR1SH          equ	894	;# 
 10209   00037E                     FSR1L_SHAD      equ	894	;# 
 10210   00037F                     FSR1H_SHAD      equ	895	;# 
 10211   000380                     FSR2SH          equ	896	;# 
 10212   000380                     FSR2L_SHAD      equ	896	;# 
 10213   000381                     FSR2H_SHAD      equ	897	;# 
 10214   000382                     PRODSH          equ	898	;# 
 10215   000382                     PRODL_SHAD      equ	898	;# 
 10216   000383                     PRODH_SHAD      equ	899	;# 
 10217   0003BC                     CWG1CLK         equ	956	;# 
 10218   0003BC                     CWG1CLKCON      equ	956	;# 
 10219   0003BD                     CWG1ISM         equ	957	;# 
 10220   0003BD                     CWG1DAT         equ	957	;# 
 10221   0003BE                     CWG1DBR         equ	958	;# 
 10222   0003BF                     CWG1DBF         equ	959	;# 
 10223   0003C0                     CWG1CON0        equ	960	;# 
 10224   0003C1                     CWG1CON1        equ	961	;# 
 10225   0003C2                     CWG1AS0         equ	962	;# 
 10226   0003C3                     CWG1AS1         equ	963	;# 
 10227   0003C4                     CWG1STR         equ	964	;# 
 10228   0003C5                     CWG2CLK         equ	965	;# 
 10229   0003C5                     CWG2CLKCON      equ	965	;# 
 10230   0003C6                     CWG2ISM         equ	966	;# 
 10231   0003C6                     CWG2DAT         equ	966	;# 
 10232   0003C7                     CWG2DBR         equ	967	;# 
 10233   0003C8                     CWG2DBF         equ	968	;# 
 10234   0003C9                     CWG2CON0        equ	969	;# 
 10235   0003CA                     CWG2CON1        equ	970	;# 
 10236   0003CB                     CWG2AS0         equ	971	;# 
 10237   0003CC                     CWG2AS1         equ	972	;# 
 10238   0003CD                     CWG2STR         equ	973	;# 
 10239   0003CE                     CWG3CLK         equ	974	;# 
 10240   0003CE                     CWG3CLKCON      equ	974	;# 
 10241   0003CF                     CWG3ISM         equ	975	;# 
 10242   0003CF                     CWG3DAT         equ	975	;# 
 10243   0003D0                     CWG3DBR         equ	976	;# 
 10244   0003D1                     CWG3DBF         equ	977	;# 
 10245   0003D2                     CWG3CON0        equ	978	;# 
 10246   0003D3                     CWG3CON1        equ	979	;# 
 10247   0003D4                     CWG3AS0         equ	980	;# 
 10248   0003D5                     CWG3AS1         equ	981	;# 
 10249   0003D6                     CWG3STR         equ	982	;# 
 10250   0003D7                     FVRCON          equ	983	;# 
 10251   0003D8                     ADCPCON         equ	984	;# 
 10252   0003D8                     ADCP            equ	984	;# 
 10253   0003D9                     ADLTH           equ	985	;# 
 10254   0003D9                     ADLTHL          equ	985	;# 
 10255   0003DA                     ADLTHH          equ	986	;# 
 10256   0003DB                     ADUTH           equ	987	;# 
 10257   0003DB                     ADUTHL          equ	987	;# 
 10258   0003DC                     ADUTHH          equ	988	;# 
 10259   0003DD                     ADERR           equ	989	;# 
 10260   0003DD                     ADERRL          equ	989	;# 
 10261   0003DE                     ADERRH          equ	990	;# 
 10262   0003DF                     ADSTPT          equ	991	;# 
 10263   0003DF                     ADSTPTL         equ	991	;# 
 10264   0003E0                     ADSTPTH         equ	992	;# 
 10265   0003E1                     ADFLTR          equ	993	;# 
 10266   0003E1                     ADFLTRL         equ	993	;# 
 10267   0003E2                     ADFLTRH         equ	994	;# 
 10268   0003E3                     ADACC           equ	995	;# 
 10269   0003E3                     ADACCL          equ	995	;# 
 10270   0003E4                     ADACCH          equ	996	;# 
 10271   0003E5                     ADACCU          equ	997	;# 
 10272   0003E6                     ADCNT           equ	998	;# 
 10273   0003E7                     ADRPT           equ	999	;# 
 10274   0003E8                     ADPREV          equ	1000	;# 
 10275   0003E8                     ADPREVL         equ	1000	;# 
 10276   0003E9                     ADPREVH         equ	1001	;# 
 10277   0003EA                     ADRES           equ	1002	;# 
 10278   0003EA                     ADRESL          equ	1002	;# 
 10279   0003EB                     ADRESH          equ	1003	;# 
 10280   0003EC                     ADPCH           equ	1004	;# 
 10281   0003EE                     ADACQ           equ	1006	;# 
 10282   0003EE                     ADACQL          equ	1006	;# 
 10283   0003EF                     ADACQH          equ	1007	;# 
 10284   0003F0                     ADCAP           equ	1008	;# 
 10285   0003F1                     ADPRE           equ	1009	;# 
 10286   0003F1                     ADPREL          equ	1009	;# 
 10287   0003F2                     ADPREH          equ	1010	;# 
 10288   0003F3                     ADCON0          equ	1011	;# 
 10289   0003F4                     ADCON1          equ	1012	;# 
 10290   0003F5                     ADCON2          equ	1013	;# 
 10291   0003F6                     ADCON3          equ	1014	;# 
 10292   0003F7                     ADSTAT          equ	1015	;# 
 10293   0003F8                     ADREF           equ	1016	;# 
 10294   0003F9                     ADACT           equ	1017	;# 
 10295   0003FA                     ADCLK           equ	1018	;# 
 10296   000400                     ANSELA          equ	1024	;# 
 10297   000401                     WPUA            equ	1025	;# 
 10298   000402                     ODCONA          equ	1026	;# 
 10299   000403                     SLRCONA         equ	1027	;# 
 10300   000404                     INLVLA          equ	1028	;# 
 10301   000405                     IOCAP           equ	1029	;# 
 10302   000406                     IOCAN           equ	1030	;# 
 10303   000407                     IOCAF           equ	1031	;# 
 10304   000408                     ANSELB          equ	1032	;# 
 10305   000409                     WPUB            equ	1033	;# 
 10306   00040A                     ODCONB          equ	1034	;# 
 10307   00040B                     SLRCONB         equ	1035	;# 
 10308   00040C                     INLVLB          equ	1036	;# 
 10309   00040D                     IOCBP           equ	1037	;# 
 10310   00040E                     IOCBN           equ	1038	;# 
 10311   00040F                     IOCBF           equ	1039	;# 
 10312   000410                     ANSELC          equ	1040	;# 
 10313   000411                     WPUC            equ	1041	;# 
 10314   000412                     ODCONC          equ	1042	;# 
 10315   000413                     SLRCONC         equ	1043	;# 
 10316   000414                     INLVLC          equ	1044	;# 
 10317   000415                     IOCCP           equ	1045	;# 
 10318   000416                     IOCCN           equ	1046	;# 
 10319   000417                     IOCCF           equ	1047	;# 
 10320   000418                     ANSELD          equ	1048	;# 
 10321   000419                     WPUD            equ	1049	;# 
 10322   00041A                     ODCOND          equ	1050	;# 
 10323   00041B                     SLRCOND         equ	1051	;# 
 10324   00041C                     INLVLD          equ	1052	;# 
 10325   000420                     ANSELE          equ	1056	;# 
 10326   000421                     WPUE            equ	1057	;# 
 10327   000422                     ODCONE          equ	1058	;# 
 10328   000423                     SLRCONE         equ	1059	;# 
 10329   000424                     INLVLE          equ	1060	;# 
 10330   000425                     IOCEP           equ	1061	;# 
 10331   000426                     IOCEN           equ	1062	;# 
 10332   000427                     IOCEF           equ	1063	;# 
 10333   000428                     ANSELF          equ	1064	;# 
 10334   000429                     WPUF            equ	1065	;# 
 10335   00042A                     ODCONF          equ	1066	;# 
 10336   00042B                     SLRCONF         equ	1067	;# 
 10337   00042C                     INLVLF          equ	1068	;# 
 10338   000440                     NCO1ACC         equ	1088	;# 
 10339   000440                     NCO1ACCL        equ	1088	;# 
 10340   000441                     NCO1ACCH        equ	1089	;# 
 10341   000442                     NCO1ACCU        equ	1090	;# 
 10342   000443                     NCO1INC         equ	1091	;# 
 10343   000443                     NCO1INCL        equ	1091	;# 
 10344   000444                     NCO1INCH        equ	1092	;# 
 10345   000445                     NCO1INCU        equ	1093	;# 
 10346   000446                     NCO1CON         equ	1094	;# 
 10347   000447                     NCO1CLK         equ	1095	;# 
 10348   000448                     NCO2ACC         equ	1096	;# 
 10349   000448                     NCO2ACCL        equ	1096	;# 
 10350   000449                     NCO2ACCH        equ	1097	;# 
 10351   00044A                     NCO2ACCU        equ	1098	;# 
 10352   00044B                     NCO2INC         equ	1099	;# 
 10353   00044B                     NCO2INCL        equ	1099	;# 
 10354   00044C                     NCO2INCH        equ	1100	;# 
 10355   00044D                     NCO2INCU        equ	1101	;# 
 10356   00044E                     NCO2CON         equ	1102	;# 
 10357   00044F                     NCO2CLK         equ	1103	;# 
 10358   000450                     NCO3ACC         equ	1104	;# 
 10359   000450                     NCO3ACCL        equ	1104	;# 
 10360   000451                     NCO3ACCH        equ	1105	;# 
 10361   000452                     NCO3ACCU        equ	1106	;# 
 10362   000453                     NCO3INC         equ	1107	;# 
 10363   000453                     NCO3INCL        equ	1107	;# 
 10364   000454                     NCO3INCH        equ	1108	;# 
 10365   000455                     NCO3INCU        equ	1109	;# 
 10366   000456                     NCO3CON         equ	1110	;# 
 10367   000457                     NCO3CLK         equ	1111	;# 
 10368   000459                     IVTLOCK         equ	1113	;# 
 10369   00045A                     IVTAD           equ	1114	;# 
 10370   00045A                     IVTADL          equ	1114	;# 
 10371   00045B                     IVTADH          equ	1115	;# 
 10372   00045C                     IVTADU          equ	1116	;# 
 10373   00045D                     IVTBASE         equ	1117	;# 
 10374   00045D                     IVTBASEL        equ	1117	;# 
 10375   00045E                     IVTBASEH        equ	1118	;# 
 10376   00045F                     IVTBASEU        equ	1119	;# 
 10377   000460                     PWM1ERS         equ	1120	;# 
 10378   000461                     PWM1CLK         equ	1121	;# 
 10379   000462                     PWM1LDS         equ	1122	;# 
 10380   000463                     PWM1PR          equ	1123	;# 
 10381   000463                     PWM1PRL         equ	1123	;# 
 10382   000464                     PWM1PRH         equ	1124	;# 
 10383   000465                     PWM1CPRE        equ	1125	;# 
 10384   000466                     PWM1PIPOS       equ	1126	;# 
 10385   000467                     PWM1GIR         equ	1127	;# 
 10386   000468                     PWM1GIE         equ	1128	;# 
 10387   000469                     PWM1CON         equ	1129	;# 
 10388   00046A                     PWM1S1CFG       equ	1130	;# 
 10389   00046B                     PWM1S1P1        equ	1131	;# 
 10390   00046B                     PWM1S1P1L       equ	1131	;# 
 10391   00046C                     PWM1S1P1H       equ	1132	;# 
 10392   00046D                     PWM1S1P2        equ	1133	;# 
 10393   00046D                     PWM1S1P2L       equ	1133	;# 
 10394   00046E                     PWM1S1P2H       equ	1134	;# 
 10395   00046F                     PWM2ERS         equ	1135	;# 
 10396   000470                     PWM2CLK         equ	1136	;# 
 10397   000471                     PWM2LDS         equ	1137	;# 
 10398   000472                     PWM2PR          equ	1138	;# 
 10399   000472                     PWM2PRL         equ	1138	;# 
 10400   000473                     PWM2PRH         equ	1139	;# 
 10401   000474                     PWM2CPRE        equ	1140	;# 
 10402   000475                     PWM2PIPOS       equ	1141	;# 
 10403   000476                     PWM2GIR         equ	1142	;# 
 10404   000477                     PWM2GIE         equ	1143	;# 
 10405   000478                     PWM2CON         equ	1144	;# 
 10406   000479                     PWM2S1CFG       equ	1145	;# 
 10407   00047A                     PWM2S1P1        equ	1146	;# 
 10408   00047A                     PWM2S1P1L       equ	1146	;# 
 10409   00047B                     PWM2S1P1H       equ	1147	;# 
 10410   00047C                     PWM2S1P2        equ	1148	;# 
 10411   00047C                     PWM2S1P2L       equ	1148	;# 
 10412   00047D                     PWM2S1P2H       equ	1149	;# 
 10413   00047E                     PWM3ERS         equ	1150	;# 
 10414   00047F                     PWM3CLK         equ	1151	;# 
 10415   000480                     PWM3LDS         equ	1152	;# 
 10416   000481                     PWM3PR          equ	1153	;# 
 10417   000481                     PWM3PRL         equ	1153	;# 
 10418   000482                     PWM3PRH         equ	1154	;# 
 10419   000483                     PWM3CPRE        equ	1155	;# 
 10420   000484                     PWM3PIPOS       equ	1156	;# 
 10421   000485                     PWM3GIR         equ	1157	;# 
 10422   000486                     PWM3GIE         equ	1158	;# 
 10423   000487                     PWM3CON         equ	1159	;# 
 10424   000488                     PWM3S1CFG       equ	1160	;# 
 10425   000489                     PWM3S1P1        equ	1161	;# 
 10426   000489                     PWM3S1P1L       equ	1161	;# 
 10427   00048A                     PWM3S1P1H       equ	1162	;# 
 10428   00048B                     PWM3S1P2        equ	1163	;# 
 10429   00048B                     PWM3S1P2L       equ	1163	;# 
 10430   00048C                     PWM3S1P2H       equ	1164	;# 
 10431   00049C                     PWMLOAD         equ	1180	;# 
 10432   00049D                     PWMEN           equ	1181	;# 
 10433   00049E                     PIE0            equ	1182	;# 
 10434   00049F                     PIE1            equ	1183	;# 
 10435   0004A0                     PIE2            equ	1184	;# 
 10436   0004A1                     PIE3            equ	1185	;# 
 10437   0004A2                     PIE4            equ	1186	;# 
 10438   0004A3                     PIE5            equ	1187	;# 
 10439   0004A4                     PIE6            equ	1188	;# 
 10440   0004A5                     PIE7            equ	1189	;# 
 10441   0004A6                     PIE8            equ	1190	;# 
 10442   0004A7                     PIE9            equ	1191	;# 
 10443   0004A8                     PIE10           equ	1192	;# 
 10444   0004A9                     PIE11           equ	1193	;# 
 10445   0004AA                     PIE12           equ	1194	;# 
 10446   0004AB                     PIE13           equ	1195	;# 
 10447   0004AC                     PIE14           equ	1196	;# 
 10448   0004AD                     PIE15           equ	1197	;# 
 10449   0004AE                     PIR0            equ	1198	;# 
 10450   0004AF                     PIR1            equ	1199	;# 
 10451   0004B0                     PIR2            equ	1200	;# 
 10452   0004B1                     PIR3            equ	1201	;# 
 10453   0004B2                     PIR4            equ	1202	;# 
 10454   0004B3                     PIR5            equ	1203	;# 
 10455   0004B4                     PIR6            equ	1204	;# 
 10456   0004B5                     PIR7            equ	1205	;# 
 10457   0004B6                     PIR8            equ	1206	;# 
 10458   0004B7                     PIR9            equ	1207	;# 
 10459   0004B8                     PIR10           equ	1208	;# 
 10460   0004B9                     PIR11           equ	1209	;# 
 10461   0004BA                     PIR12           equ	1210	;# 
 10462   0004BB                     PIR13           equ	1211	;# 
 10463   0004BC                     PIR14           equ	1212	;# 
 10464   0004BD                     PIR15           equ	1213	;# 
 10465   0004BE                     LATA            equ	1214	;# 
 10466   0004BF                     LATB            equ	1215	;# 
 10467   0004C0                     LATC            equ	1216	;# 
 10468   0004C1                     LATD            equ	1217	;# 
 10469   0004C2                     LATE            equ	1218	;# 
 10470   0004C3                     LATF            equ	1219	;# 
 10471   0004C6                     TRISA           equ	1222	;# 
 10472   0004C7                     TRISB           equ	1223	;# 
 10473   0004C8                     TRISC           equ	1224	;# 
 10474   0004C9                     TRISD           equ	1225	;# 
 10475   0004CA                     TRISE           equ	1226	;# 
 10476   0004CB                     TRISF           equ	1227	;# 
 10477   0004CE                     PORTA           equ	1230	;# 
 10478   0004CF                     PORTB           equ	1231	;# 
 10479   0004D0                     PORTC           equ	1232	;# 
 10480   0004D1                     PORTD           equ	1233	;# 
 10481   0004D2                     PORTE           equ	1234	;# 
 10482   0004D3                     PORTF           equ	1235	;# 
 10483   0004D6                     INTCON0         equ	1238	;# 
 10484   0004D7                     INTCON1         equ	1239	;# 
 10485   0004D8                     STATUS          equ	1240	;# 
 10486   0004D9                     FSR2            equ	1241	;# 
 10487   0004D9                     FSR2L           equ	1241	;# 
 10488   0004DA                     FSR2H           equ	1242	;# 
 10489   0004DB                     PLUSW2          equ	1243	;# 
 10490   0004DC                     PREINC2         equ	1244	;# 
 10491   0004DD                     POSTDEC2        equ	1245	;# 
 10492   0004DE                     POSTINC2        equ	1246	;# 
 10493   0004DF                     INDF2           equ	1247	;# 
 10494   0004E0                     BSR             equ	1248	;# 
 10495   0004E1                     FSR1            equ	1249	;# 
 10496   0004E1                     FSR1L           equ	1249	;# 
 10497   0004E2                     FSR1H           equ	1250	;# 
 10498   0004E3                     PLUSW1          equ	1251	;# 
 10499   0004E4                     PREINC1         equ	1252	;# 
 10500   0004E5                     POSTDEC1        equ	1253	;# 
 10501   0004E6                     POSTINC1        equ	1254	;# 
 10502   0004E7                     INDF1           equ	1255	;# 
 10503   0004E8                     WREG            equ	1256	;# 
 10504   0004E9                     FSR0            equ	1257	;# 
 10505   0004E9                     FSR0L           equ	1257	;# 
 10506   0004EA                     FSR0H           equ	1258	;# 
 10507   0004EB                     PLUSW0          equ	1259	;# 
 10508   0004EC                     PREINC0         equ	1260	;# 
 10509   0004ED                     POSTDEC0        equ	1261	;# 
 10510   0004EE                     POSTINC0        equ	1262	;# 
 10511   0004EF                     INDF0           equ	1263	;# 
 10512   0004F0                     PCON0           equ	1264	;# 
 10513   0004F1                     PCON1           equ	1265	;# 
 10514   0004F2                     CPUDOZE         equ	1266	;# 
 10515   0004F3                     PROD            equ	1267	;# 
 10516   0004F3                     PRODL           equ	1267	;# 
 10517   0004F4                     PRODH           equ	1268	;# 
 10518   0004F5                     TABLAT          equ	1269	;# 
 10519   0004F6                     TBLPTR          equ	1270	;# 
 10520   0004F6                     TBLPTRL         equ	1270	;# 
 10521   0004F7                     TBLPTRH         equ	1271	;# 
 10522   0004F8                     TBLPTRU         equ	1272	;# 
 10523   0004F9                     PCLAT           equ	1273	;# 
 10524   0004F9                     PCL             equ	1273	;# 
 10525   0004FA                     PCLATH          equ	1274	;# 
 10526   0004FB                     PCLATU          equ	1275	;# 
 10527   0004FC                     STKPTR          equ	1276	;# 
 10528   0004FD                     TOS             equ	1277	;# 
 10529   0004FD                     TOSL            equ	1277	;# 
 10530   0004FE                     TOSH            equ	1278	;# 
 10531   0004FF                     TOSU            equ	1279	;# 
 10532   000039                     CLKRCON         equ	57	;# 
 10533   00003A                     CLKRCLK         equ	58	;# 
 10534   000040                     NVMCON0         equ	64	;# 
 10535   000041                     NVMCON1         equ	65	;# 
 10536   000042                     NVMLOCK         equ	66	;# 
 10537   000043                     NVMADR          equ	67	;# 
 10538   000043                     NVMADRL         equ	67	;# 
 10539   000044                     NVMADRH         equ	68	;# 
 10540   000045                     NVMADRU         equ	69	;# 
 10541   000046                     NVMDAT          equ	70	;# 
 10542   000046                     NVMDATL         equ	70	;# 
 10543   000047                     NVMDATH         equ	71	;# 
 10544   000048                     VREGCON         equ	72	;# 
 10545   000049                     BORCON          equ	73	;# 
 10546   00004A                     HLVDCON0        equ	74	;# 
 10547   00004B                     HLVDCON1        equ	75	;# 
 10548   00004C                     ZCDCON          equ	76	;# 
 10549   000060                     PMD0            equ	96	;# 
 10550   000061                     PMD1            equ	97	;# 
 10551   000063                     PMD3            equ	99	;# 
 10552   000064                     PMD4            equ	100	;# 
 10553   000065                     PMD5            equ	101	;# 
 10554   000066                     PMD6            equ	102	;# 
 10555   000067                     PMD7            equ	103	;# 
 10556   000068                     PMD8            equ	104	;# 
 10557   00006A                     MD1CON0         equ	106	;# 
 10558   00006B                     MD1CON1         equ	107	;# 
 10559   00006C                     MD1SRC          equ	108	;# 
 10560   00006D                     MD1CARL         equ	109	;# 
 10561   00006E                     MD1CARH         equ	110	;# 
 10562   00006F                     CMOUT           equ	111	;# 
 10563   000070                     CM1CON0         equ	112	;# 
 10564   000071                     CM1CON1         equ	113	;# 
 10565   000072                     CM1NCH          equ	114	;# 
 10566   000073                     CM1PCH          equ	115	;# 
 10567   000074                     CM2CON0         equ	116	;# 
 10568   000075                     CM2CON1         equ	117	;# 
 10569   000076                     CM2NCH          equ	118	;# 
 10570   000077                     CM2PCH          equ	119	;# 
 10571   000078                     WDTCON0         equ	120	;# 
 10572   000079                     WDTCON1         equ	121	;# 
 10573   00007A                     WDTPS           equ	122	;# 
 10574   00007A                     WDTPSL          equ	122	;# 
 10575   00007B                     WDTPSH          equ	123	;# 
 10576   00007C                     WDTTMR          equ	124	;# 
 10577   00007D                     DAC1DAT         equ	125	;# 
 10578   00007D                     DAC1DATL        equ	125	;# 
 10579   00007F                     DAC1CON         equ	127	;# 
 10580   000080                     SPI1RXB         equ	128	;# 
 10581   000081                     SPI1TXB         equ	129	;# 
 10582   000082                     SPI1TCNT        equ	130	;# 
 10583   000082                     SPI1TCNTL       equ	130	;# 
 10584   000083                     SPI1TCNTH       equ	131	;# 
 10585   000084                     SPI1CON0        equ	132	;# 
 10586   000085                     SPI1CON1        equ	133	;# 
 10587   000086                     SPI1CON2        equ	134	;# 
 10588   000087                     SPI1STATUS      equ	135	;# 
 10589   000088                     SPI1TWIDTH      equ	136	;# 
 10590   000089                     SPI1BAUD        equ	137	;# 
 10591   00008A                     SPI1INTF        equ	138	;# 
 10592   00008B                     SPI1INTE        equ	139	;# 
 10593   00008C                     SPI1CLK         equ	140	;# 
 10594   00008D                     SPI2RXB         equ	141	;# 
 10595   00008E                     SPI2TXB         equ	142	;# 
 10596   00008F                     SPI2TCNT        equ	143	;# 
 10597   00008F                     SPI2TCNTL       equ	143	;# 
 10598   000090                     SPI2TCNTH       equ	144	;# 
 10599   000091                     SPI2CON0        equ	145	;# 
 10600   000092                     SPI2CON1        equ	146	;# 
 10601   000093                     SPI2CON2        equ	147	;# 
 10602   000094                     SPI2STATUS      equ	148	;# 
 10603   000095                     SPI2TWIDTH      equ	149	;# 
 10604   000096                     SPI2BAUD        equ	150	;# 
 10605   000097                     SPI2INTF        equ	151	;# 
 10606   000098                     SPI2INTE        equ	152	;# 
 10607   000099                     SPI2CLK         equ	153	;# 
 10608   0000AC                     ACTCON          equ	172	;# 
 10609   0000AD                     OSCCON1         equ	173	;# 
 10610   0000AE                     OSCCON2         equ	174	;# 
 10611   0000AF                     OSCCON3         equ	175	;# 
 10612   0000B0                     OSCTUNE         equ	176	;# 
 10613   0000B1                     OSCFRQ          equ	177	;# 
 10614   0000B1                     OSCFREQ         equ	177	;# 
 10615   0000B2                     OSCSTAT         equ	178	;# 
 10616   0000B2                     OSCSTAT1        equ	178	;# 
 10617   0000B3                     OSCEN           equ	179	;# 
 10618   0000B4                     PRLOCK          equ	180	;# 
 10619   0000B5                     SCANPR          equ	181	;# 
 10620   0000B6                     DMA1PR          equ	182	;# 
 10621   0000B7                     DMA2PR          equ	183	;# 
 10622   0000B8                     DMA3PR          equ	184	;# 
 10623   0000B9                     DMA4PR          equ	185	;# 
 10624   0000BA                     DMA5PR          equ	186	;# 
 10625   0000BB                     DMA6PR          equ	187	;# 
 10626   0000BE                     MAINPR          equ	190	;# 
 10627   0000BF                     ISRPR           equ	191	;# 
 10628   0000D4                     CLCDATA         equ	212	;# 
 10629   0000D5                     CLCSELECT       equ	213	;# 
 10630   0000D6                     CLCnCON         equ	214	;# 
 10631   0000D7                     CLCnPOL         equ	215	;# 
 10632   0000D8                     CLCnSEL0        equ	216	;# 
 10633   0000D9                     CLCnSEL1        equ	217	;# 
 10634   0000DA                     CLCnSEL2        equ	218	;# 
 10635   0000DB                     CLCnSEL3        equ	219	;# 
 10636   0000DC                     CLCnGLS0        equ	220	;# 
 10637   0000DD                     CLCnGLS1        equ	221	;# 
 10638   0000DE                     CLCnGLS2        equ	222	;# 
 10639   0000DF                     CLCnGLS3        equ	223	;# 
 10640   0000E8                     DMASELECT       equ	232	;# 
 10641   0000E9                     DMAnBUF         equ	233	;# 
 10642   0000EA                     DMAnDCNT        equ	234	;# 
 10643   0000EA                     DMAnDCNTL       equ	234	;# 
 10644   0000EB                     DMAnDCNTH       equ	235	;# 
 10645   0000EC                     DMAnDPTR        equ	236	;# 
 10646   0000EC                     DMAnDPTRL       equ	236	;# 
 10647   0000ED                     DMAnDPTRH       equ	237	;# 
 10648   0000EE                     DMAnDSZ         equ	238	;# 
 10649   0000EE                     DMAnDSZL        equ	238	;# 
 10650   0000EF                     DMAnDSZH        equ	239	;# 
 10651   0000F0                     DMAnDSA         equ	240	;# 
 10652   0000F0                     DMAnDSAL        equ	240	;# 
 10653   0000F1                     DMAnDSAH        equ	241	;# 
 10654   0000F2                     DMAnSCNT        equ	242	;# 
 10655   0000F2                     DMAnSCNTL       equ	242	;# 
 10656   0000F3                     DMAnSCNTH       equ	243	;# 
 10657   0000F4                     DMAnSPTR        equ	244	;# 
 10658   0000F4                     DMAnSPTRL       equ	244	;# 
 10659   0000F5                     DMAnSPTRH       equ	245	;# 
 10660   0000F6                     DMAnSPTRU       equ	246	;# 
 10661   0000F7                     DMAnSSZ         equ	247	;# 
 10662   0000F7                     DMAnSSZL        equ	247	;# 
 10663   0000F8                     DMAnSSZH        equ	248	;# 
 10664   0000F9                     DMAnSSA         equ	249	;# 
 10665   0000F9                     DMAnSSAL        equ	249	;# 
 10666   0000FA                     DMAnSSAH        equ	250	;# 
 10667   0000FB                     DMAnSSAU        equ	251	;# 
 10668   0000FC                     DMAnCON0        equ	252	;# 
 10669   0000FD                     DMAnCON1        equ	253	;# 
 10670   0000FE                     DMAnAIRQ        equ	254	;# 
 10671   0000FF                     DMAnSIRQ        equ	255	;# 
 10672   000200                     PPSLOCK         equ	512	;# 
 10673   000201                     RA0PPS          equ	513	;# 
 10674   000202                     RA1PPS          equ	514	;# 
 10675   000203                     RA2PPS          equ	515	;# 
 10676   000204                     RA3PPS          equ	516	;# 
 10677   000205                     RA4PPS          equ	517	;# 
 10678   000206                     RA5PPS          equ	518	;# 
 10679   000207                     RA6PPS          equ	519	;# 
 10680   000208                     RA7PPS          equ	520	;# 
 10681   000209                     RB0PPS          equ	521	;# 
 10682   00020A                     RB1PPS          equ	522	;# 
 10683   00020B                     RB2PPS          equ	523	;# 
 10684   00020C                     RB3PPS          equ	524	;# 
 10685   00020D                     RB4PPS          equ	525	;# 
 10686   00020E                     RB5PPS          equ	526	;# 
 10687   00020F                     RB6PPS          equ	527	;# 
 10688   000210                     RB7PPS          equ	528	;# 
 10689   000211                     RC0PPS          equ	529	;# 
 10690   000212                     RC1PPS          equ	530	;# 
 10691   000213                     RC2PPS          equ	531	;# 
 10692   000214                     RC3PPS          equ	532	;# 
 10693   000215                     RC4PPS          equ	533	;# 
 10694   000216                     RC5PPS          equ	534	;# 
 10695   000217                     RC6PPS          equ	535	;# 
 10696   000218                     RC7PPS          equ	536	;# 
 10697   000219                     RD0PPS          equ	537	;# 
 10698   00021A                     RD1PPS          equ	538	;# 
 10699   00021B                     RD2PPS          equ	539	;# 
 10700   00021C                     RD3PPS          equ	540	;# 
 10701   00021D                     RD4PPS          equ	541	;# 
 10702   00021E                     RD5PPS          equ	542	;# 
 10703   00021F                     RD6PPS          equ	543	;# 
 10704   000220                     RD7PPS          equ	544	;# 
 10705   000221                     RE0PPS          equ	545	;# 
 10706   000222                     RE1PPS          equ	546	;# 
 10707   000223                     RE2PPS          equ	547	;# 
 10708   000229                     RF0PPS          equ	553	;# 
 10709   00022A                     RF1PPS          equ	554	;# 
 10710   00022B                     RF2PPS          equ	555	;# 
 10711   00022C                     RF3PPS          equ	556	;# 
 10712   00022D                     RF4PPS          equ	557	;# 
 10713   00022E                     RF5PPS          equ	558	;# 
 10714   00022F                     RF6PPS          equ	559	;# 
 10715   000230                     RF7PPS          equ	560	;# 
 10716   00023E                     INT0PPS         equ	574	;# 
 10717   00023F                     INT1PPS         equ	575	;# 
 10718   000240                     INT2PPS         equ	576	;# 
 10719   000241                     T0CKIPPS        equ	577	;# 
 10720   000242                     T1CKIPPS        equ	578	;# 
 10721   000243                     T1GPPS          equ	579	;# 
 10722   000244                     T3CKIPPS        equ	580	;# 
 10723   000245                     T3GPPS          equ	581	;# 
 10724   000246                     T5CKIPPS        equ	582	;# 
 10725   000247                     T5GPPS          equ	583	;# 
 10726   000248                     T2INPPS         equ	584	;# 
 10727   000249                     T4INPPS         equ	585	;# 
 10728   00024A                     T6INPPS         equ	586	;# 
 10729   00024F                     CCP1PPS         equ	591	;# 
 10730   000250                     CCP2PPS         equ	592	;# 
 10731   000251                     CCP3PPS         equ	593	;# 
 10732   000253                     PWM1ERSPPS      equ	595	;# 
 10733   000254                     PWM2ERSPPS      equ	596	;# 
 10734   000255                     PWM3ERSPPS      equ	597	;# 
 10735   000257                     PWMIN0PPS       equ	599	;# 
 10736   000258                     PWMIN1PPS       equ	600	;# 
 10737   000259                     SMT1WINPPS      equ	601	;# 
 10738   00025A                     SMT1SIGPPS      equ	602	;# 
 10739   00025B                     CWG1PPS         equ	603	;# 
 10740   00025B                     CWG1INPPS       equ	603	;# 
 10741   00025C                     CWG2PPS         equ	604	;# 
 10742   00025C                     CWG2INPPS       equ	604	;# 
 10743   00025D                     CWG3PPS         equ	605	;# 
 10744   00025D                     CWG3INPPS       equ	605	;# 
 10745   00025E                     MD1CARLPPS      equ	606	;# 
 10746   00025E                     MDCARLPPS       equ	606	;# 
 10747   00025F                     MD1CARHPPS      equ	607	;# 
 10748   00025F                     MDCARHPPS       equ	607	;# 
 10749   000260                     MD1SRCPPS       equ	608	;# 
 10750   000260                     MDSRCPPS        equ	608	;# 
 10751   000261                     CLCIN0PPS       equ	609	;# 
 10752   000262                     CLCIN1PPS       equ	610	;# 
 10753   000263                     CLCIN2PPS       equ	611	;# 
 10754   000264                     CLCIN3PPS       equ	612	;# 
 10755   000265                     CLCIN4PPS       equ	613	;# 
 10756   000266                     CLCIN5PPS       equ	614	;# 
 10757   000267                     CLCIN6PPS       equ	615	;# 
 10758   000268                     CLCIN7PPS       equ	616	;# 
 10759   000269                     ADACTPPS        equ	617	;# 
 10760   00026A                     SPI1SCKPPS      equ	618	;# 
 10761   00026B                     SPI1SDIPPS      equ	619	;# 
 10762   00026C                     SPI1SSPPS       equ	620	;# 
 10763   00026D                     SPI2SCKPPS      equ	621	;# 
 10764   00026E                     SPI2SDIPPS      equ	622	;# 
 10765   00026F                     SPI2SSPPS       equ	623	;# 
 10766   000270                     I2C1SDAPPS      equ	624	;# 
 10767   000271                     I2C1SCLPPS      equ	625	;# 
 10768   000272                     U1RXPPS         equ	626	;# 
 10769   000273                     U1CTSPPS        equ	627	;# 
 10770   000274                     U2RXPPS         equ	628	;# 
 10771   000275                     U2CTSPPS        equ	629	;# 
 10772   000276                     U3RXPPS         equ	630	;# 
 10773   000277                     U3CTSPPS        equ	631	;# 
 10774   000278                     U4RXPPS         equ	632	;# 
 10775   000279                     U4CTSPPS        equ	633	;# 
 10776   00027A                     U5RXPPS         equ	634	;# 
 10777   00027B                     U5CTSPPS        equ	635	;# 
 10778   000286                     RC4I2C          equ	646	;# 
 10779   000287                     RC3I2C          equ	647	;# 
 10780   000288                     RB2I2C          equ	648	;# 
 10781   000289                     RB1I2C          equ	649	;# 
 10782   00028B                     I2C1RXB         equ	651	;# 
 10783   00028C                     I2C1TXB         equ	652	;# 
 10784   00028D                     I2C1CNT         equ	653	;# 
 10785   00028E                     I2C1ADB0        equ	654	;# 
 10786   00028F                     I2C1ADB1        equ	655	;# 
 10787   000290                     I2C1ADR0        equ	656	;# 
 10788   000291                     I2C1ADR1        equ	657	;# 
 10789   000292                     I2C1ADR2        equ	658	;# 
 10790   000293                     I2C1ADR3        equ	659	;# 
 10791   000294                     I2C1CON0        equ	660	;# 
 10792   000295                     I2C1CON1        equ	661	;# 
 10793   000296                     I2C1CON2        equ	662	;# 
 10794   000297                     I2C1ERR         equ	663	;# 
 10795   000298                     I2C1STAT0       equ	664	;# 
 10796   000299                     I2C1STAT1       equ	665	;# 
 10797   00029A                     I2C1PIR         equ	666	;# 
 10798   00029B                     I2C1PIE         equ	667	;# 
 10799   00029C                     I2C1CLK         equ	668	;# 
 10800   00029D                     I2C1BTO         equ	669	;# 
 10801   0002A1                     U1RXB           equ	673	;# 
 10802   0002A1                     U1RXBL          equ	673	;# 
 10803   0002A2                     U1RXCHK         equ	674	;# 
 10804   0002A3                     U1TXB           equ	675	;# 
 10805   0002A3                     U1TXBL          equ	675	;# 
 10806   0002A4                     U1TXCHK         equ	676	;# 
 10807   0002A5                     U1P1            equ	677	;# 
 10808   0002A5                     U1P1L           equ	677	;# 
 10809   0002A6                     U1P1H           equ	678	;# 
 10810   0002A7                     U1P2            equ	679	;# 
 10811   0002A7                     U1P2L           equ	679	;# 
 10812   0002A8                     U1P2H           equ	680	;# 
 10813   0002A9                     U1P3            equ	681	;# 
 10814   0002A9                     U1P3L           equ	681	;# 
 10815   0002AA                     U1P3H           equ	682	;# 
 10816   0002AB                     U1CON0          equ	683	;# 
 10817   0002AC                     U1CON1          equ	684	;# 
 10818   0002AD                     U1CON2          equ	685	;# 
 10819   0002AE                     U1BRG           equ	686	;# 
 10820   0002AE                     U1BRGL          equ	686	;# 
 10821   0002AF                     U1BRGH          equ	687	;# 
 10822   0002B0                     U1FIFO          equ	688	;# 
 10823   0002B1                     U1UIR           equ	689	;# 
 10824   0002B2                     U1ERRIR         equ	690	;# 
 10825   0002B3                     U1ERRIE         equ	691	;# 
 10826   0002B4                     U2RXB           equ	692	;# 
 10827   0002B4                     U2RXBL          equ	692	;# 
 10828   0002B6                     U2TXB           equ	694	;# 
 10829   0002B6                     U2TXBL          equ	694	;# 
 10830   0002B8                     U2P1            equ	696	;# 
 10831   0002B8                     U2P1L           equ	696	;# 
 10832   0002BA                     U2P2            equ	698	;# 
 10833   0002BA                     U2P2L           equ	698	;# 
 10834   0002BC                     U2P3            equ	700	;# 
 10835   0002BC                     U2P3L           equ	700	;# 
 10836   0002BE                     U2CON0          equ	702	;# 
 10837   0002BF                     U2CON1          equ	703	;# 
 10838   0002C0                     U2CON2          equ	704	;# 
 10839   0002C1                     U2BRG           equ	705	;# 
 10840   0002C1                     U2BRGL          equ	705	;# 
 10841   0002C2                     U2BRGH          equ	706	;# 
 10842   0002C3                     U2FIFO          equ	707	;# 
 10843   0002C4                     U2UIR           equ	708	;# 
 10844   0002C5                     U2ERRIR         equ	709	;# 
 10845   0002C6                     U2ERRIE         equ	710	;# 
 10846   0002C7                     U3RXB           equ	711	;# 
 10847   0002C7                     U3RXBL          equ	711	;# 
 10848   0002C9                     U3TXB           equ	713	;# 
 10849   0002C9                     U3TXBL          equ	713	;# 
 10850   0002CB                     U3P1            equ	715	;# 
 10851   0002CB                     U3P1L           equ	715	;# 
 10852   0002CD                     U3P2            equ	717	;# 
 10853   0002CD                     U3P2L           equ	717	;# 
 10854   0002CF                     U3P3            equ	719	;# 
 10855   0002CF                     U3P3L           equ	719	;# 
 10856   0002D1                     U3CON0          equ	721	;# 
 10857   0002D2                     U3CON1          equ	722	;# 
 10858   0002D3                     U3CON2          equ	723	;# 
 10859   0002D4                     U3BRG           equ	724	;# 
 10860   0002D4                     U3BRGL          equ	724	;# 
 10861   0002D5                     U3BRGH          equ	725	;# 
 10862   0002D6                     U3FIFO          equ	726	;# 
 10863   0002D7                     U3UIR           equ	727	;# 
 10864   0002D8                     U3ERRIR         equ	728	;# 
 10865   0002D9                     U3ERRIE         equ	729	;# 
 10866   0002DA                     U4RXB           equ	730	;# 
 10867   0002DA                     U4RXBL          equ	730	;# 
 10868   0002DC                     U4TXB           equ	732	;# 
 10869   0002DC                     U4TXBL          equ	732	;# 
 10870   0002DE                     U4P1            equ	734	;# 
 10871   0002DE                     U4P1L           equ	734	;# 
 10872   0002E0                     U4P2            equ	736	;# 
 10873   0002E0                     U4P2L           equ	736	;# 
 10874   0002E2                     U4P3            equ	738	;# 
 10875   0002E2                     U4P3L           equ	738	;# 
 10876   0002E4                     U4CON0          equ	740	;# 
 10877   0002E5                     U4CON1          equ	741	;# 
 10878   0002E6                     U4CON2          equ	742	;# 
 10879   0002E7                     U4BRG           equ	743	;# 
 10880   0002E7                     U4BRGL          equ	743	;# 
 10881   0002E8                     U4BRGH          equ	744	;# 
 10882   0002E9                     U4FIFO          equ	745	;# 
 10883   0002EA                     U4UIR           equ	746	;# 
 10884   0002EB                     U4ERRIR         equ	747	;# 
 10885   0002EC                     U4ERRIE         equ	748	;# 
 10886   0002ED                     U5RXB           equ	749	;# 
 10887   0002ED                     U5RXBL          equ	749	;# 
 10888   0002EF                     U5TXB           equ	751	;# 
 10889   0002EF                     U5TXBL          equ	751	;# 
 10890   0002F1                     U5P1            equ	753	;# 
 10891   0002F1                     U5P1L           equ	753	;# 
 10892   0002F3                     U5P2            equ	755	;# 
 10893   0002F3                     U5P2L           equ	755	;# 
 10894   0002F5                     U5P3            equ	757	;# 
 10895   0002F5                     U5P3L           equ	757	;# 
 10896   0002F7                     U5CON0          equ	759	;# 
 10897   0002F8                     U5CON1          equ	760	;# 
 10898   0002F9                     U5CON2          equ	761	;# 
 10899   0002FA                     U5BRG           equ	762	;# 
 10900   0002FA                     U5BRGL          equ	762	;# 
 10901   0002FB                     U5BRGH          equ	763	;# 
 10902   0002FC                     U5FIFO          equ	764	;# 
 10903   0002FD                     U5UIR           equ	765	;# 
 10904   0002FE                     U5ERRIR         equ	766	;# 
 10905   0002FF                     U5ERRIE         equ	767	;# 
 10906   000300                     SMT1TMR         equ	768	;# 
 10907   000300                     SMT1TMRL        equ	768	;# 
 10908   000301                     SMT1TMRH        equ	769	;# 
 10909   000302                     SMT1TMRU        equ	770	;# 
 10910   000303                     SMT1CPR         equ	771	;# 
 10911   000303                     SMT1CPRL        equ	771	;# 
 10912   000304                     SMT1CPRH        equ	772	;# 
 10913   000305                     SMT1CPRU        equ	773	;# 
 10914   000306                     SMT1CPW         equ	774	;# 
 10915   000306                     SMT1CPWL        equ	774	;# 
 10916   000307                     SMT1CPWH        equ	775	;# 
 10917   000308                     SMT1CPWU        equ	776	;# 
 10918   000309                     SMT1PR          equ	777	;# 
 10919   000309                     SMT1PRL         equ	777	;# 
 10920   00030A                     SMT1PRH         equ	778	;# 
 10921   00030B                     SMT1PRU         equ	779	;# 
 10922   00030C                     SMT1CON0        equ	780	;# 
 10923   00030D                     SMT1CON1        equ	781	;# 
 10924   00030E                     SMT1STAT        equ	782	;# 
 10925   00030F                     SMT1CLK         equ	783	;# 
 10926   000310                     SMT1SIG         equ	784	;# 
 10927   000311                     SMT1WIN         equ	785	;# 
 10928   000318                     TMR0L           equ	792	;# 
 10929   000318                     TMR0            equ	792	;# 
 10930   000319                     TMR0H           equ	793	;# 
 10931   000319                     PR0             equ	793	;# 
 10932   00031A                     T0CON0          equ	794	;# 
 10933   00031B                     T0CON1          equ	795	;# 
 10934   00031C                     TMR1            equ	796	;# 
 10935   00031C                     TMR1L           equ	796	;# 
 10936   00031D                     TMR1H           equ	797	;# 
 10937   00031E                     T1CON           equ	798	;# 
 10938   00031E                     TMR1CON         equ	798	;# 
 10939   00031F                     T1GCON          equ	799	;# 
 10940   00031F                     TMR1GCON        equ	799	;# 
 10941   000320                     T1GATE          equ	800	;# 
 10942   000320                     TMR1GATE        equ	800	;# 
 10943   000321                     T1CLK           equ	801	;# 
 10944   000321                     TMR1CLK         equ	801	;# 
 10945   000321                     PR1             equ	801	;# 
 10946   000322                     T2TMR           equ	802	;# 
 10947   000322                     TMR2            equ	802	;# 
 10948   000323                     T2PR            equ	803	;# 
 10949   000323                     PR2             equ	803	;# 
 10950   000324                     T2CON           equ	804	;# 
 10951   000325                     T2HLT           equ	805	;# 
 10952   000326                     T2CLKCON        equ	806	;# 
 10953   000326                     T2CLK           equ	806	;# 
 10954   000327                     T2RST           equ	807	;# 
 10955   000328                     TMR3            equ	808	;# 
 10956   000328                     TMR3L           equ	808	;# 
 10957   000329                     TMR3H           equ	809	;# 
 10958   00032A                     T3CON           equ	810	;# 
 10959   00032A                     TMR3CON         equ	810	;# 
 10960   00032B                     T3GCON          equ	811	;# 
 10961   00032B                     TMR3GCON        equ	811	;# 
 10962   00032C                     T3GATE          equ	812	;# 
 10963   00032C                     TMR3GATE        equ	812	;# 
 10964   00032D                     T3CLK           equ	813	;# 
 10965   00032D                     TMR3CLK         equ	813	;# 
 10966   00032D                     PR3             equ	813	;# 
 10967   00032E                     T4TMR           equ	814	;# 
 10968   00032E                     TMR4            equ	814	;# 
 10969   00032F                     T4PR            equ	815	;# 
 10970   00032F                     PR4             equ	815	;# 
 10971   000330                     T4CON           equ	816	;# 
 10972   000331                     T4HLT           equ	817	;# 
 10973   000332                     T4CLKCON        equ	818	;# 
 10974   000332                     T4CLK           equ	818	;# 
 10975   000333                     T4RST           equ	819	;# 
 10976   000334                     TMR5            equ	820	;# 
 10977   000334                     TMR5L           equ	820	;# 
 10978   000335                     TMR5H           equ	821	;# 
 10979   000336                     T5CON           equ	822	;# 
 10980   000336                     TMR5CON         equ	822	;# 
 10981   000337                     T5GCON          equ	823	;# 
 10982   000337                     TMR5GCON        equ	823	;# 
 10983   000338                     T5GATE          equ	824	;# 
 10984   000338                     TMR5GATE        equ	824	;# 
 10985   000339                     T5CLK           equ	825	;# 
 10986   000339                     TMR5CLK         equ	825	;# 
 10987   000339                     PR5             equ	825	;# 
 10988   00033A                     T6TMR           equ	826	;# 
 10989   00033A                     TMR6            equ	826	;# 
 10990   00033B                     T6PR            equ	827	;# 
 10991   00033B                     PR6             equ	827	;# 
 10992   00033C                     T6CON           equ	828	;# 
 10993   00033D                     T6HLT           equ	829	;# 
 10994   00033E                     T6CLKCON        equ	830	;# 
 10995   00033E                     T6CLK           equ	830	;# 
 10996   00033F                     T6RST           equ	831	;# 
 10997   000340                     CCPR1           equ	832	;# 
 10998   000340                     CCPR1L          equ	832	;# 
 10999   000341                     CCPR1H          equ	833	;# 
 11000   000342                     CCP1CON         equ	834	;# 
 11001   000343                     CCP1CAP         equ	835	;# 
 11002   000344                     CCPR2           equ	836	;# 
 11003   000344                     CCPR2L          equ	836	;# 
 11004   000345                     CCPR2H          equ	837	;# 
 11005   000346                     CCP2CON         equ	838	;# 
 11006   000347                     CCP2CAP         equ	839	;# 
 11007   000348                     CCPR3           equ	840	;# 
 11008   000348                     CCPR3L          equ	840	;# 
 11009   000349                     CCPR3H          equ	841	;# 
 11010   00034A                     CCP3CON         equ	842	;# 
 11011   00034B                     CCP3CAP         equ	843	;# 
 11012   00034C                     CCPTMRS0        equ	844	;# 
 11013   00034F                     CRCDATA         equ	847	;# 
 11014   00034F                     CRCDATL         equ	847	;# 
 11015   000350                     CRCDATH         equ	848	;# 
 11016   000351                     CRCACC          equ	849	;# 
 11017   000351                     CRCACCL         equ	849	;# 
 11018   000352                     CRCACCH         equ	850	;# 
 11019   000353                     CRCSHFT         equ	851	;# 
 11020   000353                     CRCSHIFTL       equ	851	;# 
 11021   000354                     CRCSHIFTH       equ	852	;# 
 11022   000355                     CRCXOR          equ	853	;# 
 11023   000355                     CRCXORL         equ	853	;# 
 11024   000356                     CRCXORH         equ	854	;# 
 11025   000357                     CRCCON0         equ	855	;# 
 11026   000358                     CRCCON1         equ	856	;# 
 11027   00035A                     SCANLADR        equ	858	;# 
 11028   00035A                     SCANLADRL       equ	858	;# 
 11029   00035B                     SCANLADRH       equ	859	;# 
 11030   00035C                     SCANLADRU       equ	860	;# 
 11031   00035D                     SCANHADR        equ	861	;# 
 11032   00035D                     SCANHADRL       equ	861	;# 
 11033   00035E                     SCANHADRH       equ	862	;# 
 11034   00035F                     SCANHADRU       equ	863	;# 
 11035   000360                     SCANCON0        equ	864	;# 
 11036   000361                     SCANTRIG        equ	865	;# 
 11037   000362                     IPR0            equ	866	;# 
 11038   000363                     IPR1            equ	867	;# 
 11039   000364                     IPR2            equ	868	;# 
 11040   000365                     IPR3            equ	869	;# 
 11041   000366                     IPR4            equ	870	;# 
 11042   000367                     IPR5            equ	871	;# 
 11043   000368                     IPR6            equ	872	;# 
 11044   000369                     IPR7            equ	873	;# 
 11045   00036A                     IPR8            equ	874	;# 
 11046   00036B                     IPR9            equ	875	;# 
 11047   00036C                     IPR10           equ	876	;# 
 11048   00036D                     IPR11           equ	877	;# 
 11049   00036E                     IPR12           equ	878	;# 
 11050   00036F                     IPR13           equ	879	;# 
 11051   000370                     IPR14           equ	880	;# 
 11052   000371                     IPR15           equ	881	;# 
 11053   000373                     STATUS_CSHAD    equ	883	;# 
 11054   000374                     WREG_CSHAD      equ	884	;# 
 11055   000375                     BSR_CSHAD       equ	885	;# 
 11056   000376                     SHADCON         equ	886	;# 
 11057   000377                     STATUS_SHAD     equ	887	;# 
 11058   000378                     WREG_SHAD       equ	888	;# 
 11059   000379                     BSR_SHAD        equ	889	;# 
 11060   00037A                     PCLATH_SHAD     equ	890	;# 
 11061   00037B                     PCLATU_SHAD     equ	891	;# 
 11062   00037C                     FSR0SH          equ	892	;# 
 11063   00037C                     FSR0L_SHAD      equ	892	;# 
 11064   00037D                     FSR0H_SHAD      equ	893	;# 
 11065   00037E                     FSR1SH          equ	894	;# 
 11066   00037E                     FSR1L_SHAD      equ	894	;# 
 11067   00037F                     FSR1H_SHAD      equ	895	;# 
 11068   000380                     FSR2SH          equ	896	;# 
 11069   000380                     FSR2L_SHAD      equ	896	;# 
 11070   000381                     FSR2H_SHAD      equ	897	;# 
 11071   000382                     PRODSH          equ	898	;# 
 11072   000382                     PRODL_SHAD      equ	898	;# 
 11073   000383                     PRODH_SHAD      equ	899	;# 
 11074   0003BC                     CWG1CLK         equ	956	;# 
 11075   0003BC                     CWG1CLKCON      equ	956	;# 
 11076   0003BD                     CWG1ISM         equ	957	;# 
 11077   0003BD                     CWG1DAT         equ	957	;# 
 11078   0003BE                     CWG1DBR         equ	958	;# 
 11079   0003BF                     CWG1DBF         equ	959	;# 
 11080   0003C0                     CWG1CON0        equ	960	;# 
 11081   0003C1                     CWG1CON1        equ	961	;# 
 11082   0003C2                     CWG1AS0         equ	962	;# 
 11083   0003C3                     CWG1AS1         equ	963	;# 
 11084   0003C4                     CWG1STR         equ	964	;# 
 11085   0003C5                     CWG2CLK         equ	965	;# 
 11086   0003C5                     CWG2CLKCON      equ	965	;# 
 11087   0003C6                     CWG2ISM         equ	966	;# 
 11088   0003C6                     CWG2DAT         equ	966	;# 
 11089   0003C7                     CWG2DBR         equ	967	;# 
 11090   0003C8                     CWG2DBF         equ	968	;# 
 11091   0003C9                     CWG2CON0        equ	969	;# 
 11092   0003CA                     CWG2CON1        equ	970	;# 
 11093   0003CB                     CWG2AS0         equ	971	;# 
 11094   0003CC                     CWG2AS1         equ	972	;# 
 11095   0003CD                     CWG2STR         equ	973	;# 
 11096   0003CE                     CWG3CLK         equ	974	;# 
 11097   0003CE                     CWG3CLKCON      equ	974	;# 
 11098   0003CF                     CWG3ISM         equ	975	;# 
 11099   0003CF                     CWG3DAT         equ	975	;# 
 11100   0003D0                     CWG3DBR         equ	976	;# 
 11101   0003D1                     CWG3DBF         equ	977	;# 
 11102   0003D2                     CWG3CON0        equ	978	;# 
 11103   0003D3                     CWG3CON1        equ	979	;# 
 11104   0003D4                     CWG3AS0         equ	980	;# 
 11105   0003D5                     CWG3AS1         equ	981	;# 
 11106   0003D6                     CWG3STR         equ	982	;# 
 11107   0003D7                     FVRCON          equ	983	;# 
 11108   0003D8                     ADCPCON         equ	984	;# 
 11109   0003D8                     ADCP            equ	984	;# 
 11110   0003D9                     ADLTH           equ	985	;# 
 11111   0003D9                     ADLTHL          equ	985	;# 
 11112   0003DA                     ADLTHH          equ	986	;# 
 11113   0003DB                     ADUTH           equ	987	;# 
 11114   0003DB                     ADUTHL          equ	987	;# 
 11115   0003DC                     ADUTHH          equ	988	;# 
 11116   0003DD                     ADERR           equ	989	;# 
 11117   0003DD                     ADERRL          equ	989	;# 
 11118   0003DE                     ADERRH          equ	990	;# 
 11119   0003DF                     ADSTPT          equ	991	;# 
 11120   0003DF                     ADSTPTL         equ	991	;# 
 11121   0003E0                     ADSTPTH         equ	992	;# 
 11122   0003E1                     ADFLTR          equ	993	;# 
 11123   0003E1                     ADFLTRL         equ	993	;# 
 11124   0003E2                     ADFLTRH         equ	994	;# 
 11125   0003E3                     ADACC           equ	995	;# 
 11126   0003E3                     ADACCL          equ	995	;# 
 11127   0003E4                     ADACCH          equ	996	;# 
 11128   0003E5                     ADACCU          equ	997	;# 
 11129   0003E6                     ADCNT           equ	998	;# 
 11130   0003E7                     ADRPT           equ	999	;# 
 11131   0003E8                     ADPREV          equ	1000	;# 
 11132   0003E8                     ADPREVL         equ	1000	;# 
 11133   0003E9                     ADPREVH         equ	1001	;# 
 11134   0003EA                     ADRES           equ	1002	;# 
 11135   0003EA                     ADRESL          equ	1002	;# 
 11136   0003EB                     ADRESH          equ	1003	;# 
 11137   0003EC                     ADPCH           equ	1004	;# 
 11138   0003EE                     ADACQ           equ	1006	;# 
 11139   0003EE                     ADACQL          equ	1006	;# 
 11140   0003EF                     ADACQH          equ	1007	;# 
 11141   0003F0                     ADCAP           equ	1008	;# 
 11142   0003F1                     ADPRE           equ	1009	;# 
 11143   0003F1                     ADPREL          equ	1009	;# 
 11144   0003F2                     ADPREH          equ	1010	;# 
 11145   0003F3                     ADCON0          equ	1011	;# 
 11146   0003F4                     ADCON1          equ	1012	;# 
 11147   0003F5                     ADCON2          equ	1013	;# 
 11148   0003F6                     ADCON3          equ	1014	;# 
 11149   0003F7                     ADSTAT          equ	1015	;# 
 11150   0003F8                     ADREF           equ	1016	;# 
 11151   0003F9                     ADACT           equ	1017	;# 
 11152   0003FA                     ADCLK           equ	1018	;# 
 11153   000400                     ANSELA          equ	1024	;# 
 11154   000401                     WPUA            equ	1025	;# 
 11155   000402                     ODCONA          equ	1026	;# 
 11156   000403                     SLRCONA         equ	1027	;# 
 11157   000404                     INLVLA          equ	1028	;# 
 11158   000405                     IOCAP           equ	1029	;# 
 11159   000406                     IOCAN           equ	1030	;# 
 11160   000407                     IOCAF           equ	1031	;# 
 11161   000408                     ANSELB          equ	1032	;# 
 11162   000409                     WPUB            equ	1033	;# 
 11163   00040A                     ODCONB          equ	1034	;# 
 11164   00040B                     SLRCONB         equ	1035	;# 
 11165   00040C                     INLVLB          equ	1036	;# 
 11166   00040D                     IOCBP           equ	1037	;# 
 11167   00040E                     IOCBN           equ	1038	;# 
 11168   00040F                     IOCBF           equ	1039	;# 
 11169   000410                     ANSELC          equ	1040	;# 
 11170   000411                     WPUC            equ	1041	;# 
 11171   000412                     ODCONC          equ	1042	;# 
 11172   000413                     SLRCONC         equ	1043	;# 
 11173   000414                     INLVLC          equ	1044	;# 
 11174   000415                     IOCCP           equ	1045	;# 
 11175   000416                     IOCCN           equ	1046	;# 
 11176   000417                     IOCCF           equ	1047	;# 
 11177   000418                     ANSELD          equ	1048	;# 
 11178   000419                     WPUD            equ	1049	;# 
 11179   00041A                     ODCOND          equ	1050	;# 
 11180   00041B                     SLRCOND         equ	1051	;# 
 11181   00041C                     INLVLD          equ	1052	;# 
 11182   000420                     ANSELE          equ	1056	;# 
 11183   000421                     WPUE            equ	1057	;# 
 11184   000422                     ODCONE          equ	1058	;# 
 11185   000423                     SLRCONE         equ	1059	;# 
 11186   000424                     INLVLE          equ	1060	;# 
 11187   000425                     IOCEP           equ	1061	;# 
 11188   000426                     IOCEN           equ	1062	;# 
 11189   000427                     IOCEF           equ	1063	;# 
 11190   000428                     ANSELF          equ	1064	;# 
 11191   000429                     WPUF            equ	1065	;# 
 11192   00042A                     ODCONF          equ	1066	;# 
 11193   00042B                     SLRCONF         equ	1067	;# 
 11194   00042C                     INLVLF          equ	1068	;# 
 11195   000440                     NCO1ACC         equ	1088	;# 
 11196   000440                     NCO1ACCL        equ	1088	;# 
 11197   000441                     NCO1ACCH        equ	1089	;# 
 11198   000442                     NCO1ACCU        equ	1090	;# 
 11199   000443                     NCO1INC         equ	1091	;# 
 11200   000443                     NCO1INCL        equ	1091	;# 
 11201   000444                     NCO1INCH        equ	1092	;# 
 11202   000445                     NCO1INCU        equ	1093	;# 
 11203   000446                     NCO1CON         equ	1094	;# 
 11204   000447                     NCO1CLK         equ	1095	;# 
 11205   000448                     NCO2ACC         equ	1096	;# 
 11206   000448                     NCO2ACCL        equ	1096	;# 
 11207   000449                     NCO2ACCH        equ	1097	;# 
 11208   00044A                     NCO2ACCU        equ	1098	;# 
 11209   00044B                     NCO2INC         equ	1099	;# 
 11210   00044B                     NCO2INCL        equ	1099	;# 
 11211   00044C                     NCO2INCH        equ	1100	;# 
 11212   00044D                     NCO2INCU        equ	1101	;# 
 11213   00044E                     NCO2CON         equ	1102	;# 
 11214   00044F                     NCO2CLK         equ	1103	;# 
 11215   000450                     NCO3ACC         equ	1104	;# 
 11216   000450                     NCO3ACCL        equ	1104	;# 
 11217   000451                     NCO3ACCH        equ	1105	;# 
 11218   000452                     NCO3ACCU        equ	1106	;# 
 11219   000453                     NCO3INC         equ	1107	;# 
 11220   000453                     NCO3INCL        equ	1107	;# 
 11221   000454                     NCO3INCH        equ	1108	;# 
 11222   000455                     NCO3INCU        equ	1109	;# 
 11223   000456                     NCO3CON         equ	1110	;# 
 11224   000457                     NCO3CLK         equ	1111	;# 
 11225   000459                     IVTLOCK         equ	1113	;# 
 11226   00045A                     IVTAD           equ	1114	;# 
 11227   00045A                     IVTADL          equ	1114	;# 
 11228   00045B                     IVTADH          equ	1115	;# 
 11229   00045C                     IVTADU          equ	1116	;# 
 11230   00045D                     IVTBASE         equ	1117	;# 
 11231   00045D                     IVTBASEL        equ	1117	;# 
 11232   00045E                     IVTBASEH        equ	1118	;# 
 11233   00045F                     IVTBASEU        equ	1119	;# 
 11234   000460                     PWM1ERS         equ	1120	;# 
 11235   000461                     PWM1CLK         equ	1121	;# 
 11236   000462                     PWM1LDS         equ	1122	;# 
 11237   000463                     PWM1PR          equ	1123	;# 
 11238   000463                     PWM1PRL         equ	1123	;# 
 11239   000464                     PWM1PRH         equ	1124	;# 
 11240   000465                     PWM1CPRE        equ	1125	;# 
 11241   000466                     PWM1PIPOS       equ	1126	;# 
 11242   000467                     PWM1GIR         equ	1127	;# 
 11243   000468                     PWM1GIE         equ	1128	;# 
 11244   000469                     PWM1CON         equ	1129	;# 
 11245   00046A                     PWM1S1CFG       equ	1130	;# 
 11246   00046B                     PWM1S1P1        equ	1131	;# 
 11247   00046B                     PWM1S1P1L       equ	1131	;# 
 11248   00046C                     PWM1S1P1H       equ	1132	;# 
 11249   00046D                     PWM1S1P2        equ	1133	;# 
 11250   00046D                     PWM1S1P2L       equ	1133	;# 
 11251   00046E                     PWM1S1P2H       equ	1134	;# 
 11252   00046F                     PWM2ERS         equ	1135	;# 
 11253   000470                     PWM2CLK         equ	1136	;# 
 11254   000471                     PWM2LDS         equ	1137	;# 
 11255   000472                     PWM2PR          equ	1138	;# 
 11256   000472                     PWM2PRL         equ	1138	;# 
 11257   000473                     PWM2PRH         equ	1139	;# 
 11258   000474                     PWM2CPRE        equ	1140	;# 
 11259   000475                     PWM2PIPOS       equ	1141	;# 
 11260   000476                     PWM2GIR         equ	1142	;# 
 11261   000477                     PWM2GIE         equ	1143	;# 
 11262   000478                     PWM2CON         equ	1144	;# 
 11263   000479                     PWM2S1CFG       equ	1145	;# 
 11264   00047A                     PWM2S1P1        equ	1146	;# 
 11265   00047A                     PWM2S1P1L       equ	1146	;# 
 11266   00047B                     PWM2S1P1H       equ	1147	;# 
 11267   00047C                     PWM2S1P2        equ	1148	;# 
 11268   00047C                     PWM2S1P2L       equ	1148	;# 
 11269   00047D                     PWM2S1P2H       equ	1149	;# 
 11270   00047E                     PWM3ERS         equ	1150	;# 
 11271   00047F                     PWM3CLK         equ	1151	;# 
 11272   000480                     PWM3LDS         equ	1152	;# 
 11273   000481                     PWM3PR          equ	1153	;# 
 11274   000481                     PWM3PRL         equ	1153	;# 
 11275   000482                     PWM3PRH         equ	1154	;# 
 11276   000483                     PWM3CPRE        equ	1155	;# 
 11277   000484                     PWM3PIPOS       equ	1156	;# 
 11278   000485                     PWM3GIR         equ	1157	;# 
 11279   000486                     PWM3GIE         equ	1158	;# 
 11280   000487                     PWM3CON         equ	1159	;# 
 11281   000488                     PWM3S1CFG       equ	1160	;# 
 11282   000489                     PWM3S1P1        equ	1161	;# 
 11283   000489                     PWM3S1P1L       equ	1161	;# 
 11284   00048A                     PWM3S1P1H       equ	1162	;# 
 11285   00048B                     PWM3S1P2        equ	1163	;# 
 11286   00048B                     PWM3S1P2L       equ	1163	;# 
 11287   00048C                     PWM3S1P2H       equ	1164	;# 
 11288   00049C                     PWMLOAD         equ	1180	;# 
 11289   00049D                     PWMEN           equ	1181	;# 
 11290   00049E                     PIE0            equ	1182	;# 
 11291   00049F                     PIE1            equ	1183	;# 
 11292   0004A0                     PIE2            equ	1184	;# 
 11293   0004A1                     PIE3            equ	1185	;# 
 11294   0004A2                     PIE4            equ	1186	;# 
 11295   0004A3                     PIE5            equ	1187	;# 
 11296   0004A4                     PIE6            equ	1188	;# 
 11297   0004A5                     PIE7            equ	1189	;# 
 11298   0004A6                     PIE8            equ	1190	;# 
 11299   0004A7                     PIE9            equ	1191	;# 
 11300   0004A8                     PIE10           equ	1192	;# 
 11301   0004A9                     PIE11           equ	1193	;# 
 11302   0004AA                     PIE12           equ	1194	;# 
 11303   0004AB                     PIE13           equ	1195	;# 
 11304   0004AC                     PIE14           equ	1196	;# 
 11305   0004AD                     PIE15           equ	1197	;# 
 11306   0004AE                     PIR0            equ	1198	;# 
 11307   0004AF                     PIR1            equ	1199	;# 
 11308   0004B0                     PIR2            equ	1200	;# 
 11309   0004B1                     PIR3            equ	1201	;# 
 11310   0004B2                     PIR4            equ	1202	;# 
 11311   0004B3                     PIR5            equ	1203	;# 
 11312   0004B4                     PIR6            equ	1204	;# 
 11313   0004B5                     PIR7            equ	1205	;# 
 11314   0004B6                     PIR8            equ	1206	;# 
 11315   0004B7                     PIR9            equ	1207	;# 
 11316   0004B8                     PIR10           equ	1208	;# 
 11317   0004B9                     PIR11           equ	1209	;# 
 11318   0004BA                     PIR12           equ	1210	;# 
 11319   0004BB                     PIR13           equ	1211	;# 
 11320   0004BC                     PIR14           equ	1212	;# 
 11321   0004BD                     PIR15           equ	1213	;# 
 11322   0004BE                     LATA            equ	1214	;# 
 11323   0004BF                     LATB            equ	1215	;# 
 11324   0004C0                     LATC            equ	1216	;# 
 11325   0004C1                     LATD            equ	1217	;# 
 11326   0004C2                     LATE            equ	1218	;# 
 11327   0004C3                     LATF            equ	1219	;# 
 11328   0004C6                     TRISA           equ	1222	;# 
 11329   0004C7                     TRISB           equ	1223	;# 
 11330   0004C8                     TRISC           equ	1224	;# 
 11331   0004C9                     TRISD           equ	1225	;# 
 11332   0004CA                     TRISE           equ	1226	;# 
 11333   0004CB                     TRISF           equ	1227	;# 
 11334   0004CE                     PORTA           equ	1230	;# 
 11335   0004CF                     PORTB           equ	1231	;# 
 11336   0004D0                     PORTC           equ	1232	;# 
 11337   0004D1                     PORTD           equ	1233	;# 
 11338   0004D2                     PORTE           equ	1234	;# 
 11339   0004D3                     PORTF           equ	1235	;# 
 11340   0004D6                     INTCON0         equ	1238	;# 
 11341   0004D7                     INTCON1         equ	1239	;# 
 11342   0004D8                     STATUS          equ	1240	;# 
 11343   0004D9                     FSR2            equ	1241	;# 
 11344   0004D9                     FSR2L           equ	1241	;# 
 11345   0004DA                     FSR2H           equ	1242	;# 
 11346   0004DB                     PLUSW2          equ	1243	;# 
 11347   0004DC                     PREINC2         equ	1244	;# 
 11348   0004DD                     POSTDEC2        equ	1245	;# 
 11349   0004DE                     POSTINC2        equ	1246	;# 
 11350   0004DF                     INDF2           equ	1247	;# 
 11351   0004E0                     BSR             equ	1248	;# 
 11352   0004E1                     FSR1            equ	1249	;# 
 11353   0004E1                     FSR1L           equ	1249	;# 
 11354   0004E2                     FSR1H           equ	1250	;# 
 11355   0004E3                     PLUSW1          equ	1251	;# 
 11356   0004E4                     PREINC1         equ	1252	;# 
 11357   0004E5                     POSTDEC1        equ	1253	;# 
 11358   0004E6                     POSTINC1        equ	1254	;# 
 11359   0004E7                     INDF1           equ	1255	;# 
 11360   0004E8                     WREG            equ	1256	;# 
 11361   0004E9                     FSR0            equ	1257	;# 
 11362   0004E9                     FSR0L           equ	1257	;# 
 11363   0004EA                     FSR0H           equ	1258	;# 
 11364   0004EB                     PLUSW0          equ	1259	;# 
 11365   0004EC                     PREINC0         equ	1260	;# 
 11366   0004ED                     POSTDEC0        equ	1261	;# 
 11367   0004EE                     POSTINC0        equ	1262	;# 
 11368   0004EF                     INDF0           equ	1263	;# 
 11369   0004F0                     PCON0           equ	1264	;# 
 11370   0004F1                     PCON1           equ	1265	;# 
 11371   0004F2                     CPUDOZE         equ	1266	;# 
 11372   0004F3                     PROD            equ	1267	;# 
 11373   0004F3                     PRODL           equ	1267	;# 
 11374   0004F4                     PRODH           equ	1268	;# 
 11375   0004F5                     TABLAT          equ	1269	;# 
 11376   0004F6                     TBLPTR          equ	1270	;# 
 11377   0004F6                     TBLPTRL         equ	1270	;# 
 11378   0004F7                     TBLPTRH         equ	1271	;# 
 11379   0004F8                     TBLPTRU         equ	1272	;# 
 11380   0004F9                     PCLAT           equ	1273	;# 
 11381   0004F9                     PCL             equ	1273	;# 
 11382   0004FA                     PCLATH          equ	1274	;# 
 11383   0004FB                     PCLATU          equ	1275	;# 
 11384   0004FC                     STKPTR          equ	1276	;# 
 11385   0004FD                     TOS             equ	1277	;# 
 11386   0004FD                     TOSL            equ	1277	;# 
 11387   0004FE                     TOSH            equ	1278	;# 
 11388   0004FF                     TOSU            equ	1279	;# 
 11389   000039                     CLKRCON         equ	57	;# 
 11390   00003A                     CLKRCLK         equ	58	;# 
 11391   000040                     NVMCON0         equ	64	;# 
 11392   000041                     NVMCON1         equ	65	;# 
 11393   000042                     NVMLOCK         equ	66	;# 
 11394   000043                     NVMADR          equ	67	;# 
 11395   000043                     NVMADRL         equ	67	;# 
 11396   000044                     NVMADRH         equ	68	;# 
 11397   000045                     NVMADRU         equ	69	;# 
 11398   000046                     NVMDAT          equ	70	;# 
 11399   000046                     NVMDATL         equ	70	;# 
 11400   000047                     NVMDATH         equ	71	;# 
 11401   000048                     VREGCON         equ	72	;# 
 11402   000049                     BORCON          equ	73	;# 
 11403   00004A                     HLVDCON0        equ	74	;# 
 11404   00004B                     HLVDCON1        equ	75	;# 
 11405   00004C                     ZCDCON          equ	76	;# 
 11406   000060                     PMD0            equ	96	;# 
 11407   000061                     PMD1            equ	97	;# 
 11408   000063                     PMD3            equ	99	;# 
 11409   000064                     PMD4            equ	100	;# 
 11410   000065                     PMD5            equ	101	;# 
 11411   000066                     PMD6            equ	102	;# 
 11412   000067                     PMD7            equ	103	;# 
 11413   000068                     PMD8            equ	104	;# 
 11414   00006A                     MD1CON0         equ	106	;# 
 11415   00006B                     MD1CON1         equ	107	;# 
 11416   00006C                     MD1SRC          equ	108	;# 
 11417   00006D                     MD1CARL         equ	109	;# 
 11418   00006E                     MD1CARH         equ	110	;# 
 11419   00006F                     CMOUT           equ	111	;# 
 11420   000070                     CM1CON0         equ	112	;# 
 11421   000071                     CM1CON1         equ	113	;# 
 11422   000072                     CM1NCH          equ	114	;# 
 11423   000073                     CM1PCH          equ	115	;# 
 11424   000074                     CM2CON0         equ	116	;# 
 11425   000075                     CM2CON1         equ	117	;# 
 11426   000076                     CM2NCH          equ	118	;# 
 11427   000077                     CM2PCH          equ	119	;# 
 11428   000078                     WDTCON0         equ	120	;# 
 11429   000079                     WDTCON1         equ	121	;# 
 11430   00007A                     WDTPS           equ	122	;# 
 11431   00007A                     WDTPSL          equ	122	;# 
 11432   00007B                     WDTPSH          equ	123	;# 
 11433   00007C                     WDTTMR          equ	124	;# 
 11434   00007D                     DAC1DAT         equ	125	;# 
 11435   00007D                     DAC1DATL        equ	125	;# 
 11436   00007F                     DAC1CON         equ	127	;# 
 11437   000080                     SPI1RXB         equ	128	;# 
 11438   000081                     SPI1TXB         equ	129	;# 
 11439   000082                     SPI1TCNT        equ	130	;# 
 11440   000082                     SPI1TCNTL       equ	130	;# 
 11441   000083                     SPI1TCNTH       equ	131	;# 
 11442   000084                     SPI1CON0        equ	132	;# 
 11443   000085                     SPI1CON1        equ	133	;# 
 11444   000086                     SPI1CON2        equ	134	;# 
 11445   000087                     SPI1STATUS      equ	135	;# 
 11446   000088                     SPI1TWIDTH      equ	136	;# 
 11447   000089                     SPI1BAUD        equ	137	;# 
 11448   00008A                     SPI1INTF        equ	138	;# 
 11449   00008B                     SPI1INTE        equ	139	;# 
 11450   00008C                     SPI1CLK         equ	140	;# 
 11451   00008D                     SPI2RXB         equ	141	;# 
 11452   00008E                     SPI2TXB         equ	142	;# 
 11453   00008F                     SPI2TCNT        equ	143	;# 
 11454   00008F                     SPI2TCNTL       equ	143	;# 
 11455   000090                     SPI2TCNTH       equ	144	;# 
 11456   000091                     SPI2CON0        equ	145	;# 
 11457   000092                     SPI2CON1        equ	146	;# 
 11458   000093                     SPI2CON2        equ	147	;# 
 11459   000094                     SPI2STATUS      equ	148	;# 
 11460   000095                     SPI2TWIDTH      equ	149	;# 
 11461   000096                     SPI2BAUD        equ	150	;# 
 11462   000097                     SPI2INTF        equ	151	;# 
 11463   000098                     SPI2INTE        equ	152	;# 
 11464   000099                     SPI2CLK         equ	153	;# 
 11465   0000AC                     ACTCON          equ	172	;# 
 11466   0000AD                     OSCCON1         equ	173	;# 
 11467   0000AE                     OSCCON2         equ	174	;# 
 11468   0000AF                     OSCCON3         equ	175	;# 
 11469   0000B0                     OSCTUNE         equ	176	;# 
 11470   0000B1                     OSCFRQ          equ	177	;# 
 11471   0000B1                     OSCFREQ         equ	177	;# 
 11472   0000B2                     OSCSTAT         equ	178	;# 
 11473   0000B2                     OSCSTAT1        equ	178	;# 
 11474   0000B3                     OSCEN           equ	179	;# 
 11475   0000B4                     PRLOCK          equ	180	;# 
 11476   0000B5                     SCANPR          equ	181	;# 
 11477   0000B6                     DMA1PR          equ	182	;# 
 11478   0000B7                     DMA2PR          equ	183	;# 
 11479   0000B8                     DMA3PR          equ	184	;# 
 11480   0000B9                     DMA4PR          equ	185	;# 
 11481   0000BA                     DMA5PR          equ	186	;# 
 11482   0000BB                     DMA6PR          equ	187	;# 
 11483   0000BE                     MAINPR          equ	190	;# 
 11484   0000BF                     ISRPR           equ	191	;# 
 11485   0000D4                     CLCDATA         equ	212	;# 
 11486   0000D5                     CLCSELECT       equ	213	;# 
 11487   0000D6                     CLCnCON         equ	214	;# 
 11488   0000D7                     CLCnPOL         equ	215	;# 
 11489   0000D8                     CLCnSEL0        equ	216	;# 
 11490   0000D9                     CLCnSEL1        equ	217	;# 
 11491   0000DA                     CLCnSEL2        equ	218	;# 
 11492   0000DB                     CLCnSEL3        equ	219	;# 
 11493   0000DC                     CLCnGLS0        equ	220	;# 
 11494   0000DD                     CLCnGLS1        equ	221	;# 
 11495   0000DE                     CLCnGLS2        equ	222	;# 
 11496   0000DF                     CLCnGLS3        equ	223	;# 
 11497   0000E8                     DMASELECT       equ	232	;# 
 11498   0000E9                     DMAnBUF         equ	233	;# 
 11499   0000EA                     DMAnDCNT        equ	234	;# 
 11500   0000EA                     DMAnDCNTL       equ	234	;# 
 11501   0000EB                     DMAnDCNTH       equ	235	;# 
 11502   0000EC                     DMAnDPTR        equ	236	;# 
 11503   0000EC                     DMAnDPTRL       equ	236	;# 
 11504   0000ED                     DMAnDPTRH       equ	237	;# 
 11505   0000EE                     DMAnDSZ         equ	238	;# 
 11506   0000EE                     DMAnDSZL        equ	238	;# 
 11507   0000EF                     DMAnDSZH        equ	239	;# 
 11508   0000F0                     DMAnDSA         equ	240	;# 
 11509   0000F0                     DMAnDSAL        equ	240	;# 
 11510   0000F1                     DMAnDSAH        equ	241	;# 
 11511   0000F2                     DMAnSCNT        equ	242	;# 
 11512   0000F2                     DMAnSCNTL       equ	242	;# 
 11513   0000F3                     DMAnSCNTH       equ	243	;# 
 11514   0000F4                     DMAnSPTR        equ	244	;# 
 11515   0000F4                     DMAnSPTRL       equ	244	;# 
 11516   0000F5                     DMAnSPTRH       equ	245	;# 
 11517   0000F6                     DMAnSPTRU       equ	246	;# 
 11518   0000F7                     DMAnSSZ         equ	247	;# 
 11519   0000F7                     DMAnSSZL        equ	247	;# 
 11520   0000F8                     DMAnSSZH        equ	248	;# 
 11521   0000F9                     DMAnSSA         equ	249	;# 
 11522   0000F9                     DMAnSSAL        equ	249	;# 
 11523   0000FA                     DMAnSSAH        equ	250	;# 
 11524   0000FB                     DMAnSSAU        equ	251	;# 
 11525   0000FC                     DMAnCON0        equ	252	;# 
 11526   0000FD                     DMAnCON1        equ	253	;# 
 11527   0000FE                     DMAnAIRQ        equ	254	;# 
 11528   0000FF                     DMAnSIRQ        equ	255	;# 
 11529   000200                     PPSLOCK         equ	512	;# 
 11530   000201                     RA0PPS          equ	513	;# 
 11531   000202                     RA1PPS          equ	514	;# 
 11532   000203                     RA2PPS          equ	515	;# 
 11533   000204                     RA3PPS          equ	516	;# 
 11534   000205                     RA4PPS          equ	517	;# 
 11535   000206                     RA5PPS          equ	518	;# 
 11536   000207                     RA6PPS          equ	519	;# 
 11537   000208                     RA7PPS          equ	520	;# 
 11538   000209                     RB0PPS          equ	521	;# 
 11539   00020A                     RB1PPS          equ	522	;# 
 11540   00020B                     RB2PPS          equ	523	;# 
 11541   00020C                     RB3PPS          equ	524	;# 
 11542   00020D                     RB4PPS          equ	525	;# 
 11543   00020E                     RB5PPS          equ	526	;# 
 11544   00020F                     RB6PPS          equ	527	;# 
 11545   000210                     RB7PPS          equ	528	;# 
 11546   000211                     RC0PPS          equ	529	;# 
 11547   000212                     RC1PPS          equ	530	;# 
 11548   000213                     RC2PPS          equ	531	;# 
 11549   000214                     RC3PPS          equ	532	;# 
 11550   000215                     RC4PPS          equ	533	;# 
 11551   000216                     RC5PPS          equ	534	;# 
 11552   000217                     RC6PPS          equ	535	;# 
 11553   000218                     RC7PPS          equ	536	;# 
 11554   000219                     RD0PPS          equ	537	;# 
 11555   00021A                     RD1PPS          equ	538	;# 
 11556   00021B                     RD2PPS          equ	539	;# 
 11557   00021C                     RD3PPS          equ	540	;# 
 11558   00021D                     RD4PPS          equ	541	;# 
 11559   00021E                     RD5PPS          equ	542	;# 
 11560   00021F                     RD6PPS          equ	543	;# 
 11561   000220                     RD7PPS          equ	544	;# 
 11562   000221                     RE0PPS          equ	545	;# 
 11563   000222                     RE1PPS          equ	546	;# 
 11564   000223                     RE2PPS          equ	547	;# 
 11565   000229                     RF0PPS          equ	553	;# 
 11566   00022A                     RF1PPS          equ	554	;# 
 11567   00022B                     RF2PPS          equ	555	;# 
 11568   00022C                     RF3PPS          equ	556	;# 
 11569   00022D                     RF4PPS          equ	557	;# 
 11570   00022E                     RF5PPS          equ	558	;# 
 11571   00022F                     RF6PPS          equ	559	;# 
 11572   000230                     RF7PPS          equ	560	;# 
 11573   00023E                     INT0PPS         equ	574	;# 
 11574   00023F                     INT1PPS         equ	575	;# 
 11575   000240                     INT2PPS         equ	576	;# 
 11576   000241                     T0CKIPPS        equ	577	;# 
 11577   000242                     T1CKIPPS        equ	578	;# 
 11578   000243                     T1GPPS          equ	579	;# 
 11579   000244                     T3CKIPPS        equ	580	;# 
 11580   000245                     T3GPPS          equ	581	;# 
 11581   000246                     T5CKIPPS        equ	582	;# 
 11582   000247                     T5GPPS          equ	583	;# 
 11583   000248                     T2INPPS         equ	584	;# 
 11584   000249                     T4INPPS         equ	585	;# 
 11585   00024A                     T6INPPS         equ	586	;# 
 11586   00024F                     CCP1PPS         equ	591	;# 
 11587   000250                     CCP2PPS         equ	592	;# 
 11588   000251                     CCP3PPS         equ	593	;# 
 11589   000253                     PWM1ERSPPS      equ	595	;# 
 11590   000254                     PWM2ERSPPS      equ	596	;# 
 11591   000255                     PWM3ERSPPS      equ	597	;# 
 11592   000257                     PWMIN0PPS       equ	599	;# 
 11593   000258                     PWMIN1PPS       equ	600	;# 
 11594   000259                     SMT1WINPPS      equ	601	;# 
 11595   00025A                     SMT1SIGPPS      equ	602	;# 
 11596   00025B                     CWG1PPS         equ	603	;# 
 11597   00025B                     CWG1INPPS       equ	603	;# 
 11598   00025C                     CWG2PPS         equ	604	;# 
 11599   00025C                     CWG2INPPS       equ	604	;# 
 11600   00025D                     CWG3PPS         equ	605	;# 
 11601   00025D                     CWG3INPPS       equ	605	;# 
 11602   00025E                     MD1CARLPPS      equ	606	;# 
 11603   00025E                     MDCARLPPS       equ	606	;# 
 11604   00025F                     MD1CARHPPS      equ	607	;# 
 11605   00025F                     MDCARHPPS       equ	607	;# 
 11606   000260                     MD1SRCPPS       equ	608	;# 
 11607   000260                     MDSRCPPS        equ	608	;# 
 11608   000261                     CLCIN0PPS       equ	609	;# 
 11609   000262                     CLCIN1PPS       equ	610	;# 
 11610   000263                     CLCIN2PPS       equ	611	;# 
 11611   000264                     CLCIN3PPS       equ	612	;# 
 11612   000265                     CLCIN4PPS       equ	613	;# 
 11613   000266                     CLCIN5PPS       equ	614	;# 
 11614   000267                     CLCIN6PPS       equ	615	;# 
 11615   000268                     CLCIN7PPS       equ	616	;# 
 11616   000269                     ADACTPPS        equ	617	;# 
 11617   00026A                     SPI1SCKPPS      equ	618	;# 
 11618   00026B                     SPI1SDIPPS      equ	619	;# 
 11619   00026C                     SPI1SSPPS       equ	620	;# 
 11620   00026D                     SPI2SCKPPS      equ	621	;# 
 11621   00026E                     SPI2SDIPPS      equ	622	;# 
 11622   00026F                     SPI2SSPPS       equ	623	;# 
 11623   000270                     I2C1SDAPPS      equ	624	;# 
 11624   000271                     I2C1SCLPPS      equ	625	;# 
 11625   000272                     U1RXPPS         equ	626	;# 
 11626   000273                     U1CTSPPS        equ	627	;# 
 11627   000274                     U2RXPPS         equ	628	;# 
 11628   000275                     U2CTSPPS        equ	629	;# 
 11629   000276                     U3RXPPS         equ	630	;# 
 11630   000277                     U3CTSPPS        equ	631	;# 
 11631   000278                     U4RXPPS         equ	632	;# 
 11632   000279                     U4CTSPPS        equ	633	;# 
 11633   00027A                     U5RXPPS         equ	634	;# 
 11634   00027B                     U5CTSPPS        equ	635	;# 
 11635   000286                     RC4I2C          equ	646	;# 
 11636   000287                     RC3I2C          equ	647	;# 
 11637   000288                     RB2I2C          equ	648	;# 
 11638   000289                     RB1I2C          equ	649	;# 
 11639   00028B                     I2C1RXB         equ	651	;# 
 11640   00028C                     I2C1TXB         equ	652	;# 
 11641   00028D                     I2C1CNT         equ	653	;# 
 11642   00028E                     I2C1ADB0        equ	654	;# 
 11643   00028F                     I2C1ADB1        equ	655	;# 
 11644   000290                     I2C1ADR0        equ	656	;# 
 11645   000291                     I2C1ADR1        equ	657	;# 
 11646   000292                     I2C1ADR2        equ	658	;# 
 11647   000293                     I2C1ADR3        equ	659	;# 
 11648   000294                     I2C1CON0        equ	660	;# 
 11649   000295                     I2C1CON1        equ	661	;# 
 11650   000296                     I2C1CON2        equ	662	;# 
 11651   000297                     I2C1ERR         equ	663	;# 
 11652   000298                     I2C1STAT0       equ	664	;# 
 11653   000299                     I2C1STAT1       equ	665	;# 
 11654   00029A                     I2C1PIR         equ	666	;# 
 11655   00029B                     I2C1PIE         equ	667	;# 
 11656   00029C                     I2C1CLK         equ	668	;# 
 11657   00029D                     I2C1BTO         equ	669	;# 
 11658   0002A1                     U1RXB           equ	673	;# 
 11659   0002A1                     U1RXBL          equ	673	;# 
 11660   0002A2                     U1RXCHK         equ	674	;# 
 11661   0002A3                     U1TXB           equ	675	;# 
 11662   0002A3                     U1TXBL          equ	675	;# 
 11663   0002A4                     U1TXCHK         equ	676	;# 
 11664   0002A5                     U1P1            equ	677	;# 
 11665   0002A5                     U1P1L           equ	677	;# 
 11666   0002A6                     U1P1H           equ	678	;# 
 11667   0002A7                     U1P2            equ	679	;# 
 11668   0002A7                     U1P2L           equ	679	;# 
 11669   0002A8                     U1P2H           equ	680	;# 
 11670   0002A9                     U1P3            equ	681	;# 
 11671   0002A9                     U1P3L           equ	681	;# 
 11672   0002AA                     U1P3H           equ	682	;# 
 11673   0002AB                     U1CON0          equ	683	;# 
 11674   0002AC                     U1CON1          equ	684	;# 
 11675   0002AD                     U1CON2          equ	685	;# 
 11676   0002AE                     U1BRG           equ	686	;# 
 11677   0002AE                     U1BRGL          equ	686	;# 
 11678   0002AF                     U1BRGH          equ	687	;# 
 11679   0002B0                     U1FIFO          equ	688	;# 
 11680   0002B1                     U1UIR           equ	689	;# 
 11681   0002B2                     U1ERRIR         equ	690	;# 
 11682   0002B3                     U1ERRIE         equ	691	;# 
 11683   0002B4                     U2RXB           equ	692	;# 
 11684   0002B4                     U2RXBL          equ	692	;# 
 11685   0002B6                     U2TXB           equ	694	;# 
 11686   0002B6                     U2TXBL          equ	694	;# 
 11687   0002B8                     U2P1            equ	696	;# 
 11688   0002B8                     U2P1L           equ	696	;# 
 11689   0002BA                     U2P2            equ	698	;# 
 11690   0002BA                     U2P2L           equ	698	;# 
 11691   0002BC                     U2P3            equ	700	;# 
 11692   0002BC                     U2P3L           equ	700	;# 
 11693   0002BE                     U2CON0          equ	702	;# 
 11694   0002BF                     U2CON1          equ	703	;# 
 11695   0002C0                     U2CON2          equ	704	;# 
 11696   0002C1                     U2BRG           equ	705	;# 
 11697   0002C1                     U2BRGL          equ	705	;# 
 11698   0002C2                     U2BRGH          equ	706	;# 
 11699   0002C3                     U2FIFO          equ	707	;# 
 11700   0002C4                     U2UIR           equ	708	;# 
 11701   0002C5                     U2ERRIR         equ	709	;# 
 11702   0002C6                     U2ERRIE         equ	710	;# 
 11703   0002C7                     U3RXB           equ	711	;# 
 11704   0002C7                     U3RXBL          equ	711	;# 
 11705   0002C9                     U3TXB           equ	713	;# 
 11706   0002C9                     U3TXBL          equ	713	;# 
 11707   0002CB                     U3P1            equ	715	;# 
 11708   0002CB                     U3P1L           equ	715	;# 
 11709   0002CD                     U3P2            equ	717	;# 
 11710   0002CD                     U3P2L           equ	717	;# 
 11711   0002CF                     U3P3            equ	719	;# 
 11712   0002CF                     U3P3L           equ	719	;# 
 11713   0002D1                     U3CON0          equ	721	;# 
 11714   0002D2                     U3CON1          equ	722	;# 
 11715   0002D3                     U3CON2          equ	723	;# 
 11716   0002D4                     U3BRG           equ	724	;# 
 11717   0002D4                     U3BRGL          equ	724	;# 
 11718   0002D5                     U3BRGH          equ	725	;# 
 11719   0002D6                     U3FIFO          equ	726	;# 
 11720   0002D7                     U3UIR           equ	727	;# 
 11721   0002D8                     U3ERRIR         equ	728	;# 
 11722   0002D9                     U3ERRIE         equ	729	;# 
 11723   0002DA                     U4RXB           equ	730	;# 
 11724   0002DA                     U4RXBL          equ	730	;# 
 11725   0002DC                     U4TXB           equ	732	;# 
 11726   0002DC                     U4TXBL          equ	732	;# 
 11727   0002DE                     U4P1            equ	734	;# 
 11728   0002DE                     U4P1L           equ	734	;# 
 11729   0002E0                     U4P2            equ	736	;# 
 11730   0002E0                     U4P2L           equ	736	;# 
 11731   0002E2                     U4P3            equ	738	;# 
 11732   0002E2                     U4P3L           equ	738	;# 
 11733   0002E4                     U4CON0          equ	740	;# 
 11734   0002E5                     U4CON1          equ	741	;# 
 11735   0002E6                     U4CON2          equ	742	;# 
 11736   0002E7                     U4BRG           equ	743	;# 
 11737   0002E7                     U4BRGL          equ	743	;# 
 11738   0002E8                     U4BRGH          equ	744	;# 
 11739   0002E9                     U4FIFO          equ	745	;# 
 11740   0002EA                     U4UIR           equ	746	;# 
 11741   0002EB                     U4ERRIR         equ	747	;# 
 11742   0002EC                     U4ERRIE         equ	748	;# 
 11743   0002ED                     U5RXB           equ	749	;# 
 11744   0002ED                     U5RXBL          equ	749	;# 
 11745   0002EF                     U5TXB           equ	751	;# 
 11746   0002EF                     U5TXBL          equ	751	;# 
 11747   0002F1                     U5P1            equ	753	;# 
 11748   0002F1                     U5P1L           equ	753	;# 
 11749   0002F3                     U5P2            equ	755	;# 
 11750   0002F3                     U5P2L           equ	755	;# 
 11751   0002F5                     U5P3            equ	757	;# 
 11752   0002F5                     U5P3L           equ	757	;# 
 11753   0002F7                     U5CON0          equ	759	;# 
 11754   0002F8                     U5CON1          equ	760	;# 
 11755   0002F9                     U5CON2          equ	761	;# 
 11756   0002FA                     U5BRG           equ	762	;# 
 11757   0002FA                     U5BRGL          equ	762	;# 
 11758   0002FB                     U5BRGH          equ	763	;# 
 11759   0002FC                     U5FIFO          equ	764	;# 
 11760   0002FD                     U5UIR           equ	765	;# 
 11761   0002FE                     U5ERRIR         equ	766	;# 
 11762   0002FF                     U5ERRIE         equ	767	;# 
 11763   000300                     SMT1TMR         equ	768	;# 
 11764   000300                     SMT1TMRL        equ	768	;# 
 11765   000301                     SMT1TMRH        equ	769	;# 
 11766   000302                     SMT1TMRU        equ	770	;# 
 11767   000303                     SMT1CPR         equ	771	;# 
 11768   000303                     SMT1CPRL        equ	771	;# 
 11769   000304                     SMT1CPRH        equ	772	;# 
 11770   000305                     SMT1CPRU        equ	773	;# 
 11771   000306                     SMT1CPW         equ	774	;# 
 11772   000306                     SMT1CPWL        equ	774	;# 
 11773   000307                     SMT1CPWH        equ	775	;# 
 11774   000308                     SMT1CPWU        equ	776	;# 
 11775   000309                     SMT1PR          equ	777	;# 
 11776   000309                     SMT1PRL         equ	777	;# 
 11777   00030A                     SMT1PRH         equ	778	;# 
 11778   00030B                     SMT1PRU         equ	779	;# 
 11779   00030C                     SMT1CON0        equ	780	;# 
 11780   00030D                     SMT1CON1        equ	781	;# 
 11781   00030E                     SMT1STAT        equ	782	;# 
 11782   00030F                     SMT1CLK         equ	783	;# 
 11783   000310                     SMT1SIG         equ	784	;# 
 11784   000311                     SMT1WIN         equ	785	;# 
 11785   000318                     TMR0L           equ	792	;# 
 11786   000318                     TMR0            equ	792	;# 
 11787   000319                     TMR0H           equ	793	;# 
 11788   000319                     PR0             equ	793	;# 
 11789   00031A                     T0CON0          equ	794	;# 
 11790   00031B                     T0CON1          equ	795	;# 
 11791   00031C                     TMR1            equ	796	;# 
 11792   00031C                     TMR1L           equ	796	;# 
 11793   00031D                     TMR1H           equ	797	;# 
 11794   00031E                     T1CON           equ	798	;# 
 11795   00031E                     TMR1CON         equ	798	;# 
 11796   00031F                     T1GCON          equ	799	;# 
 11797   00031F                     TMR1GCON        equ	799	;# 
 11798   000320                     T1GATE          equ	800	;# 
 11799   000320                     TMR1GATE        equ	800	;# 
 11800   000321                     T1CLK           equ	801	;# 
 11801   000321                     TMR1CLK         equ	801	;# 
 11802   000321                     PR1             equ	801	;# 
 11803   000322                     T2TMR           equ	802	;# 
 11804   000322                     TMR2            equ	802	;# 
 11805   000323                     T2PR            equ	803	;# 
 11806   000323                     PR2             equ	803	;# 
 11807   000324                     T2CON           equ	804	;# 
 11808   000325                     T2HLT           equ	805	;# 
 11809   000326                     T2CLKCON        equ	806	;# 
 11810   000326                     T2CLK           equ	806	;# 
 11811   000327                     T2RST           equ	807	;# 
 11812   000328                     TMR3            equ	808	;# 
 11813   000328                     TMR3L           equ	808	;# 
 11814   000329                     TMR3H           equ	809	;# 
 11815   00032A                     T3CON           equ	810	;# 
 11816   00032A                     TMR3CON         equ	810	;# 
 11817   00032B                     T3GCON          equ	811	;# 
 11818   00032B                     TMR3GCON        equ	811	;# 
 11819   00032C                     T3GATE          equ	812	;# 
 11820   00032C                     TMR3GATE        equ	812	;# 
 11821   00032D                     T3CLK           equ	813	;# 
 11822   00032D                     TMR3CLK         equ	813	;# 
 11823   00032D                     PR3             equ	813	;# 
 11824   00032E                     T4TMR           equ	814	;# 
 11825   00032E                     TMR4            equ	814	;# 
 11826   00032F                     T4PR            equ	815	;# 
 11827   00032F                     PR4             equ	815	;# 
 11828   000330                     T4CON           equ	816	;# 
 11829   000331                     T4HLT           equ	817	;# 
 11830   000332                     T4CLKCON        equ	818	;# 
 11831   000332                     T4CLK           equ	818	;# 
 11832   000333                     T4RST           equ	819	;# 
 11833   000334                     TMR5            equ	820	;# 
 11834   000334                     TMR5L           equ	820	;# 
 11835   000335                     TMR5H           equ	821	;# 
 11836   000336                     T5CON           equ	822	;# 
 11837   000336                     TMR5CON         equ	822	;# 
 11838   000337                     T5GCON          equ	823	;# 
 11839   000337                     TMR5GCON        equ	823	;# 
 11840   000338                     T5GATE          equ	824	;# 
 11841   000338                     TMR5GATE        equ	824	;# 
 11842   000339                     T5CLK           equ	825	;# 
 11843   000339                     TMR5CLK         equ	825	;# 
 11844   000339                     PR5             equ	825	;# 
 11845   00033A                     T6TMR           equ	826	;# 
 11846   00033A                     TMR6            equ	826	;# 
 11847   00033B                     T6PR            equ	827	;# 
 11848   00033B                     PR6             equ	827	;# 
 11849   00033C                     T6CON           equ	828	;# 
 11850   00033D                     T6HLT           equ	829	;# 
 11851   00033E                     T6CLKCON        equ	830	;# 
 11852   00033E                     T6CLK           equ	830	;# 
 11853   00033F                     T6RST           equ	831	;# 
 11854   000340                     CCPR1           equ	832	;# 
 11855   000340                     CCPR1L          equ	832	;# 
 11856   000341                     CCPR1H          equ	833	;# 
 11857   000342                     CCP1CON         equ	834	;# 
 11858   000343                     CCP1CAP         equ	835	;# 
 11859   000344                     CCPR2           equ	836	;# 
 11860   000344                     CCPR2L          equ	836	;# 
 11861   000345                     CCPR2H          equ	837	;# 
 11862   000346                     CCP2CON         equ	838	;# 
 11863   000347                     CCP2CAP         equ	839	;# 
 11864   000348                     CCPR3           equ	840	;# 
 11865   000348                     CCPR3L          equ	840	;# 
 11866   000349                     CCPR3H          equ	841	;# 
 11867   00034A                     CCP3CON         equ	842	;# 
 11868   00034B                     CCP3CAP         equ	843	;# 
 11869   00034C                     CCPTMRS0        equ	844	;# 
 11870   00034F                     CRCDATA         equ	847	;# 
 11871   00034F                     CRCDATL         equ	847	;# 
 11872   000350                     CRCDATH         equ	848	;# 
 11873   000351                     CRCACC          equ	849	;# 
 11874   000351                     CRCACCL         equ	849	;# 
 11875   000352                     CRCACCH         equ	850	;# 
 11876   000353                     CRCSHFT         equ	851	;# 
 11877   000353                     CRCSHIFTL       equ	851	;# 
 11878   000354                     CRCSHIFTH       equ	852	;# 
 11879   000355                     CRCXOR          equ	853	;# 
 11880   000355                     CRCXORL         equ	853	;# 
 11881   000356                     CRCXORH         equ	854	;# 
 11882   000357                     CRCCON0         equ	855	;# 
 11883   000358                     CRCCON1         equ	856	;# 
 11884   00035A                     SCANLADR        equ	858	;# 
 11885   00035A                     SCANLADRL       equ	858	;# 
 11886   00035B                     SCANLADRH       equ	859	;# 
 11887   00035C                     SCANLADRU       equ	860	;# 
 11888   00035D                     SCANHADR        equ	861	;# 
 11889   00035D                     SCANHADRL       equ	861	;# 
 11890   00035E                     SCANHADRH       equ	862	;# 
 11891   00035F                     SCANHADRU       equ	863	;# 
 11892   000360                     SCANCON0        equ	864	;# 
 11893   000361                     SCANTRIG        equ	865	;# 
 11894   000362                     IPR0            equ	866	;# 
 11895   000363                     IPR1            equ	867	;# 
 11896   000364                     IPR2            equ	868	;# 
 11897   000365                     IPR3            equ	869	;# 
 11898   000366                     IPR4            equ	870	;# 
 11899   000367                     IPR5            equ	871	;# 
 11900   000368                     IPR6            equ	872	;# 
 11901   000369                     IPR7            equ	873	;# 
 11902   00036A                     IPR8            equ	874	;# 
 11903   00036B                     IPR9            equ	875	;# 
 11904   00036C                     IPR10           equ	876	;# 
 11905   00036D                     IPR11           equ	877	;# 
 11906   00036E                     IPR12           equ	878	;# 
 11907   00036F                     IPR13           equ	879	;# 
 11908   000370                     IPR14           equ	880	;# 
 11909   000371                     IPR15           equ	881	;# 
 11910   000373                     STATUS_CSHAD    equ	883	;# 
 11911   000374                     WREG_CSHAD      equ	884	;# 
 11912   000375                     BSR_CSHAD       equ	885	;# 
 11913   000376                     SHADCON         equ	886	;# 
 11914   000377                     STATUS_SHAD     equ	887	;# 
 11915   000378                     WREG_SHAD       equ	888	;# 
 11916   000379                     BSR_SHAD        equ	889	;# 
 11917   00037A                     PCLATH_SHAD     equ	890	;# 
 11918   00037B                     PCLATU_SHAD     equ	891	;# 
 11919   00037C                     FSR0SH          equ	892	;# 
 11920   00037C                     FSR0L_SHAD      equ	892	;# 
 11921   00037D                     FSR0H_SHAD      equ	893	;# 
 11922   00037E                     FSR1SH          equ	894	;# 
 11923   00037E                     FSR1L_SHAD      equ	894	;# 
 11924   00037F                     FSR1H_SHAD      equ	895	;# 
 11925   000380                     FSR2SH          equ	896	;# 
 11926   000380                     FSR2L_SHAD      equ	896	;# 
 11927   000381                     FSR2H_SHAD      equ	897	;# 
 11928   000382                     PRODSH          equ	898	;# 
 11929   000382                     PRODL_SHAD      equ	898	;# 
 11930   000383                     PRODH_SHAD      equ	899	;# 
 11931   0003BC                     CWG1CLK         equ	956	;# 
 11932   0003BC                     CWG1CLKCON      equ	956	;# 
 11933   0003BD                     CWG1ISM         equ	957	;# 
 11934   0003BD                     CWG1DAT         equ	957	;# 
 11935   0003BE                     CWG1DBR         equ	958	;# 
 11936   0003BF                     CWG1DBF         equ	959	;# 
 11937   0003C0                     CWG1CON0        equ	960	;# 
 11938   0003C1                     CWG1CON1        equ	961	;# 
 11939   0003C2                     CWG1AS0         equ	962	;# 
 11940   0003C3                     CWG1AS1         equ	963	;# 
 11941   0003C4                     CWG1STR         equ	964	;# 
 11942   0003C5                     CWG2CLK         equ	965	;# 
 11943   0003C5                     CWG2CLKCON      equ	965	;# 
 11944   0003C6                     CWG2ISM         equ	966	;# 
 11945   0003C6                     CWG2DAT         equ	966	;# 
 11946   0003C7                     CWG2DBR         equ	967	;# 
 11947   0003C8                     CWG2DBF         equ	968	;# 
 11948   0003C9                     CWG2CON0        equ	969	;# 
 11949   0003CA                     CWG2CON1        equ	970	;# 
 11950   0003CB                     CWG2AS0         equ	971	;# 
 11951   0003CC                     CWG2AS1         equ	972	;# 
 11952   0003CD                     CWG2STR         equ	973	;# 
 11953   0003CE                     CWG3CLK         equ	974	;# 
 11954   0003CE                     CWG3CLKCON      equ	974	;# 
 11955   0003CF                     CWG3ISM         equ	975	;# 
 11956   0003CF                     CWG3DAT         equ	975	;# 
 11957   0003D0                     CWG3DBR         equ	976	;# 
 11958   0003D1                     CWG3DBF         equ	977	;# 
 11959   0003D2                     CWG3CON0        equ	978	;# 
 11960   0003D3                     CWG3CON1        equ	979	;# 
 11961   0003D4                     CWG3AS0         equ	980	;# 
 11962   0003D5                     CWG3AS1         equ	981	;# 
 11963   0003D6                     CWG3STR         equ	982	;# 
 11964   0003D7                     FVRCON          equ	983	;# 
 11965   0003D8                     ADCPCON         equ	984	;# 
 11966   0003D8                     ADCP            equ	984	;# 
 11967   0003D9                     ADLTH           equ	985	;# 
 11968   0003D9                     ADLTHL          equ	985	;# 
 11969   0003DA                     ADLTHH          equ	986	;# 
 11970   0003DB                     ADUTH           equ	987	;# 
 11971   0003DB                     ADUTHL          equ	987	;# 
 11972   0003DC                     ADUTHH          equ	988	;# 
 11973   0003DD                     ADERR           equ	989	;# 
 11974   0003DD                     ADERRL          equ	989	;# 
 11975   0003DE                     ADERRH          equ	990	;# 
 11976   0003DF                     ADSTPT          equ	991	;# 
 11977   0003DF                     ADSTPTL         equ	991	;# 
 11978   0003E0                     ADSTPTH         equ	992	;# 
 11979   0003E1                     ADFLTR          equ	993	;# 
 11980   0003E1                     ADFLTRL         equ	993	;# 
 11981   0003E2                     ADFLTRH         equ	994	;# 
 11982   0003E3                     ADACC           equ	995	;# 
 11983   0003E3                     ADACCL          equ	995	;# 
 11984   0003E4                     ADACCH          equ	996	;# 
 11985   0003E5                     ADACCU          equ	997	;# 
 11986   0003E6                     ADCNT           equ	998	;# 
 11987   0003E7                     ADRPT           equ	999	;# 
 11988   0003E8                     ADPREV          equ	1000	;# 
 11989   0003E8                     ADPREVL         equ	1000	;# 
 11990   0003E9                     ADPREVH         equ	1001	;# 
 11991   0003EA                     ADRES           equ	1002	;# 
 11992   0003EA                     ADRESL          equ	1002	;# 
 11993   0003EB                     ADRESH          equ	1003	;# 
 11994   0003EC                     ADPCH           equ	1004	;# 
 11995   0003EE                     ADACQ           equ	1006	;# 
 11996   0003EE                     ADACQL          equ	1006	;# 
 11997   0003EF                     ADACQH          equ	1007	;# 
 11998   0003F0                     ADCAP           equ	1008	;# 
 11999   0003F1                     ADPRE           equ	1009	;# 
 12000   0003F1                     ADPREL          equ	1009	;# 
 12001   0003F2                     ADPREH          equ	1010	;# 
 12002   0003F3                     ADCON0          equ	1011	;# 
 12003   0003F4                     ADCON1          equ	1012	;# 
 12004   0003F5                     ADCON2          equ	1013	;# 
 12005   0003F6                     ADCON3          equ	1014	;# 
 12006   0003F7                     ADSTAT          equ	1015	;# 
 12007   0003F8                     ADREF           equ	1016	;# 
 12008   0003F9                     ADACT           equ	1017	;# 
 12009   0003FA                     ADCLK           equ	1018	;# 
 12010   000400                     ANSELA          equ	1024	;# 
 12011   000401                     WPUA            equ	1025	;# 
 12012   000402                     ODCONA          equ	1026	;# 
 12013   000403                     SLRCONA         equ	1027	;# 
 12014   000404                     INLVLA          equ	1028	;# 
 12015   000405                     IOCAP           equ	1029	;# 
 12016   000406                     IOCAN           equ	1030	;# 
 12017   000407                     IOCAF           equ	1031	;# 
 12018   000408                     ANSELB          equ	1032	;# 
 12019   000409                     WPUB            equ	1033	;# 
 12020   00040A                     ODCONB          equ	1034	;# 
 12021   00040B                     SLRCONB         equ	1035	;# 
 12022   00040C                     INLVLB          equ	1036	;# 
 12023   00040D                     IOCBP           equ	1037	;# 
 12024   00040E                     IOCBN           equ	1038	;# 
 12025   00040F                     IOCBF           equ	1039	;# 
 12026   000410                     ANSELC          equ	1040	;# 
 12027   000411                     WPUC            equ	1041	;# 
 12028   000412                     ODCONC          equ	1042	;# 
 12029   000413                     SLRCONC         equ	1043	;# 
 12030   000414                     INLVLC          equ	1044	;# 
 12031   000415                     IOCCP           equ	1045	;# 
 12032   000416                     IOCCN           equ	1046	;# 
 12033   000417                     IOCCF           equ	1047	;# 
 12034   000418                     ANSELD          equ	1048	;# 
 12035   000419                     WPUD            equ	1049	;# 
 12036   00041A                     ODCOND          equ	1050	;# 
 12037   00041B                     SLRCOND         equ	1051	;# 
 12038   00041C                     INLVLD          equ	1052	;# 
 12039   000420                     ANSELE          equ	1056	;# 
 12040   000421                     WPUE            equ	1057	;# 
 12041   000422                     ODCONE          equ	1058	;# 
 12042   000423                     SLRCONE         equ	1059	;# 
 12043   000424                     INLVLE          equ	1060	;# 
 12044   000425                     IOCEP           equ	1061	;# 
 12045   000426                     IOCEN           equ	1062	;# 
 12046   000427                     IOCEF           equ	1063	;# 
 12047   000428                     ANSELF          equ	1064	;# 
 12048   000429                     WPUF            equ	1065	;# 
 12049   00042A                     ODCONF          equ	1066	;# 
 12050   00042B                     SLRCONF         equ	1067	;# 
 12051   00042C                     INLVLF          equ	1068	;# 
 12052   000440                     NCO1ACC         equ	1088	;# 
 12053   000440                     NCO1ACCL        equ	1088	;# 
 12054   000441                     NCO1ACCH        equ	1089	;# 
 12055   000442                     NCO1ACCU        equ	1090	;# 
 12056   000443                     NCO1INC         equ	1091	;# 
 12057   000443                     NCO1INCL        equ	1091	;# 
 12058   000444                     NCO1INCH        equ	1092	;# 
 12059   000445                     NCO1INCU        equ	1093	;# 
 12060   000446                     NCO1CON         equ	1094	;# 
 12061   000447                     NCO1CLK         equ	1095	;# 
 12062   000448                     NCO2ACC         equ	1096	;# 
 12063   000448                     NCO2ACCL        equ	1096	;# 
 12064   000449                     NCO2ACCH        equ	1097	;# 
 12065   00044A                     NCO2ACCU        equ	1098	;# 
 12066   00044B                     NCO2INC         equ	1099	;# 
 12067   00044B                     NCO2INCL        equ	1099	;# 
 12068   00044C                     NCO2INCH        equ	1100	;# 
 12069   00044D                     NCO2INCU        equ	1101	;# 
 12070   00044E                     NCO2CON         equ	1102	;# 
 12071   00044F                     NCO2CLK         equ	1103	;# 
 12072   000450                     NCO3ACC         equ	1104	;# 
 12073   000450                     NCO3ACCL        equ	1104	;# 
 12074   000451                     NCO3ACCH        equ	1105	;# 
 12075   000452                     NCO3ACCU        equ	1106	;# 
 12076   000453                     NCO3INC         equ	1107	;# 
 12077   000453                     NCO3INCL        equ	1107	;# 
 12078   000454                     NCO3INCH        equ	1108	;# 
 12079   000455                     NCO3INCU        equ	1109	;# 
 12080   000456                     NCO3CON         equ	1110	;# 
 12081   000457                     NCO3CLK         equ	1111	;# 
 12082   000459                     IVTLOCK         equ	1113	;# 
 12083   00045A                     IVTAD           equ	1114	;# 
 12084   00045A                     IVTADL          equ	1114	;# 
 12085   00045B                     IVTADH          equ	1115	;# 
 12086   00045C                     IVTADU          equ	1116	;# 
 12087   00045D                     IVTBASE         equ	1117	;# 
 12088   00045D                     IVTBASEL        equ	1117	;# 
 12089   00045E                     IVTBASEH        equ	1118	;# 
 12090   00045F                     IVTBASEU        equ	1119	;# 
 12091   000460                     PWM1ERS         equ	1120	;# 
 12092   000461                     PWM1CLK         equ	1121	;# 
 12093   000462                     PWM1LDS         equ	1122	;# 
 12094   000463                     PWM1PR          equ	1123	;# 
 12095   000463                     PWM1PRL         equ	1123	;# 
 12096   000464                     PWM1PRH         equ	1124	;# 
 12097   000465                     PWM1CPRE        equ	1125	;# 
 12098   000466                     PWM1PIPOS       equ	1126	;# 
 12099   000467                     PWM1GIR         equ	1127	;# 
 12100   000468                     PWM1GIE         equ	1128	;# 
 12101   000469                     PWM1CON         equ	1129	;# 
 12102   00046A                     PWM1S1CFG       equ	1130	;# 
 12103   00046B                     PWM1S1P1        equ	1131	;# 
 12104   00046B                     PWM1S1P1L       equ	1131	;# 
 12105   00046C                     PWM1S1P1H       equ	1132	;# 
 12106   00046D                     PWM1S1P2        equ	1133	;# 
 12107   00046D                     PWM1S1P2L       equ	1133	;# 
 12108   00046E                     PWM1S1P2H       equ	1134	;# 
 12109   00046F                     PWM2ERS         equ	1135	;# 
 12110   000470                     PWM2CLK         equ	1136	;# 
 12111   000471                     PWM2LDS         equ	1137	;# 
 12112   000472                     PWM2PR          equ	1138	;# 
 12113   000472                     PWM2PRL         equ	1138	;# 
 12114   000473                     PWM2PRH         equ	1139	;# 
 12115   000474                     PWM2CPRE        equ	1140	;# 
 12116   000475                     PWM2PIPOS       equ	1141	;# 
 12117   000476                     PWM2GIR         equ	1142	;# 
 12118   000477                     PWM2GIE         equ	1143	;# 
 12119   000478                     PWM2CON         equ	1144	;# 
 12120   000479                     PWM2S1CFG       equ	1145	;# 
 12121   00047A                     PWM2S1P1        equ	1146	;# 
 12122   00047A                     PWM2S1P1L       equ	1146	;# 
 12123   00047B                     PWM2S1P1H       equ	1147	;# 
 12124   00047C                     PWM2S1P2        equ	1148	;# 
 12125   00047C                     PWM2S1P2L       equ	1148	;# 
 12126   00047D                     PWM2S1P2H       equ	1149	;# 
 12127   00047E                     PWM3ERS         equ	1150	;# 
 12128   00047F                     PWM3CLK         equ	1151	;# 
 12129   000480                     PWM3LDS         equ	1152	;# 
 12130   000481                     PWM3PR          equ	1153	;# 
 12131   000481                     PWM3PRL         equ	1153	;# 
 12132   000482                     PWM3PRH         equ	1154	;# 
 12133   000483                     PWM3CPRE        equ	1155	;# 
 12134   000484                     PWM3PIPOS       equ	1156	;# 
 12135   000485                     PWM3GIR         equ	1157	;# 
 12136   000486                     PWM3GIE         equ	1158	;# 
 12137   000487                     PWM3CON         equ	1159	;# 
 12138   000488                     PWM3S1CFG       equ	1160	;# 
 12139   000489                     PWM3S1P1        equ	1161	;# 
 12140   000489                     PWM3S1P1L       equ	1161	;# 
 12141   00048A                     PWM3S1P1H       equ	1162	;# 
 12142   00048B                     PWM3S1P2        equ	1163	;# 
 12143   00048B                     PWM3S1P2L       equ	1163	;# 
 12144   00048C                     PWM3S1P2H       equ	1164	;# 
 12145   00049C                     PWMLOAD         equ	1180	;# 
 12146   00049D                     PWMEN           equ	1181	;# 
 12147   00049E                     PIE0            equ	1182	;# 
 12148   00049F                     PIE1            equ	1183	;# 
 12149   0004A0                     PIE2            equ	1184	;# 
 12150   0004A1                     PIE3            equ	1185	;# 
 12151   0004A2                     PIE4            equ	1186	;# 
 12152   0004A3                     PIE5            equ	1187	;# 
 12153   0004A4                     PIE6            equ	1188	;# 
 12154   0004A5                     PIE7            equ	1189	;# 
 12155   0004A6                     PIE8            equ	1190	;# 
 12156   0004A7                     PIE9            equ	1191	;# 
 12157   0004A8                     PIE10           equ	1192	;# 
 12158   0004A9                     PIE11           equ	1193	;# 
 12159   0004AA                     PIE12           equ	1194	;# 
 12160   0004AB                     PIE13           equ	1195	;# 
 12161   0004AC                     PIE14           equ	1196	;# 
 12162   0004AD                     PIE15           equ	1197	;# 
 12163   0004AE                     PIR0            equ	1198	;# 
 12164   0004AF                     PIR1            equ	1199	;# 
 12165   0004B0                     PIR2            equ	1200	;# 
 12166   0004B1                     PIR3            equ	1201	;# 
 12167   0004B2                     PIR4            equ	1202	;# 
 12168   0004B3                     PIR5            equ	1203	;# 
 12169   0004B4                     PIR6            equ	1204	;# 
 12170   0004B5                     PIR7            equ	1205	;# 
 12171   0004B6                     PIR8            equ	1206	;# 
 12172   0004B7                     PIR9            equ	1207	;# 
 12173   0004B8                     PIR10           equ	1208	;# 
 12174   0004B9                     PIR11           equ	1209	;# 
 12175   0004BA                     PIR12           equ	1210	;# 
 12176   0004BB                     PIR13           equ	1211	;# 
 12177   0004BC                     PIR14           equ	1212	;# 
 12178   0004BD                     PIR15           equ	1213	;# 
 12179   0004BE                     LATA            equ	1214	;# 
 12180   0004BF                     LATB            equ	1215	;# 
 12181   0004C0                     LATC            equ	1216	;# 
 12182   0004C1                     LATD            equ	1217	;# 
 12183   0004C2                     LATE            equ	1218	;# 
 12184   0004C3                     LATF            equ	1219	;# 
 12185   0004C6                     TRISA           equ	1222	;# 
 12186   0004C7                     TRISB           equ	1223	;# 
 12187   0004C8                     TRISC           equ	1224	;# 
 12188   0004C9                     TRISD           equ	1225	;# 
 12189   0004CA                     TRISE           equ	1226	;# 
 12190   0004CB                     TRISF           equ	1227	;# 
 12191   0004CE                     PORTA           equ	1230	;# 
 12192   0004CF                     PORTB           equ	1231	;# 
 12193   0004D0                     PORTC           equ	1232	;# 
 12194   0004D1                     PORTD           equ	1233	;# 
 12195   0004D2                     PORTE           equ	1234	;# 
 12196   0004D3                     PORTF           equ	1235	;# 
 12197   0004D6                     INTCON0         equ	1238	;# 
 12198   0004D7                     INTCON1         equ	1239	;# 
 12199   0004D8                     STATUS          equ	1240	;# 
 12200   0004D9                     FSR2            equ	1241	;# 
 12201   0004D9                     FSR2L           equ	1241	;# 
 12202   0004DA                     FSR2H           equ	1242	;# 
 12203   0004DB                     PLUSW2          equ	1243	;# 
 12204   0004DC                     PREINC2         equ	1244	;# 
 12205   0004DD                     POSTDEC2        equ	1245	;# 
 12206   0004DE                     POSTINC2        equ	1246	;# 
 12207   0004DF                     INDF2           equ	1247	;# 
 12208   0004E0                     BSR             equ	1248	;# 
 12209   0004E1                     FSR1            equ	1249	;# 
 12210   0004E1                     FSR1L           equ	1249	;# 
 12211   0004E2                     FSR1H           equ	1250	;# 
 12212   0004E3                     PLUSW1          equ	1251	;# 
 12213   0004E4                     PREINC1         equ	1252	;# 
 12214   0004E5                     POSTDEC1        equ	1253	;# 
 12215   0004E6                     POSTINC1        equ	1254	;# 
 12216   0004E7                     INDF1           equ	1255	;# 
 12217   0004E8                     WREG            equ	1256	;# 
 12218   0004E9                     FSR0            equ	1257	;# 
 12219   0004E9                     FSR0L           equ	1257	;# 
 12220   0004EA                     FSR0H           equ	1258	;# 
 12221   0004EB                     PLUSW0          equ	1259	;# 
 12222   0004EC                     PREINC0         equ	1260	;# 
 12223   0004ED                     POSTDEC0        equ	1261	;# 
 12224   0004EE                     POSTINC0        equ	1262	;# 
 12225   0004EF                     INDF0           equ	1263	;# 
 12226   0004F0                     PCON0           equ	1264	;# 
 12227   0004F1                     PCON1           equ	1265	;# 
 12228   0004F2                     CPUDOZE         equ	1266	;# 
 12229   0004F3                     PROD            equ	1267	;# 
 12230   0004F3                     PRODL           equ	1267	;# 
 12231   0004F4                     PRODH           equ	1268	;# 
 12232   0004F5                     TABLAT          equ	1269	;# 
 12233   0004F6                     TBLPTR          equ	1270	;# 
 12234   0004F6                     TBLPTRL         equ	1270	;# 
 12235   0004F7                     TBLPTRH         equ	1271	;# 
 12236   0004F8                     TBLPTRU         equ	1272	;# 
 12237   0004F9                     PCLAT           equ	1273	;# 
 12238   0004F9                     PCL             equ	1273	;# 
 12239   0004FA                     PCLATH          equ	1274	;# 
 12240   0004FB                     PCLATU          equ	1275	;# 
 12241   0004FC                     STKPTR          equ	1276	;# 
 12242   0004FD                     TOS             equ	1277	;# 
 12243   0004FD                     TOSL            equ	1277	;# 
 12244   0004FE                     TOSH            equ	1278	;# 
 12245   0004FF                     TOSU            equ	1279	;# 
 12246   000039                     CLKRCON         equ	57	;# 
 12247   00003A                     CLKRCLK         equ	58	;# 
 12248   000040                     NVMCON0         equ	64	;# 
 12249   000041                     NVMCON1         equ	65	;# 
 12250   000042                     NVMLOCK         equ	66	;# 
 12251   000043                     NVMADR          equ	67	;# 
 12252   000043                     NVMADRL         equ	67	;# 
 12253   000044                     NVMADRH         equ	68	;# 
 12254   000045                     NVMADRU         equ	69	;# 
 12255   000046                     NVMDAT          equ	70	;# 
 12256   000046                     NVMDATL         equ	70	;# 
 12257   000047                     NVMDATH         equ	71	;# 
 12258   000048                     VREGCON         equ	72	;# 
 12259   000049                     BORCON          equ	73	;# 
 12260   00004A                     HLVDCON0        equ	74	;# 
 12261   00004B                     HLVDCON1        equ	75	;# 
 12262   00004C                     ZCDCON          equ	76	;# 
 12263   000060                     PMD0            equ	96	;# 
 12264   000061                     PMD1            equ	97	;# 
 12265   000063                     PMD3            equ	99	;# 
 12266   000064                     PMD4            equ	100	;# 
 12267   000065                     PMD5            equ	101	;# 
 12268   000066                     PMD6            equ	102	;# 
 12269   000067                     PMD7            equ	103	;# 
 12270   000068                     PMD8            equ	104	;# 
 12271   00006A                     MD1CON0         equ	106	;# 
 12272   00006B                     MD1CON1         equ	107	;# 
 12273   00006C                     MD1SRC          equ	108	;# 
 12274   00006D                     MD1CARL         equ	109	;# 
 12275   00006E                     MD1CARH         equ	110	;# 
 12276   00006F                     CMOUT           equ	111	;# 
 12277   000070                     CM1CON0         equ	112	;# 
 12278   000071                     CM1CON1         equ	113	;# 
 12279   000072                     CM1NCH          equ	114	;# 
 12280   000073                     CM1PCH          equ	115	;# 
 12281   000074                     CM2CON0         equ	116	;# 
 12282   000075                     CM2CON1         equ	117	;# 
 12283   000076                     CM2NCH          equ	118	;# 
 12284   000077                     CM2PCH          equ	119	;# 
 12285   000078                     WDTCON0         equ	120	;# 
 12286   000079                     WDTCON1         equ	121	;# 
 12287   00007A                     WDTPS           equ	122	;# 
 12288   00007A                     WDTPSL          equ	122	;# 
 12289   00007B                     WDTPSH          equ	123	;# 
 12290   00007C                     WDTTMR          equ	124	;# 
 12291   00007D                     DAC1DAT         equ	125	;# 
 12292   00007D                     DAC1DATL        equ	125	;# 
 12293   00007F                     DAC1CON         equ	127	;# 
 12294   000080                     SPI1RXB         equ	128	;# 
 12295   000081                     SPI1TXB         equ	129	;# 
 12296   000082                     SPI1TCNT        equ	130	;# 
 12297   000082                     SPI1TCNTL       equ	130	;# 
 12298   000083                     SPI1TCNTH       equ	131	;# 
 12299   000084                     SPI1CON0        equ	132	;# 
 12300   000085                     SPI1CON1        equ	133	;# 
 12301   000086                     SPI1CON2        equ	134	;# 
 12302   000087                     SPI1STATUS      equ	135	;# 
 12303   000088                     SPI1TWIDTH      equ	136	;# 
 12304   000089                     SPI1BAUD        equ	137	;# 
 12305   00008A                     SPI1INTF        equ	138	;# 
 12306   00008B                     SPI1INTE        equ	139	;# 
 12307   00008C                     SPI1CLK         equ	140	;# 
 12308   00008D                     SPI2RXB         equ	141	;# 
 12309   00008E                     SPI2TXB         equ	142	;# 
 12310   00008F                     SPI2TCNT        equ	143	;# 
 12311   00008F                     SPI2TCNTL       equ	143	;# 
 12312   000090                     SPI2TCNTH       equ	144	;# 
 12313   000091                     SPI2CON0        equ	145	;# 
 12314   000092                     SPI2CON1        equ	146	;# 
 12315   000093                     SPI2CON2        equ	147	;# 
 12316   000094                     SPI2STATUS      equ	148	;# 
 12317   000095                     SPI2TWIDTH      equ	149	;# 
 12318   000096                     SPI2BAUD        equ	150	;# 
 12319   000097                     SPI2INTF        equ	151	;# 
 12320   000098                     SPI2INTE        equ	152	;# 
 12321   000099                     SPI2CLK         equ	153	;# 
 12322   0000AC                     ACTCON          equ	172	;# 
 12323   0000AD                     OSCCON1         equ	173	;# 
 12324   0000AE                     OSCCON2         equ	174	;# 
 12325   0000AF                     OSCCON3         equ	175	;# 
 12326   0000B0                     OSCTUNE         equ	176	;# 
 12327   0000B1                     OSCFRQ          equ	177	;# 
 12328   0000B1                     OSCFREQ         equ	177	;# 
 12329   0000B2                     OSCSTAT         equ	178	;# 
 12330   0000B2                     OSCSTAT1        equ	178	;# 
 12331   0000B3                     OSCEN           equ	179	;# 
 12332   0000B4                     PRLOCK          equ	180	;# 
 12333   0000B5                     SCANPR          equ	181	;# 
 12334   0000B6                     DMA1PR          equ	182	;# 
 12335   0000B7                     DMA2PR          equ	183	;# 
 12336   0000B8                     DMA3PR          equ	184	;# 
 12337   0000B9                     DMA4PR          equ	185	;# 
 12338   0000BA                     DMA5PR          equ	186	;# 
 12339   0000BB                     DMA6PR          equ	187	;# 
 12340   0000BE                     MAINPR          equ	190	;# 
 12341   0000BF                     ISRPR           equ	191	;# 
 12342   0000D4                     CLCDATA         equ	212	;# 
 12343   0000D5                     CLCSELECT       equ	213	;# 
 12344   0000D6                     CLCnCON         equ	214	;# 
 12345   0000D7                     CLCnPOL         equ	215	;# 
 12346   0000D8                     CLCnSEL0        equ	216	;# 
 12347   0000D9                     CLCnSEL1        equ	217	;# 
 12348   0000DA                     CLCnSEL2        equ	218	;# 
 12349   0000DB                     CLCnSEL3        equ	219	;# 
 12350   0000DC                     CLCnGLS0        equ	220	;# 
 12351   0000DD                     CLCnGLS1        equ	221	;# 
 12352   0000DE                     CLCnGLS2        equ	222	;# 
 12353   0000DF                     CLCnGLS3        equ	223	;# 
 12354   0000E8                     DMASELECT       equ	232	;# 
 12355   0000E9                     DMAnBUF         equ	233	;# 
 12356   0000EA                     DMAnDCNT        equ	234	;# 
 12357   0000EA                     DMAnDCNTL       equ	234	;# 
 12358   0000EB                     DMAnDCNTH       equ	235	;# 
 12359   0000EC                     DMAnDPTR        equ	236	;# 
 12360   0000EC                     DMAnDPTRL       equ	236	;# 
 12361   0000ED                     DMAnDPTRH       equ	237	;# 
 12362   0000EE                     DMAnDSZ         equ	238	;# 
 12363   0000EE                     DMAnDSZL        equ	238	;# 
 12364   0000EF                     DMAnDSZH        equ	239	;# 
 12365   0000F0                     DMAnDSA         equ	240	;# 
 12366   0000F0                     DMAnDSAL        equ	240	;# 
 12367   0000F1                     DMAnDSAH        equ	241	;# 
 12368   0000F2                     DMAnSCNT        equ	242	;# 
 12369   0000F2                     DMAnSCNTL       equ	242	;# 
 12370   0000F3                     DMAnSCNTH       equ	243	;# 
 12371   0000F4                     DMAnSPTR        equ	244	;# 
 12372   0000F4                     DMAnSPTRL       equ	244	;# 
 12373   0000F5                     DMAnSPTRH       equ	245	;# 
 12374   0000F6                     DMAnSPTRU       equ	246	;# 
 12375   0000F7                     DMAnSSZ         equ	247	;# 
 12376   0000F7                     DMAnSSZL        equ	247	;# 
 12377   0000F8                     DMAnSSZH        equ	248	;# 
 12378   0000F9                     DMAnSSA         equ	249	;# 
 12379   0000F9                     DMAnSSAL        equ	249	;# 
 12380   0000FA                     DMAnSSAH        equ	250	;# 
 12381   0000FB                     DMAnSSAU        equ	251	;# 
 12382   0000FC                     DMAnCON0        equ	252	;# 
 12383   0000FD                     DMAnCON1        equ	253	;# 
 12384   0000FE                     DMAnAIRQ        equ	254	;# 
 12385   0000FF                     DMAnSIRQ        equ	255	;# 
 12386   000200                     PPSLOCK         equ	512	;# 
 12387   000201                     RA0PPS          equ	513	;# 
 12388   000202                     RA1PPS          equ	514	;# 
 12389   000203                     RA2PPS          equ	515	;# 
 12390   000204                     RA3PPS          equ	516	;# 
 12391   000205                     RA4PPS          equ	517	;# 
 12392   000206                     RA5PPS          equ	518	;# 
 12393   000207                     RA6PPS          equ	519	;# 
 12394   000208                     RA7PPS          equ	520	;# 
 12395   000209                     RB0PPS          equ	521	;# 
 12396   00020A                     RB1PPS          equ	522	;# 
 12397   00020B                     RB2PPS          equ	523	;# 
 12398   00020C                     RB3PPS          equ	524	;# 
 12399   00020D                     RB4PPS          equ	525	;# 
 12400   00020E                     RB5PPS          equ	526	;# 
 12401   00020F                     RB6PPS          equ	527	;# 
 12402   000210                     RB7PPS          equ	528	;# 
 12403   000211                     RC0PPS          equ	529	;# 
 12404   000212                     RC1PPS          equ	530	;# 
 12405   000213                     RC2PPS          equ	531	;# 
 12406   000214                     RC3PPS          equ	532	;# 
 12407   000215                     RC4PPS          equ	533	;# 
 12408   000216                     RC5PPS          equ	534	;# 
 12409   000217                     RC6PPS          equ	535	;# 
 12410   000218                     RC7PPS          equ	536	;# 
 12411   000219                     RD0PPS          equ	537	;# 
 12412   00021A                     RD1PPS          equ	538	;# 
 12413   00021B                     RD2PPS          equ	539	;# 
 12414   00021C                     RD3PPS          equ	540	;# 
 12415   00021D                     RD4PPS          equ	541	;# 
 12416   00021E                     RD5PPS          equ	542	;# 
 12417   00021F                     RD6PPS          equ	543	;# 
 12418   000220                     RD7PPS          equ	544	;# 
 12419   000221                     RE0PPS          equ	545	;# 
 12420   000222                     RE1PPS          equ	546	;# 
 12421   000223                     RE2PPS          equ	547	;# 
 12422   000229                     RF0PPS          equ	553	;# 
 12423   00022A                     RF1PPS          equ	554	;# 
 12424   00022B                     RF2PPS          equ	555	;# 
 12425   00022C                     RF3PPS          equ	556	;# 
 12426   00022D                     RF4PPS          equ	557	;# 
 12427   00022E                     RF5PPS          equ	558	;# 
 12428   00022F                     RF6PPS          equ	559	;# 
 12429   000230                     RF7PPS          equ	560	;# 
 12430   00023E                     INT0PPS         equ	574	;# 
 12431   00023F                     INT1PPS         equ	575	;# 
 12432   000240                     INT2PPS         equ	576	;# 
 12433   000241                     T0CKIPPS        equ	577	;# 
 12434   000242                     T1CKIPPS        equ	578	;# 
 12435   000243                     T1GPPS          equ	579	;# 
 12436   000244                     T3CKIPPS        equ	580	;# 
 12437   000245                     T3GPPS          equ	581	;# 
 12438   000246                     T5CKIPPS        equ	582	;# 
 12439   000247                     T5GPPS          equ	583	;# 
 12440   000248                     T2INPPS         equ	584	;# 
 12441   000249                     T4INPPS         equ	585	;# 
 12442   00024A                     T6INPPS         equ	586	;# 
 12443   00024F                     CCP1PPS         equ	591	;# 
 12444   000250                     CCP2PPS         equ	592	;# 
 12445   000251                     CCP3PPS         equ	593	;# 
 12446   000253                     PWM1ERSPPS      equ	595	;# 
 12447   000254                     PWM2ERSPPS      equ	596	;# 
 12448   000255                     PWM3ERSPPS      equ	597	;# 
 12449   000257                     PWMIN0PPS       equ	599	;# 
 12450   000258                     PWMIN1PPS       equ	600	;# 
 12451   000259                     SMT1WINPPS      equ	601	;# 
 12452   00025A                     SMT1SIGPPS      equ	602	;# 
 12453   00025B                     CWG1PPS         equ	603	;# 
 12454   00025B                     CWG1INPPS       equ	603	;# 
 12455   00025C                     CWG2PPS         equ	604	;# 
 12456   00025C                     CWG2INPPS       equ	604	;# 
 12457   00025D                     CWG3PPS         equ	605	;# 
 12458   00025D                     CWG3INPPS       equ	605	;# 
 12459   00025E                     MD1CARLPPS      equ	606	;# 
 12460   00025E                     MDCARLPPS       equ	606	;# 
 12461   00025F                     MD1CARHPPS      equ	607	;# 
 12462   00025F                     MDCARHPPS       equ	607	;# 
 12463   000260                     MD1SRCPPS       equ	608	;# 
 12464   000260                     MDSRCPPS        equ	608	;# 
 12465   000261                     CLCIN0PPS       equ	609	;# 
 12466   000262                     CLCIN1PPS       equ	610	;# 
 12467   000263                     CLCIN2PPS       equ	611	;# 
 12468   000264                     CLCIN3PPS       equ	612	;# 
 12469   000265                     CLCIN4PPS       equ	613	;# 
 12470   000266                     CLCIN5PPS       equ	614	;# 
 12471   000267                     CLCIN6PPS       equ	615	;# 
 12472   000268                     CLCIN7PPS       equ	616	;# 
 12473   000269                     ADACTPPS        equ	617	;# 
 12474   00026A                     SPI1SCKPPS      equ	618	;# 
 12475   00026B                     SPI1SDIPPS      equ	619	;# 
 12476   00026C                     SPI1SSPPS       equ	620	;# 
 12477   00026D                     SPI2SCKPPS      equ	621	;# 
 12478   00026E                     SPI2SDIPPS      equ	622	;# 
 12479   00026F                     SPI2SSPPS       equ	623	;# 
 12480   000270                     I2C1SDAPPS      equ	624	;# 
 12481   000271                     I2C1SCLPPS      equ	625	;# 
 12482   000272                     U1RXPPS         equ	626	;# 
 12483   000273                     U1CTSPPS        equ	627	;# 
 12484   000274                     U2RXPPS         equ	628	;# 
 12485   000275                     U2CTSPPS        equ	629	;# 
 12486   000276                     U3RXPPS         equ	630	;# 
 12487   000277                     U3CTSPPS        equ	631	;# 
 12488   000278                     U4RXPPS         equ	632	;# 
 12489   000279                     U4CTSPPS        equ	633	;# 
 12490   00027A                     U5RXPPS         equ	634	;# 
 12491   00027B                     U5CTSPPS        equ	635	;# 
 12492   000286                     RC4I2C          equ	646	;# 
 12493   000287                     RC3I2C          equ	647	;# 
 12494   000288                     RB2I2C          equ	648	;# 
 12495   000289                     RB1I2C          equ	649	;# 
 12496   00028B                     I2C1RXB         equ	651	;# 
 12497   00028C                     I2C1TXB         equ	652	;# 
 12498   00028D                     I2C1CNT         equ	653	;# 
 12499   00028E                     I2C1ADB0        equ	654	;# 
 12500   00028F                     I2C1ADB1        equ	655	;# 
 12501   000290                     I2C1ADR0        equ	656	;# 
 12502   000291                     I2C1ADR1        equ	657	;# 
 12503   000292                     I2C1ADR2        equ	658	;# 
 12504   000293                     I2C1ADR3        equ	659	;# 
 12505   000294                     I2C1CON0        equ	660	;# 
 12506   000295                     I2C1CON1        equ	661	;# 
 12507   000296                     I2C1CON2        equ	662	;# 
 12508   000297                     I2C1ERR         equ	663	;# 
 12509   000298                     I2C1STAT0       equ	664	;# 
 12510   000299                     I2C1STAT1       equ	665	;# 
 12511   00029A                     I2C1PIR         equ	666	;# 
 12512   00029B                     I2C1PIE         equ	667	;# 
 12513   00029C                     I2C1CLK         equ	668	;# 
 12514   00029D                     I2C1BTO         equ	669	;# 
 12515   0002A1                     U1RXB           equ	673	;# 
 12516   0002A1                     U1RXBL          equ	673	;# 
 12517   0002A2                     U1RXCHK         equ	674	;# 
 12518   0002A3                     U1TXB           equ	675	;# 
 12519   0002A3                     U1TXBL          equ	675	;# 
 12520   0002A4                     U1TXCHK         equ	676	;# 
 12521   0002A5                     U1P1            equ	677	;# 
 12522   0002A5                     U1P1L           equ	677	;# 
 12523   0002A6                     U1P1H           equ	678	;# 
 12524   0002A7                     U1P2            equ	679	;# 
 12525   0002A7                     U1P2L           equ	679	;# 
 12526   0002A8                     U1P2H           equ	680	;# 
 12527   0002A9                     U1P3            equ	681	;# 
 12528   0002A9                     U1P3L           equ	681	;# 
 12529   0002AA                     U1P3H           equ	682	;# 
 12530   0002AB                     U1CON0          equ	683	;# 
 12531   0002AC                     U1CON1          equ	684	;# 
 12532   0002AD                     U1CON2          equ	685	;# 
 12533   0002AE                     U1BRG           equ	686	;# 
 12534   0002AE                     U1BRGL          equ	686	;# 
 12535   0002AF                     U1BRGH          equ	687	;# 
 12536   0002B0                     U1FIFO          equ	688	;# 
 12537   0002B1                     U1UIR           equ	689	;# 
 12538   0002B2                     U1ERRIR         equ	690	;# 
 12539   0002B3                     U1ERRIE         equ	691	;# 
 12540   0002B4                     U2RXB           equ	692	;# 
 12541   0002B4                     U2RXBL          equ	692	;# 
 12542   0002B6                     U2TXB           equ	694	;# 
 12543   0002B6                     U2TXBL          equ	694	;# 
 12544   0002B8                     U2P1            equ	696	;# 
 12545   0002B8                     U2P1L           equ	696	;# 
 12546   0002BA                     U2P2            equ	698	;# 
 12547   0002BA                     U2P2L           equ	698	;# 
 12548   0002BC                     U2P3            equ	700	;# 
 12549   0002BC                     U2P3L           equ	700	;# 
 12550   0002BE                     U2CON0          equ	702	;# 
 12551   0002BF                     U2CON1          equ	703	;# 
 12552   0002C0                     U2CON2          equ	704	;# 
 12553   0002C1                     U2BRG           equ	705	;# 
 12554   0002C1                     U2BRGL          equ	705	;# 
 12555   0002C2                     U2BRGH          equ	706	;# 
 12556   0002C3                     U2FIFO          equ	707	;# 
 12557   0002C4                     U2UIR           equ	708	;# 
 12558   0002C5                     U2ERRIR         equ	709	;# 
 12559   0002C6                     U2ERRIE         equ	710	;# 
 12560   0002C7                     U3RXB           equ	711	;# 
 12561   0002C7                     U3RXBL          equ	711	;# 
 12562   0002C9                     U3TXB           equ	713	;# 
 12563   0002C9                     U3TXBL          equ	713	;# 
 12564   0002CB                     U3P1            equ	715	;# 
 12565   0002CB                     U3P1L           equ	715	;# 
 12566   0002CD                     U3P2            equ	717	;# 
 12567   0002CD                     U3P2L           equ	717	;# 
 12568   0002CF                     U3P3            equ	719	;# 
 12569   0002CF                     U3P3L           equ	719	;# 
 12570   0002D1                     U3CON0          equ	721	;# 
 12571   0002D2                     U3CON1          equ	722	;# 
 12572   0002D3                     U3CON2          equ	723	;# 
 12573   0002D4                     U3BRG           equ	724	;# 
 12574   0002D4                     U3BRGL          equ	724	;# 
 12575   0002D5                     U3BRGH          equ	725	;# 
 12576   0002D6                     U3FIFO          equ	726	;# 
 12577   0002D7                     U3UIR           equ	727	;# 
 12578   0002D8                     U3ERRIR         equ	728	;# 
 12579   0002D9                     U3ERRIE         equ	729	;# 
 12580   0002DA                     U4RXB           equ	730	;# 
 12581   0002DA                     U4RXBL          equ	730	;# 
 12582   0002DC                     U4TXB           equ	732	;# 
 12583   0002DC                     U4TXBL          equ	732	;# 
 12584   0002DE                     U4P1            equ	734	;# 
 12585   0002DE                     U4P1L           equ	734	;# 
 12586   0002E0                     U4P2            equ	736	;# 
 12587   0002E0                     U4P2L           equ	736	;# 
 12588   0002E2                     U4P3            equ	738	;# 
 12589   0002E2                     U4P3L           equ	738	;# 
 12590   0002E4                     U4CON0          equ	740	;# 
 12591   0002E5                     U4CON1          equ	741	;# 
 12592   0002E6                     U4CON2          equ	742	;# 
 12593   0002E7                     U4BRG           equ	743	;# 
 12594   0002E7                     U4BRGL          equ	743	;# 
 12595   0002E8                     U4BRGH          equ	744	;# 
 12596   0002E9                     U4FIFO          equ	745	;# 
 12597   0002EA                     U4UIR           equ	746	;# 
 12598   0002EB                     U4ERRIR         equ	747	;# 
 12599   0002EC                     U4ERRIE         equ	748	;# 
 12600   0002ED                     U5RXB           equ	749	;# 
 12601   0002ED                     U5RXBL          equ	749	;# 
 12602   0002EF                     U5TXB           equ	751	;# 
 12603   0002EF                     U5TXBL          equ	751	;# 
 12604   0002F1                     U5P1            equ	753	;# 
 12605   0002F1                     U5P1L           equ	753	;# 
 12606   0002F3                     U5P2            equ	755	;# 
 12607   0002F3                     U5P2L           equ	755	;# 
 12608   0002F5                     U5P3            equ	757	;# 
 12609   0002F5                     U5P3L           equ	757	;# 
 12610   0002F7                     U5CON0          equ	759	;# 
 12611   0002F8                     U5CON1          equ	760	;# 
 12612   0002F9                     U5CON2          equ	761	;# 
 12613   0002FA                     U5BRG           equ	762	;# 
 12614   0002FA                     U5BRGL          equ	762	;# 
 12615   0002FB                     U5BRGH          equ	763	;# 
 12616   0002FC                     U5FIFO          equ	764	;# 
 12617   0002FD                     U5UIR           equ	765	;# 
 12618   0002FE                     U5ERRIR         equ	766	;# 
 12619   0002FF                     U5ERRIE         equ	767	;# 
 12620   000300                     SMT1TMR         equ	768	;# 
 12621   000300                     SMT1TMRL        equ	768	;# 
 12622   000301                     SMT1TMRH        equ	769	;# 
 12623   000302                     SMT1TMRU        equ	770	;# 
 12624   000303                     SMT1CPR         equ	771	;# 
 12625   000303                     SMT1CPRL        equ	771	;# 
 12626   000304                     SMT1CPRH        equ	772	;# 
 12627   000305                     SMT1CPRU        equ	773	;# 
 12628   000306                     SMT1CPW         equ	774	;# 
 12629   000306                     SMT1CPWL        equ	774	;# 
 12630   000307                     SMT1CPWH        equ	775	;# 
 12631   000308                     SMT1CPWU        equ	776	;# 
 12632   000309                     SMT1PR          equ	777	;# 
 12633   000309                     SMT1PRL         equ	777	;# 
 12634   00030A                     SMT1PRH         equ	778	;# 
 12635   00030B                     SMT1PRU         equ	779	;# 
 12636   00030C                     SMT1CON0        equ	780	;# 
 12637   00030D                     SMT1CON1        equ	781	;# 
 12638   00030E                     SMT1STAT        equ	782	;# 
 12639   00030F                     SMT1CLK         equ	783	;# 
 12640   000310                     SMT1SIG         equ	784	;# 
 12641   000311                     SMT1WIN         equ	785	;# 
 12642   000318                     TMR0L           equ	792	;# 
 12643   000318                     TMR0            equ	792	;# 
 12644   000319                     TMR0H           equ	793	;# 
 12645   000319                     PR0             equ	793	;# 
 12646   00031A                     T0CON0          equ	794	;# 
 12647   00031B                     T0CON1          equ	795	;# 
 12648   00031C                     TMR1            equ	796	;# 
 12649   00031C                     TMR1L           equ	796	;# 
 12650   00031D                     TMR1H           equ	797	;# 
 12651   00031E                     T1CON           equ	798	;# 
 12652   00031E                     TMR1CON         equ	798	;# 
 12653   00031F                     T1GCON          equ	799	;# 
 12654   00031F                     TMR1GCON        equ	799	;# 
 12655   000320                     T1GATE          equ	800	;# 
 12656   000320                     TMR1GATE        equ	800	;# 
 12657   000321                     T1CLK           equ	801	;# 
 12658   000321                     TMR1CLK         equ	801	;# 
 12659   000321                     PR1             equ	801	;# 
 12660   000322                     T2TMR           equ	802	;# 
 12661   000322                     TMR2            equ	802	;# 
 12662   000323                     T2PR            equ	803	;# 
 12663   000323                     PR2             equ	803	;# 
 12664   000324                     T2CON           equ	804	;# 
 12665   000325                     T2HLT           equ	805	;# 
 12666   000326                     T2CLKCON        equ	806	;# 
 12667   000326                     T2CLK           equ	806	;# 
 12668   000327                     T2RST           equ	807	;# 
 12669   000328                     TMR3            equ	808	;# 
 12670   000328                     TMR3L           equ	808	;# 
 12671   000329                     TMR3H           equ	809	;# 
 12672   00032A                     T3CON           equ	810	;# 
 12673   00032A                     TMR3CON         equ	810	;# 
 12674   00032B                     T3GCON          equ	811	;# 
 12675   00032B                     TMR3GCON        equ	811	;# 
 12676   00032C                     T3GATE          equ	812	;# 
 12677   00032C                     TMR3GATE        equ	812	;# 
 12678   00032D                     T3CLK           equ	813	;# 
 12679   00032D                     TMR3CLK         equ	813	;# 
 12680   00032D                     PR3             equ	813	;# 
 12681   00032E                     T4TMR           equ	814	;# 
 12682   00032E                     TMR4            equ	814	;# 
 12683   00032F                     T4PR            equ	815	;# 
 12684   00032F                     PR4             equ	815	;# 
 12685   000330                     T4CON           equ	816	;# 
 12686   000331                     T4HLT           equ	817	;# 
 12687   000332                     T4CLKCON        equ	818	;# 
 12688   000332                     T4CLK           equ	818	;# 
 12689   000333                     T4RST           equ	819	;# 
 12690   000334                     TMR5            equ	820	;# 
 12691   000334                     TMR5L           equ	820	;# 
 12692   000335                     TMR5H           equ	821	;# 
 12693   000336                     T5CON           equ	822	;# 
 12694   000336                     TMR5CON         equ	822	;# 
 12695   000337                     T5GCON          equ	823	;# 
 12696   000337                     TMR5GCON        equ	823	;# 
 12697   000338                     T5GATE          equ	824	;# 
 12698   000338                     TMR5GATE        equ	824	;# 
 12699   000339                     T5CLK           equ	825	;# 
 12700   000339                     TMR5CLK         equ	825	;# 
 12701   000339                     PR5             equ	825	;# 
 12702   00033A                     T6TMR           equ	826	;# 
 12703   00033A                     TMR6            equ	826	;# 
 12704   00033B                     T6PR            equ	827	;# 
 12705   00033B                     PR6             equ	827	;# 
 12706   00033C                     T6CON           equ	828	;# 
 12707   00033D                     T6HLT           equ	829	;# 
 12708   00033E                     T6CLKCON        equ	830	;# 
 12709   00033E                     T6CLK           equ	830	;# 
 12710   00033F                     T6RST           equ	831	;# 
 12711   000340                     CCPR1           equ	832	;# 
 12712   000340                     CCPR1L          equ	832	;# 
 12713   000341                     CCPR1H          equ	833	;# 
 12714   000342                     CCP1CON         equ	834	;# 
 12715   000343                     CCP1CAP         equ	835	;# 
 12716   000344                     CCPR2           equ	836	;# 
 12717   000344                     CCPR2L          equ	836	;# 
 12718   000345                     CCPR2H          equ	837	;# 
 12719   000346                     CCP2CON         equ	838	;# 
 12720   000347                     CCP2CAP         equ	839	;# 
 12721   000348                     CCPR3           equ	840	;# 
 12722   000348                     CCPR3L          equ	840	;# 
 12723   000349                     CCPR3H          equ	841	;# 
 12724   00034A                     CCP3CON         equ	842	;# 
 12725   00034B                     CCP3CAP         equ	843	;# 
 12726   00034C                     CCPTMRS0        equ	844	;# 
 12727   00034F                     CRCDATA         equ	847	;# 
 12728   00034F                     CRCDATL         equ	847	;# 
 12729   000350                     CRCDATH         equ	848	;# 
 12730   000351                     CRCACC          equ	849	;# 
 12731   000351                     CRCACCL         equ	849	;# 
 12732   000352                     CRCACCH         equ	850	;# 
 12733   000353                     CRCSHFT         equ	851	;# 
 12734   000353                     CRCSHIFTL       equ	851	;# 
 12735   000354                     CRCSHIFTH       equ	852	;# 
 12736   000355                     CRCXOR          equ	853	;# 
 12737   000355                     CRCXORL         equ	853	;# 
 12738   000356                     CRCXORH         equ	854	;# 
 12739   000357                     CRCCON0         equ	855	;# 
 12740   000358                     CRCCON1         equ	856	;# 
 12741   00035A                     SCANLADR        equ	858	;# 
 12742   00035A                     SCANLADRL       equ	858	;# 
 12743   00035B                     SCANLADRH       equ	859	;# 
 12744   00035C                     SCANLADRU       equ	860	;# 
 12745   00035D                     SCANHADR        equ	861	;# 
 12746   00035D                     SCANHADRL       equ	861	;# 
 12747   00035E                     SCANHADRH       equ	862	;# 
 12748   00035F                     SCANHADRU       equ	863	;# 
 12749   000360                     SCANCON0        equ	864	;# 
 12750   000361                     SCANTRIG        equ	865	;# 
 12751   000362                     IPR0            equ	866	;# 
 12752   000363                     IPR1            equ	867	;# 
 12753   000364                     IPR2            equ	868	;# 
 12754   000365                     IPR3            equ	869	;# 
 12755   000366                     IPR4            equ	870	;# 
 12756   000367                     IPR5            equ	871	;# 
 12757   000368                     IPR6            equ	872	;# 
 12758   000369                     IPR7            equ	873	;# 
 12759   00036A                     IPR8            equ	874	;# 
 12760   00036B                     IPR9            equ	875	;# 
 12761   00036C                     IPR10           equ	876	;# 
 12762   00036D                     IPR11           equ	877	;# 
 12763   00036E                     IPR12           equ	878	;# 
 12764   00036F                     IPR13           equ	879	;# 
 12765   000370                     IPR14           equ	880	;# 
 12766   000371                     IPR15           equ	881	;# 
 12767   000373                     STATUS_CSHAD    equ	883	;# 
 12768   000374                     WREG_CSHAD      equ	884	;# 
 12769   000375                     BSR_CSHAD       equ	885	;# 
 12770   000376                     SHADCON         equ	886	;# 
 12771   000377                     STATUS_SHAD     equ	887	;# 
 12772   000378                     WREG_SHAD       equ	888	;# 
 12773   000379                     BSR_SHAD        equ	889	;# 
 12774   00037A                     PCLATH_SHAD     equ	890	;# 
 12775   00037B                     PCLATU_SHAD     equ	891	;# 
 12776   00037C                     FSR0SH          equ	892	;# 
 12777   00037C                     FSR0L_SHAD      equ	892	;# 
 12778   00037D                     FSR0H_SHAD      equ	893	;# 
 12779   00037E                     FSR1SH          equ	894	;# 
 12780   00037E                     FSR1L_SHAD      equ	894	;# 
 12781   00037F                     FSR1H_SHAD      equ	895	;# 
 12782   000380                     FSR2SH          equ	896	;# 
 12783   000380                     FSR2L_SHAD      equ	896	;# 
 12784   000381                     FSR2H_SHAD      equ	897	;# 
 12785   000382                     PRODSH          equ	898	;# 
 12786   000382                     PRODL_SHAD      equ	898	;# 
 12787   000383                     PRODH_SHAD      equ	899	;# 
 12788   0003BC                     CWG1CLK         equ	956	;# 
 12789   0003BC                     CWG1CLKCON      equ	956	;# 
 12790   0003BD                     CWG1ISM         equ	957	;# 
 12791   0003BD                     CWG1DAT         equ	957	;# 
 12792   0003BE                     CWG1DBR         equ	958	;# 
 12793   0003BF                     CWG1DBF         equ	959	;# 
 12794   0003C0                     CWG1CON0        equ	960	;# 
 12795   0003C1                     CWG1CON1        equ	961	;# 
 12796   0003C2                     CWG1AS0         equ	962	;# 
 12797   0003C3                     CWG1AS1         equ	963	;# 
 12798   0003C4                     CWG1STR         equ	964	;# 
 12799   0003C5                     CWG2CLK         equ	965	;# 
 12800   0003C5                     CWG2CLKCON      equ	965	;# 
 12801   0003C6                     CWG2ISM         equ	966	;# 
 12802   0003C6                     CWG2DAT         equ	966	;# 
 12803   0003C7                     CWG2DBR         equ	967	;# 
 12804   0003C8                     CWG2DBF         equ	968	;# 
 12805   0003C9                     CWG2CON0        equ	969	;# 
 12806   0003CA                     CWG2CON1        equ	970	;# 
 12807   0003CB                     CWG2AS0         equ	971	;# 
 12808   0003CC                     CWG2AS1         equ	972	;# 
 12809   0003CD                     CWG2STR         equ	973	;# 
 12810   0003CE                     CWG3CLK         equ	974	;# 
 12811   0003CE                     CWG3CLKCON      equ	974	;# 
 12812   0003CF                     CWG3ISM         equ	975	;# 
 12813   0003CF                     CWG3DAT         equ	975	;# 
 12814   0003D0                     CWG3DBR         equ	976	;# 
 12815   0003D1                     CWG3DBF         equ	977	;# 
 12816   0003D2                     CWG3CON0        equ	978	;# 
 12817   0003D3                     CWG3CON1        equ	979	;# 
 12818   0003D4                     CWG3AS0         equ	980	;# 
 12819   0003D5                     CWG3AS1         equ	981	;# 
 12820   0003D6                     CWG3STR         equ	982	;# 
 12821   0003D7                     FVRCON          equ	983	;# 
 12822   0003D8                     ADCPCON         equ	984	;# 
 12823   0003D8                     ADCP            equ	984	;# 
 12824   0003D9                     ADLTH           equ	985	;# 
 12825   0003D9                     ADLTHL          equ	985	;# 
 12826   0003DA                     ADLTHH          equ	986	;# 
 12827   0003DB                     ADUTH           equ	987	;# 
 12828   0003DB                     ADUTHL          equ	987	;# 
 12829   0003DC                     ADUTHH          equ	988	;# 
 12830   0003DD                     ADERR           equ	989	;# 
 12831   0003DD                     ADERRL          equ	989	;# 
 12832   0003DE                     ADERRH          equ	990	;# 
 12833   0003DF                     ADSTPT          equ	991	;# 
 12834   0003DF                     ADSTPTL         equ	991	;# 
 12835   0003E0                     ADSTPTH         equ	992	;# 
 12836   0003E1                     ADFLTR          equ	993	;# 
 12837   0003E1                     ADFLTRL         equ	993	;# 
 12838   0003E2                     ADFLTRH         equ	994	;# 
 12839   0003E3                     ADACC           equ	995	;# 
 12840   0003E3                     ADACCL          equ	995	;# 
 12841   0003E4                     ADACCH          equ	996	;# 
 12842   0003E5                     ADACCU          equ	997	;# 
 12843   0003E6                     ADCNT           equ	998	;# 
 12844   0003E7                     ADRPT           equ	999	;# 
 12845   0003E8                     ADPREV          equ	1000	;# 
 12846   0003E8                     ADPREVL         equ	1000	;# 
 12847   0003E9                     ADPREVH         equ	1001	;# 
 12848   0003EA                     ADRES           equ	1002	;# 
 12849   0003EA                     ADRESL          equ	1002	;# 
 12850   0003EB                     ADRESH          equ	1003	;# 
 12851   0003EC                     ADPCH           equ	1004	;# 
 12852   0003EE                     ADACQ           equ	1006	;# 
 12853   0003EE                     ADACQL          equ	1006	;# 
 12854   0003EF                     ADACQH          equ	1007	;# 
 12855   0003F0                     ADCAP           equ	1008	;# 
 12856   0003F1                     ADPRE           equ	1009	;# 
 12857   0003F1                     ADPREL          equ	1009	;# 
 12858   0003F2                     ADPREH          equ	1010	;# 
 12859   0003F3                     ADCON0          equ	1011	;# 
 12860   0003F4                     ADCON1          equ	1012	;# 
 12861   0003F5                     ADCON2          equ	1013	;# 
 12862   0003F6                     ADCON3          equ	1014	;# 
 12863   0003F7                     ADSTAT          equ	1015	;# 
 12864   0003F8                     ADREF           equ	1016	;# 
 12865   0003F9                     ADACT           equ	1017	;# 
 12866   0003FA                     ADCLK           equ	1018	;# 
 12867   000400                     ANSELA          equ	1024	;# 
 12868   000401                     WPUA            equ	1025	;# 
 12869   000402                     ODCONA          equ	1026	;# 
 12870   000403                     SLRCONA         equ	1027	;# 
 12871   000404                     INLVLA          equ	1028	;# 
 12872   000405                     IOCAP           equ	1029	;# 
 12873   000406                     IOCAN           equ	1030	;# 
 12874   000407                     IOCAF           equ	1031	;# 
 12875   000408                     ANSELB          equ	1032	;# 
 12876   000409                     WPUB            equ	1033	;# 
 12877   00040A                     ODCONB          equ	1034	;# 
 12878   00040B                     SLRCONB         equ	1035	;# 
 12879   00040C                     INLVLB          equ	1036	;# 
 12880   00040D                     IOCBP           equ	1037	;# 
 12881   00040E                     IOCBN           equ	1038	;# 
 12882   00040F                     IOCBF           equ	1039	;# 
 12883   000410                     ANSELC          equ	1040	;# 
 12884   000411                     WPUC            equ	1041	;# 
 12885   000412                     ODCONC          equ	1042	;# 
 12886   000413                     SLRCONC         equ	1043	;# 
 12887   000414                     INLVLC          equ	1044	;# 
 12888   000415                     IOCCP           equ	1045	;# 
 12889   000416                     IOCCN           equ	1046	;# 
 12890   000417                     IOCCF           equ	1047	;# 
 12891   000418                     ANSELD          equ	1048	;# 
 12892   000419                     WPUD            equ	1049	;# 
 12893   00041A                     ODCOND          equ	1050	;# 
 12894   00041B                     SLRCOND         equ	1051	;# 
 12895   00041C                     INLVLD          equ	1052	;# 
 12896   000420                     ANSELE          equ	1056	;# 
 12897   000421                     WPUE            equ	1057	;# 
 12898   000422                     ODCONE          equ	1058	;# 
 12899   000423                     SLRCONE         equ	1059	;# 
 12900   000424                     INLVLE          equ	1060	;# 
 12901   000425                     IOCEP           equ	1061	;# 
 12902   000426                     IOCEN           equ	1062	;# 
 12903   000427                     IOCEF           equ	1063	;# 
 12904   000428                     ANSELF          equ	1064	;# 
 12905   000429                     WPUF            equ	1065	;# 
 12906   00042A                     ODCONF          equ	1066	;# 
 12907   00042B                     SLRCONF         equ	1067	;# 
 12908   00042C                     INLVLF          equ	1068	;# 
 12909   000440                     NCO1ACC         equ	1088	;# 
 12910   000440                     NCO1ACCL        equ	1088	;# 
 12911   000441                     NCO1ACCH        equ	1089	;# 
 12912   000442                     NCO1ACCU        equ	1090	;# 
 12913   000443                     NCO1INC         equ	1091	;# 
 12914   000443                     NCO1INCL        equ	1091	;# 
 12915   000444                     NCO1INCH        equ	1092	;# 
 12916   000445                     NCO1INCU        equ	1093	;# 
 12917   000446                     NCO1CON         equ	1094	;# 
 12918   000447                     NCO1CLK         equ	1095	;# 
 12919   000448                     NCO2ACC         equ	1096	;# 
 12920   000448                     NCO2ACCL        equ	1096	;# 
 12921   000449                     NCO2ACCH        equ	1097	;# 
 12922   00044A                     NCO2ACCU        equ	1098	;# 
 12923   00044B                     NCO2INC         equ	1099	;# 
 12924   00044B                     NCO2INCL        equ	1099	;# 
 12925   00044C                     NCO2INCH        equ	1100	;# 
 12926   00044D                     NCO2INCU        equ	1101	;# 
 12927   00044E                     NCO2CON         equ	1102	;# 
 12928   00044F                     NCO2CLK         equ	1103	;# 
 12929   000450                     NCO3ACC         equ	1104	;# 
 12930   000450                     NCO3ACCL        equ	1104	;# 
 12931   000451                     NCO3ACCH        equ	1105	;# 
 12932   000452                     NCO3ACCU        equ	1106	;# 
 12933   000453                     NCO3INC         equ	1107	;# 
 12934   000453                     NCO3INCL        equ	1107	;# 
 12935   000454                     NCO3INCH        equ	1108	;# 
 12936   000455                     NCO3INCU        equ	1109	;# 
 12937   000456                     NCO3CON         equ	1110	;# 
 12938   000457                     NCO3CLK         equ	1111	;# 
 12939   000459                     IVTLOCK         equ	1113	;# 
 12940   00045A                     IVTAD           equ	1114	;# 
 12941   00045A                     IVTADL          equ	1114	;# 
 12942   00045B                     IVTADH          equ	1115	;# 
 12943   00045C                     IVTADU          equ	1116	;# 
 12944   00045D                     IVTBASE         equ	1117	;# 
 12945   00045D                     IVTBASEL        equ	1117	;# 
 12946   00045E                     IVTBASEH        equ	1118	;# 
 12947   00045F                     IVTBASEU        equ	1119	;# 
 12948   000460                     PWM1ERS         equ	1120	;# 
 12949   000461                     PWM1CLK         equ	1121	;# 
 12950   000462                     PWM1LDS         equ	1122	;# 
 12951   000463                     PWM1PR          equ	1123	;# 
 12952   000463                     PWM1PRL         equ	1123	;# 
 12953   000464                     PWM1PRH         equ	1124	;# 
 12954   000465                     PWM1CPRE        equ	1125	;# 
 12955   000466                     PWM1PIPOS       equ	1126	;# 
 12956   000467                     PWM1GIR         equ	1127	;# 
 12957   000468                     PWM1GIE         equ	1128	;# 
 12958   000469                     PWM1CON         equ	1129	;# 
 12959   00046A                     PWM1S1CFG       equ	1130	;# 
 12960   00046B                     PWM1S1P1        equ	1131	;# 
 12961   00046B                     PWM1S1P1L       equ	1131	;# 
 12962   00046C                     PWM1S1P1H       equ	1132	;# 
 12963   00046D                     PWM1S1P2        equ	1133	;# 
 12964   00046D                     PWM1S1P2L       equ	1133	;# 
 12965   00046E                     PWM1S1P2H       equ	1134	;# 
 12966   00046F                     PWM2ERS         equ	1135	;# 
 12967   000470                     PWM2CLK         equ	1136	;# 
 12968   000471                     PWM2LDS         equ	1137	;# 
 12969   000472                     PWM2PR          equ	1138	;# 
 12970   000472                     PWM2PRL         equ	1138	;# 
 12971   000473                     PWM2PRH         equ	1139	;# 
 12972   000474                     PWM2CPRE        equ	1140	;# 
 12973   000475                     PWM2PIPOS       equ	1141	;# 
 12974   000476                     PWM2GIR         equ	1142	;# 
 12975   000477                     PWM2GIE         equ	1143	;# 
 12976   000478                     PWM2CON         equ	1144	;# 
 12977   000479                     PWM2S1CFG       equ	1145	;# 
 12978   00047A                     PWM2S1P1        equ	1146	;# 
 12979   00047A                     PWM2S1P1L       equ	1146	;# 
 12980   00047B                     PWM2S1P1H       equ	1147	;# 
 12981   00047C                     PWM2S1P2        equ	1148	;# 
 12982   00047C                     PWM2S1P2L       equ	1148	;# 
 12983   00047D                     PWM2S1P2H       equ	1149	;# 
 12984   00047E                     PWM3ERS         equ	1150	;# 
 12985   00047F                     PWM3CLK         equ	1151	;# 
 12986   000480                     PWM3LDS         equ	1152	;# 
 12987   000481                     PWM3PR          equ	1153	;# 
 12988   000481                     PWM3PRL         equ	1153	;# 
 12989   000482                     PWM3PRH         equ	1154	;# 
 12990   000483                     PWM3CPRE        equ	1155	;# 
 12991   000484                     PWM3PIPOS       equ	1156	;# 
 12992   000485                     PWM3GIR         equ	1157	;# 
 12993   000486                     PWM3GIE         equ	1158	;# 
 12994   000487                     PWM3CON         equ	1159	;# 
 12995   000488                     PWM3S1CFG       equ	1160	;# 
 12996   000489                     PWM3S1P1        equ	1161	;# 
 12997   000489                     PWM3S1P1L       equ	1161	;# 
 12998   00048A                     PWM3S1P1H       equ	1162	;# 
 12999   00048B                     PWM3S1P2        equ	1163	;# 
 13000   00048B                     PWM3S1P2L       equ	1163	;# 
 13001   00048C                     PWM3S1P2H       equ	1164	;# 
 13002   00049C                     PWMLOAD         equ	1180	;# 
 13003   00049D                     PWMEN           equ	1181	;# 
 13004   00049E                     PIE0            equ	1182	;# 
 13005   00049F                     PIE1            equ	1183	;# 
 13006   0004A0                     PIE2            equ	1184	;# 
 13007   0004A1                     PIE3            equ	1185	;# 
 13008   0004A2                     PIE4            equ	1186	;# 
 13009   0004A3                     PIE5            equ	1187	;# 
 13010   0004A4                     PIE6            equ	1188	;# 
 13011   0004A5                     PIE7            equ	1189	;# 
 13012   0004A6                     PIE8            equ	1190	;# 
 13013   0004A7                     PIE9            equ	1191	;# 
 13014   0004A8                     PIE10           equ	1192	;# 
 13015   0004A9                     PIE11           equ	1193	;# 
 13016   0004AA                     PIE12           equ	1194	;# 
 13017   0004AB                     PIE13           equ	1195	;# 
 13018   0004AC                     PIE14           equ	1196	;# 
 13019   0004AD                     PIE15           equ	1197	;# 
 13020   0004AE                     PIR0            equ	1198	;# 
 13021   0004AF                     PIR1            equ	1199	;# 
 13022   0004B0                     PIR2            equ	1200	;# 
 13023   0004B1                     PIR3            equ	1201	;# 
 13024   0004B2                     PIR4            equ	1202	;# 
 13025   0004B3                     PIR5            equ	1203	;# 
 13026   0004B4                     PIR6            equ	1204	;# 
 13027   0004B5                     PIR7            equ	1205	;# 
 13028   0004B6                     PIR8            equ	1206	;# 
 13029   0004B7                     PIR9            equ	1207	;# 
 13030   0004B8                     PIR10           equ	1208	;# 
 13031   0004B9                     PIR11           equ	1209	;# 
 13032   0004BA                     PIR12           equ	1210	;# 
 13033   0004BB                     PIR13           equ	1211	;# 
 13034   0004BC                     PIR14           equ	1212	;# 
 13035   0004BD                     PIR15           equ	1213	;# 
 13036   0004BE                     LATA            equ	1214	;# 
 13037   0004BF                     LATB            equ	1215	;# 
 13038   0004C0                     LATC            equ	1216	;# 
 13039   0004C1                     LATD            equ	1217	;# 
 13040   0004C2                     LATE            equ	1218	;# 
 13041   0004C3                     LATF            equ	1219	;# 
 13042   0004C6                     TRISA           equ	1222	;# 
 13043   0004C7                     TRISB           equ	1223	;# 
 13044   0004C8                     TRISC           equ	1224	;# 
 13045   0004C9                     TRISD           equ	1225	;# 
 13046   0004CA                     TRISE           equ	1226	;# 
 13047   0004CB                     TRISF           equ	1227	;# 
 13048   0004CE                     PORTA           equ	1230	;# 
 13049   0004CF                     PORTB           equ	1231	;# 
 13050   0004D0                     PORTC           equ	1232	;# 
 13051   0004D1                     PORTD           equ	1233	;# 
 13052   0004D2                     PORTE           equ	1234	;# 
 13053   0004D3                     PORTF           equ	1235	;# 
 13054   0004D6                     INTCON0         equ	1238	;# 
 13055   0004D7                     INTCON1         equ	1239	;# 
 13056   0004D8                     STATUS          equ	1240	;# 
 13057   0004D9                     FSR2            equ	1241	;# 
 13058   0004D9                     FSR2L           equ	1241	;# 
 13059   0004DA                     FSR2H           equ	1242	;# 
 13060   0004DB                     PLUSW2          equ	1243	;# 
 13061   0004DC                     PREINC2         equ	1244	;# 
 13062   0004DD                     POSTDEC2        equ	1245	;# 
 13063   0004DE                     POSTINC2        equ	1246	;# 
 13064   0004DF                     INDF2           equ	1247	;# 
 13065   0004E0                     BSR             equ	1248	;# 
 13066   0004E1                     FSR1            equ	1249	;# 
 13067   0004E1                     FSR1L           equ	1249	;# 
 13068   0004E2                     FSR1H           equ	1250	;# 
 13069   0004E3                     PLUSW1          equ	1251	;# 
 13070   0004E4                     PREINC1         equ	1252	;# 
 13071   0004E5                     POSTDEC1        equ	1253	;# 
 13072   0004E6                     POSTINC1        equ	1254	;# 
 13073   0004E7                     INDF1           equ	1255	;# 
 13074   0004E8                     WREG            equ	1256	;# 
 13075   0004E9                     FSR0            equ	1257	;# 
 13076   0004E9                     FSR0L           equ	1257	;# 
 13077   0004EA                     FSR0H           equ	1258	;# 
 13078   0004EB                     PLUSW0          equ	1259	;# 
 13079   0004EC                     PREINC0         equ	1260	;# 
 13080   0004ED                     POSTDEC0        equ	1261	;# 
 13081   0004EE                     POSTINC0        equ	1262	;# 
 13082   0004EF                     INDF0           equ	1263	;# 
 13083   0004F0                     PCON0           equ	1264	;# 
 13084   0004F1                     PCON1           equ	1265	;# 
 13085   0004F2                     CPUDOZE         equ	1266	;# 
 13086   0004F3                     PROD            equ	1267	;# 
 13087   0004F3                     PRODL           equ	1267	;# 
 13088   0004F4                     PRODH           equ	1268	;# 
 13089   0004F5                     TABLAT          equ	1269	;# 
 13090   0004F6                     TBLPTR          equ	1270	;# 
 13091   0004F6                     TBLPTRL         equ	1270	;# 
 13092   0004F7                     TBLPTRH         equ	1271	;# 
 13093   0004F8                     TBLPTRU         equ	1272	;# 
 13094   0004F9                     PCLAT           equ	1273	;# 
 13095   0004F9                     PCL             equ	1273	;# 
 13096   0004FA                     PCLATH          equ	1274	;# 
 13097   0004FB                     PCLATU          equ	1275	;# 
 13098   0004FC                     STKPTR          equ	1276	;# 
 13099   0004FD                     TOS             equ	1277	;# 
 13100   0004FD                     TOSL            equ	1277	;# 
 13101   0004FE                     TOSH            equ	1278	;# 
 13102   0004FF                     TOSU            equ	1279	;# 
 13103   000039                     CLKRCON         equ	57	;# 
 13104   00003A                     CLKRCLK         equ	58	;# 
 13105   000040                     NVMCON0         equ	64	;# 
 13106   000041                     NVMCON1         equ	65	;# 
 13107   000042                     NVMLOCK         equ	66	;# 
 13108   000043                     NVMADR          equ	67	;# 
 13109   000043                     NVMADRL         equ	67	;# 
 13110   000044                     NVMADRH         equ	68	;# 
 13111   000045                     NVMADRU         equ	69	;# 
 13112   000046                     NVMDAT          equ	70	;# 
 13113   000046                     NVMDATL         equ	70	;# 
 13114   000047                     NVMDATH         equ	71	;# 
 13115   000048                     VREGCON         equ	72	;# 
 13116   000049                     BORCON          equ	73	;# 
 13117   00004A                     HLVDCON0        equ	74	;# 
 13118   00004B                     HLVDCON1        equ	75	;# 
 13119   00004C                     ZCDCON          equ	76	;# 
 13120   000060                     PMD0            equ	96	;# 
 13121   000061                     PMD1            equ	97	;# 
 13122   000063                     PMD3            equ	99	;# 
 13123   000064                     PMD4            equ	100	;# 
 13124   000065                     PMD5            equ	101	;# 
 13125   000066                     PMD6            equ	102	;# 
 13126   000067                     PMD7            equ	103	;# 
 13127   000068                     PMD8            equ	104	;# 
 13128   00006A                     MD1CON0         equ	106	;# 
 13129   00006B                     MD1CON1         equ	107	;# 
 13130   00006C                     MD1SRC          equ	108	;# 
 13131   00006D                     MD1CARL         equ	109	;# 
 13132   00006E                     MD1CARH         equ	110	;# 
 13133   00006F                     CMOUT           equ	111	;# 
 13134   000070                     CM1CON0         equ	112	;# 
 13135   000071                     CM1CON1         equ	113	;# 
 13136   000072                     CM1NCH          equ	114	;# 
 13137   000073                     CM1PCH          equ	115	;# 
 13138   000074                     CM2CON0         equ	116	;# 
 13139   000075                     CM2CON1         equ	117	;# 
 13140   000076                     CM2NCH          equ	118	;# 
 13141   000077                     CM2PCH          equ	119	;# 
 13142   000078                     WDTCON0         equ	120	;# 
 13143   000079                     WDTCON1         equ	121	;# 
 13144   00007A                     WDTPS           equ	122	;# 
 13145   00007A                     WDTPSL          equ	122	;# 
 13146   00007B                     WDTPSH          equ	123	;# 
 13147   00007C                     WDTTMR          equ	124	;# 
 13148   00007D                     DAC1DAT         equ	125	;# 
 13149   00007D                     DAC1DATL        equ	125	;# 
 13150   00007F                     DAC1CON         equ	127	;# 
 13151   000080                     SPI1RXB         equ	128	;# 
 13152   000081                     SPI1TXB         equ	129	;# 
 13153   000082                     SPI1TCNT        equ	130	;# 
 13154   000082                     SPI1TCNTL       equ	130	;# 
 13155   000083                     SPI1TCNTH       equ	131	;# 
 13156   000084                     SPI1CON0        equ	132	;# 
 13157   000085                     SPI1CON1        equ	133	;# 
 13158   000086                     SPI1CON2        equ	134	;# 
 13159   000087                     SPI1STATUS      equ	135	;# 
 13160   000088                     SPI1TWIDTH      equ	136	;# 
 13161   000089                     SPI1BAUD        equ	137	;# 
 13162   00008A                     SPI1INTF        equ	138	;# 
 13163   00008B                     SPI1INTE        equ	139	;# 
 13164   00008C                     SPI1CLK         equ	140	;# 
 13165   00008D                     SPI2RXB         equ	141	;# 
 13166   00008E                     SPI2TXB         equ	142	;# 
 13167   00008F                     SPI2TCNT        equ	143	;# 
 13168   00008F                     SPI2TCNTL       equ	143	;# 
 13169   000090                     SPI2TCNTH       equ	144	;# 
 13170   000091                     SPI2CON0        equ	145	;# 
 13171   000092                     SPI2CON1        equ	146	;# 
 13172   000093                     SPI2CON2        equ	147	;# 
 13173   000094                     SPI2STATUS      equ	148	;# 
 13174   000095                     SPI2TWIDTH      equ	149	;# 
 13175   000096                     SPI2BAUD        equ	150	;# 
 13176   000097                     SPI2INTF        equ	151	;# 
 13177   000098                     SPI2INTE        equ	152	;# 
 13178   000099                     SPI2CLK         equ	153	;# 
 13179   0000AC                     ACTCON          equ	172	;# 
 13180   0000AD                     OSCCON1         equ	173	;# 
 13181   0000AE                     OSCCON2         equ	174	;# 
 13182   0000AF                     OSCCON3         equ	175	;# 
 13183   0000B0                     OSCTUNE         equ	176	;# 
 13184   0000B1                     OSCFRQ          equ	177	;# 
 13185   0000B1                     OSCFREQ         equ	177	;# 
 13186   0000B2                     OSCSTAT         equ	178	;# 
 13187   0000B2                     OSCSTAT1        equ	178	;# 
 13188   0000B3                     OSCEN           equ	179	;# 
 13189   0000B4                     PRLOCK          equ	180	;# 
 13190   0000B5                     SCANPR          equ	181	;# 
 13191   0000B6                     DMA1PR          equ	182	;# 
 13192   0000B7                     DMA2PR          equ	183	;# 
 13193   0000B8                     DMA3PR          equ	184	;# 
 13194   0000B9                     DMA4PR          equ	185	;# 
 13195   0000BA                     DMA5PR          equ	186	;# 
 13196   0000BB                     DMA6PR          equ	187	;# 
 13197   0000BE                     MAINPR          equ	190	;# 
 13198   0000BF                     ISRPR           equ	191	;# 
 13199   0000D4                     CLCDATA         equ	212	;# 
 13200   0000D5                     CLCSELECT       equ	213	;# 
 13201   0000D6                     CLCnCON         equ	214	;# 
 13202   0000D7                     CLCnPOL         equ	215	;# 
 13203   0000D8                     CLCnSEL0        equ	216	;# 
 13204   0000D9                     CLCnSEL1        equ	217	;# 
 13205   0000DA                     CLCnSEL2        equ	218	;# 
 13206   0000DB                     CLCnSEL3        equ	219	;# 
 13207   0000DC                     CLCnGLS0        equ	220	;# 
 13208   0000DD                     CLCnGLS1        equ	221	;# 
 13209   0000DE                     CLCnGLS2        equ	222	;# 
 13210   0000DF                     CLCnGLS3        equ	223	;# 
 13211   0000E8                     DMASELECT       equ	232	;# 
 13212   0000E9                     DMAnBUF         equ	233	;# 
 13213   0000EA                     DMAnDCNT        equ	234	;# 
 13214   0000EA                     DMAnDCNTL       equ	234	;# 
 13215   0000EB                     DMAnDCNTH       equ	235	;# 
 13216   0000EC                     DMAnDPTR        equ	236	;# 
 13217   0000EC                     DMAnDPTRL       equ	236	;# 
 13218   0000ED                     DMAnDPTRH       equ	237	;# 
 13219   0000EE                     DMAnDSZ         equ	238	;# 
 13220   0000EE                     DMAnDSZL        equ	238	;# 
 13221   0000EF                     DMAnDSZH        equ	239	;# 
 13222   0000F0                     DMAnDSA         equ	240	;# 
 13223   0000F0                     DMAnDSAL        equ	240	;# 
 13224   0000F1                     DMAnDSAH        equ	241	;# 
 13225   0000F2                     DMAnSCNT        equ	242	;# 
 13226   0000F2                     DMAnSCNTL       equ	242	;# 
 13227   0000F3                     DMAnSCNTH       equ	243	;# 
 13228   0000F4                     DMAnSPTR        equ	244	;# 
 13229   0000F4                     DMAnSPTRL       equ	244	;# 
 13230   0000F5                     DMAnSPTRH       equ	245	;# 
 13231   0000F6                     DMAnSPTRU       equ	246	;# 
 13232   0000F7                     DMAnSSZ         equ	247	;# 
 13233   0000F7                     DMAnSSZL        equ	247	;# 
 13234   0000F8                     DMAnSSZH        equ	248	;# 
 13235   0000F9                     DMAnSSA         equ	249	;# 
 13236   0000F9                     DMAnSSAL        equ	249	;# 
 13237   0000FA                     DMAnSSAH        equ	250	;# 
 13238   0000FB                     DMAnSSAU        equ	251	;# 
 13239   0000FC                     DMAnCON0        equ	252	;# 
 13240   0000FD                     DMAnCON1        equ	253	;# 
 13241   0000FE                     DMAnAIRQ        equ	254	;# 
 13242   0000FF                     DMAnSIRQ        equ	255	;# 
 13243   000200                     PPSLOCK         equ	512	;# 
 13244   000201                     RA0PPS          equ	513	;# 
 13245   000202                     RA1PPS          equ	514	;# 
 13246   000203                     RA2PPS          equ	515	;# 
 13247   000204                     RA3PPS          equ	516	;# 
 13248   000205                     RA4PPS          equ	517	;# 
 13249   000206                     RA5PPS          equ	518	;# 
 13250   000207                     RA6PPS          equ	519	;# 
 13251   000208                     RA7PPS          equ	520	;# 
 13252   000209                     RB0PPS          equ	521	;# 
 13253   00020A                     RB1PPS          equ	522	;# 
 13254   00020B                     RB2PPS          equ	523	;# 
 13255   00020C                     RB3PPS          equ	524	;# 
 13256   00020D                     RB4PPS          equ	525	;# 
 13257   00020E                     RB5PPS          equ	526	;# 
 13258   00020F                     RB6PPS          equ	527	;# 
 13259   000210                     RB7PPS          equ	528	;# 
 13260   000211                     RC0PPS          equ	529	;# 
 13261   000212                     RC1PPS          equ	530	;# 
 13262   000213                     RC2PPS          equ	531	;# 
 13263   000214                     RC3PPS          equ	532	;# 
 13264   000215                     RC4PPS          equ	533	;# 
 13265   000216                     RC5PPS          equ	534	;# 
 13266   000217                     RC6PPS          equ	535	;# 
 13267   000218                     RC7PPS          equ	536	;# 
 13268   000219                     RD0PPS          equ	537	;# 
 13269   00021A                     RD1PPS          equ	538	;# 
 13270   00021B                     RD2PPS          equ	539	;# 
 13271   00021C                     RD3PPS          equ	540	;# 
 13272   00021D                     RD4PPS          equ	541	;# 
 13273   00021E                     RD5PPS          equ	542	;# 
 13274   00021F                     RD6PPS          equ	543	;# 
 13275   000220                     RD7PPS          equ	544	;# 
 13276   000221                     RE0PPS          equ	545	;# 
 13277   000222                     RE1PPS          equ	546	;# 
 13278   000223                     RE2PPS          equ	547	;# 
 13279   000229                     RF0PPS          equ	553	;# 
 13280   00022A                     RF1PPS          equ	554	;# 
 13281   00022B                     RF2PPS          equ	555	;# 
 13282   00022C                     RF3PPS          equ	556	;# 
 13283   00022D                     RF4PPS          equ	557	;# 
 13284   00022E                     RF5PPS          equ	558	;# 
 13285   00022F                     RF6PPS          equ	559	;# 
 13286   000230                     RF7PPS          equ	560	;# 
 13287   00023E                     INT0PPS         equ	574	;# 
 13288   00023F                     INT1PPS         equ	575	;# 
 13289   000240                     INT2PPS         equ	576	;# 
 13290   000241                     T0CKIPPS        equ	577	;# 
 13291   000242                     T1CKIPPS        equ	578	;# 
 13292   000243                     T1GPPS          equ	579	;# 
 13293   000244                     T3CKIPPS        equ	580	;# 
 13294   000245                     T3GPPS          equ	581	;# 
 13295   000246                     T5CKIPPS        equ	582	;# 
 13296   000247                     T5GPPS          equ	583	;# 
 13297   000248                     T2INPPS         equ	584	;# 
 13298   000249                     T4INPPS         equ	585	;# 
 13299   00024A                     T6INPPS         equ	586	;# 
 13300   00024F                     CCP1PPS         equ	591	;# 
 13301   000250                     CCP2PPS         equ	592	;# 
 13302   000251                     CCP3PPS         equ	593	;# 
 13303   000253                     PWM1ERSPPS      equ	595	;# 
 13304   000254                     PWM2ERSPPS      equ	596	;# 
 13305   000255                     PWM3ERSPPS      equ	597	;# 
 13306   000257                     PWMIN0PPS       equ	599	;# 
 13307   000258                     PWMIN1PPS       equ	600	;# 
 13308   000259                     SMT1WINPPS      equ	601	;# 
 13309   00025A                     SMT1SIGPPS      equ	602	;# 
 13310   00025B                     CWG1PPS         equ	603	;# 
 13311   00025B                     CWG1INPPS       equ	603	;# 
 13312   00025C                     CWG2PPS         equ	604	;# 
 13313   00025C                     CWG2INPPS       equ	604	;# 
 13314   00025D                     CWG3PPS         equ	605	;# 
 13315   00025D                     CWG3INPPS       equ	605	;# 
 13316   00025E                     MD1CARLPPS      equ	606	;# 
 13317   00025E                     MDCARLPPS       equ	606	;# 
 13318   00025F                     MD1CARHPPS      equ	607	;# 
 13319   00025F                     MDCARHPPS       equ	607	;# 
 13320   000260                     MD1SRCPPS       equ	608	;# 
 13321   000260                     MDSRCPPS        equ	608	;# 
 13322   000261                     CLCIN0PPS       equ	609	;# 
 13323   000262                     CLCIN1PPS       equ	610	;# 
 13324   000263                     CLCIN2PPS       equ	611	;# 
 13325   000264                     CLCIN3PPS       equ	612	;# 
 13326   000265                     CLCIN4PPS       equ	613	;# 
 13327   000266                     CLCIN5PPS       equ	614	;# 
 13328   000267                     CLCIN6PPS       equ	615	;# 
 13329   000268                     CLCIN7PPS       equ	616	;# 
 13330   000269                     ADACTPPS        equ	617	;# 
 13331   00026A                     SPI1SCKPPS      equ	618	;# 
 13332   00026B                     SPI1SDIPPS      equ	619	;# 
 13333   00026C                     SPI1SSPPS       equ	620	;# 
 13334   00026D                     SPI2SCKPPS      equ	621	;# 
 13335   00026E                     SPI2SDIPPS      equ	622	;# 
 13336   00026F                     SPI2SSPPS       equ	623	;# 
 13337   000270                     I2C1SDAPPS      equ	624	;# 
 13338   000271                     I2C1SCLPPS      equ	625	;# 
 13339   000272                     U1RXPPS         equ	626	;# 
 13340   000273                     U1CTSPPS        equ	627	;# 
 13341   000274                     U2RXPPS         equ	628	;# 
 13342   000275                     U2CTSPPS        equ	629	;# 
 13343   000276                     U3RXPPS         equ	630	;# 
 13344   000277                     U3CTSPPS        equ	631	;# 
 13345   000278                     U4RXPPS         equ	632	;# 
 13346   000279                     U4CTSPPS        equ	633	;# 
 13347   00027A                     U5RXPPS         equ	634	;# 
 13348   00027B                     U5CTSPPS        equ	635	;# 
 13349   000286                     RC4I2C          equ	646	;# 
 13350   000287                     RC3I2C          equ	647	;# 
 13351   000288                     RB2I2C          equ	648	;# 
 13352   000289                     RB1I2C          equ	649	;# 
 13353   00028B                     I2C1RXB         equ	651	;# 
 13354   00028C                     I2C1TXB         equ	652	;# 
 13355   00028D                     I2C1CNT         equ	653	;# 
 13356   00028E                     I2C1ADB0        equ	654	;# 
 13357   00028F                     I2C1ADB1        equ	655	;# 
 13358   000290                     I2C1ADR0        equ	656	;# 
 13359   000291                     I2C1ADR1        equ	657	;# 
 13360   000292                     I2C1ADR2        equ	658	;# 
 13361   000293                     I2C1ADR3        equ	659	;# 
 13362   000294                     I2C1CON0        equ	660	;# 
 13363   000295                     I2C1CON1        equ	661	;# 
 13364   000296                     I2C1CON2        equ	662	;# 
 13365   000297                     I2C1ERR         equ	663	;# 
 13366   000298                     I2C1STAT0       equ	664	;# 
 13367   000299                     I2C1STAT1       equ	665	;# 
 13368   00029A                     I2C1PIR         equ	666	;# 
 13369   00029B                     I2C1PIE         equ	667	;# 
 13370   00029C                     I2C1CLK         equ	668	;# 
 13371   00029D                     I2C1BTO         equ	669	;# 
 13372   0002A1                     U1RXB           equ	673	;# 
 13373   0002A1                     U1RXBL          equ	673	;# 
 13374   0002A2                     U1RXCHK         equ	674	;# 
 13375   0002A3                     U1TXB           equ	675	;# 
 13376   0002A3                     U1TXBL          equ	675	;# 
 13377   0002A4                     U1TXCHK         equ	676	;# 
 13378   0002A5                     U1P1            equ	677	;# 
 13379   0002A5                     U1P1L           equ	677	;# 
 13380   0002A6                     U1P1H           equ	678	;# 
 13381   0002A7                     U1P2            equ	679	;# 
 13382   0002A7                     U1P2L           equ	679	;# 
 13383   0002A8                     U1P2H           equ	680	;# 
 13384   0002A9                     U1P3            equ	681	;# 
 13385   0002A9                     U1P3L           equ	681	;# 
 13386   0002AA                     U1P3H           equ	682	;# 
 13387   0002AB                     U1CON0          equ	683	;# 
 13388   0002AC                     U1CON1          equ	684	;# 
 13389   0002AD                     U1CON2          equ	685	;# 
 13390   0002AE                     U1BRG           equ	686	;# 
 13391   0002AE                     U1BRGL          equ	686	;# 
 13392   0002AF                     U1BRGH          equ	687	;# 
 13393   0002B0                     U1FIFO          equ	688	;# 
 13394   0002B1                     U1UIR           equ	689	;# 
 13395   0002B2                     U1ERRIR         equ	690	;# 
 13396   0002B3                     U1ERRIE         equ	691	;# 
 13397   0002B4                     U2RXB           equ	692	;# 
 13398   0002B4                     U2RXBL          equ	692	;# 
 13399   0002B6                     U2TXB           equ	694	;# 
 13400   0002B6                     U2TXBL          equ	694	;# 
 13401   0002B8                     U2P1            equ	696	;# 
 13402   0002B8                     U2P1L           equ	696	;# 
 13403   0002BA                     U2P2            equ	698	;# 
 13404   0002BA                     U2P2L           equ	698	;# 
 13405   0002BC                     U2P3            equ	700	;# 
 13406   0002BC                     U2P3L           equ	700	;# 
 13407   0002BE                     U2CON0          equ	702	;# 
 13408   0002BF                     U2CON1          equ	703	;# 
 13409   0002C0                     U2CON2          equ	704	;# 
 13410   0002C1                     U2BRG           equ	705	;# 
 13411   0002C1                     U2BRGL          equ	705	;# 
 13412   0002C2                     U2BRGH          equ	706	;# 
 13413   0002C3                     U2FIFO          equ	707	;# 
 13414   0002C4                     U2UIR           equ	708	;# 
 13415   0002C5                     U2ERRIR         equ	709	;# 
 13416   0002C6                     U2ERRIE         equ	710	;# 
 13417   0002C7                     U3RXB           equ	711	;# 
 13418   0002C7                     U3RXBL          equ	711	;# 
 13419   0002C9                     U3TXB           equ	713	;# 
 13420   0002C9                     U3TXBL          equ	713	;# 
 13421   0002CB                     U3P1            equ	715	;# 
 13422   0002CB                     U3P1L           equ	715	;# 
 13423   0002CD                     U3P2            equ	717	;# 
 13424   0002CD                     U3P2L           equ	717	;# 
 13425   0002CF                     U3P3            equ	719	;# 
 13426   0002CF                     U3P3L           equ	719	;# 
 13427   0002D1                     U3CON0          equ	721	;# 
 13428   0002D2                     U3CON1          equ	722	;# 
 13429   0002D3                     U3CON2          equ	723	;# 
 13430   0002D4                     U3BRG           equ	724	;# 
 13431   0002D4                     U3BRGL          equ	724	;# 
 13432   0002D5                     U3BRGH          equ	725	;# 
 13433   0002D6                     U3FIFO          equ	726	;# 
 13434   0002D7                     U3UIR           equ	727	;# 
 13435   0002D8                     U3ERRIR         equ	728	;# 
 13436   0002D9                     U3ERRIE         equ	729	;# 
 13437   0002DA                     U4RXB           equ	730	;# 
 13438   0002DA                     U4RXBL          equ	730	;# 
 13439   0002DC                     U4TXB           equ	732	;# 
 13440   0002DC                     U4TXBL          equ	732	;# 
 13441   0002DE                     U4P1            equ	734	;# 
 13442   0002DE                     U4P1L           equ	734	;# 
 13443   0002E0                     U4P2            equ	736	;# 
 13444   0002E0                     U4P2L           equ	736	;# 
 13445   0002E2                     U4P3            equ	738	;# 
 13446   0002E2                     U4P3L           equ	738	;# 
 13447   0002E4                     U4CON0          equ	740	;# 
 13448   0002E5                     U4CON1          equ	741	;# 
 13449   0002E6                     U4CON2          equ	742	;# 
 13450   0002E7                     U4BRG           equ	743	;# 
 13451   0002E7                     U4BRGL          equ	743	;# 
 13452   0002E8                     U4BRGH          equ	744	;# 
 13453   0002E9                     U4FIFO          equ	745	;# 
 13454   0002EA                     U4UIR           equ	746	;# 
 13455   0002EB                     U4ERRIR         equ	747	;# 
 13456   0002EC                     U4ERRIE         equ	748	;# 
 13457   0002ED                     U5RXB           equ	749	;# 
 13458   0002ED                     U5RXBL          equ	749	;# 
 13459   0002EF                     U5TXB           equ	751	;# 
 13460   0002EF                     U5TXBL          equ	751	;# 
 13461   0002F1                     U5P1            equ	753	;# 
 13462   0002F1                     U5P1L           equ	753	;# 
 13463   0002F3                     U5P2            equ	755	;# 
 13464   0002F3                     U5P2L           equ	755	;# 
 13465   0002F5                     U5P3            equ	757	;# 
 13466   0002F5                     U5P3L           equ	757	;# 
 13467   0002F7                     U5CON0          equ	759	;# 
 13468   0002F8                     U5CON1          equ	760	;# 
 13469   0002F9                     U5CON2          equ	761	;# 
 13470   0002FA                     U5BRG           equ	762	;# 
 13471   0002FA                     U5BRGL          equ	762	;# 
 13472   0002FB                     U5BRGH          equ	763	;# 
 13473   0002FC                     U5FIFO          equ	764	;# 
 13474   0002FD                     U5UIR           equ	765	;# 
 13475   0002FE                     U5ERRIR         equ	766	;# 
 13476   0002FF                     U5ERRIE         equ	767	;# 
 13477   000300                     SMT1TMR         equ	768	;# 
 13478   000300                     SMT1TMRL        equ	768	;# 
 13479   000301                     SMT1TMRH        equ	769	;# 
 13480   000302                     SMT1TMRU        equ	770	;# 
 13481   000303                     SMT1CPR         equ	771	;# 
 13482   000303                     SMT1CPRL        equ	771	;# 
 13483   000304                     SMT1CPRH        equ	772	;# 
 13484   000305                     SMT1CPRU        equ	773	;# 
 13485   000306                     SMT1CPW         equ	774	;# 
 13486   000306                     SMT1CPWL        equ	774	;# 
 13487   000307                     SMT1CPWH        equ	775	;# 
 13488   000308                     SMT1CPWU        equ	776	;# 
 13489   000309                     SMT1PR          equ	777	;# 
 13490   000309                     SMT1PRL         equ	777	;# 
 13491   00030A                     SMT1PRH         equ	778	;# 
 13492   00030B                     SMT1PRU         equ	779	;# 
 13493   00030C                     SMT1CON0        equ	780	;# 
 13494   00030D                     SMT1CON1        equ	781	;# 
 13495   00030E                     SMT1STAT        equ	782	;# 
 13496   00030F                     SMT1CLK         equ	783	;# 
 13497   000310                     SMT1SIG         equ	784	;# 
 13498   000311                     SMT1WIN         equ	785	;# 
 13499   000318                     TMR0L           equ	792	;# 
 13500   000318                     TMR0            equ	792	;# 
 13501   000319                     TMR0H           equ	793	;# 
 13502   000319                     PR0             equ	793	;# 
 13503   00031A                     T0CON0          equ	794	;# 
 13504   00031B                     T0CON1          equ	795	;# 
 13505   00031C                     TMR1            equ	796	;# 
 13506   00031C                     TMR1L           equ	796	;# 
 13507   00031D                     TMR1H           equ	797	;# 
 13508   00031E                     T1CON           equ	798	;# 
 13509   00031E                     TMR1CON         equ	798	;# 
 13510   00031F                     T1GCON          equ	799	;# 
 13511   00031F                     TMR1GCON        equ	799	;# 
 13512   000320                     T1GATE          equ	800	;# 
 13513   000320                     TMR1GATE        equ	800	;# 
 13514   000321                     T1CLK           equ	801	;# 
 13515   000321                     TMR1CLK         equ	801	;# 
 13516   000321                     PR1             equ	801	;# 
 13517   000322                     T2TMR           equ	802	;# 
 13518   000322                     TMR2            equ	802	;# 
 13519   000323                     T2PR            equ	803	;# 
 13520   000323                     PR2             equ	803	;# 
 13521   000324                     T2CON           equ	804	;# 
 13522   000325                     T2HLT           equ	805	;# 
 13523   000326                     T2CLKCON        equ	806	;# 
 13524   000326                     T2CLK           equ	806	;# 
 13525   000327                     T2RST           equ	807	;# 
 13526   000328                     TMR3            equ	808	;# 
 13527   000328                     TMR3L           equ	808	;# 
 13528   000329                     TMR3H           equ	809	;# 
 13529   00032A                     T3CON           equ	810	;# 
 13530   00032A                     TMR3CON         equ	810	;# 
 13531   00032B                     T3GCON          equ	811	;# 
 13532   00032B                     TMR3GCON        equ	811	;# 
 13533   00032C                     T3GATE          equ	812	;# 
 13534   00032C                     TMR3GATE        equ	812	;# 
 13535   00032D                     T3CLK           equ	813	;# 
 13536   00032D                     TMR3CLK         equ	813	;# 
 13537   00032D                     PR3             equ	813	;# 
 13538   00032E                     T4TMR           equ	814	;# 
 13539   00032E                     TMR4            equ	814	;# 
 13540   00032F                     T4PR            equ	815	;# 
 13541   00032F                     PR4             equ	815	;# 
 13542   000330                     T4CON           equ	816	;# 
 13543   000331                     T4HLT           equ	817	;# 
 13544   000332                     T4CLKCON        equ	818	;# 
 13545   000332                     T4CLK           equ	818	;# 
 13546   000333                     T4RST           equ	819	;# 
 13547   000334                     TMR5            equ	820	;# 
 13548   000334                     TMR5L           equ	820	;# 
 13549   000335                     TMR5H           equ	821	;# 
 13550   000336                     T5CON           equ	822	;# 
 13551   000336                     TMR5CON         equ	822	;# 
 13552   000337                     T5GCON          equ	823	;# 
 13553   000337                     TMR5GCON        equ	823	;# 
 13554   000338                     T5GATE          equ	824	;# 
 13555   000338                     TMR5GATE        equ	824	;# 
 13556   000339                     T5CLK           equ	825	;# 
 13557   000339                     TMR5CLK         equ	825	;# 
 13558   000339                     PR5             equ	825	;# 
 13559   00033A                     T6TMR           equ	826	;# 
 13560   00033A                     TMR6            equ	826	;# 
 13561   00033B                     T6PR            equ	827	;# 
 13562   00033B                     PR6             equ	827	;# 
 13563   00033C                     T6CON           equ	828	;# 
 13564   00033D                     T6HLT           equ	829	;# 
 13565   00033E                     T6CLKCON        equ	830	;# 
 13566   00033E                     T6CLK           equ	830	;# 
 13567   00033F                     T6RST           equ	831	;# 
 13568   000340                     CCPR1           equ	832	;# 
 13569   000340                     CCPR1L          equ	832	;# 
 13570   000341                     CCPR1H          equ	833	;# 
 13571   000342                     CCP1CON         equ	834	;# 
 13572   000343                     CCP1CAP         equ	835	;# 
 13573   000344                     CCPR2           equ	836	;# 
 13574   000344                     CCPR2L          equ	836	;# 
 13575   000345                     CCPR2H          equ	837	;# 
 13576   000346                     CCP2CON         equ	838	;# 
 13577   000347                     CCP2CAP         equ	839	;# 
 13578   000348                     CCPR3           equ	840	;# 
 13579   000348                     CCPR3L          equ	840	;# 
 13580   000349                     CCPR3H          equ	841	;# 
 13581   00034A                     CCP3CON         equ	842	;# 
 13582   00034B                     CCP3CAP         equ	843	;# 
 13583   00034C                     CCPTMRS0        equ	844	;# 
 13584   00034F                     CRCDATA         equ	847	;# 
 13585   00034F                     CRCDATL         equ	847	;# 
 13586   000350                     CRCDATH         equ	848	;# 
 13587   000351                     CRCACC          equ	849	;# 
 13588   000351                     CRCACCL         equ	849	;# 
 13589   000352                     CRCACCH         equ	850	;# 
 13590   000353                     CRCSHFT         equ	851	;# 
 13591   000353                     CRCSHIFTL       equ	851	;# 
 13592   000354                     CRCSHIFTH       equ	852	;# 
 13593   000355                     CRCXOR          equ	853	;# 
 13594   000355                     CRCXORL         equ	853	;# 
 13595   000356                     CRCXORH         equ	854	;# 
 13596   000357                     CRCCON0         equ	855	;# 
 13597   000358                     CRCCON1         equ	856	;# 
 13598   00035A                     SCANLADR        equ	858	;# 
 13599   00035A                     SCANLADRL       equ	858	;# 
 13600   00035B                     SCANLADRH       equ	859	;# 
 13601   00035C                     SCANLADRU       equ	860	;# 
 13602   00035D                     SCANHADR        equ	861	;# 
 13603   00035D                     SCANHADRL       equ	861	;# 
 13604   00035E                     SCANHADRH       equ	862	;# 
 13605   00035F                     SCANHADRU       equ	863	;# 
 13606   000360                     SCANCON0        equ	864	;# 
 13607   000361                     SCANTRIG        equ	865	;# 
 13608   000362                     IPR0            equ	866	;# 
 13609   000363                     IPR1            equ	867	;# 
 13610   000364                     IPR2            equ	868	;# 
 13611   000365                     IPR3            equ	869	;# 
 13612   000366                     IPR4            equ	870	;# 
 13613   000367                     IPR5            equ	871	;# 
 13614   000368                     IPR6            equ	872	;# 
 13615   000369                     IPR7            equ	873	;# 
 13616   00036A                     IPR8            equ	874	;# 
 13617   00036B                     IPR9            equ	875	;# 
 13618   00036C                     IPR10           equ	876	;# 
 13619   00036D                     IPR11           equ	877	;# 
 13620   00036E                     IPR12           equ	878	;# 
 13621   00036F                     IPR13           equ	879	;# 
 13622   000370                     IPR14           equ	880	;# 
 13623   000371                     IPR15           equ	881	;# 
 13624   000373                     STATUS_CSHAD    equ	883	;# 
 13625   000374                     WREG_CSHAD      equ	884	;# 
 13626   000375                     BSR_CSHAD       equ	885	;# 
 13627   000376                     SHADCON         equ	886	;# 
 13628   000377                     STATUS_SHAD     equ	887	;# 
 13629   000378                     WREG_SHAD       equ	888	;# 
 13630   000379                     BSR_SHAD        equ	889	;# 
 13631   00037A                     PCLATH_SHAD     equ	890	;# 
 13632   00037B                     PCLATU_SHAD     equ	891	;# 
 13633   00037C                     FSR0SH          equ	892	;# 
 13634   00037C                     FSR0L_SHAD      equ	892	;# 
 13635   00037D                     FSR0H_SHAD      equ	893	;# 
 13636   00037E                     FSR1SH          equ	894	;# 
 13637   00037E                     FSR1L_SHAD      equ	894	;# 
 13638   00037F                     FSR1H_SHAD      equ	895	;# 
 13639   000380                     FSR2SH          equ	896	;# 
 13640   000380                     FSR2L_SHAD      equ	896	;# 
 13641   000381                     FSR2H_SHAD      equ	897	;# 
 13642   000382                     PRODSH          equ	898	;# 
 13643   000382                     PRODL_SHAD      equ	898	;# 
 13644   000383                     PRODH_SHAD      equ	899	;# 
 13645   0003BC                     CWG1CLK         equ	956	;# 
 13646   0003BC                     CWG1CLKCON      equ	956	;# 
 13647   0003BD                     CWG1ISM         equ	957	;# 
 13648   0003BD                     CWG1DAT         equ	957	;# 
 13649   0003BE                     CWG1DBR         equ	958	;# 
 13650   0003BF                     CWG1DBF         equ	959	;# 
 13651   0003C0                     CWG1CON0        equ	960	;# 
 13652   0003C1                     CWG1CON1        equ	961	;# 
 13653   0003C2                     CWG1AS0         equ	962	;# 
 13654   0003C3                     CWG1AS1         equ	963	;# 
 13655   0003C4                     CWG1STR         equ	964	;# 
 13656   0003C5                     CWG2CLK         equ	965	;# 
 13657   0003C5                     CWG2CLKCON      equ	965	;# 
 13658   0003C6                     CWG2ISM         equ	966	;# 
 13659   0003C6                     CWG2DAT         equ	966	;# 
 13660   0003C7                     CWG2DBR         equ	967	;# 
 13661   0003C8                     CWG2DBF         equ	968	;# 
 13662   0003C9                     CWG2CON0        equ	969	;# 
 13663   0003CA                     CWG2CON1        equ	970	;# 
 13664   0003CB                     CWG2AS0         equ	971	;# 
 13665   0003CC                     CWG2AS1         equ	972	;# 
 13666   0003CD                     CWG2STR         equ	973	;# 
 13667   0003CE                     CWG3CLK         equ	974	;# 
 13668   0003CE                     CWG3CLKCON      equ	974	;# 
 13669   0003CF                     CWG3ISM         equ	975	;# 
 13670   0003CF                     CWG3DAT         equ	975	;# 
 13671   0003D0                     CWG3DBR         equ	976	;# 
 13672   0003D1                     CWG3DBF         equ	977	;# 
 13673   0003D2                     CWG3CON0        equ	978	;# 
 13674   0003D3                     CWG3CON1        equ	979	;# 
 13675   0003D4                     CWG3AS0         equ	980	;# 
 13676   0003D5                     CWG3AS1         equ	981	;# 
 13677   0003D6                     CWG3STR         equ	982	;# 
 13678   0003D7                     FVRCON          equ	983	;# 
 13679   0003D8                     ADCPCON         equ	984	;# 
 13680   0003D8                     ADCP            equ	984	;# 
 13681   0003D9                     ADLTH           equ	985	;# 
 13682   0003D9                     ADLTHL          equ	985	;# 
 13683   0003DA                     ADLTHH          equ	986	;# 
 13684   0003DB                     ADUTH           equ	987	;# 
 13685   0003DB                     ADUTHL          equ	987	;# 
 13686   0003DC                     ADUTHH          equ	988	;# 
 13687   0003DD                     ADERR           equ	989	;# 
 13688   0003DD                     ADERRL          equ	989	;# 
 13689   0003DE                     ADERRH          equ	990	;# 
 13690   0003DF                     ADSTPT          equ	991	;# 
 13691   0003DF                     ADSTPTL         equ	991	;# 
 13692   0003E0                     ADSTPTH         equ	992	;# 
 13693   0003E1                     ADFLTR          equ	993	;# 
 13694   0003E1                     ADFLTRL         equ	993	;# 
 13695   0003E2                     ADFLTRH         equ	994	;# 
 13696   0003E3                     ADACC           equ	995	;# 
 13697   0003E3                     ADACCL          equ	995	;# 
 13698   0003E4                     ADACCH          equ	996	;# 
 13699   0003E5                     ADACCU          equ	997	;# 
 13700   0003E6                     ADCNT           equ	998	;# 
 13701   0003E7                     ADRPT           equ	999	;# 
 13702   0003E8                     ADPREV          equ	1000	;# 
 13703   0003E8                     ADPREVL         equ	1000	;# 
 13704   0003E9                     ADPREVH         equ	1001	;# 
 13705   0003EA                     ADRES           equ	1002	;# 
 13706   0003EA                     ADRESL          equ	1002	;# 
 13707   0003EB                     ADRESH          equ	1003	;# 
 13708   0003EC                     ADPCH           equ	1004	;# 
 13709   0003EE                     ADACQ           equ	1006	;# 
 13710   0003EE                     ADACQL          equ	1006	;# 
 13711   0003EF                     ADACQH          equ	1007	;# 
 13712   0003F0                     ADCAP           equ	1008	;# 
 13713   0003F1                     ADPRE           equ	1009	;# 
 13714   0003F1                     ADPREL          equ	1009	;# 
 13715   0003F2                     ADPREH          equ	1010	;# 
 13716   0003F3                     ADCON0          equ	1011	;# 
 13717   0003F4                     ADCON1          equ	1012	;# 
 13718   0003F5                     ADCON2          equ	1013	;# 
 13719   0003F6                     ADCON3          equ	1014	;# 
 13720   0003F7                     ADSTAT          equ	1015	;# 
 13721   0003F8                     ADREF           equ	1016	;# 
 13722   0003F9                     ADACT           equ	1017	;# 
 13723   0003FA                     ADCLK           equ	1018	;# 
 13724   000400                     ANSELA          equ	1024	;# 
 13725   000401                     WPUA            equ	1025	;# 
 13726   000402                     ODCONA          equ	1026	;# 
 13727   000403                     SLRCONA         equ	1027	;# 
 13728   000404                     INLVLA          equ	1028	;# 
 13729   000405                     IOCAP           equ	1029	;# 
 13730   000406                     IOCAN           equ	1030	;# 
 13731   000407                     IOCAF           equ	1031	;# 
 13732   000408                     ANSELB          equ	1032	;# 
 13733   000409                     WPUB            equ	1033	;# 
 13734   00040A                     ODCONB          equ	1034	;# 
 13735   00040B                     SLRCONB         equ	1035	;# 
 13736   00040C                     INLVLB          equ	1036	;# 
 13737   00040D                     IOCBP           equ	1037	;# 
 13738   00040E                     IOCBN           equ	1038	;# 
 13739   00040F                     IOCBF           equ	1039	;# 
 13740   000410                     ANSELC          equ	1040	;# 
 13741   000411                     WPUC            equ	1041	;# 
 13742   000412                     ODCONC          equ	1042	;# 
 13743   000413                     SLRCONC         equ	1043	;# 
 13744   000414                     INLVLC          equ	1044	;# 
 13745   000415                     IOCCP           equ	1045	;# 
 13746   000416                     IOCCN           equ	1046	;# 
 13747   000417                     IOCCF           equ	1047	;# 
 13748   000418                     ANSELD          equ	1048	;# 
 13749   000419                     WPUD            equ	1049	;# 
 13750   00041A                     ODCOND          equ	1050	;# 
 13751   00041B                     SLRCOND         equ	1051	;# 
 13752   00041C                     INLVLD          equ	1052	;# 
 13753   000420                     ANSELE          equ	1056	;# 
 13754   000421                     WPUE            equ	1057	;# 
 13755   000422                     ODCONE          equ	1058	;# 
 13756   000423                     SLRCONE         equ	1059	;# 
 13757   000424                     INLVLE          equ	1060	;# 
 13758   000425                     IOCEP           equ	1061	;# 
 13759   000426                     IOCEN           equ	1062	;# 
 13760   000427                     IOCEF           equ	1063	;# 
 13761   000428                     ANSELF          equ	1064	;# 
 13762   000429                     WPUF            equ	1065	;# 
 13763   00042A                     ODCONF          equ	1066	;# 
 13764   00042B                     SLRCONF         equ	1067	;# 
 13765   00042C                     INLVLF          equ	1068	;# 
 13766   000440                     NCO1ACC         equ	1088	;# 
 13767   000440                     NCO1ACCL        equ	1088	;# 
 13768   000441                     NCO1ACCH        equ	1089	;# 
 13769   000442                     NCO1ACCU        equ	1090	;# 
 13770   000443                     NCO1INC         equ	1091	;# 
 13771   000443                     NCO1INCL        equ	1091	;# 
 13772   000444                     NCO1INCH        equ	1092	;# 
 13773   000445                     NCO1INCU        equ	1093	;# 
 13774   000446                     NCO1CON         equ	1094	;# 
 13775   000447                     NCO1CLK         equ	1095	;# 
 13776   000448                     NCO2ACC         equ	1096	;# 
 13777   000448                     NCO2ACCL        equ	1096	;# 
 13778   000449                     NCO2ACCH        equ	1097	;# 
 13779   00044A                     NCO2ACCU        equ	1098	;# 
 13780   00044B                     NCO2INC         equ	1099	;# 
 13781   00044B                     NCO2INCL        equ	1099	;# 
 13782   00044C                     NCO2INCH        equ	1100	;# 
 13783   00044D                     NCO2INCU        equ	1101	;# 
 13784   00044E                     NCO2CON         equ	1102	;# 
 13785   00044F                     NCO2CLK         equ	1103	;# 
 13786   000450                     NCO3ACC         equ	1104	;# 
 13787   000450                     NCO3ACCL        equ	1104	;# 
 13788   000451                     NCO3ACCH        equ	1105	;# 
 13789   000452                     NCO3ACCU        equ	1106	;# 
 13790   000453                     NCO3INC         equ	1107	;# 
 13791   000453                     NCO3INCL        equ	1107	;# 
 13792   000454                     NCO3INCH        equ	1108	;# 
 13793   000455                     NCO3INCU        equ	1109	;# 
 13794   000456                     NCO3CON         equ	1110	;# 
 13795   000457                     NCO3CLK         equ	1111	;# 
 13796   000459                     IVTLOCK         equ	1113	;# 
 13797   00045A                     IVTAD           equ	1114	;# 
 13798   00045A                     IVTADL          equ	1114	;# 
 13799   00045B                     IVTADH          equ	1115	;# 
 13800   00045C                     IVTADU          equ	1116	;# 
 13801   00045D                     IVTBASE         equ	1117	;# 
 13802   00045D                     IVTBASEL        equ	1117	;# 
 13803   00045E                     IVTBASEH        equ	1118	;# 
 13804   00045F                     IVTBASEU        equ	1119	;# 
 13805   000460                     PWM1ERS         equ	1120	;# 
 13806   000461                     PWM1CLK         equ	1121	;# 
 13807   000462                     PWM1LDS         equ	1122	;# 
 13808   000463                     PWM1PR          equ	1123	;# 
 13809   000463                     PWM1PRL         equ	1123	;# 
 13810   000464                     PWM1PRH         equ	1124	;# 
 13811   000465                     PWM1CPRE        equ	1125	;# 
 13812   000466                     PWM1PIPOS       equ	1126	;# 
 13813   000467                     PWM1GIR         equ	1127	;# 
 13814   000468                     PWM1GIE         equ	1128	;# 
 13815   000469                     PWM1CON         equ	1129	;# 
 13816   00046A                     PWM1S1CFG       equ	1130	;# 
 13817   00046B                     PWM1S1P1        equ	1131	;# 
 13818   00046B                     PWM1S1P1L       equ	1131	;# 
 13819   00046C                     PWM1S1P1H       equ	1132	;# 
 13820   00046D                     PWM1S1P2        equ	1133	;# 
 13821   00046D                     PWM1S1P2L       equ	1133	;# 
 13822   00046E                     PWM1S1P2H       equ	1134	;# 
 13823   00046F                     PWM2ERS         equ	1135	;# 
 13824   000470                     PWM2CLK         equ	1136	;# 
 13825   000471                     PWM2LDS         equ	1137	;# 
 13826   000472                     PWM2PR          equ	1138	;# 
 13827   000472                     PWM2PRL         equ	1138	;# 
 13828   000473                     PWM2PRH         equ	1139	;# 
 13829   000474                     PWM2CPRE        equ	1140	;# 
 13830   000475                     PWM2PIPOS       equ	1141	;# 
 13831   000476                     PWM2GIR         equ	1142	;# 
 13832   000477                     PWM2GIE         equ	1143	;# 
 13833   000478                     PWM2CON         equ	1144	;# 
 13834   000479                     PWM2S1CFG       equ	1145	;# 
 13835   00047A                     PWM2S1P1        equ	1146	;# 
 13836   00047A                     PWM2S1P1L       equ	1146	;# 
 13837   00047B                     PWM2S1P1H       equ	1147	;# 
 13838   00047C                     PWM2S1P2        equ	1148	;# 
 13839   00047C                     PWM2S1P2L       equ	1148	;# 
 13840   00047D                     PWM2S1P2H       equ	1149	;# 
 13841   00047E                     PWM3ERS         equ	1150	;# 
 13842   00047F                     PWM3CLK         equ	1151	;# 
 13843   000480                     PWM3LDS         equ	1152	;# 
 13844   000481                     PWM3PR          equ	1153	;# 
 13845   000481                     PWM3PRL         equ	1153	;# 
 13846   000482                     PWM3PRH         equ	1154	;# 
 13847   000483                     PWM3CPRE        equ	1155	;# 
 13848   000484                     PWM3PIPOS       equ	1156	;# 
 13849   000485                     PWM3GIR         equ	1157	;# 
 13850   000486                     PWM3GIE         equ	1158	;# 
 13851   000487                     PWM3CON         equ	1159	;# 
 13852   000488                     PWM3S1CFG       equ	1160	;# 
 13853   000489                     PWM3S1P1        equ	1161	;# 
 13854   000489                     PWM3S1P1L       equ	1161	;# 
 13855   00048A                     PWM3S1P1H       equ	1162	;# 
 13856   00048B                     PWM3S1P2        equ	1163	;# 
 13857   00048B                     PWM3S1P2L       equ	1163	;# 
 13858   00048C                     PWM3S1P2H       equ	1164	;# 
 13859   00049C                     PWMLOAD         equ	1180	;# 
 13860   00049D                     PWMEN           equ	1181	;# 
 13861   00049E                     PIE0            equ	1182	;# 
 13862   00049F                     PIE1            equ	1183	;# 
 13863   0004A0                     PIE2            equ	1184	;# 
 13864   0004A1                     PIE3            equ	1185	;# 
 13865   0004A2                     PIE4            equ	1186	;# 
 13866   0004A3                     PIE5            equ	1187	;# 
 13867   0004A4                     PIE6            equ	1188	;# 
 13868   0004A5                     PIE7            equ	1189	;# 
 13869   0004A6                     PIE8            equ	1190	;# 
 13870   0004A7                     PIE9            equ	1191	;# 
 13871   0004A8                     PIE10           equ	1192	;# 
 13872   0004A9                     PIE11           equ	1193	;# 
 13873   0004AA                     PIE12           equ	1194	;# 
 13874   0004AB                     PIE13           equ	1195	;# 
 13875   0004AC                     PIE14           equ	1196	;# 
 13876   0004AD                     PIE15           equ	1197	;# 
 13877   0004AE                     PIR0            equ	1198	;# 
 13878   0004AF                     PIR1            equ	1199	;# 
 13879   0004B0                     PIR2            equ	1200	;# 
 13880   0004B1                     PIR3            equ	1201	;# 
 13881   0004B2                     PIR4            equ	1202	;# 
 13882   0004B3                     PIR5            equ	1203	;# 
 13883   0004B4                     PIR6            equ	1204	;# 
 13884   0004B5                     PIR7            equ	1205	;# 
 13885   0004B6                     PIR8            equ	1206	;# 
 13886   0004B7                     PIR9            equ	1207	;# 
 13887   0004B8                     PIR10           equ	1208	;# 
 13888   0004B9                     PIR11           equ	1209	;# 
 13889   0004BA                     PIR12           equ	1210	;# 
 13890   0004BB                     PIR13           equ	1211	;# 
 13891   0004BC                     PIR14           equ	1212	;# 
 13892   0004BD                     PIR15           equ	1213	;# 
 13893   0004BE                     LATA            equ	1214	;# 
 13894   0004BF                     LATB            equ	1215	;# 
 13895   0004C0                     LATC            equ	1216	;# 
 13896   0004C1                     LATD            equ	1217	;# 
 13897   0004C2                     LATE            equ	1218	;# 
 13898   0004C3                     LATF            equ	1219	;# 
 13899   0004C6                     TRISA           equ	1222	;# 
 13900   0004C7                     TRISB           equ	1223	;# 
 13901   0004C8                     TRISC           equ	1224	;# 
 13902   0004C9                     TRISD           equ	1225	;# 
 13903   0004CA                     TRISE           equ	1226	;# 
 13904   0004CB                     TRISF           equ	1227	;# 
 13905   0004CE                     PORTA           equ	1230	;# 
 13906   0004CF                     PORTB           equ	1231	;# 
 13907   0004D0                     PORTC           equ	1232	;# 
 13908   0004D1                     PORTD           equ	1233	;# 
 13909   0004D2                     PORTE           equ	1234	;# 
 13910   0004D3                     PORTF           equ	1235	;# 
 13911   0004D6                     INTCON0         equ	1238	;# 
 13912   0004D7                     INTCON1         equ	1239	;# 
 13913   0004D8                     STATUS          equ	1240	;# 
 13914   0004D9                     FSR2            equ	1241	;# 
 13915   0004D9                     FSR2L           equ	1241	;# 
 13916   0004DA                     FSR2H           equ	1242	;# 
 13917   0004DB                     PLUSW2          equ	1243	;# 
 13918   0004DC                     PREINC2         equ	1244	;# 
 13919   0004DD                     POSTDEC2        equ	1245	;# 
 13920   0004DE                     POSTINC2        equ	1246	;# 
 13921   0004DF                     INDF2           equ	1247	;# 
 13922   0004E0                     BSR             equ	1248	;# 
 13923   0004E1                     FSR1            equ	1249	;# 
 13924   0004E1                     FSR1L           equ	1249	;# 
 13925   0004E2                     FSR1H           equ	1250	;# 
 13926   0004E3                     PLUSW1          equ	1251	;# 
 13927   0004E4                     PREINC1         equ	1252	;# 
 13928   0004E5                     POSTDEC1        equ	1253	;# 
 13929   0004E6                     POSTINC1        equ	1254	;# 
 13930   0004E7                     INDF1           equ	1255	;# 
 13931   0004E8                     WREG            equ	1256	;# 
 13932   0004E9                     FSR0            equ	1257	;# 
 13933   0004E9                     FSR0L           equ	1257	;# 
 13934   0004EA                     FSR0H           equ	1258	;# 
 13935   0004EB                     PLUSW0          equ	1259	;# 
 13936   0004EC                     PREINC0         equ	1260	;# 
 13937   0004ED                     POSTDEC0        equ	1261	;# 
 13938   0004EE                     POSTINC0        equ	1262	;# 
 13939   0004EF                     INDF0           equ	1263	;# 
 13940   0004F0                     PCON0           equ	1264	;# 
 13941   0004F1                     PCON1           equ	1265	;# 
 13942   0004F2                     CPUDOZE         equ	1266	;# 
 13943   0004F3                     PROD            equ	1267	;# 
 13944   0004F3                     PRODL           equ	1267	;# 
 13945   0004F4                     PRODH           equ	1268	;# 
 13946   0004F5                     TABLAT          equ	1269	;# 
 13947   0004F6                     TBLPTR          equ	1270	;# 
 13948   0004F6                     TBLPTRL         equ	1270	;# 
 13949   0004F7                     TBLPTRH         equ	1271	;# 
 13950   0004F8                     TBLPTRU         equ	1272	;# 
 13951   0004F9                     PCLAT           equ	1273	;# 
 13952   0004F9                     PCL             equ	1273	;# 
 13953   0004FA                     PCLATH          equ	1274	;# 
 13954   0004FB                     PCLATU          equ	1275	;# 
 13955   0004FC                     STKPTR          equ	1276	;# 
 13956   0004FD                     TOS             equ	1277	;# 
 13957   0004FD                     TOSL            equ	1277	;# 
 13958   0004FE                     TOSH            equ	1278	;# 
 13959   0004FF                     TOSU            equ	1279	;# 
 13960   000039                     CLKRCON         equ	57	;# 
 13961   00003A                     CLKRCLK         equ	58	;# 
 13962   000040                     NVMCON0         equ	64	;# 
 13963   000041                     NVMCON1         equ	65	;# 
 13964   000042                     NVMLOCK         equ	66	;# 
 13965   000043                     NVMADR          equ	67	;# 
 13966   000043                     NVMADRL         equ	67	;# 
 13967   000044                     NVMADRH         equ	68	;# 
 13968   000045                     NVMADRU         equ	69	;# 
 13969   000046                     NVMDAT          equ	70	;# 
 13970   000046                     NVMDATL         equ	70	;# 
 13971   000047                     NVMDATH         equ	71	;# 
 13972   000048                     VREGCON         equ	72	;# 
 13973   000049                     BORCON          equ	73	;# 
 13974   00004A                     HLVDCON0        equ	74	;# 
 13975   00004B                     HLVDCON1        equ	75	;# 
 13976   00004C                     ZCDCON          equ	76	;# 
 13977   000060                     PMD0            equ	96	;# 
 13978   000061                     PMD1            equ	97	;# 
 13979   000063                     PMD3            equ	99	;# 
 13980   000064                     PMD4            equ	100	;# 
 13981   000065                     PMD5            equ	101	;# 
 13982   000066                     PMD6            equ	102	;# 
 13983   000067                     PMD7            equ	103	;# 
 13984   000068                     PMD8            equ	104	;# 
 13985   00006A                     MD1CON0         equ	106	;# 
 13986   00006B                     MD1CON1         equ	107	;# 
 13987   00006C                     MD1SRC          equ	108	;# 
 13988   00006D                     MD1CARL         equ	109	;# 
 13989   00006E                     MD1CARH         equ	110	;# 
 13990   00006F                     CMOUT           equ	111	;# 
 13991   000070                     CM1CON0         equ	112	;# 
 13992   000071                     CM1CON1         equ	113	;# 
 13993   000072                     CM1NCH          equ	114	;# 
 13994   000073                     CM1PCH          equ	115	;# 
 13995   000074                     CM2CON0         equ	116	;# 
 13996   000075                     CM2CON1         equ	117	;# 
 13997   000076                     CM2NCH          equ	118	;# 
 13998   000077                     CM2PCH          equ	119	;# 
 13999   000078                     WDTCON0         equ	120	;# 
 14000   000079                     WDTCON1         equ	121	;# 
 14001   00007A                     WDTPS           equ	122	;# 
 14002   00007A                     WDTPSL          equ	122	;# 
 14003   00007B                     WDTPSH          equ	123	;# 
 14004   00007C                     WDTTMR          equ	124	;# 
 14005   00007D                     DAC1DAT         equ	125	;# 
 14006   00007D                     DAC1DATL        equ	125	;# 
 14007   00007F                     DAC1CON         equ	127	;# 
 14008   000080                     SPI1RXB         equ	128	;# 
 14009   000081                     SPI1TXB         equ	129	;# 
 14010   000082                     SPI1TCNT        equ	130	;# 
 14011   000082                     SPI1TCNTL       equ	130	;# 
 14012   000083                     SPI1TCNTH       equ	131	;# 
 14013   000084                     SPI1CON0        equ	132	;# 
 14014   000085                     SPI1CON1        equ	133	;# 
 14015   000086                     SPI1CON2        equ	134	;# 
 14016   000087                     SPI1STATUS      equ	135	;# 
 14017   000088                     SPI1TWIDTH      equ	136	;# 
 14018   000089                     SPI1BAUD        equ	137	;# 
 14019   00008A                     SPI1INTF        equ	138	;# 
 14020   00008B                     SPI1INTE        equ	139	;# 
 14021   00008C                     SPI1CLK         equ	140	;# 
 14022   00008D                     SPI2RXB         equ	141	;# 
 14023   00008E                     SPI2TXB         equ	142	;# 
 14024   00008F                     SPI2TCNT        equ	143	;# 
 14025   00008F                     SPI2TCNTL       equ	143	;# 
 14026   000090                     SPI2TCNTH       equ	144	;# 
 14027   000091                     SPI2CON0        equ	145	;# 
 14028   000092                     SPI2CON1        equ	146	;# 
 14029   000093                     SPI2CON2        equ	147	;# 
 14030   000094                     SPI2STATUS      equ	148	;# 
 14031   000095                     SPI2TWIDTH      equ	149	;# 
 14032   000096                     SPI2BAUD        equ	150	;# 
 14033   000097                     SPI2INTF        equ	151	;# 
 14034   000098                     SPI2INTE        equ	152	;# 
 14035   000099                     SPI2CLK         equ	153	;# 
 14036   0000AC                     ACTCON          equ	172	;# 
 14037   0000AD                     OSCCON1         equ	173	;# 
 14038   0000AE                     OSCCON2         equ	174	;# 
 14039   0000AF                     OSCCON3         equ	175	;# 
 14040   0000B0                     OSCTUNE         equ	176	;# 
 14041   0000B1                     OSCFRQ          equ	177	;# 
 14042   0000B1                     OSCFREQ         equ	177	;# 
 14043   0000B2                     OSCSTAT         equ	178	;# 
 14044   0000B2                     OSCSTAT1        equ	178	;# 
 14045   0000B3                     OSCEN           equ	179	;# 
 14046   0000B4                     PRLOCK          equ	180	;# 
 14047   0000B5                     SCANPR          equ	181	;# 
 14048   0000B6                     DMA1PR          equ	182	;# 
 14049   0000B7                     DMA2PR          equ	183	;# 
 14050   0000B8                     DMA3PR          equ	184	;# 
 14051   0000B9                     DMA4PR          equ	185	;# 
 14052   0000BA                     DMA5PR          equ	186	;# 
 14053   0000BB                     DMA6PR          equ	187	;# 
 14054   0000BE                     MAINPR          equ	190	;# 
 14055   0000BF                     ISRPR           equ	191	;# 
 14056   0000D4                     CLCDATA         equ	212	;# 
 14057   0000D5                     CLCSELECT       equ	213	;# 
 14058   0000D6                     CLCnCON         equ	214	;# 
 14059   0000D7                     CLCnPOL         equ	215	;# 
 14060   0000D8                     CLCnSEL0        equ	216	;# 
 14061   0000D9                     CLCnSEL1        equ	217	;# 
 14062   0000DA                     CLCnSEL2        equ	218	;# 
 14063   0000DB                     CLCnSEL3        equ	219	;# 
 14064   0000DC                     CLCnGLS0        equ	220	;# 
 14065   0000DD                     CLCnGLS1        equ	221	;# 
 14066   0000DE                     CLCnGLS2        equ	222	;# 
 14067   0000DF                     CLCnGLS3        equ	223	;# 
 14068   0000E8                     DMASELECT       equ	232	;# 
 14069   0000E9                     DMAnBUF         equ	233	;# 
 14070   0000EA                     DMAnDCNT        equ	234	;# 
 14071   0000EA                     DMAnDCNTL       equ	234	;# 
 14072   0000EB                     DMAnDCNTH       equ	235	;# 
 14073   0000EC                     DMAnDPTR        equ	236	;# 
 14074   0000EC                     DMAnDPTRL       equ	236	;# 
 14075   0000ED                     DMAnDPTRH       equ	237	;# 
 14076   0000EE                     DMAnDSZ         equ	238	;# 
 14077   0000EE                     DMAnDSZL        equ	238	;# 
 14078   0000EF                     DMAnDSZH        equ	239	;# 
 14079   0000F0                     DMAnDSA         equ	240	;# 
 14080   0000F0                     DMAnDSAL        equ	240	;# 
 14081   0000F1                     DMAnDSAH        equ	241	;# 
 14082   0000F2                     DMAnSCNT        equ	242	;# 
 14083   0000F2                     DMAnSCNTL       equ	242	;# 
 14084   0000F3                     DMAnSCNTH       equ	243	;# 
 14085   0000F4                     DMAnSPTR        equ	244	;# 
 14086   0000F4                     DMAnSPTRL       equ	244	;# 
 14087   0000F5                     DMAnSPTRH       equ	245	;# 
 14088   0000F6                     DMAnSPTRU       equ	246	;# 
 14089   0000F7                     DMAnSSZ         equ	247	;# 
 14090   0000F7                     DMAnSSZL        equ	247	;# 
 14091   0000F8                     DMAnSSZH        equ	248	;# 
 14092   0000F9                     DMAnSSA         equ	249	;# 
 14093   0000F9                     DMAnSSAL        equ	249	;# 
 14094   0000FA                     DMAnSSAH        equ	250	;# 
 14095   0000FB                     DMAnSSAU        equ	251	;# 
 14096   0000FC                     DMAnCON0        equ	252	;# 
 14097   0000FD                     DMAnCON1        equ	253	;# 
 14098   0000FE                     DMAnAIRQ        equ	254	;# 
 14099   0000FF                     DMAnSIRQ        equ	255	;# 
 14100   000200                     PPSLOCK         equ	512	;# 
 14101   000201                     RA0PPS          equ	513	;# 
 14102   000202                     RA1PPS          equ	514	;# 
 14103   000203                     RA2PPS          equ	515	;# 
 14104   000204                     RA3PPS          equ	516	;# 
 14105   000205                     RA4PPS          equ	517	;# 
 14106   000206                     RA5PPS          equ	518	;# 
 14107   000207                     RA6PPS          equ	519	;# 
 14108   000208                     RA7PPS          equ	520	;# 
 14109   000209                     RB0PPS          equ	521	;# 
 14110   00020A                     RB1PPS          equ	522	;# 
 14111   00020B                     RB2PPS          equ	523	;# 
 14112   00020C                     RB3PPS          equ	524	;# 
 14113   00020D                     RB4PPS          equ	525	;# 
 14114   00020E                     RB5PPS          equ	526	;# 
 14115   00020F                     RB6PPS          equ	527	;# 
 14116   000210                     RB7PPS          equ	528	;# 
 14117   000211                     RC0PPS          equ	529	;# 
 14118   000212                     RC1PPS          equ	530	;# 
 14119   000213                     RC2PPS          equ	531	;# 
 14120   000214                     RC3PPS          equ	532	;# 
 14121   000215                     RC4PPS          equ	533	;# 
 14122   000216                     RC5PPS          equ	534	;# 
 14123   000217                     RC6PPS          equ	535	;# 
 14124   000218                     RC7PPS          equ	536	;# 
 14125   000219                     RD0PPS          equ	537	;# 
 14126   00021A                     RD1PPS          equ	538	;# 
 14127   00021B                     RD2PPS          equ	539	;# 
 14128   00021C                     RD3PPS          equ	540	;# 
 14129   00021D                     RD4PPS          equ	541	;# 
 14130   00021E                     RD5PPS          equ	542	;# 
 14131   00021F                     RD6PPS          equ	543	;# 
 14132   000220                     RD7PPS          equ	544	;# 
 14133   000221                     RE0PPS          equ	545	;# 
 14134   000222                     RE1PPS          equ	546	;# 
 14135   000223                     RE2PPS          equ	547	;# 
 14136   000229                     RF0PPS          equ	553	;# 
 14137   00022A                     RF1PPS          equ	554	;# 
 14138   00022B                     RF2PPS          equ	555	;# 
 14139   00022C                     RF3PPS          equ	556	;# 
 14140   00022D                     RF4PPS          equ	557	;# 
 14141   00022E                     RF5PPS          equ	558	;# 
 14142   00022F                     RF6PPS          equ	559	;# 
 14143   000230                     RF7PPS          equ	560	;# 
 14144   00023E                     INT0PPS         equ	574	;# 
 14145   00023F                     INT1PPS         equ	575	;# 
 14146   000240                     INT2PPS         equ	576	;# 
 14147   000241                     T0CKIPPS        equ	577	;# 
 14148   000242                     T1CKIPPS        equ	578	;# 
 14149   000243                     T1GPPS          equ	579	;# 
 14150   000244                     T3CKIPPS        equ	580	;# 
 14151   000245                     T3GPPS          equ	581	;# 
 14152   000246                     T5CKIPPS        equ	582	;# 
 14153   000247                     T5GPPS          equ	583	;# 
 14154   000248                     T2INPPS         equ	584	;# 
 14155   000249                     T4INPPS         equ	585	;# 
 14156   00024A                     T6INPPS         equ	586	;# 
 14157   00024F                     CCP1PPS         equ	591	;# 
 14158   000250                     CCP2PPS         equ	592	;# 
 14159   000251                     CCP3PPS         equ	593	;# 
 14160   000253                     PWM1ERSPPS      equ	595	;# 
 14161   000254                     PWM2ERSPPS      equ	596	;# 
 14162   000255                     PWM3ERSPPS      equ	597	;# 
 14163   000257                     PWMIN0PPS       equ	599	;# 
 14164   000258                     PWMIN1PPS       equ	600	;# 
 14165   000259                     SMT1WINPPS      equ	601	;# 
 14166   00025A                     SMT1SIGPPS      equ	602	;# 
 14167   00025B                     CWG1PPS         equ	603	;# 
 14168   00025B                     CWG1INPPS       equ	603	;# 
 14169   00025C                     CWG2PPS         equ	604	;# 
 14170   00025C                     CWG2INPPS       equ	604	;# 
 14171   00025D                     CWG3PPS         equ	605	;# 
 14172   00025D                     CWG3INPPS       equ	605	;# 
 14173   00025E                     MD1CARLPPS      equ	606	;# 
 14174   00025E                     MDCARLPPS       equ	606	;# 
 14175   00025F                     MD1CARHPPS      equ	607	;# 
 14176   00025F                     MDCARHPPS       equ	607	;# 
 14177   000260                     MD1SRCPPS       equ	608	;# 
 14178   000260                     MDSRCPPS        equ	608	;# 
 14179   000261                     CLCIN0PPS       equ	609	;# 
 14180   000262                     CLCIN1PPS       equ	610	;# 
 14181   000263                     CLCIN2PPS       equ	611	;# 
 14182   000264                     CLCIN3PPS       equ	612	;# 
 14183   000265                     CLCIN4PPS       equ	613	;# 
 14184   000266                     CLCIN5PPS       equ	614	;# 
 14185   000267                     CLCIN6PPS       equ	615	;# 
 14186   000268                     CLCIN7PPS       equ	616	;# 
 14187   000269                     ADACTPPS        equ	617	;# 
 14188   00026A                     SPI1SCKPPS      equ	618	;# 
 14189   00026B                     SPI1SDIPPS      equ	619	;# 
 14190   00026C                     SPI1SSPPS       equ	620	;# 
 14191   00026D                     SPI2SCKPPS      equ	621	;# 
 14192   00026E                     SPI2SDIPPS      equ	622	;# 
 14193   00026F                     SPI2SSPPS       equ	623	;# 
 14194   000270                     I2C1SDAPPS      equ	624	;# 
 14195   000271                     I2C1SCLPPS      equ	625	;# 
 14196   000272                     U1RXPPS         equ	626	;# 
 14197   000273                     U1CTSPPS        equ	627	;# 
 14198   000274                     U2RXPPS         equ	628	;# 
 14199   000275                     U2CTSPPS        equ	629	;# 
 14200   000276                     U3RXPPS         equ	630	;# 
 14201   000277                     U3CTSPPS        equ	631	;# 
 14202   000278                     U4RXPPS         equ	632	;# 
 14203   000279                     U4CTSPPS        equ	633	;# 
 14204   00027A                     U5RXPPS         equ	634	;# 
 14205   00027B                     U5CTSPPS        equ	635	;# 
 14206   000286                     RC4I2C          equ	646	;# 
 14207   000287                     RC3I2C          equ	647	;# 
 14208   000288                     RB2I2C          equ	648	;# 
 14209   000289                     RB1I2C          equ	649	;# 
 14210   00028B                     I2C1RXB         equ	651	;# 
 14211   00028C                     I2C1TXB         equ	652	;# 
 14212   00028D                     I2C1CNT         equ	653	;# 
 14213   00028E                     I2C1ADB0        equ	654	;# 
 14214   00028F                     I2C1ADB1        equ	655	;# 
 14215   000290                     I2C1ADR0        equ	656	;# 
 14216   000291                     I2C1ADR1        equ	657	;# 
 14217   000292                     I2C1ADR2        equ	658	;# 
 14218   000293                     I2C1ADR3        equ	659	;# 
 14219   000294                     I2C1CON0        equ	660	;# 
 14220   000295                     I2C1CON1        equ	661	;# 
 14221   000296                     I2C1CON2        equ	662	;# 
 14222   000297                     I2C1ERR         equ	663	;# 
 14223   000298                     I2C1STAT0       equ	664	;# 
 14224   000299                     I2C1STAT1       equ	665	;# 
 14225   00029A                     I2C1PIR         equ	666	;# 
 14226   00029B                     I2C1PIE         equ	667	;# 
 14227   00029C                     I2C1CLK         equ	668	;# 
 14228   00029D                     I2C1BTO         equ	669	;# 
 14229   0002A1                     U1RXB           equ	673	;# 
 14230   0002A1                     U1RXBL          equ	673	;# 
 14231   0002A2                     U1RXCHK         equ	674	;# 
 14232   0002A3                     U1TXB           equ	675	;# 
 14233   0002A3                     U1TXBL          equ	675	;# 
 14234   0002A4                     U1TXCHK         equ	676	;# 
 14235   0002A5                     U1P1            equ	677	;# 
 14236   0002A5                     U1P1L           equ	677	;# 
 14237   0002A6                     U1P1H           equ	678	;# 
 14238   0002A7                     U1P2            equ	679	;# 
 14239   0002A7                     U1P2L           equ	679	;# 
 14240   0002A8                     U1P2H           equ	680	;# 
 14241   0002A9                     U1P3            equ	681	;# 
 14242   0002A9                     U1P3L           equ	681	;# 
 14243   0002AA                     U1P3H           equ	682	;# 
 14244   0002AB                     U1CON0          equ	683	;# 
 14245   0002AC                     U1CON1          equ	684	;# 
 14246   0002AD                     U1CON2          equ	685	;# 
 14247   0002AE                     U1BRG           equ	686	;# 
 14248   0002AE                     U1BRGL          equ	686	;# 
 14249   0002AF                     U1BRGH          equ	687	;# 
 14250   0002B0                     U1FIFO          equ	688	;# 
 14251   0002B1                     U1UIR           equ	689	;# 
 14252   0002B2                     U1ERRIR         equ	690	;# 
 14253   0002B3                     U1ERRIE         equ	691	;# 
 14254   0002B4                     U2RXB           equ	692	;# 
 14255   0002B4                     U2RXBL          equ	692	;# 
 14256   0002B6                     U2TXB           equ	694	;# 
 14257   0002B6                     U2TXBL          equ	694	;# 
 14258   0002B8                     U2P1            equ	696	;# 
 14259   0002B8                     U2P1L           equ	696	;# 
 14260   0002BA                     U2P2            equ	698	;# 
 14261   0002BA                     U2P2L           equ	698	;# 
 14262   0002BC                     U2P3            equ	700	;# 
 14263   0002BC                     U2P3L           equ	700	;# 
 14264   0002BE                     U2CON0          equ	702	;# 
 14265   0002BF                     U2CON1          equ	703	;# 
 14266   0002C0                     U2CON2          equ	704	;# 
 14267   0002C1                     U2BRG           equ	705	;# 
 14268   0002C1                     U2BRGL          equ	705	;# 
 14269   0002C2                     U2BRGH          equ	706	;# 
 14270   0002C3                     U2FIFO          equ	707	;# 
 14271   0002C4                     U2UIR           equ	708	;# 
 14272   0002C5                     U2ERRIR         equ	709	;# 
 14273   0002C6                     U2ERRIE         equ	710	;# 
 14274   0002C7                     U3RXB           equ	711	;# 
 14275   0002C7                     U3RXBL          equ	711	;# 
 14276   0002C9                     U3TXB           equ	713	;# 
 14277   0002C9                     U3TXBL          equ	713	;# 
 14278   0002CB                     U3P1            equ	715	;# 
 14279   0002CB                     U3P1L           equ	715	;# 
 14280   0002CD                     U3P2            equ	717	;# 
 14281   0002CD                     U3P2L           equ	717	;# 
 14282   0002CF                     U3P3            equ	719	;# 
 14283   0002CF                     U3P3L           equ	719	;# 
 14284   0002D1                     U3CON0          equ	721	;# 
 14285   0002D2                     U3CON1          equ	722	;# 
 14286   0002D3                     U3CON2          equ	723	;# 
 14287   0002D4                     U3BRG           equ	724	;# 
 14288   0002D4                     U3BRGL          equ	724	;# 
 14289   0002D5                     U3BRGH          equ	725	;# 
 14290   0002D6                     U3FIFO          equ	726	;# 
 14291   0002D7                     U3UIR           equ	727	;# 
 14292   0002D8                     U3ERRIR         equ	728	;# 
 14293   0002D9                     U3ERRIE         equ	729	;# 
 14294   0002DA                     U4RXB           equ	730	;# 
 14295   0002DA                     U4RXBL          equ	730	;# 
 14296   0002DC                     U4TXB           equ	732	;# 
 14297   0002DC                     U4TXBL          equ	732	;# 
 14298   0002DE                     U4P1            equ	734	;# 
 14299   0002DE                     U4P1L           equ	734	;# 
 14300   0002E0                     U4P2            equ	736	;# 
 14301   0002E0                     U4P2L           equ	736	;# 
 14302   0002E2                     U4P3            equ	738	;# 
 14303   0002E2                     U4P3L           equ	738	;# 
 14304   0002E4                     U4CON0          equ	740	;# 
 14305   0002E5                     U4CON1          equ	741	;# 
 14306   0002E6                     U4CON2          equ	742	;# 
 14307   0002E7                     U4BRG           equ	743	;# 
 14308   0002E7                     U4BRGL          equ	743	;# 
 14309   0002E8                     U4BRGH          equ	744	;# 
 14310   0002E9                     U4FIFO          equ	745	;# 
 14311   0002EA                     U4UIR           equ	746	;# 
 14312   0002EB                     U4ERRIR         equ	747	;# 
 14313   0002EC                     U4ERRIE         equ	748	;# 
 14314   0002ED                     U5RXB           equ	749	;# 
 14315   0002ED                     U5RXBL          equ	749	;# 
 14316   0002EF                     U5TXB           equ	751	;# 
 14317   0002EF                     U5TXBL          equ	751	;# 
 14318   0002F1                     U5P1            equ	753	;# 
 14319   0002F1                     U5P1L           equ	753	;# 
 14320   0002F3                     U5P2            equ	755	;# 
 14321   0002F3                     U5P2L           equ	755	;# 
 14322   0002F5                     U5P3            equ	757	;# 
 14323   0002F5                     U5P3L           equ	757	;# 
 14324   0002F7                     U5CON0          equ	759	;# 
 14325   0002F8                     U5CON1          equ	760	;# 
 14326   0002F9                     U5CON2          equ	761	;# 
 14327   0002FA                     U5BRG           equ	762	;# 
 14328   0002FA                     U5BRGL          equ	762	;# 
 14329   0002FB                     U5BRGH          equ	763	;# 
 14330   0002FC                     U5FIFO          equ	764	;# 
 14331   0002FD                     U5UIR           equ	765	;# 
 14332   0002FE                     U5ERRIR         equ	766	;# 
 14333   0002FF                     U5ERRIE         equ	767	;# 
 14334   000300                     SMT1TMR         equ	768	;# 
 14335   000300                     SMT1TMRL        equ	768	;# 
 14336   000301                     SMT1TMRH        equ	769	;# 
 14337   000302                     SMT1TMRU        equ	770	;# 
 14338   000303                     SMT1CPR         equ	771	;# 
 14339   000303                     SMT1CPRL        equ	771	;# 
 14340   000304                     SMT1CPRH        equ	772	;# 
 14341   000305                     SMT1CPRU        equ	773	;# 
 14342   000306                     SMT1CPW         equ	774	;# 
 14343   000306                     SMT1CPWL        equ	774	;# 
 14344   000307                     SMT1CPWH        equ	775	;# 
 14345   000308                     SMT1CPWU        equ	776	;# 
 14346   000309                     SMT1PR          equ	777	;# 
 14347   000309                     SMT1PRL         equ	777	;# 
 14348   00030A                     SMT1PRH         equ	778	;# 
 14349   00030B                     SMT1PRU         equ	779	;# 
 14350   00030C                     SMT1CON0        equ	780	;# 
 14351   00030D                     SMT1CON1        equ	781	;# 
 14352   00030E                     SMT1STAT        equ	782	;# 
 14353   00030F                     SMT1CLK         equ	783	;# 
 14354   000310                     SMT1SIG         equ	784	;# 
 14355   000311                     SMT1WIN         equ	785	;# 
 14356   000318                     TMR0L           equ	792	;# 
 14357   000318                     TMR0            equ	792	;# 
 14358   000319                     TMR0H           equ	793	;# 
 14359   000319                     PR0             equ	793	;# 
 14360   00031A                     T0CON0          equ	794	;# 
 14361   00031B                     T0CON1          equ	795	;# 
 14362   00031C                     TMR1            equ	796	;# 
 14363   00031C                     TMR1L           equ	796	;# 
 14364   00031D                     TMR1H           equ	797	;# 
 14365   00031E                     T1CON           equ	798	;# 
 14366   00031E                     TMR1CON         equ	798	;# 
 14367   00031F                     T1GCON          equ	799	;# 
 14368   00031F                     TMR1GCON        equ	799	;# 
 14369   000320                     T1GATE          equ	800	;# 
 14370   000320                     TMR1GATE        equ	800	;# 
 14371   000321                     T1CLK           equ	801	;# 
 14372   000321                     TMR1CLK         equ	801	;# 
 14373   000321                     PR1             equ	801	;# 
 14374   000322                     T2TMR           equ	802	;# 
 14375   000322                     TMR2            equ	802	;# 
 14376   000323                     T2PR            equ	803	;# 
 14377   000323                     PR2             equ	803	;# 
 14378   000324                     T2CON           equ	804	;# 
 14379   000325                     T2HLT           equ	805	;# 
 14380   000326                     T2CLKCON        equ	806	;# 
 14381   000326                     T2CLK           equ	806	;# 
 14382   000327                     T2RST           equ	807	;# 
 14383   000328                     TMR3            equ	808	;# 
 14384   000328                     TMR3L           equ	808	;# 
 14385   000329                     TMR3H           equ	809	;# 
 14386   00032A                     T3CON           equ	810	;# 
 14387   00032A                     TMR3CON         equ	810	;# 
 14388   00032B                     T3GCON          equ	811	;# 
 14389   00032B                     TMR3GCON        equ	811	;# 
 14390   00032C                     T3GATE          equ	812	;# 
 14391   00032C                     TMR3GATE        equ	812	;# 
 14392   00032D                     T3CLK           equ	813	;# 
 14393   00032D                     TMR3CLK         equ	813	;# 
 14394   00032D                     PR3             equ	813	;# 
 14395   00032E                     T4TMR           equ	814	;# 
 14396   00032E                     TMR4            equ	814	;# 
 14397   00032F                     T4PR            equ	815	;# 
 14398   00032F                     PR4             equ	815	;# 
 14399   000330                     T4CON           equ	816	;# 
 14400   000331                     T4HLT           equ	817	;# 
 14401   000332                     T4CLKCON        equ	818	;# 
 14402   000332                     T4CLK           equ	818	;# 
 14403   000333                     T4RST           equ	819	;# 
 14404   000334                     TMR5            equ	820	;# 
 14405   000334                     TMR5L           equ	820	;# 
 14406   000335                     TMR5H           equ	821	;# 
 14407   000336                     T5CON           equ	822	;# 
 14408   000336                     TMR5CON         equ	822	;# 
 14409   000337                     T5GCON          equ	823	;# 
 14410   000337                     TMR5GCON        equ	823	;# 
 14411   000338                     T5GATE          equ	824	;# 
 14412   000338                     TMR5GATE        equ	824	;# 
 14413   000339                     T5CLK           equ	825	;# 
 14414   000339                     TMR5CLK         equ	825	;# 
 14415   000339                     PR5             equ	825	;# 
 14416   00033A                     T6TMR           equ	826	;# 
 14417   00033A                     TMR6            equ	826	;# 
 14418   00033B                     T6PR            equ	827	;# 
 14419   00033B                     PR6             equ	827	;# 
 14420   00033C                     T6CON           equ	828	;# 
 14421   00033D                     T6HLT           equ	829	;# 
 14422   00033E                     T6CLKCON        equ	830	;# 
 14423   00033E                     T6CLK           equ	830	;# 
 14424   00033F                     T6RST           equ	831	;# 
 14425   000340                     CCPR1           equ	832	;# 
 14426   000340                     CCPR1L          equ	832	;# 
 14427   000341                     CCPR1H          equ	833	;# 
 14428   000342                     CCP1CON         equ	834	;# 
 14429   000343                     CCP1CAP         equ	835	;# 
 14430   000344                     CCPR2           equ	836	;# 
 14431   000344                     CCPR2L          equ	836	;# 
 14432   000345                     CCPR2H          equ	837	;# 
 14433   000346                     CCP2CON         equ	838	;# 
 14434   000347                     CCP2CAP         equ	839	;# 
 14435   000348                     CCPR3           equ	840	;# 
 14436   000348                     CCPR3L          equ	840	;# 
 14437   000349                     CCPR3H          equ	841	;# 
 14438   00034A                     CCP3CON         equ	842	;# 
 14439   00034B                     CCP3CAP         equ	843	;# 
 14440   00034C                     CCPTMRS0        equ	844	;# 
 14441   00034F                     CRCDATA         equ	847	;# 
 14442   00034F                     CRCDATL         equ	847	;# 
 14443   000350                     CRCDATH         equ	848	;# 
 14444   000351                     CRCACC          equ	849	;# 
 14445   000351                     CRCACCL         equ	849	;# 
 14446   000352                     CRCACCH         equ	850	;# 
 14447   000353                     CRCSHFT         equ	851	;# 
 14448   000353                     CRCSHIFTL       equ	851	;# 
 14449   000354                     CRCSHIFTH       equ	852	;# 
 14450   000355                     CRCXOR          equ	853	;# 
 14451   000355                     CRCXORL         equ	853	;# 
 14452   000356                     CRCXORH         equ	854	;# 
 14453   000357                     CRCCON0         equ	855	;# 
 14454   000358                     CRCCON1         equ	856	;# 
 14455   00035A                     SCANLADR        equ	858	;# 
 14456   00035A                     SCANLADRL       equ	858	;# 
 14457   00035B                     SCANLADRH       equ	859	;# 
 14458   00035C                     SCANLADRU       equ	860	;# 
 14459   00035D                     SCANHADR        equ	861	;# 
 14460   00035D                     SCANHADRL       equ	861	;# 
 14461   00035E                     SCANHADRH       equ	862	;# 
 14462   00035F                     SCANHADRU       equ	863	;# 
 14463   000360                     SCANCON0        equ	864	;# 
 14464   000361                     SCANTRIG        equ	865	;# 
 14465   000362                     IPR0            equ	866	;# 
 14466   000363                     IPR1            equ	867	;# 
 14467   000364                     IPR2            equ	868	;# 
 14468   000365                     IPR3            equ	869	;# 
 14469   000366                     IPR4            equ	870	;# 
 14470   000367                     IPR5            equ	871	;# 
 14471   000368                     IPR6            equ	872	;# 
 14472   000369                     IPR7            equ	873	;# 
 14473   00036A                     IPR8            equ	874	;# 
 14474   00036B                     IPR9            equ	875	;# 
 14475   00036C                     IPR10           equ	876	;# 
 14476   00036D                     IPR11           equ	877	;# 
 14477   00036E                     IPR12           equ	878	;# 
 14478   00036F                     IPR13           equ	879	;# 
 14479   000370                     IPR14           equ	880	;# 
 14480   000371                     IPR15           equ	881	;# 
 14481   000373                     STATUS_CSHAD    equ	883	;# 
 14482   000374                     WREG_CSHAD      equ	884	;# 
 14483   000375                     BSR_CSHAD       equ	885	;# 
 14484   000376                     SHADCON         equ	886	;# 
 14485   000377                     STATUS_SHAD     equ	887	;# 
 14486   000378                     WREG_SHAD       equ	888	;# 
 14487   000379                     BSR_SHAD        equ	889	;# 
 14488   00037A                     PCLATH_SHAD     equ	890	;# 
 14489   00037B                     PCLATU_SHAD     equ	891	;# 
 14490   00037C                     FSR0SH          equ	892	;# 
 14491   00037C                     FSR0L_SHAD      equ	892	;# 
 14492   00037D                     FSR0H_SHAD      equ	893	;# 
 14493   00037E                     FSR1SH          equ	894	;# 
 14494   00037E                     FSR1L_SHAD      equ	894	;# 
 14495   00037F                     FSR1H_SHAD      equ	895	;# 
 14496   000380                     FSR2SH          equ	896	;# 
 14497   000380                     FSR2L_SHAD      equ	896	;# 
 14498   000381                     FSR2H_SHAD      equ	897	;# 
 14499   000382                     PRODSH          equ	898	;# 
 14500   000382                     PRODL_SHAD      equ	898	;# 
 14501   000383                     PRODH_SHAD      equ	899	;# 
 14502   0003BC                     CWG1CLK         equ	956	;# 
 14503   0003BC                     CWG1CLKCON      equ	956	;# 
 14504   0003BD                     CWG1ISM         equ	957	;# 
 14505   0003BD                     CWG1DAT         equ	957	;# 
 14506   0003BE                     CWG1DBR         equ	958	;# 
 14507   0003BF                     CWG1DBF         equ	959	;# 
 14508   0003C0                     CWG1CON0        equ	960	;# 
 14509   0003C1                     CWG1CON1        equ	961	;# 
 14510   0003C2                     CWG1AS0         equ	962	;# 
 14511   0003C3                     CWG1AS1         equ	963	;# 
 14512   0003C4                     CWG1STR         equ	964	;# 
 14513   0003C5                     CWG2CLK         equ	965	;# 
 14514   0003C5                     CWG2CLKCON      equ	965	;# 
 14515   0003C6                     CWG2ISM         equ	966	;# 
 14516   0003C6                     CWG2DAT         equ	966	;# 
 14517   0003C7                     CWG2DBR         equ	967	;# 
 14518   0003C8                     CWG2DBF         equ	968	;# 
 14519   0003C9                     CWG2CON0        equ	969	;# 
 14520   0003CA                     CWG2CON1        equ	970	;# 
 14521   0003CB                     CWG2AS0         equ	971	;# 
 14522   0003CC                     CWG2AS1         equ	972	;# 
 14523   0003CD                     CWG2STR         equ	973	;# 
 14524   0003CE                     CWG3CLK         equ	974	;# 
 14525   0003CE                     CWG3CLKCON      equ	974	;# 
 14526   0003CF                     CWG3ISM         equ	975	;# 
 14527   0003CF                     CWG3DAT         equ	975	;# 
 14528   0003D0                     CWG3DBR         equ	976	;# 
 14529   0003D1                     CWG3DBF         equ	977	;# 
 14530   0003D2                     CWG3CON0        equ	978	;# 
 14531   0003D3                     CWG3CON1        equ	979	;# 
 14532   0003D4                     CWG3AS0         equ	980	;# 
 14533   0003D5                     CWG3AS1         equ	981	;# 
 14534   0003D6                     CWG3STR         equ	982	;# 
 14535   0003D7                     FVRCON          equ	983	;# 
 14536   0003D8                     ADCPCON         equ	984	;# 
 14537   0003D8                     ADCP            equ	984	;# 
 14538   0003D9                     ADLTH           equ	985	;# 
 14539   0003D9                     ADLTHL          equ	985	;# 
 14540   0003DA                     ADLTHH          equ	986	;# 
 14541   0003DB                     ADUTH           equ	987	;# 
 14542   0003DB                     ADUTHL          equ	987	;# 
 14543   0003DC                     ADUTHH          equ	988	;# 
 14544   0003DD                     ADERR           equ	989	;# 
 14545   0003DD                     ADERRL          equ	989	;# 
 14546   0003DE                     ADERRH          equ	990	;# 
 14547   0003DF                     ADSTPT          equ	991	;# 
 14548   0003DF                     ADSTPTL         equ	991	;# 
 14549   0003E0                     ADSTPTH         equ	992	;# 
 14550   0003E1                     ADFLTR          equ	993	;# 
 14551   0003E1                     ADFLTRL         equ	993	;# 
 14552   0003E2                     ADFLTRH         equ	994	;# 
 14553   0003E3                     ADACC           equ	995	;# 
 14554   0003E3                     ADACCL          equ	995	;# 
 14555   0003E4                     ADACCH          equ	996	;# 
 14556   0003E5                     ADACCU          equ	997	;# 
 14557   0003E6                     ADCNT           equ	998	;# 
 14558   0003E7                     ADRPT           equ	999	;# 
 14559   0003E8                     ADPREV          equ	1000	;# 
 14560   0003E8                     ADPREVL         equ	1000	;# 
 14561   0003E9                     ADPREVH         equ	1001	;# 
 14562   0003EA                     ADRES           equ	1002	;# 
 14563   0003EA                     ADRESL          equ	1002	;# 
 14564   0003EB                     ADRESH          equ	1003	;# 
 14565   0003EC                     ADPCH           equ	1004	;# 
 14566   0003EE                     ADACQ           equ	1006	;# 
 14567   0003EE                     ADACQL          equ	1006	;# 
 14568   0003EF                     ADACQH          equ	1007	;# 
 14569   0003F0                     ADCAP           equ	1008	;# 
 14570   0003F1                     ADPRE           equ	1009	;# 
 14571   0003F1                     ADPREL          equ	1009	;# 
 14572   0003F2                     ADPREH          equ	1010	;# 
 14573   0003F3                     ADCON0          equ	1011	;# 
 14574   0003F4                     ADCON1          equ	1012	;# 
 14575   0003F5                     ADCON2          equ	1013	;# 
 14576   0003F6                     ADCON3          equ	1014	;# 
 14577   0003F7                     ADSTAT          equ	1015	;# 
 14578   0003F8                     ADREF           equ	1016	;# 
 14579   0003F9                     ADACT           equ	1017	;# 
 14580   0003FA                     ADCLK           equ	1018	;# 
 14581   000400                     ANSELA          equ	1024	;# 
 14582   000401                     WPUA            equ	1025	;# 
 14583   000402                     ODCONA          equ	1026	;# 
 14584   000403                     SLRCONA         equ	1027	;# 
 14585   000404                     INLVLA          equ	1028	;# 
 14586   000405                     IOCAP           equ	1029	;# 
 14587   000406                     IOCAN           equ	1030	;# 
 14588   000407                     IOCAF           equ	1031	;# 
 14589   000408                     ANSELB          equ	1032	;# 
 14590   000409                     WPUB            equ	1033	;# 
 14591   00040A                     ODCONB          equ	1034	;# 
 14592   00040B                     SLRCONB         equ	1035	;# 
 14593   00040C                     INLVLB          equ	1036	;# 
 14594   00040D                     IOCBP           equ	1037	;# 
 14595   00040E                     IOCBN           equ	1038	;# 
 14596   00040F                     IOCBF           equ	1039	;# 
 14597   000410                     ANSELC          equ	1040	;# 
 14598   000411                     WPUC            equ	1041	;# 
 14599   000412                     ODCONC          equ	1042	;# 
 14600   000413                     SLRCONC         equ	1043	;# 
 14601   000414                     INLVLC          equ	1044	;# 
 14602   000415                     IOCCP           equ	1045	;# 
 14603   000416                     IOCCN           equ	1046	;# 
 14604   000417                     IOCCF           equ	1047	;# 
 14605   000418                     ANSELD          equ	1048	;# 
 14606   000419                     WPUD            equ	1049	;# 
 14607   00041A                     ODCOND          equ	1050	;# 
 14608   00041B                     SLRCOND         equ	1051	;# 
 14609   00041C                     INLVLD          equ	1052	;# 
 14610   000420                     ANSELE          equ	1056	;# 
 14611   000421                     WPUE            equ	1057	;# 
 14612   000422                     ODCONE          equ	1058	;# 
 14613   000423                     SLRCONE         equ	1059	;# 
 14614   000424                     INLVLE          equ	1060	;# 
 14615   000425                     IOCEP           equ	1061	;# 
 14616   000426                     IOCEN           equ	1062	;# 
 14617   000427                     IOCEF           equ	1063	;# 
 14618   000428                     ANSELF          equ	1064	;# 
 14619   000429                     WPUF            equ	1065	;# 
 14620   00042A                     ODCONF          equ	1066	;# 
 14621   00042B                     SLRCONF         equ	1067	;# 
 14622   00042C                     INLVLF          equ	1068	;# 
 14623   000440                     NCO1ACC         equ	1088	;# 
 14624   000440                     NCO1ACCL        equ	1088	;# 
 14625   000441                     NCO1ACCH        equ	1089	;# 
 14626   000442                     NCO1ACCU        equ	1090	;# 
 14627   000443                     NCO1INC         equ	1091	;# 
 14628   000443                     NCO1INCL        equ	1091	;# 
 14629   000444                     NCO1INCH        equ	1092	;# 
 14630   000445                     NCO1INCU        equ	1093	;# 
 14631   000446                     NCO1CON         equ	1094	;# 
 14632   000447                     NCO1CLK         equ	1095	;# 
 14633   000448                     NCO2ACC         equ	1096	;# 
 14634   000448                     NCO2ACCL        equ	1096	;# 
 14635   000449                     NCO2ACCH        equ	1097	;# 
 14636   00044A                     NCO2ACCU        equ	1098	;# 
 14637   00044B                     NCO2INC         equ	1099	;# 
 14638   00044B                     NCO2INCL        equ	1099	;# 
 14639   00044C                     NCO2INCH        equ	1100	;# 
 14640   00044D                     NCO2INCU        equ	1101	;# 
 14641   00044E                     NCO2CON         equ	1102	;# 
 14642   00044F                     NCO2CLK         equ	1103	;# 
 14643   000450                     NCO3ACC         equ	1104	;# 
 14644   000450                     NCO3ACCL        equ	1104	;# 
 14645   000451                     NCO3ACCH        equ	1105	;# 
 14646   000452                     NCO3ACCU        equ	1106	;# 
 14647   000453                     NCO3INC         equ	1107	;# 
 14648   000453                     NCO3INCL        equ	1107	;# 
 14649   000454                     NCO3INCH        equ	1108	;# 
 14650   000455                     NCO3INCU        equ	1109	;# 
 14651   000456                     NCO3CON         equ	1110	;# 
 14652   000457                     NCO3CLK         equ	1111	;# 
 14653   000459                     IVTLOCK         equ	1113	;# 
 14654   00045A                     IVTAD           equ	1114	;# 
 14655   00045A                     IVTADL          equ	1114	;# 
 14656   00045B                     IVTADH          equ	1115	;# 
 14657   00045C                     IVTADU          equ	1116	;# 
 14658   00045D                     IVTBASE         equ	1117	;# 
 14659   00045D                     IVTBASEL        equ	1117	;# 
 14660   00045E                     IVTBASEH        equ	1118	;# 
 14661   00045F                     IVTBASEU        equ	1119	;# 
 14662   000460                     PWM1ERS         equ	1120	;# 
 14663   000461                     PWM1CLK         equ	1121	;# 
 14664   000462                     PWM1LDS         equ	1122	;# 
 14665   000463                     PWM1PR          equ	1123	;# 
 14666   000463                     PWM1PRL         equ	1123	;# 
 14667   000464                     PWM1PRH         equ	1124	;# 
 14668   000465                     PWM1CPRE        equ	1125	;# 
 14669   000466                     PWM1PIPOS       equ	1126	;# 
 14670   000467                     PWM1GIR         equ	1127	;# 
 14671   000468                     PWM1GIE         equ	1128	;# 
 14672   000469                     PWM1CON         equ	1129	;# 
 14673   00046A                     PWM1S1CFG       equ	1130	;# 
 14674   00046B                     PWM1S1P1        equ	1131	;# 
 14675   00046B                     PWM1S1P1L       equ	1131	;# 
 14676   00046C                     PWM1S1P1H       equ	1132	;# 
 14677   00046D                     PWM1S1P2        equ	1133	;# 
 14678   00046D                     PWM1S1P2L       equ	1133	;# 
 14679   00046E                     PWM1S1P2H       equ	1134	;# 
 14680   00046F                     PWM2ERS         equ	1135	;# 
 14681   000470                     PWM2CLK         equ	1136	;# 
 14682   000471                     PWM2LDS         equ	1137	;# 
 14683   000472                     PWM2PR          equ	1138	;# 
 14684   000472                     PWM2PRL         equ	1138	;# 
 14685   000473                     PWM2PRH         equ	1139	;# 
 14686   000474                     PWM2CPRE        equ	1140	;# 
 14687   000475                     PWM2PIPOS       equ	1141	;# 
 14688   000476                     PWM2GIR         equ	1142	;# 
 14689   000477                     PWM2GIE         equ	1143	;# 
 14690   000478                     PWM2CON         equ	1144	;# 
 14691   000479                     PWM2S1CFG       equ	1145	;# 
 14692   00047A                     PWM2S1P1        equ	1146	;# 
 14693   00047A                     PWM2S1P1L       equ	1146	;# 
 14694   00047B                     PWM2S1P1H       equ	1147	;# 
 14695   00047C                     PWM2S1P2        equ	1148	;# 
 14696   00047C                     PWM2S1P2L       equ	1148	;# 
 14697   00047D                     PWM2S1P2H       equ	1149	;# 
 14698   00047E                     PWM3ERS         equ	1150	;# 
 14699   00047F                     PWM3CLK         equ	1151	;# 
 14700   000480                     PWM3LDS         equ	1152	;# 
 14701   000481                     PWM3PR          equ	1153	;# 
 14702   000481                     PWM3PRL         equ	1153	;# 
 14703   000482                     PWM3PRH         equ	1154	;# 
 14704   000483                     PWM3CPRE        equ	1155	;# 
 14705   000484                     PWM3PIPOS       equ	1156	;# 
 14706   000485                     PWM3GIR         equ	1157	;# 
 14707   000486                     PWM3GIE         equ	1158	;# 
 14708   000487                     PWM3CON         equ	1159	;# 
 14709   000488                     PWM3S1CFG       equ	1160	;# 
 14710   000489                     PWM3S1P1        equ	1161	;# 
 14711   000489                     PWM3S1P1L       equ	1161	;# 
 14712   00048A                     PWM3S1P1H       equ	1162	;# 
 14713   00048B                     PWM3S1P2        equ	1163	;# 
 14714   00048B                     PWM3S1P2L       equ	1163	;# 
 14715   00048C                     PWM3S1P2H       equ	1164	;# 
 14716   00049C                     PWMLOAD         equ	1180	;# 
 14717   00049D                     PWMEN           equ	1181	;# 
 14718   00049E                     PIE0            equ	1182	;# 
 14719   00049F                     PIE1            equ	1183	;# 
 14720   0004A0                     PIE2            equ	1184	;# 
 14721   0004A1                     PIE3            equ	1185	;# 
 14722   0004A2                     PIE4            equ	1186	;# 
 14723   0004A3                     PIE5            equ	1187	;# 
 14724   0004A4                     PIE6            equ	1188	;# 
 14725   0004A5                     PIE7            equ	1189	;# 
 14726   0004A6                     PIE8            equ	1190	;# 
 14727   0004A7                     PIE9            equ	1191	;# 
 14728   0004A8                     PIE10           equ	1192	;# 
 14729   0004A9                     PIE11           equ	1193	;# 
 14730   0004AA                     PIE12           equ	1194	;# 
 14731   0004AB                     PIE13           equ	1195	;# 
 14732   0004AC                     PIE14           equ	1196	;# 
 14733   0004AD                     PIE15           equ	1197	;# 
 14734   0004AE                     PIR0            equ	1198	;# 
 14735   0004AF                     PIR1            equ	1199	;# 
 14736   0004B0                     PIR2            equ	1200	;# 
 14737   0004B1                     PIR3            equ	1201	;# 
 14738   0004B2                     PIR4            equ	1202	;# 
 14739   0004B3                     PIR5            equ	1203	;# 
 14740   0004B4                     PIR6            equ	1204	;# 
 14741   0004B5                     PIR7            equ	1205	;# 
 14742   0004B6                     PIR8            equ	1206	;# 
 14743   0004B7                     PIR9            equ	1207	;# 
 14744   0004B8                     PIR10           equ	1208	;# 
 14745   0004B9                     PIR11           equ	1209	;# 
 14746   0004BA                     PIR12           equ	1210	;# 
 14747   0004BB                     PIR13           equ	1211	;# 
 14748   0004BC                     PIR14           equ	1212	;# 
 14749   0004BD                     PIR15           equ	1213	;# 
 14750   0004BE                     LATA            equ	1214	;# 
 14751   0004BF                     LATB            equ	1215	;# 
 14752   0004C0                     LATC            equ	1216	;# 
 14753   0004C1                     LATD            equ	1217	;# 
 14754   0004C2                     LATE            equ	1218	;# 
 14755   0004C3                     LATF            equ	1219	;# 
 14756   0004C6                     TRISA           equ	1222	;# 
 14757   0004C7                     TRISB           equ	1223	;# 
 14758   0004C8                     TRISC           equ	1224	;# 
 14759   0004C9                     TRISD           equ	1225	;# 
 14760   0004CA                     TRISE           equ	1226	;# 
 14761   0004CB                     TRISF           equ	1227	;# 
 14762   0004CE                     PORTA           equ	1230	;# 
 14763   0004CF                     PORTB           equ	1231	;# 
 14764   0004D0                     PORTC           equ	1232	;# 
 14765   0004D1                     PORTD           equ	1233	;# 
 14766   0004D2                     PORTE           equ	1234	;# 
 14767   0004D3                     PORTF           equ	1235	;# 
 14768   0004D6                     INTCON0         equ	1238	;# 
 14769   0004D7                     INTCON1         equ	1239	;# 
 14770   0004D8                     STATUS          equ	1240	;# 
 14771   0004D9                     FSR2            equ	1241	;# 
 14772   0004D9                     FSR2L           equ	1241	;# 
 14773   0004DA                     FSR2H           equ	1242	;# 
 14774   0004DB                     PLUSW2          equ	1243	;# 
 14775   0004DC                     PREINC2         equ	1244	;# 
 14776   0004DD                     POSTDEC2        equ	1245	;# 
 14777   0004DE                     POSTINC2        equ	1246	;# 
 14778   0004DF                     INDF2           equ	1247	;# 
 14779   0004E0                     BSR             equ	1248	;# 
 14780   0004E1                     FSR1            equ	1249	;# 
 14781   0004E1                     FSR1L           equ	1249	;# 
 14782   0004E2                     FSR1H           equ	1250	;# 
 14783   0004E3                     PLUSW1          equ	1251	;# 
 14784   0004E4                     PREINC1         equ	1252	;# 
 14785   0004E5                     POSTDEC1        equ	1253	;# 
 14786   0004E6                     POSTINC1        equ	1254	;# 
 14787   0004E7                     INDF1           equ	1255	;# 
 14788   0004E8                     WREG            equ	1256	;# 
 14789   0004E9                     FSR0            equ	1257	;# 
 14790   0004E9                     FSR0L           equ	1257	;# 
 14791   0004EA                     FSR0H           equ	1258	;# 
 14792   0004EB                     PLUSW0          equ	1259	;# 
 14793   0004EC                     PREINC0         equ	1260	;# 
 14794   0004ED                     POSTDEC0        equ	1261	;# 
 14795   0004EE                     POSTINC0        equ	1262	;# 
 14796   0004EF                     INDF0           equ	1263	;# 
 14797   0004F0                     PCON0           equ	1264	;# 
 14798   0004F1                     PCON1           equ	1265	;# 
 14799   0004F2                     CPUDOZE         equ	1266	;# 
 14800   0004F3                     PROD            equ	1267	;# 
 14801   0004F3                     PRODL           equ	1267	;# 
 14802   0004F4                     PRODH           equ	1268	;# 
 14803   0004F5                     TABLAT          equ	1269	;# 
 14804   0004F6                     TBLPTR          equ	1270	;# 
 14805   0004F6                     TBLPTRL         equ	1270	;# 
 14806   0004F7                     TBLPTRH         equ	1271	;# 
 14807   0004F8                     TBLPTRU         equ	1272	;# 
 14808   0004F9                     PCLAT           equ	1273	;# 
 14809   0004F9                     PCL             equ	1273	;# 
 14810   0004FA                     PCLATH          equ	1274	;# 
 14811   0004FB                     PCLATU          equ	1275	;# 
 14812   0004FC                     STKPTR          equ	1276	;# 
 14813   0004FD                     TOS             equ	1277	;# 
 14814   0004FD                     TOSL            equ	1277	;# 
 14815   0004FE                     TOSH            equ	1278	;# 
 14816   0004FF                     TOSU            equ	1279	;# 
 14817                           
 14818 ;; Function _I2C1_Deinitialize is unused but had its address taken
 14819   000000                     _I2C1_Deinitialize equ	0
 14820                           
 14821 ;; Function _I2C1_Read is unused but had its address taken
 14822   000000                     _I2C1_Read      equ	0
 14823                           
 14824 ;; Function _I2C1_ErrorGet is unused but had its address taken
 14825   000000                     _I2C1_ErrorGet  equ	0
 14826                           
 14827 ;; Function _I2C1_CallbackRegister is unused but had its address taken
 14828   000000                     _I2C1_CallbackRegister equ	0
 14829                           
 14830 ;; Function _TMR2_DefaultPeriodMatchCallback is unused but had its address taken
 14831   000000                     _TMR2_DefaultPeriodMatchCallback equ	0
 14832                           
 14833 ;; Function _TMR4_DefaultPeriodMatchCallback is unused but had its address taken
 14834   000000                     _TMR4_DefaultPeriodMatchCallback equ	0
 14835                           
 14836 ;; Function _TMR0_DefaultCallback is unused but had its address taken
 14837   000000                     _TMR0_DefaultCallback equ	0
 14838                           
 14839                           	psect	idataBANK6
 14840   016964                     __pidataBANK6:
 14841                           	callstack 0
 14842                           
 14843                           ;initializer for _gyro_lsb_per_dps
 14844   016964  0000               	dw	0
 14845   016966  4303               	dw	17155
 14846                           
 14847                           ;initializer for _accel_lsb_per_g
 14848   016968  0000               	dw	0
 14849   01696A  4680               	dw	18048
 14850                           
 14851                           ;initializer for i2c_lcd_goto@F17405
 14852   01696C  00                 	db	0
 14853   01696D  40                 	db	64
 14854   01696E  14                 	db	20
 14855   01696F  54                 	db	84
 14856                           
 14857                           ;initializer for _fixedPhone
 14858   016970  F0                 	db	low STR_3
 14859   016971  FE                 	db	high STR_3
 14860                           
 14861                           ;initializer for _fixedDisease
 14862   016972  AD                 	db	low STR_2
 14863   016973  FE                 	db	high STR_2
 14864                           
 14865                           ;initializer for _fixedPatientName
 14866   016974  80                 	db	low STR_1
 14867   016975  FF                 	db	high STR_1
 14868                           
 14869                           	psect	idataBANK7
 14870   0169CC                     __pidataBANK7:
 14871                           	callstack 0
 14872                           
 14873                           ;initializer for _sensor_config
 14874   0169CC  000F               	dw	15
 14875   0169CE  61A8               	dw	25000
 14876   0169D0  0000               	dw	0
 14877   0169D2  000A               	dw	10
 14878   0169D4  00                 	db	0
 14879   0169D5  00                 	db	0
 14880                           
 14881                           	psect	mediumconst
 14882   00FD7E                     __pmediumconst:
 14883                           	callstack 0
 14884   00FD7E  00                 	db	0
 14885   00FD7F                     _I2C1_Host:
 14886                           	callstack 0
 14887   00FD7F  FA                 	db	low _I2C1_Initialize
 14888   00FD80  5D                 	db	high _I2C1_Initialize
 14889   00FD81  01                 	db	low (_I2C1_Initialize shr (0+16))
 14890   00FD82  00                 	db	0
 14891   00FD83  00                 	db	0
 14892   00FD84  00                 	db	0
 14893   00FD85  AE                 	db	low _I2C1_Write
 14894   00FD86  5F                 	db	high _I2C1_Write
 14895   00FD87  01                 	db	low (_I2C1_Write shr (0+16))
 14896   00FD88  00                 	db	0
 14897   00FD89  00                 	db	0
 14898   00FD8A  00                 	db	0
 14899   00FD8B  5A                 	db	low _I2C1_WriteRead
 14900   00FD8C  5F                 	db	high _I2C1_WriteRead
 14901   00FD8D  01                 	db	low (_I2C1_WriteRead shr (0+16))
 14902   00FD8E  00                 	db	0
 14903   00FD8F  00                 	db	0
 14904   00FD90  00                 	db	0
 14905   00FD91  00                 	db	0
 14906   00FD92  00                 	db	0
 14907   00FD93  00                 	db	0
 14908   00FD94  72                 	db	low _I2C1_IsBusy
 14909   00FD95  65                 	db	high _I2C1_IsBusy
 14910   00FD96  01                 	db	low (_I2C1_IsBusy shr (0+16))
 14911   00FD97  00                 	db	0
 14912   00FD98  00                 	db	0
 14913   00FD99  00                 	db	0
 14914   00FD9A  00                 	db	0
 14915   00FD9B  00                 	db	0
 14916   00FD9C  00                 	db	0
 14917   00FD9D                     __end_of_I2C1_Host:
 14918                           	callstack 0
 14919   00FD9D                     _atanlo:
 14920                           	callstack 0
 14921   00FD9D  3769               	dw	14185
 14922   00FD9F  31AC               	dw	12716
 14923   00FDA1  2168               	dw	8552
 14924   00FDA3  3322               	dw	13090
 14925   00FDA5  0FB4               	dw	4020
 14926   00FDA7  3314               	dw	13076
 14927   00FDA9  2168               	dw	8552
 14928   00FDAB  33A2               	dw	13218
 14929   00FDAD                     __end_of_atanlo:
 14930                           	callstack 0
 14931   00FDAD                     _atanhi:
 14932                           	callstack 0
 14933   00FDAD  6338               	dw	25400
 14934   00FDAF  3EED               	dw	16109
 14935   00FDB1  0FDA               	dw	4058
 14936   00FDB3  3F49               	dw	16201
 14937   00FDB5  985E               	dw	39006
 14938   00FDB7  3F7B               	dw	16251
 14939   00FDB9  0FDA               	dw	4058
 14940   00FDBB  3FC9               	dw	16329
 14941   00FDBD                     __end_of_atanhi:
 14942                           	callstack 0
 14943   00FDBD  AC25               	dw	44069
 14944   00FDBF  3D7C               	dw	15740
 14945   00FDC1                     __end_of_aT4:
 14946                           	callstack 0
 14947   00FDC1  1247               	dw	4679
 14948   00FDC3  BDDA               	dw	48602
 14949   00FDC5                     __end_of_aT3:
 14950                           	callstack 0
 14951   00FDC5  F50D               	dw	62733
 14952   00FDC7  3E11               	dw	15889
 14953   00FDC9                     __end_of_aT2:
 14954                           	callstack 0
 14955   00FDC9  CA98               	dw	51864
 14956   00FDCB  BE4C               	dw	48716
 14957   00FDCD                     __end_of_aT1:
 14958                           	callstack 0
 14959   00FDCD  AAA9               	dw	43689
 14960   00FDCF  3EAA               	dw	16042
 14961   00FDD1                     __end_of_aT0:
 14962                           	callstack 0
 14963   00FDD1  BD2E               	dw	48430
 14964   00FDD3  B3BB               	dw	46011
 14965   00FDD5                     __end_of_pi_lo:
 14966                           	callstack 0
 14967   00FDD5  0FDB               	dw	4059
 14968   00FDD7  4049               	dw	16457
 14969   00FDD9                     __end_of_pi:
 14970                           	callstack 0
 14971   00FDD9                     STR_22:
 14972   00FDD9  41                 	db	65	;'A'
 14973   00FDDA  4C                 	db	76	;'L'
 14974   00FDDB  45                 	db	69	;'E'
 14975   00FDDC  52                 	db	82	;'R'
 14976   00FDDD  54                 	db	84	;'T'
 14977   00FDDE  41                 	db	65	;'A'
 14978   00FDDF  21                 	db	33
 14979   00FDE0  20                 	db	32
 14980   00FDE1  4F                 	db	79	;'O'
 14981   00FDE2  62                 	db	98	;'b'
 14982   00FDE3  73                 	db	115	;'s'
 14983   00FDE4  74                 	db	116	;'t'
 14984   00FDE5  61                 	db	97	;'a'
 14985   00FDE6  63                 	db	99	;'c'
 14986   00FDE7  75                 	db	117	;'u'
 14987   00FDE8  6C                 	db	108	;'l'
 14988   00FDE9  6F                 	db	111	;'o'
 14989   00FDEA  20                 	db	32
 14990   00FDEB  61                 	db	97	;'a'
 14991   00FDEC  20                 	db	32
 14992   00FDED  25                 	db	37
 14993   00FDEE  2E                 	db	46
 14994   00FDEF  31                 	db	49	;'1'
 14995   00FDF0  66                 	db	102	;'f'
 14996   00FDF1  63                 	db	99	;'c'
 14997   00FDF2  6D                 	db	109	;'m'
 14998   00FDF3  2E                 	db	46
 14999   00FDF4  20                 	db	32
 15000   00FDF5  4D                 	db	77	;'M'
 15001   00FDF6  4F                 	db	79	;'O'
 15002   00FDF7  54                 	db	84	;'T'
 15003   00FDF8  4F                 	db	79	;'O'
 15004   00FDF9  52                 	db	82	;'R'
 15005   00FDFA  45                 	db	69	;'E'
 15006   00FDFB  53                 	db	83	;'S'
 15007   00FDFC  20                 	db	32
 15008   00FDFD  44                 	db	68	;'D'
 15009   00FDFE  45                 	db	69	;'E'
 15010   00FDFF  54                 	db	84	;'T'
 15011   00FE00  45                 	db	69	;'E'
 15012   00FE01  4E                 	db	78	;'N'
 15013   00FE02  49                 	db	73	;'I'
 15014   00FE03  44                 	db	68	;'D'
 15015   00FE04  4F                 	db	79	;'O'
 15016   00FE05  53                 	db	83	;'S'
 15017   00FE06  2E                 	db	46
 15018   00FE07  0D                 	db	13
 15019   00FE08  0A                 	db	10
 15020   00FE09  00                 	db	0
 15021   00FE0A                     STR_4:
 15022   00FE0A  4D                 	db	77	;'M'
 15023   00FE0B  50                 	db	80	;'P'
 15024   00FE0C  55                 	db	85	;'U'
 15025   00FE0D  36                 	db	54	;'6'
 15026   00FE0E  30                 	db	48	;'0'
 15027   00FE0F  35                 	db	53	;'5'
 15028   00FE10  30                 	db	48	;'0'
 15029   00FE11  3A                 	db	58	;':'
 15030   00FE12  20                 	db	32
 15031   00FE13  49                 	db	73	;'I'
 15032   00FE14  6E                 	db	110	;'n'
 15033   00FE15  69                 	db	105	;'i'
 15034   00FE16  63                 	db	99	;'c'
 15035   00FE17  69                 	db	105	;'i'
 15036   00FE18  61                 	db	97	;'a'
 15037   00FE19  6C                 	db	108	;'l'
 15038   00FE1A  69                 	db	105	;'i'
 15039   00FE1B  7A                 	db	122	;'z'
 15040   00FE1C  61                 	db	97	;'a'
 15041   00FE1D  64                 	db	100	;'d'
 15042   00FE1E  6F                 	db	111	;'o'
 15043   00FE1F  20                 	db	32
 15044   00FE20  63                 	db	99	;'c'
 15045   00FE21  6F                 	db	111	;'o'
 15046   00FE22  72                 	db	114	;'r'
 15047   00FE23  72                 	db	114	;'r'
 15048   00FE24  65                 	db	101	;'e'
 15049   00FE25  63                 	db	99	;'c'
 15050   00FE26  74                 	db	116	;'t'
 15051   00FE27  61                 	db	97	;'a'
 15052   00FE28  6D                 	db	109	;'m'
 15053   00FE29  65                 	db	101	;'e'
 15054   00FE2A  6E                 	db	110	;'n'
 15055   00FE2B  74                 	db	116	;'t'
 15056   00FE2C  65                 	db	101	;'e'
 15057   00FE2D  2E                 	db	46
 15058   00FE2E  0D                 	db	13
 15059   00FE2F  0A                 	db	10
 15060   00FE30  00                 	db	0
 15061   00FE31                     STR_5:
 15062   00FE31  4D                 	db	77	;'M'
 15063   00FE32  50                 	db	80	;'P'
 15064   00FE33  55                 	db	85	;'U'
 15065   00FE34  36                 	db	54	;'6'
 15066   00FE35  30                 	db	48	;'0'
 15067   00FE36  35                 	db	53	;'5'
 15068   00FE37  30                 	db	48	;'0'
 15069   00FE38  3A                 	db	58	;':'
 15070   00FE39  20                 	db	32
 15071   00FE3A  43                 	db	67	;'C'
 15072   00FE3B  61                 	db	97	;'a'
 15073   00FE3C  6C                 	db	108	;'l'
 15074   00FE3D  69                 	db	105	;'i'
 15075   00FE3E  62                 	db	98	;'b'
 15076   00FE3F  72                 	db	114	;'r'
 15077   00FE40  61                 	db	97	;'a'
 15078   00FE41  63                 	db	99	;'c'
 15079   00FE42  69                 	db	105	;'i'
 15080   00FE43  6F                 	db	111	;'o'
 15081   00FE44  6E                 	db	110	;'n'
 15082   00FE45  20                 	db	32
 15083   00FE46  66                 	db	102	;'f'
 15084   00FE47  69                 	db	105	;'i'
 15085   00FE48  6E                 	db	110	;'n'
 15086   00FE49  61                 	db	97	;'a'
 15087   00FE4A  6C                 	db	108	;'l'
 15088   00FE4B  69                 	db	105	;'i'
 15089   00FE4C  7A                 	db	122	;'z'
 15090   00FE4D  61                 	db	97	;'a'
 15091   00FE4E  64                 	db	100	;'d'
 15092   00FE4F  61                 	db	97	;'a'
 15093   00FE50  2E                 	db	46
 15094   00FE51  0D                 	db	13
 15095   00FE52  0A                 	db	10
 15096   00FE53  00                 	db	0
 15097   00FE54                     STR_6:
 15098   00FE54  4D                 	db	77	;'M'
 15099   00FE55  50                 	db	80	;'P'
 15100   00FE56  55                 	db	85	;'U'
 15101   00FE57  36                 	db	54	;'6'
 15102   00FE58  30                 	db	48	;'0'
 15103   00FE59  35                 	db	53	;'5'
 15104   00FE5A  30                 	db	48	;'0'
 15105   00FE5B  3A                 	db	58	;':'
 15106   00FE5C  20                 	db	32
 15107   00FE5D  45                 	db	69	;'E'
 15108   00FE5E  52                 	db	82	;'R'
 15109   00FE5F  52                 	db	82	;'R'
 15110   00FE60  4F                 	db	79	;'O'
 15111   00FE61  52                 	db	82	;'R'
 15112   00FE62  20                 	db	32
 15113   00FE63  61                 	db	97	;'a'
 15114   00FE64  6C                 	db	108	;'l'
 15115   00FE65  20                 	db	32
 15116   00FE66  69                 	db	105	;'i'
 15117   00FE67  6E                 	db	110	;'n'
 15118   00FE68  69                 	db	105	;'i'
 15119   00FE69  63                 	db	99	;'c'
 15120   00FE6A  69                 	db	105	;'i'
 15121   00FE6B  61                 	db	97	;'a'
 15122   00FE6C  6C                 	db	108	;'l'
 15123   00FE6D  69                 	db	105	;'i'
 15124   00FE6E  7A                 	db	122	;'z'
 15125   00FE6F  61                 	db	97	;'a'
 15126   00FE70  72                 	db	114	;'r'
 15127   00FE71  2E                 	db	46
 15128   00FE72  0D                 	db	13
 15129   00FE73  0A                 	db	10
 15130   00FE74  00                 	db	0
 15131   00FE75                     STR_7:
 15132   00FE75  48                 	db	72	;'H'
 15133   00FE76  6F                 	db	111	;'o'
 15134   00FE77  6C                 	db	108	;'l'
 15135   00FE78  61                 	db	97	;'a'
 15136   00FE79  20                 	db	32
 15137   00FE7A  4D                 	db	77	;'M'
 15138   00FE7B  75                 	db	117	;'u'
 15139   00FE7C  6E                 	db	110	;'n'
 15140   00FE7D  64                 	db	100	;'d'
 15141   00FE7E  6F                 	db	111	;'o'
 15142   00FE7F  20                 	db	32
 15143   00FE80  64                 	db	100	;'d'
 15144   00FE81  65                 	db	101	;'e'
 15145   00FE82  73                 	db	115	;'s'
 15146   00FE83  64                 	db	100	;'d'
 15147   00FE84  65                 	db	101	;'e'
 15148   00FE85  20                 	db	32
 15149   00FE86  50                 	db	80	;'P'
 15150   00FE87  49                 	db	73	;'I'
 15151   00FE88  43                 	db	67	;'C'
 15152   00FE89  31                 	db	49	;'1'
 15153   00FE8A  38                 	db	56	;'8'
 15154   00FE8B  46                 	db	70	;'F'
 15155   00FE8C  35                 	db	53	;'5'
 15156   00FE8D  37                 	db	55	;'7'
 15157   00FE8E  51                 	db	81	;'Q'
 15158   00FE8F  34                 	db	52	;'4'
 15159   00FE90  33                 	db	51	;'3'
 15160   00FE91  21                 	db	33
 15161   00FE92  0D                 	db	13
 15162   00FE93  0A                 	db	10
 15163   00FE94  00                 	db	0
 15164   00FE95                     STR_13:
 15165   00FE95  43                 	db	67	;'C'
 15166   00FE96  6D                 	db	109	;'m'
 15167   00FE97  64                 	db	100	;'d'
 15168   00FE98  20                 	db	32
 15169   00FE99  55                 	db	85	;'U'
 15170   00FE9A  41                 	db	65	;'A'
 15171   00FE9B  52                 	db	82	;'R'
 15172   00FE9C  54                 	db	84	;'T'
 15173   00FE9D  3A                 	db	58	;':'
 15174   00FE9E  20                 	db	32
 15175   00FE9F  44                 	db	68	;'D'
 15176   00FEA0  65                 	db	101	;'e'
 15177   00FEA1  73                 	db	115	;'s'
 15178   00FEA2  63                 	db	99	;'c'
 15179   00FEA3  6F                 	db	111	;'o'
 15180   00FEA4  6E                 	db	110	;'n'
 15181   00FEA5  6F                 	db	111	;'o'
 15182   00FEA6  63                 	db	99	;'c'
 15183   00FEA7  69                 	db	105	;'i'
 15184   00FEA8  64                 	db	100	;'d'
 15185   00FEA9  6F                 	db	111	;'o'
 15186   00FEAA  20                 	db	32
 15187   00FEAB  28                 	db	40
 15188   00FEAC  00                 	db	0
 15189   00FEAD                     STR_2:
 15190   00FEAD  45                 	db	69	;'E'
 15191   00FEAE  4E                 	db	78	;'N'
 15192   00FEAF  46                 	db	70	;'F'
 15193   00FEB0  45                 	db	69	;'E'
 15194   00FEB1  52                 	db	82	;'R'
 15195   00FEB2  4D                 	db	77	;'M'
 15196   00FEB3  45                 	db	69	;'E'
 15197   00FEB4  44                 	db	68	;'D'
 15198   00FEB5  41                 	db	65	;'A'
 15199   00FEB6  44                 	db	68	;'D'
 15200   00FEB7  3A                 	db	58	;':'
 15201   00FEB8  20                 	db	32
 15202   00FEB9  50                 	db	80	;'P'
 15203   00FEBA  61                 	db	97	;'a'
 15204   00FEBB  72                 	db	114	;'r'
 15205   00FEBC  61                 	db	97	;'a'
 15206   00FEBD  70                 	db	112	;'p'
 15207   00FEBE  6C                 	db	108	;'l'
 15208   00FEBF  65                 	db	101	;'e'
 15209   00FEC0  6A                 	db	106	;'j'
 15210   00FEC1  69                 	db	105	;'i'
 15211   00FEC2  61                 	db	97	;'a'
 15212   00FEC3  00                 	db	0
 15213   00FEC4                     STR_11:
 15214   00FEC4  43                 	db	67	;'C'
 15215   00FEC5  6D                 	db	109	;'m'
 15216   00FEC6  64                 	db	100	;'d'
 15217   00FEC7  20                 	db	32
 15218   00FEC8  55                 	db	85	;'U'
 15219   00FEC9  41                 	db	65	;'A'
 15220   00FECA  52                 	db	82	;'R'
 15221   00FECB  54                 	db	84	;'T'
 15222   00FECC  3A                 	db	58	;':'
 15223   00FECD  20                 	db	32
 15224   00FECE  49                 	db	73	;'I'
 15225   00FECF  7A                 	db	122	;'z'
 15226   00FED0  71                 	db	113	;'q'
 15227   00FED1  75                 	db	117	;'u'
 15228   00FED2  69                 	db	105	;'i'
 15229   00FED3  65                 	db	101	;'e'
 15230   00FED4  72                 	db	114	;'r'
 15231   00FED5  64                 	db	100	;'d'
 15232   00FED6  61                 	db	97	;'a'
 15233   00FED7  0D                 	db	13
 15234   00FED8  0A                 	db	10
 15235   00FED9  00                 	db	0
 15236   00FEDA                     STR_21:
 15237   00FEDA  4D                 	db	77	;'M'
 15238   00FEDB  50                 	db	80	;'P'
 15239   00FEDC  55                 	db	85	;'U'
 15240   00FEDD  3A                 	db	58	;':'
 15241   00FEDE  20                 	db	32
 15242   00FEDF  53                 	db	83	;'S'
 15243   00FEE0  69                 	db	105	;'i'
 15244   00FEE1  6E                 	db	110	;'n'
 15245   00FEE2  20                 	db	32
 15246   00FEE3  4D                 	db	77	;'M'
 15247   00FEE4  6F                 	db	111	;'o'
 15248   00FEE5  76                 	db	118	;'v'
 15249   00FEE6  69                 	db	105	;'i'
 15250   00FEE7  6D                 	db	109	;'m'
 15251   00FEE8  69                 	db	105	;'i'
 15252   00FEE9  65                 	db	101	;'e'
 15253   00FEEA  6E                 	db	110	;'n'
 15254   00FEEB  74                 	db	116	;'t'
 15255   00FEEC  6F                 	db	111	;'o'
 15256   00FEED  0D                 	db	13
 15257   00FEEE  0A                 	db	10
 15258   00FEEF  00                 	db	0
 15259   00FEF0                     STR_3:
 15260   00FEF0  54                 	db	84	;'T'
 15261   00FEF1  45                 	db	69	;'E'
 15262   00FEF2  4C                 	db	76	;'L'
 15263   00FEF3  45                 	db	69	;'E'
 15264   00FEF4  46                 	db	70	;'F'
 15265   00FEF5  4F                 	db	79	;'O'
 15266   00FEF6  4E                 	db	78	;'N'
 15267   00FEF7  4F                 	db	79	;'O'
 15268   00FEF8  3A                 	db	58	;':'
 15269   00FEF9  20                 	db	32
 15270   00FEFA  39                 	db	57	;'9'
 15271   00FEFB  38                 	db	56	;'8'
 15272   00FEFC  37                 	db	55	;'7'
 15273   00FEFD  2D                 	db	45
 15274   00FEFE  36                 	db	54	;'6'
 15275   00FEFF  35                 	db	53	;'5'
 15276   00FF00  34                 	db	52	;'4'
 15277   00FF01  2D                 	db	45
 15278   00FF02  33                 	db	51	;'3'
 15279   00FF03  32                 	db	50	;'2'
 15280   00FF04  31                 	db	49	;'1'
 15281   00FF05  00                 	db	0
 15282   00FF06                     STR_8:
 15283   00FF06  43                 	db	67	;'C'
 15284   00FF07  6D                 	db	109	;'m'
 15285   00FF08  64                 	db	100	;'d'
 15286   00FF09  20                 	db	32
 15287   00FF0A  55                 	db	85	;'U'
 15288   00FF0B  41                 	db	65	;'A'
 15289   00FF0C  52                 	db	82	;'R'
 15290   00FF0D  54                 	db	84	;'T'
 15291   00FF0E  3A                 	db	58	;':'
 15292   00FF0F  20                 	db	32
 15293   00FF10  41                 	db	65	;'A'
 15294   00FF11  64                 	db	100	;'d'
 15295   00FF12  65                 	db	101	;'e'
 15296   00FF13  6C                 	db	108	;'l'
 15297   00FF14  61                 	db	97	;'a'
 15298   00FF15  6E                 	db	110	;'n'
 15299   00FF16  74                 	db	116	;'t'
 15300   00FF17  65                 	db	101	;'e'
 15301   00FF18  0D                 	db	13
 15302   00FF19  0A                 	db	10
 15303   00FF1A  00                 	db	0
 15304   00FF1B                     STR_20:
 15305   00FF1B  4D                 	db	77	;'M'
 15306   00FF1C  50                 	db	80	;'P'
 15307   00FF1D  55                 	db	85	;'U'
 15308   00FF1E  3A                 	db	58	;':'
 15309   00FF1F  20                 	db	32
 15310   00FF20  54                 	db	84	;'T'
 15311   00FF21  41                 	db	65	;'A'
 15312   00FF22  50                 	db	80	;'P'
 15313   00FF23  20                 	db	32
 15314   00FF24  64                 	db	100	;'d'
 15315   00FF25  65                 	db	101	;'e'
 15316   00FF26  74                 	db	116	;'t'
 15317   00FF27  65                 	db	101	;'e'
 15318   00FF28  63                 	db	99	;'c'
 15319   00FF29  74                 	db	116	;'t'
 15320   00FF2A  61                 	db	97	;'a'
 15321   00FF2B  64                 	db	100	;'d'
 15322   00FF2C  6F                 	db	111	;'o'
 15323   00FF2D  0D                 	db	13
 15324   00FF2E  0A                 	db	10
 15325   00FF2F  00                 	db	0
 15326   00FF30                     STR_19:
 15327   00FF30  4D                 	db	77	;'M'
 15328   00FF31  50                 	db	80	;'P'
 15329   00FF32  55                 	db	85	;'U'
 15330   00FF33  3A                 	db	58	;':'
 15331   00FF34  20                 	db	32
 15332   00FF35  53                 	db	83	;'S'
 15333   00FF36  48                 	db	72	;'H'
 15334   00FF37  41                 	db	65	;'A'
 15335   00FF38  4B                 	db	75	;'K'
 15336   00FF39  45                 	db	69	;'E'
 15337   00FF3A  20                 	db	32
 15338   00FF3B  2D                 	db	45
 15339   00FF3C  20                 	db	32
 15340   00FF3D  53                 	db	83	;'S'
 15341   00FF3E  54                 	db	84	;'T'
 15342   00FF3F  4F                 	db	79	;'O'
 15343   00FF40  50                 	db	80	;'P'
 15344   00FF41  0D                 	db	13
 15345   00FF42  0A                 	db	10
 15346   00FF43  00                 	db	0
 15347   00FF44                     STR_12:
 15348   00FF44  43                 	db	67	;'C'
 15349   00FF45  6D                 	db	109	;'m'
 15350   00FF46  64                 	db	100	;'d'
 15351   00FF47  20                 	db	32
 15352   00FF48  55                 	db	85	;'U'
 15353   00FF49  41                 	db	65	;'A'
 15354   00FF4A  52                 	db	82	;'R'
 15355   00FF4B  54                 	db	84	;'T'
 15356   00FF4C  3A                 	db	58	;':'
 15357   00FF4D  20                 	db	32
 15358   00FF4E  44                 	db	68	;'D'
 15359   00FF4F  65                 	db	101	;'e'
 15360   00FF50  72                 	db	114	;'r'
 15361   00FF51  65                 	db	101	;'e'
 15362   00FF52  63                 	db	99	;'c'
 15363   00FF53  68                 	db	104	;'h'
 15364   00FF54  61                 	db	97	;'a'
 15365   00FF55  0D                 	db	13
 15366   00FF56  0A                 	db	10
 15367   00FF57  00                 	db	0
 15368   00FF58                     STR_10:
 15369   00FF58  43                 	db	67	;'C'
 15370   00FF59  6D                 	db	109	;'m'
 15371   00FF5A  64                 	db	100	;'d'
 15372   00FF5B  20                 	db	32
 15373   00FF5C  55                 	db	85	;'U'
 15374   00FF5D  41                 	db	65	;'A'
 15375   00FF5E  52                 	db	82	;'R'
 15376   00FF5F  54                 	db	84	;'T'
 15377   00FF60  3A                 	db	58	;':'
 15378   00FF61  20                 	db	32
 15379   00FF62  44                 	db	68	;'D'
 15380   00FF63  65                 	db	101	;'e'
 15381   00FF64  74                 	db	116	;'t'
 15382   00FF65  65                 	db	101	;'e'
 15383   00FF66  6E                 	db	110	;'n'
 15384   00FF67  65                 	db	101	;'e'
 15385   00FF68  72                 	db	114	;'r'
 15386   00FF69  0D                 	db	13
 15387   00FF6A  0A                 	db	10
 15388   00FF6B  00                 	db	0
 15389   00FF6C                     STR_24:
 15390   00FF6C  4F                 	db	79	;'O'
 15391   00FF6D  62                 	db	98	;'b'
 15392   00FF6E  6A                 	db	106	;'j'
 15393   00FF6F  3A                 	db	58	;':'
 15394   00FF70  25                 	db	37
 15395   00FF71  2E                 	db	46
 15396   00FF72  31                 	db	49	;'1'
 15397   00FF73  66                 	db	102	;'f'
 15398   00FF74  63                 	db	99	;'c'
 15399   00FF75  6D                 	db	109	;'m'
 15400   00FF76  2D                 	db	45
 15401   00FF77  44                 	db	68	;'D'
 15402   00FF78  45                 	db	69	;'E'
 15403   00FF79  54                 	db	84	;'T'
 15404   00FF7A  45                 	db	69	;'E'
 15405   00FF7B  4E                 	db	78	;'N'
 15406   00FF7C  49                 	db	73	;'I'
 15407   00FF7D  44                 	db	68	;'D'
 15408   00FF7E  4F                 	db	79	;'O'
 15409   00FF7F  00                 	db	0
 15410   00FF80                     STR_1:
 15411   00FF80  50                 	db	80	;'P'
 15412   00FF81  41                 	db	65	;'A'
 15413   00FF82  43                 	db	67	;'C'
 15414   00FF83  49                 	db	73	;'I'
 15415   00FF84  45                 	db	69	;'E'
 15416   00FF85  4E                 	db	78	;'N'
 15417   00FF86  54                 	db	84	;'T'
 15418   00FF87  45                 	db	69	;'E'
 15419   00FF88  3A                 	db	58	;':'
 15420   00FF89  20                 	db	32
 15421   00FF8A  4A                 	db	74	;'J'
 15422   00FF8B  6F                 	db	111	;'o'
 15423   00FF8C  68                 	db	104	;'h'
 15424   00FF8D  6E                 	db	110	;'n'
 15425   00FF8E  20                 	db	32
 15426   00FF8F  44                 	db	68	;'D'
 15427   00FF90  6F                 	db	111	;'o'
 15428   00FF91  65                 	db	101	;'e'
 15429   00FF92  00                 	db	0
 15430   00FF93                     STR_9:
 15431   00FF93  43                 	db	67	;'C'
 15432   00FF94  6D                 	db	109	;'m'
 15433   00FF95  64                 	db	100	;'d'
 15434   00FF96  20                 	db	32
 15435   00FF97  55                 	db	85	;'U'
 15436   00FF98  41                 	db	65	;'A'
 15437   00FF99  52                 	db	82	;'R'
 15438   00FF9A  54                 	db	84	;'T'
 15439   00FF9B  3A                 	db	58	;':'
 15440   00FF9C  20                 	db	32
 15441   00FF9D  41                 	db	65	;'A'
 15442   00FF9E  74                 	db	116	;'t'
 15443   00FF9F  72                 	db	114	;'r'
 15444   00FFA0  61                 	db	97	;'a'
 15445   00FFA1  73                 	db	115	;'s'
 15446   00FFA2  0D                 	db	13
 15447   00FFA3  0A                 	db	10
 15448   00FFA4  00                 	db	0
 15449   00FFA5                     STR_17:
 15450   00FFA5  4D                 	db	77	;'M'
 15451   00FFA6  50                 	db	80	;'P'
 15452   00FFA7  55                 	db	85	;'U'
 15453   00FFA8  3A                 	db	58	;':'
 15454   00FFA9  20                 	db	32
 15455   00FFAA  49                 	db	73	;'I'
 15456   00FFAB  7A                 	db	122	;'z'
 15457   00FFAC  71                 	db	113	;'q'
 15458   00FFAD  75                 	db	117	;'u'
 15459   00FFAE  69                 	db	105	;'i'
 15460   00FFAF  65                 	db	101	;'e'
 15461   00FFB0  72                 	db	114	;'r'
 15462   00FFB1  64                 	db	100	;'d'
 15463   00FFB2  61                 	db	97	;'a'
 15464   00FFB3  0D                 	db	13
 15465   00FFB4  0A                 	db	10
 15466   00FFB5  00                 	db	0
 15467   00FFB6                     STR_15:
 15468   00FFB6  4D                 	db	77	;'M'
 15469   00FFB7  50                 	db	80	;'P'
 15470   00FFB8  55                 	db	85	;'U'
 15471   00FFB9  3A                 	db	58	;':'
 15472   00FFBA  20                 	db	32
 15473   00FFBB  41                 	db	65	;'A'
 15474   00FFBC  64                 	db	100	;'d'
 15475   00FFBD  65                 	db	101	;'e'
 15476   00FFBE  6C                 	db	108	;'l'
 15477   00FFBF  61                 	db	97	;'a'
 15478   00FFC0  6E                 	db	110	;'n'
 15479   00FFC1  74                 	db	116	;'t'
 15480   00FFC2  65                 	db	101	;'e'
 15481   00FFC3  0D                 	db	13
 15482   00FFC4  0A                 	db	10
 15483   00FFC5  00                 	db	0
 15484   00FFC6                     STR_23:
 15485   00FFC6  21                 	db	33
 15486   00FFC7  21                 	db	33
 15487   00FFC8  20                 	db	32
 15488   00FFC9  41                 	db	65	;'A'
 15489   00FFCA  4C                 	db	76	;'L'
 15490   00FFCB  45                 	db	69	;'E'
 15491   00FFCC  52                 	db	82	;'R'
 15492   00FFCD  54                 	db	84	;'T'
 15493   00FFCE  41                 	db	65	;'A'
 15494   00FFCF  20                 	db	32
 15495   00FFD0  21                 	db	33
 15496   00FFD1  21                 	db	33
 15497   00FFD2  20                 	db	32
 15498   00FFD3  20                 	db	32
 15499   00FFD4  20                 	db	32
 15500   00FFD5  00                 	db	0
 15501   00FFD6                     STR_18:
 15502   00FFD6  4D                 	db	77	;'M'
 15503   00FFD7  50                 	db	80	;'P'
 15504   00FFD8  55                 	db	85	;'U'
 15505   00FFD9  3A                 	db	58	;':'
 15506   00FFDA  20                 	db	32
 15507   00FFDB  44                 	db	68	;'D'
 15508   00FFDC  65                 	db	101	;'e'
 15509   00FFDD  72                 	db	114	;'r'
 15510   00FFDE  65                 	db	101	;'e'
 15511   00FFDF  63                 	db	99	;'c'
 15512   00FFE0  68                 	db	104	;'h'
 15513   00FFE1  61                 	db	97	;'a'
 15514   00FFE2  0D                 	db	13
 15515   00FFE3  0A                 	db	10
 15516   00FFE4  00                 	db	0
 15517   00FFE5                     STR_16:
 15518   00FFE5  4D                 	db	77	;'M'
 15519   00FFE6  50                 	db	80	;'P'
 15520   00FFE7  55                 	db	85	;'U'
 15521   00FFE8  3A                 	db	58	;':'
 15522   00FFE9  20                 	db	32
 15523   00FFEA  41                 	db	65	;'A'
 15524   00FFEB  74                 	db	116	;'t'
 15525   00FFEC  72                 	db	114	;'r'
 15526   00FFED  61                 	db	97	;'a'
 15527   00FFEE  73                 	db	115	;'s'
 15528   00FFEF  0D                 	db	13
 15529   00FFF0  0A                 	db	10
 15530   00FFF1  00                 	db	0
 15531   00FFF2                     STR_25:
 15532   00FFF2  69                 	db	105	;'i'
 15533   00FFF3  6E                 	db	110	;'n'
 15534   00FFF4  66                 	db	102	;'f'
 15535   00FFF5  00                 	db	0
 15536   00FFF6                     STR_28:
 15537   00FFF6  6E                 	db	110	;'n'
 15538   00FFF7  61                 	db	97	;'a'
 15539   00FFF8  6E                 	db	110	;'n'
 15540   00FFF9  00                 	db	0
 15541   00FFFA                     STR_14:
 15542   00FFFA  29                 	db	41
 15543   00FFFB  0D                 	db	13
 15544   00FFFC  0A                 	db	10
 15545   00FFFD  00                 	db	0
 15546   00FFF6                     STR_29          equ	STR_28
 15547   00FFF6                     STR_30          equ	STR_28
 15548   00FFF2                     STR_26          equ	STR_25
 15549   00FFF2                     STR_27          equ	STR_25
 15550   00FFFE  00                 	db	0	; dummy byte at the end
 15551   00FD7E                     __smallconst    set	__pmediumconst
 15552   00FD7E                     __mediumconst   set	__pmediumconst
 15553   000003                     __activetblptr  equ	3
 15554                           
 15555                           	psect	nvBANK6
 15556   0006F0                     __pnvBANK6:
 15557                           	callstack 0
 15558   0006F0                     _TMR0_OverflowCallback:
 15559                           	callstack 0
 15560   0006F0                     	ds	3
 15561   0006F3                     _TMR4_PeriodMatchCallback:
 15562                           	callstack 0
 15563   0006F3                     	ds	3
 15564   0006F6                     _TMR2_PeriodMatchCallback:
 15565                           	callstack 0
 15566   0006F6                     	ds	3
 15567   0000AC                     _ACTCON         set	172
 15568   0000B0                     _OSCTUNE        set	176
 15569   0000B1                     _OSCFRQ         set	177
 15570   0000B3                     _OSCEN          set	179
 15571   0000AF                     _OSCCON3        set	175
 15572   0000AD                     _OSCCON1        set	173
 15573   0002B2                     _U1ERRIRbits    set	690
 15574   0002B1                     _U1UIRbits      set	689
 15575   0002AB                     _U1CON0bits     set	683
 15576   0002AC                     _U1CON1bits     set	684
 15577   0002A3                     _U1TXB          set	675
 15578   0002A1                     _U1RXB          set	673
 15579   0002B3                     _U1ERRIE        set	691
 15580   0002B2                     _U1ERRIR        set	690
 15581   0002B1                     _U1UIR          set	689
 15582   0002B0                     _U1FIFO         set	688
 15583   0002AF                     _U1BRGH         set	687
 15584   0002AE                     _U1BRGL         set	686
 15585   0002AD                     _U1CON2         set	685
 15586   0002AC                     _U1CON1         set	684
 15587   0002AB                     _U1CON0         set	683
 15588   0002AA                     _U1P3H          set	682
 15589   0002A9                     _U1P3L          set	681
 15590   0002A8                     _U1P2H          set	680
 15591   0002A7                     _U1P2L          set	679
 15592   0002A6                     _U1P1H          set	678
 15593   0002A5                     _U1P1L          set	677
 15594   0002A4                     _U1TXCHK        set	676
 15595   0002A2                     _U1RXCHK        set	674
 15596   00020B                     _RB2PPS         set	523
 15597   000270                     _I2C1SDAPPS     set	624
 15598   00020A                     _RB1PPS         set	522
 15599   000271                     _I2C1SCLPPS     set	625
 15600   000213                     _RC2PPS         set	531
 15601   000217                     _RC6PPS         set	535
 15602   000218                     _RC7PPS         set	536
 15603   000272                     _U1RXPPS        set	626
 15604   00023E                     _INT0PPS        set	574
 15605   000286                     _RC4I2C         set	646
 15606   000287                     _RC3I2C         set	647
 15607   000299                     _I2C1STAT1bits  set	665
 15608   000299                     _I2C1STAT1      set	665
 15609   000295                     _I2C1CON1bits   set	661
 15610   00028B                     _I2C1RXB        set	651
 15611   00028C                     _I2C1TXB        set	652
 15612   00028F                     _I2C1ADB1       set	655
 15613   000297                     _I2C1ERRbits    set	663
 15614   000298                     _I2C1STAT0bits  set	664
 15615   00029A                     _I2C1PIRbits    set	666
 15616   000294                     _I2C1CON0bits   set	660
 15617   00029B                     _I2C1PIEbits    set	667
 15618   000288                     _RB2I2C         set	648
 15619   000289                     _RB1I2C         set	649
 15620   00028D                     _I2C1CNT        set	653
 15621   000297                     _I2C1ERR        set	663
 15622   00029B                     _I2C1PIE        set	667
 15623   00029A                     _I2C1PIR        set	666
 15624   00029C                     _I2C1CLK        set	668
 15625   000296                     _I2C1CON2       set	662
 15626   000295                     _I2C1CON1       set	661
 15627   000294                     _I2C1CON0       set	660
 15628   00031A                     _T0CON0bits     set	794
 15629   00031A                     _T0CON0         set	794
 15630   00031B                     _T0CON1         set	795
 15631   000318                     _TMR0L          set	792
 15632   000319                     _TMR0H          set	793
 15633   000333                     _T4RSTbits      set	819
 15634   000331                     _T4HLTbits      set	817
 15635   000330                     _T4CONbits      set	816
 15636   000330                     _T4CON          set	816
 15637   00032E                     _T4TMR          set	814
 15638   00032F                     _T4PR           set	815
 15639   000333                     _T4RST          set	819
 15640   000331                     _T4HLT          set	817
 15641   000332                     _T4CLKCON       set	818
 15642   000327                     _T2RSTbits      set	807
 15643   000325                     _T2HLTbits      set	805
 15644   000324                     _T2CONbits      set	804
 15645   000324                     _T2CON          set	804
 15646   000322                     _T2TMR          set	802
 15647   000323                     _T2PR           set	803
 15648   000327                     _T2RST          set	807
 15649   000325                     _T2HLT          set	805
 15650   000326                     _T2CLKCON       set	806
 15651   000369                     _IPR7bits       set	873
 15652   000366                     _IPR4bits       set	870
 15653   000363                     _IPR1bits       set	867
 15654   000346                     _CCP2CONbits    set	838
 15655   000344                     _CCPR2L         set	836
 15656   000345                     _CCPR2H         set	837
 15657   000346                     _CCP2CON        set	838
 15658   000342                     _CCP1CONbits    set	834
 15659   00034C                     _CCPTMRS0bits   set	844
 15660   000340                     _CCPR1L         set	832
 15661   000341                     _CCPR1H         set	833
 15662   000342                     _CCP1CON        set	834
 15663   000427                     _IOCEF          set	1063
 15664   000426                     _IOCEN          set	1062
 15665   000425                     _IOCEP          set	1061
 15666   000417                     _IOCCF          set	1047
 15667   000416                     _IOCCN          set	1046
 15668   000415                     _IOCCP          set	1045
 15669   00040F                     _IOCBF          set	1039
 15670   00040E                     _IOCBN          set	1038
 15671   00040D                     _IOCBP          set	1037
 15672   000407                     _IOCAF          set	1031
 15673   000406                     _IOCAN          set	1030
 15674   000405                     _IOCAP          set	1029
 15675   00042C                     _INLVLF         set	1068
 15676   000424                     _INLVLE         set	1060
 15677   00041C                     _INLVLD         set	1052
 15678   000414                     _INLVLC         set	1044
 15679   00040C                     _INLVLB         set	1036
 15680   000404                     _INLVLA         set	1028
 15681   00042B                     _SLRCONF        set	1067
 15682   000423                     _SLRCONE        set	1059
 15683   00041B                     _SLRCOND        set	1051
 15684   000413                     _SLRCONC        set	1043
 15685   00040B                     _SLRCONB        set	1035
 15686   000403                     _SLRCONA        set	1027
 15687   000429                     _WPUF           set	1065
 15688   000421                     _WPUE           set	1057
 15689   000419                     _WPUD           set	1049
 15690   000411                     _WPUC           set	1041
 15691   000409                     _WPUB           set	1033
 15692   000401                     _WPUA           set	1025
 15693   000428                     _ANSELF         set	1064
 15694   000420                     _ANSELE         set	1056
 15695   000418                     _ANSELD         set	1048
 15696   000410                     _ANSELC         set	1040
 15697   000408                     _ANSELB         set	1032
 15698   000400                     _ANSELA         set	1024
 15699   00042A                     _ODCONF         set	1066
 15700   000422                     _ODCONE         set	1058
 15701   00041A                     _ODCOND         set	1050
 15702   000412                     _ODCONC         set	1042
 15703   00040A                     _ODCONB         set	1034
 15704   000402                     _ODCONA         set	1026
 15705   00045D                     _IVTBASEL       set	1117
 15706   00045E                     _IVTBASEH       set	1118
 15707   00045F                     _IVTBASEU       set	1119
 15708   000459                     _IVTLOCKbits    set	1113
 15709   000459                     _IVTLOCK        set	1113
 15710   0004C6                     _TRISAbits      set	1222
 15711   0004C9                     _TRISDbits      set	1225
 15712   0004CE                     _PORTAbits      set	1230
 15713   0004C1                     _LATDbits       set	1217
 15714   0004A2                     _PIE4bits       set	1186
 15715   0004A9                     _PIE11bits      set	1193
 15716   0004B9                     _PIR11bits      set	1209
 15717   0004A1                     _PIE3bits       set	1185
 15718   0004B1                     _PIR3bits       set	1201
 15719   0004CB                     _TRISF          set	1227
 15720   0004CA                     _TRISE          set	1226
 15721   0004C9                     _TRISD          set	1225
 15722   0004C8                     _TRISC          set	1224
 15723   0004C7                     _TRISB          set	1223
 15724   0004C6                     _TRISA          set	1222
 15725   0004C3                     _LATF           set	1219
 15726   0004C2                     _LATE           set	1218
 15727   0004C1                     _LATD           set	1217
 15728   0004C0                     _LATC           set	1216
 15729   0004BF                     _LATB           set	1215
 15730   0004BE                     _LATA           set	1214
 15731   0004B8                     _PIR10bits      set	1208
 15732   0004B4                     _PIR6bits       set	1204
 15733   00049F                     _PIE1bits       set	1183
 15734   0004AF                     _PIR1bits       set	1199
 15735   0004D6                     _INTCON0bits    set	1238
 15736   0004A5                     _PIE7bits       set	1189
 15737   0026B7                     _GIE            set	9911
 15738                           
 15739                           ; #config settings
 15740                           
 15741                           	psect	cinit
 15742   015AF8                     __pcinit:
 15743                           	callstack 0
 15744   015AF8                     start_initialization:
 15745                           	callstack 0
 15746   015AF8                     __initialization:
 15747                           	callstack 0
 15748                           
 15749                           ; Initialize objects allocated to BANK7 (10 bytes)
 15750                           ; load TBLPTR registers with __pidataBANK7
 15751   015AF8  0ECC               	movlw	low __pidataBANK7
 15752   015AFA  6EF6               	movwf	tblptrl,c
 15753   015AFC  0E69               	movlw	high __pidataBANK7
 15754   015AFE  6EF7               	movwf	tblptrh,c
 15755   015B00  0E01               	movlw	low (__pidataBANK7 shr (0+16))
 15756   015B02  6EF8               	movwf	tblptru,c
 15757   015B04  EE01  F3CA         	lfsr	0,__pdataBANK7
 15758   015B08  EE10 F00A          	lfsr	1,10
 15759   015B0C                     copy_data0:
 15760   015B0C  0009               	tblrd		*+
 15761   015B0E  C4F5 F4EE          	movff	tablat,postinc0
 15762   015B12  50E5               	movf	postdec1,w,c
 15763   015B14  50E1               	movf	fsr1l,w,c
 15764   015B16  E1FA               	bnz	copy_data0
 15765                           
 15766                           ; Initialize objects allocated to BANK6 (18 bytes)
 15767                           ; load TBLPTR registers with __pidataBANK6
 15768   015B18  0E64               	movlw	low __pidataBANK6
 15769   015B1A  6EF6               	movwf	tblptrl,c
 15770   015B1C  0E69               	movlw	high __pidataBANK6
 15771   015B1E  6EF7               	movwf	tblptrh,c
 15772   015B20  0E01               	movlw	low (__pidataBANK6 shr (0+16))
 15773   015B22  6EF8               	movwf	tblptru,c
 15774   015B24  EE01  F2DE         	lfsr	0,__pdataBANK6
 15775   015B28  EE10 F012          	lfsr	1,18
 15776   015B2C                     copy_data1:
 15777   015B2C  0009               	tblrd		*+
 15778   015B2E  C4F5 F4EE          	movff	tablat,postinc0
 15779   015B32  50E5               	movf	postdec1,w,c
 15780   015B34  50E1               	movf	fsr1l,w,c
 15781   015B36  E1FA               	bnz	copy_data1
 15782                           
 15783                           ; Clear objects allocated to BANK7 (202 bytes)
 15784   015B38  EE01  F300         	lfsr	0,__pbssBANK7
 15785   015B3C  0ECA               	movlw	202
 15786   015B3E                     clear_0:
 15787   015B3E  6AEE               	clrf	postinc0,c
 15788   015B40  06E8               	decf	wreg,f,c
 15789   015B42  E1FD               	bnz	clear_0
 15790                           
 15791                           ; Clear objects allocated to BANK6 (101 bytes)
 15792   015B44  EE01  F279         	lfsr	0,__pbssBANK6
 15793   015B48  0E65               	movlw	101
 15794   015B4A                     clear_1:
 15795   015B4A  6AEE               	clrf	postinc0,c
 15796   015B4C  06E8               	decf	wreg,f,c
 15797   015B4E  E1FD               	bnz	clear_1
 15798                           
 15799                           ; Clear objects allocated to BANK5 (1 bytes)
 15800   015B50  0105               	movlb	5
 15801   015B52  6BFE               	clrf	__pbssBANK5& (0+255),b
 15802                           
 15803                           ; Clear objects allocated to COMRAM (28 bytes)
 15804   015B54  EE01  F134         	lfsr	0,__pbssCOMRAM
 15805   015B58  0E1C               	movlw	28
 15806   015B5A                     clear_2:
 15807   015B5A  6AEE               	clrf	postinc0,c
 15808   015B5C  06E8               	decf	wreg,f,c
 15809   015B5E  E1FD               	bnz	clear_2
 15810                           
 15811                           ;
 15812                           ; Setup IVTBASE
 15813                           ;
 15814   00045D                     IVTBASEL        equ	1117
 15815   00045E                     IVTBASEH        equ	1118
 15816   00045F                     IVTBASEU        equ	1119
 15817   015B60  0104               	movlb	4
 15818   015B62  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
 15819   015B64  6F5D               	movwf	93,b
 15820   015B66  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
 15821   015B68  6F5E               	movwf	94,b
 15822   015B6A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
 15823   015B6C  6F5F               	movwf	95,b
 15824   015B6E                     end_of_initialization:
 15825                           	callstack 0
 15826   015B6E                     __end_of__initialization:
 15827                           	callstack 0
 15828   015B6E  0100               	movlb	0
 15829   015B70  EFC2  F088         	goto	_main	;jump to C main() function
 15830                           
 15831                           	psect	bssCOMRAM
 15832   000534                     __pbssCOMRAM:
 15833                           	callstack 0
 15834   000534                     _i2c1Status:
 15835                           	callstack 0
 15836   000534                     	ds	13
 15837   000541                     _current_motor_directions:
 15838                           	callstack 0
 15839   000541                     	ds	2
 15840   000543                     _last_distance_cm:
 15841                           	callstack 0
 15842   000543                     	ds	2
 15843   000545                     _tmr0PeriodCount:
 15844                           	callstack 0
 15845   000545                     	ds	2
 15846   000547                     _buffer_full:
 15847                           	callstack 0
 15848   000547                     	ds	1
 15849   000548                     _buffer_index:
 15850                           	callstack 0
 15851   000548                     	ds	1
 15852   000549                     _word:
 15853                           	callstack 0
 15854   000549                     	ds	1
 15855   00054A                     _uart1RxCount:
 15856                           	callstack 0
 15857   00054A                     	ds	1
 15858   00054B                     _uart1RxTail:
 15859                           	callstack 0
 15860   00054B                     	ds	1
 15861   00054C                     _uart1RxHead:
 15862                           	callstack 0
 15863   00054C                     	ds	1
 15864   00054D                     _uart1TxBufferRemaining:
 15865                           	callstack 0
 15866   00054D                     	ds	1
 15867   00054E                     _uart1TxTail:
 15868                           	callstack 0
 15869   00054E                     	ds	1
 15870   00054F                     _uart1TxHead:
 15871                           	callstack 0
 15872   00054F                     	ds	1
 15873                           
 15874                           	psect	bssBANK5
 15875   0005FE                     __pbssBANK5:
 15876                           	callstack 0
 15877   0005FE                     _mpu6050_initialized:
 15878                           	callstack 0
 15879   0005FE                     	ds	1
 15880                           
 15881                           	psect	bssBANK6
 15882   000679                     __pbssBANK6:
 15883                           	callstack 0
 15884   000679                     _gyro_offset:
 15885                           	callstack 0
 15886   000679                     	ds	12
 15887   000685                     _accel_offset:
 15888                           	callstack 0
 15889   000685                     	ds	12
 15890   000691                     floorf@F521:
 15891                           	callstack 0
 15892   000691                     	ds	4
 15893   000695                     fabsf@F465:
 15894                           	callstack 0
 15895   000695                     	ds	4
 15896   000699                     ___fpclassifyf@F465:
 15897                           	callstack 0
 15898   000699                     	ds	4
 15899   00069D                     _current_motor_speeds_pwm:
 15900                           	callstack 0
 15901   00069D                     	ds	4
 15902   0006A1                     _last_echo_time_us:
 15903                           	callstack 0
 15904   0006A1                     	ds	4
 15905   0006A5                     _distance_cm:
 15906                           	callstack 0
 15907   0006A5                     	ds	4
 15908   0006A9                     _UART1_RxCompleteInterruptHandler:
 15909                           	callstack 0
 15910   0006A9                     	ds	3
 15911   0006AC                     _UART1_RxInterruptHandler:
 15912                           	callstack 0
 15913   0006AC                     	ds	3
 15914   0006AF                     _UART1_TxCompleteInterruptHandler:
 15915                           	callstack 0
 15916   0006AF                     	ds	3
 15917   0006B2                     _UART1_TxInterruptHandler:
 15918                           	callstack 0
 15919   0006B2                     	ds	3
 15920   0006B5                     _UART1_ParityErrorHandler:
 15921                           	callstack 0
 15922   0006B5                     	ds	3
 15923   0006B8                     _UART1_OverrunErrorHandler:
 15924                           	callstack 0
 15925   0006B8                     	ds	3
 15926   0006BB                     _UART1_FramingErrorHandler:
 15927                           	callstack 0
 15928   0006BB                     	ds	3
 15929   0006BE                     _INT2_InterruptHandler:
 15930                           	callstack 0
 15931   0006BE                     	ds	3
 15932   0006C1                     _INT1_InterruptHandler:
 15933                           	callstack 0
 15934   0006C1                     	ds	3
 15935   0006C4                     _INT0_InterruptHandler:
 15936                           	callstack 0
 15937   0006C4                     	ds	3
 15938   0006C7                     _I2C1_Callback:
 15939                           	callstack 0
 15940   0006C7                     	ds	3
 15941   0006CA                     _errno:
 15942                           	callstack 0
 15943   0006CA                     	ds	2
 15944   0006CC                     _width:
 15945                           	callstack 0
 15946   0006CC                     	ds	2
 15947   0006CE                     _prec:
 15948                           	callstack 0
 15949   0006CE                     	ds	2
 15950   0006D0                     	ds	2
 15951   0006D2                     main@hcsr04_trigger_counter:
 15952                           	callstack 0
 15953   0006D2                     	ds	2
 15954   0006D4                     main@mpu_update_counter:
 15955                           	callstack 0
 15956   0006D4                     	ds	2
 15957   0006D6                     _uart1RxLastError:
 15958                           	callstack 0
 15959   0006D6                     	ds	2
 15960   0006D8                     _flags:
 15961                           	callstack 0
 15962   0006D8                     	ds	1
 15963   0006D9                     _sensor_initialized:
 15964                           	callstack 0
 15965   0006D9                     	ds	1
 15966   0006DA                     _last_status:
 15967                           	callstack 0
 15968   0006DA                     	ds	1
 15969   0006DB                     _is_reversing_flag:
 15970                           	callstack 0
 15971   0006DB                     	ds	1
 15972   0006DC                     _newDataReceived:
 15973                           	callstack 0
 15974   0006DC                     	ds	1
 15975   0006DD                     _receivedByte:
 15976                           	callstack 0
 15977   0006DD                     	ds	1
 15978                           
 15979                           	psect	dataBANK6
 15980   0006DE                     __pdataBANK6:
 15981                           	callstack 0
 15982   0006DE                     _gyro_lsb_per_dps:
 15983                           	callstack 0
 15984   0006DE                     	ds	4
 15985   0006E2                     _accel_lsb_per_g:
 15986                           	callstack 0
 15987   0006E2                     	ds	4
 15988   0006E6                     i2c_lcd_goto@F17405:
 15989                           	callstack 0
 15990   0006E6                     	ds	4
 15991   0006EA                     _fixedPhone:
 15992                           	callstack 0
 15993   0006EA                     	ds	2
 15994   0006EC                     _fixedDisease:
 15995                           	callstack 0
 15996   0006EC                     	ds	2
 15997   0006EE                     _fixedPatientName:
 15998                           	callstack 0
 15999   0006EE                     	ds	2
 16000                           
 16001                           	psect	bssBANK7
 16002   000700                     __pbssBANK7:
 16003                           	callstack 0
 16004   000700                     _movement_detector:
 16005                           	callstack 0
 16006   000700                     	ds	52
 16007   000734                     _uart1RxStatusBuffer:
 16008                           	callstack 0
 16009   000734                     	ds	16
 16010   000744                     _distance_buffer:
 16011                           	callstack 0
 16012   000744                     	ds	10
 16013   00074E                     _uart1RxBuffer:
 16014                           	callstack 0
 16015   00074E                     	ds	8
 16016   000756                     _uart1TxBuffer:
 16017                           	callstack 0
 16018   000756                     	ds	8
 16019   00075E                     _dbuf:
 16020                           	callstack 0
 16021   00075E                     	ds	80
 16022   0007AE                     _mpu_data:
 16023                           	callstack 0
 16024   0007AE                     	ds	28
 16025                           
 16026                           	psect	dataBANK7
 16027   0007CA                     __pdataBANK7:
 16028                           	callstack 0
 16029   0007CA                     _sensor_config:
 16030                           	callstack 0
 16031   0007CA                     	ds	10
 16032                           
 16033                           	psect	cstackBANK6
 16034   000600                     __pcstackBANK6:
 16035                           	callstack 0
 16036   000600                     vfpfcnvrt@fp:
 16037                           	callstack 0
 16038   000600                     _atan2f$4448:
 16039                           	callstack 0
 16040                           
 16041                           ; 4 bytes @ 0x0
 16042   000600                     	ds	2
 16043   000602                     vfpfcnvrt@fmt:
 16044                           	callstack 0
 16045                           
 16046                           ; 2 bytes @ 0x2
 16047   000602                     	ds	2
 16048   000604                     vfpfcnvrt@ap:
 16049                           	callstack 0
 16050   000604                     _atan2f$4449:
 16051                           	callstack 0
 16052                           
 16053                           ; 4 bytes @ 0x4
 16054   000604                     	ds	2
 16055   000606                     vfpfcnvrt@convarg:
 16056                           	callstack 0
 16057                           
 16058                           ; 4 bytes @ 0x6
 16059   000606                     	ds	2
 16060   000608                     _atan2f$4450:
 16061                           	callstack 0
 16062                           
 16063                           ; 4 bytes @ 0x8
 16064   000608                     	ds	2
 16065   00060A                     vfpfcnvrt@c:
 16066                           	callstack 0
 16067                           
 16068                           ; 1 bytes @ 0xA
 16069   00060A                     	ds	1
 16070   00060B                     vfpfcnvrt@cp:
 16071                           	callstack 0
 16072                           
 16073                           ; 2 bytes @ 0xB
 16074   00060B                     	ds	1
 16075   00060C                     atan2f@z:
 16076                           	callstack 0
 16077                           
 16078                           ; 4 bytes @ 0xC
 16079   00060C                     	ds	1
 16080   00060D                     ?_vfprintf:
 16081                           	callstack 0
 16082   00060D                     vfprintf@fp:
 16083                           	callstack 0
 16084                           
 16085                           ; 2 bytes @ 0xD
 16086   00060D                     	ds	2
 16087   00060F                     vfprintf@fmt:
 16088                           	callstack 0
 16089                           
 16090                           ; 2 bytes @ 0xF
 16091   00060F                     	ds	1
 16092   000610                     atan2f@ix:
 16093                           	callstack 0
 16094                           
 16095                           ; 4 bytes @ 0x10
 16096   000610                     	ds	1
 16097   000611                     vfprintf@ap:
 16098                           	callstack 0
 16099                           
 16100                           ; 2 bytes @ 0x11
 16101   000611                     	ds	2
 16102   000613                     vfprintf@cfmt:
 16103                           	callstack 0
 16104                           
 16105                           ; 2 bytes @ 0x13
 16106   000613                     	ds	1
 16107   000614                     atan2f@iy:
 16108                           	callstack 0
 16109                           
 16110                           ; 4 bytes @ 0x14
 16111   000614                     	ds	1
 16112   000615                     ?_sprintf:
 16113                           	callstack 0
 16114   000615                     sprintf@s:
 16115                           	callstack 0
 16116                           
 16117                           ; 2 bytes @ 0x15
 16118   000615                     	ds	2
 16119   000617                     sprintf@fmt:
 16120                           	callstack 0
 16121                           
 16122                           ; 2 bytes @ 0x17
 16123   000617                     	ds	1
 16124   000618                     atan2f@m:
 16125                           	callstack 0
 16126                           
 16127                           ; 1 bytes @ 0x18
 16128   000618                     	ds	1
 16129   000619                     _MPU6050_GetMovement$4444:
 16130                           	callstack 0
 16131                           
 16132                           ; 4 bytes @ 0x19
 16133   000619                     	ds	4
 16134   00061D                     sprintf@ap:
 16135                           	callstack 0
 16136   00061D                     _MPU6050_GetMovement$4445:
 16137                           	callstack 0
 16138                           
 16139                           ; 4 bytes @ 0x1D
 16140   00061D                     	ds	2
 16141   00061F                     sprintf@f:
 16142                           	callstack 0
 16143                           
 16144                           ; 11 bytes @ 0x1F
 16145   00061F                     	ds	2
 16146   000621                     _MPU6050_GetMovement$4446:
 16147                           	callstack 0
 16148                           
 16149                           ; 4 bytes @ 0x21
 16150   000621                     	ds	4
 16151   000625                     _MPU6050_GetMovement$4447:
 16152                           	callstack 0
 16153                           
 16154                           ; 4 bytes @ 0x25
 16155   000625                     	ds	4
 16156   000629                     MPU6050_GetMovement@roll_accel:
 16157                           	callstack 0
 16158                           
 16159                           ; 4 bytes @ 0x29
 16160   000629                     	ds	4
 16161   00062D                     MPU6050_GetMovement@pitch_accel:
 16162                           	callstack 0
 16163                           
 16164                           ; 4 bytes @ 0x2D
 16165   00062D                     	ds	4
 16166   000631                     MPU6050_GetMovement@advanced_movement:
 16167                           	callstack 0
 16168                           
 16169                           ; 1 bytes @ 0x31
 16170   000631                     	ds	1
 16171   000632                     ??_main:
 16172                           
 16173                           ; 1 bytes @ 0x32
 16174   000632                     	ds	2
 16175   000634                     main@alert_str:
 16176                           	callstack 0
 16177                           
 16178                           ; 64 bytes @ 0x34
 16179   000634                     	ds	64
 16180   000674                     main@current_distance:
 16181                           	callstack 0
 16182                           
 16183                           ; 2 bytes @ 0x74
 16184   000674                     	ds	2
 16185   000676                     main@i:
 16186                           	callstack 0
 16187                           
 16188                           ; 2 bytes @ 0x76
 16189   000676                     	ds	2
 16190   000678                     main@current_movement:
 16191                           	callstack 0
 16192                           
 16193                           ; 1 bytes @ 0x78
 16194   000678                     	ds	1
 16195                           
 16196                           	psect	cstackBANK5
 16197   000560                     __pcstackBANK5:
 16198                           	callstack 0
 16199   000560                     ___flmul@sign:
 16200                           	callstack 0
 16201   000560                     HC_SR04_Get_Filtered_Value@sum:
 16202                           	callstack 0
 16203   000560                     MPU6050_ReadSensorRaw@rawData:
 16204                           	callstack 0
 16205   000560                     ??_Motors_SynchronizedStart:
 16206                           
 16207                           ; 1 bytes @ 0x0
 16208   000560                     	ds	1
 16209   000561                     ___flmul@aexp:
 16210                           	callstack 0
 16211                           
 16212                           ; 1 bytes @ 0x1
 16213   000561                     	ds	1
 16214   000562                     Motors_SynchronizedStart@dir_a:
 16215                           	callstack 0
 16216   000562                     ___flmul@grs:
 16217                           	callstack 0
 16218                           
 16219                           ; 4 bytes @ 0x2
 16220   000562                     	ds	1
 16221   000563                     _Motors_SynchronizedStart$3150:
 16222                           	callstack 0
 16223                           
 16224                           ; 2 bytes @ 0x3
 16225   000563                     	ds	1
 16226   000564                     _HC_SR04_Get_Filtered_Value$3080:
 16227                           	callstack 0
 16228                           
 16229                           ; 2 bytes @ 0x4
 16230   000564                     	ds	1
 16231   000565                     _Motors_SynchronizedStart$3151:
 16232                           	callstack 0
 16233                           
 16234                           ; 2 bytes @ 0x5
 16235   000565                     	ds	1
 16236   000566                     HC_SR04_Get_Filtered_Value@i:
 16237                           	callstack 0
 16238   000566                     ___flmul@bexp:
 16239                           	callstack 0
 16240                           
 16241                           ; 1 bytes @ 0x6
 16242   000566                     	ds	1
 16243   000567                     HC_SR04_Get_Filtered_Value@count:
 16244                           	callstack 0
 16245   000567                     Motors_SynchronizedStart@current_pwm:
 16246                           	callstack 0
 16247   000567                     ___flmul@prod:
 16248                           	callstack 0
 16249                           
 16250                           ; 4 bytes @ 0x7
 16251   000567                     	ds	2
 16252   000569                     Motors_SynchronizedDirection@dir_b:
 16253                           	callstack 0
 16254                           
 16255                           ; 1 bytes @ 0x9
 16256   000569                     	ds	1
 16257   00056A                     Motors_SynchronizedDirection@pwm_duty_value:
 16258                           	callstack 0
 16259                           
 16260                           ; 2 bytes @ 0xA
 16261   00056A                     	ds	1
 16262   00056B                     ___flmul@temp:
 16263                           	callstack 0
 16264                           
 16265                           ; 2 bytes @ 0xB
 16266   00056B                     	ds	1
 16267   00056C                     ??_Motors_SynchronizedDirection:
 16268                           
 16269                           ; 1 bytes @ 0xC
 16270   00056C                     	ds	1
 16271   00056D                     ?___fladd:
 16272                           	callstack 0
 16273   00056D                     ?___fltol:
 16274                           	callstack 0
 16275   00056D                     ___fltol@f1:
 16276                           	callstack 0
 16277   00056D                     ___fladd@b:
 16278                           	callstack 0
 16279                           
 16280                           ; 4 bytes @ 0xD
 16281   00056D                     	ds	1
 16282   00056E                     MPU6050_ReadSensorRaw@result:
 16283                           	callstack 0
 16284   00056E                     Motors_SynchronizedDirection@direction_change:
 16285                           	callstack 0
 16286                           
 16287                           ; 1 bytes @ 0xE
 16288   00056E                     	ds	1
 16289   00056F                     MPU6050_ReadSensorRaw@reg_addr:
 16290                           	callstack 0
 16291   00056F                     _Motors_SynchronizedDirection$3158:
 16292                           	callstack 0
 16293                           
 16294                           ; 1 bytes @ 0xF
 16295   00056F                     	ds	1
 16296   000570                     Motors_SynchronizedDirection@dir_a:
 16297                           	callstack 0
 16298                           
 16299                           ; 1 bytes @ 0x10
 16300   000570                     	ds	1
 16301   000571                     ?_HC_SR04_Measure_Echo_Time:
 16302                           	callstack 0
 16303   000571                     Robot_MoveForward@speed_pwm_duty:
 16304                           	callstack 0
 16305   000571                     Robot_MoveBackward@speed_pwm_duty:
 16306                           	callstack 0
 16307   000571                     Robot_TurnLeft@speed_pwm_duty:
 16308                           	callstack 0
 16309   000571                     Robot_TurnRight@speed_pwm_duty:
 16310                           	callstack 0
 16311   000571                     ___fladd@a:
 16312                           	callstack 0
 16313                           
 16314                           ; 4 bytes @ 0x11
 16315   000571                     	ds	4
 16316   000575                     ?_sqrtf:
 16317                           	callstack 0
 16318   000575                     ?___flsub:
 16319                           	callstack 0
 16320   000575                     ___flge@ff1:
 16321                           	callstack 0
 16322   000575                     ___flsub@b:
 16323                           	callstack 0
 16324   000575                     sqrtf@x:
 16325                           	callstack 0
 16326   000575                     ??_HC_SR04_Measure_Echo_Time:
 16327                           
 16328                           ; 1 bytes @ 0x15
 16329   000575                     	ds	4
 16330   000579                     ___flge@ff2:
 16331                           	callstack 0
 16332   000579                     ___flsub@a:
 16333                           	callstack 0
 16334   000579                     ??_sqrtf:
 16335                           
 16336                           ; 1 bytes @ 0x19
 16337   000579                     	ds	2
 16338   00057B                     HC_SR04_Measure_Echo_Time@pulse_duration_ticks:
 16339                           	callstack 0
 16340                           
 16341                           ; 4 bytes @ 0x1B
 16342   00057B                     	ds	2
 16343   00057D                     ??___flge:
 16344                           
 16345                           ; 1 bytes @ 0x1D
 16346   00057D                     	ds	1
 16347   00057E                     sqrtf@s:
 16348                           	callstack 0
 16349                           
 16350                           ; 4 bytes @ 0x1E
 16351   00057E                     	ds	1
 16352   00057F                     HC_SR04_Measure_Echo_Time@start_time:
 16353                           	callstack 0
 16354                           
 16355                           ; 2 bytes @ 0x1F
 16356   00057F                     	ds	2
 16357   000581                     HC_SR04_Measure_Echo_Time@end_time:
 16358                           	callstack 0
 16359                           
 16360                           ; 2 bytes @ 0x21
 16361   000581                     	ds	1
 16362   000582                     sqrtf@i:
 16363                           	callstack 0
 16364                           
 16365                           ; 4 bytes @ 0x22
 16366   000582                     	ds	1
 16367   000583                     HC_SR04_Measure_Echo_Time@timeout_counter_us:
 16368                           	callstack 0
 16369                           
 16370                           ; 4 bytes @ 0x23
 16371   000583                     	ds	3
 16372   000586                     sqrtf@q:
 16373                           	callstack 0
 16374                           
 16375                           ; 4 bytes @ 0x26
 16376   000586                     	ds	4
 16377   00058A                     sqrtf@t:
 16378                           	callstack 0
 16379                           
 16380                           ; 4 bytes @ 0x2A
 16381   00058A                     	ds	4
 16382   00058E                     sqrtf@m:
 16383                           	callstack 0
 16384                           
 16385                           ; 4 bytes @ 0x2E
 16386   00058E                     	ds	4
 16387   000592                     sqrtf@r:
 16388                           	callstack 0
 16389                           
 16390                           ; 4 bytes @ 0x32
 16391   000592                     	ds	4
 16392   000596                     sqrtf@ix:
 16393                           	callstack 0
 16394                           
 16395                           ; 4 bytes @ 0x36
 16396   000596                     	ds	4
 16397   00059A                     ?___fldiv:
 16398                           	callstack 0
 16399   00059A                     ___fldiv@b:
 16400                           	callstack 0
 16401                           
 16402                           ; 4 bytes @ 0x3A
 16403   00059A                     	ds	4
 16404   00059E                     ___fldiv@a:
 16405                           	callstack 0
 16406                           
 16407                           ; 4 bytes @ 0x3E
 16408   00059E                     	ds	4
 16409   0005A2                     ??___fldiv:
 16410                           
 16411                           ; 1 bytes @ 0x42
 16412   0005A2                     	ds	4
 16413   0005A6                     ___fldiv@rem:
 16414                           	callstack 0
 16415                           
 16416                           ; 4 bytes @ 0x46
 16417   0005A6                     	ds	4
 16418   0005AA                     ___fldiv@sign:
 16419                           	callstack 0
 16420                           
 16421                           ; 1 bytes @ 0x4A
 16422   0005AA                     	ds	1
 16423   0005AB                     ___fldiv@new_exp:
 16424                           	callstack 0
 16425                           
 16426                           ; 2 bytes @ 0x4B
 16427   0005AB                     	ds	2
 16428   0005AD                     ___fldiv@grs:
 16429                           	callstack 0
 16430                           
 16431                           ; 4 bytes @ 0x4D
 16432   0005AD                     	ds	4
 16433   0005B1                     ___fldiv@bexp:
 16434                           	callstack 0
 16435                           
 16436                           ; 1 bytes @ 0x51
 16437   0005B1                     	ds	1
 16438   0005B2                     ___fldiv@aexp:
 16439                           	callstack 0
 16440                           
 16441                           ; 1 bytes @ 0x52
 16442   0005B2                     	ds	1
 16443   0005B3                     ?_HC_SR04_Read_Distance_CM:
 16444                           	callstack 0
 16445   0005B3                     ?_fabsf:
 16446                           	callstack 0
 16447   0005B3                     ?_floorf:
 16448                           	callstack 0
 16449   0005B3                     MPU6050_ReadSensorData@data:
 16450                           	callstack 0
 16451   0005B3                     fabsf@x:
 16452                           	callstack 0
 16453   0005B3                     floorf@x:
 16454                           	callstack 0
 16455   0005B3                     ??_MPU6050_Calibrate:
 16456                           
 16457                           ; 1 bytes @ 0x53
 16458   0005B3                     	ds	2
 16459   0005B5                     MPU6050_ReadSensorData@ax_raw:
 16460                           	callstack 0
 16461   0005B5                     HC_SR04_Read_Distance_CM@distance_float:
 16462                           	callstack 0
 16463                           
 16464                           ; 4 bytes @ 0x55
 16465   0005B5                     	ds	2
 16466   0005B7                     MPU6050_Calibrate@temp:
 16467                           	callstack 0
 16468   0005B7                     MPU6050_ReadSensorData@ay_raw:
 16469                           	callstack 0
 16470   0005B7                     fabsf@u:
 16471                           	callstack 0
 16472   0005B7                     ??_floorf:
 16473                           
 16474                           ; 1 bytes @ 0x57
 16475   0005B7                     	ds	2
 16476   0005B9                     MPU6050_ReadSensorData@az_raw:
 16477                           	callstack 0
 16478   0005B9                     HC_SR04_Read_Distance_CM@i:
 16479                           	callstack 0
 16480   0005B9                     MPU6050_Calibrate@temp_accelX:
 16481                           	callstack 0
 16482                           
 16483                           ; 4 bytes @ 0x59
 16484   0005B9                     	ds	2
 16485   0005BB                     ?_atanf:
 16486                           	callstack 0
 16487   0005BB                     DetectAdvancedGestures@data:
 16488                           	callstack 0
 16489   0005BB                     MPU6050_ReadSensorData@gx_raw:
 16490                           	callstack 0
 16491   0005BB                     atanf@x:
 16492                           	callstack 0
 16493                           
 16494                           ; 4 bytes @ 0x5B
 16495   0005BB                     	ds	2
 16496   0005BD                     MPU6050_ReadSensorData@gy_raw:
 16497                           	callstack 0
 16498   0005BD                     MPU6050_Calibrate@temp_accelY:
 16499                           	callstack 0
 16500   0005BD                     floorf@m:
 16501                           	callstack 0
 16502   0005BD                     _DetectAdvancedGestures$4443:
 16503                           	callstack 0
 16504                           
 16505                           ; 4 bytes @ 0x5D
 16506   0005BD                     	ds	2
 16507   0005BF                     MPU6050_ReadSensorData@gz_raw:
 16508                           	callstack 0
 16509   0005BF                     _atanf$4452:
 16510                           	callstack 0
 16511                           
 16512                           ; 4 bytes @ 0x5F
 16513   0005BF                     	ds	2
 16514   0005C1                     MPU6050_ReadSensorData@temp_raw:
 16515                           	callstack 0
 16516   0005C1                     floorf@e:
 16517                           	callstack 0
 16518   0005C1                     DetectAdvancedGestures@abs_ax:
 16519                           	callstack 0
 16520   0005C1                     MPU6050_Calibrate@temp_accelZ:
 16521                           	callstack 0
 16522                           
 16523                           ; 4 bytes @ 0x61
 16524   0005C1                     	ds	2
 16525   0005C3                     floorf@u:
 16526                           	callstack 0
 16527   0005C3                     _atanf$4454:
 16528                           	callstack 0
 16529                           
 16530                           ; 4 bytes @ 0x63
 16531   0005C3                     	ds	2
 16532   0005C5                     DetectAdvancedGestures@abs_ay:
 16533                           	callstack 0
 16534   0005C5                     MPU6050_Calibrate@temp_gyroX:
 16535                           	callstack 0
 16536                           
 16537                           ; 4 bytes @ 0x65
 16538   0005C5                     	ds	2
 16539   0005C7                     efgtoa@fp:
 16540                           	callstack 0
 16541   0005C7                     _atanf$4455:
 16542                           	callstack 0
 16543                           
 16544                           ; 4 bytes @ 0x67
 16545   0005C7                     	ds	2
 16546   0005C9                     DetectAdvancedGestures@abs_az:
 16547                           	callstack 0
 16548   0005C9                     MPU6050_Calibrate@temp_gyroY:
 16549                           	callstack 0
 16550   0005C9                     efgtoa@f:
 16551                           	callstack 0
 16552                           
 16553                           ; 4 bytes @ 0x69
 16554   0005C9                     	ds	2
 16555   0005CB                     atanf@s1:
 16556                           	callstack 0
 16557                           
 16558                           ; 4 bytes @ 0x6B
 16559   0005CB                     	ds	2
 16560   0005CD                     efgtoa@c:
 16561                           	callstack 0
 16562   0005CD                     MPU6050_Calibrate@temp_gyroZ:
 16563                           	callstack 0
 16564                           
 16565                           ; 4 bytes @ 0x6D
 16566   0005CD                     	ds	1
 16567   0005CE                     ??_efgtoa:
 16568                           
 16569                           ; 1 bytes @ 0x6E
 16570   0005CE                     	ds	1
 16571   0005CF                     atanf@s2:
 16572                           	callstack 0
 16573                           
 16574                           ; 4 bytes @ 0x6F
 16575   0005CF                     	ds	1
 16576   0005D0                     efgtoa@ne:
 16577                           	callstack 0
 16578                           
 16579                           ; 2 bytes @ 0x70
 16580   0005D0                     	ds	1
 16581   0005D1                     MPU6050_Calibrate@ax:
 16582                           	callstack 0
 16583                           
 16584                           ; 2 bytes @ 0x71
 16585   0005D1                     	ds	1
 16586   0005D2                     efgtoa@p:
 16587                           	callstack 0
 16588                           
 16589                           ; 2 bytes @ 0x72
 16590   0005D2                     	ds	1
 16591   0005D3                     MPU6050_Calibrate@ay:
 16592                           	callstack 0
 16593   0005D3                     _atanf$4451:
 16594                           	callstack 0
 16595                           
 16596                           ; 4 bytes @ 0x73
 16597   0005D3                     	ds	1
 16598   0005D4                     efgtoa@t:
 16599                           	callstack 0
 16600                           
 16601                           ; 2 bytes @ 0x74
 16602   0005D4                     	ds	1
 16603   0005D5                     MPU6050_Calibrate@az:
 16604                           	callstack 0
 16605                           
 16606                           ; 2 bytes @ 0x75
 16607   0005D5                     	ds	1
 16608   0005D6                     _efgtoa$3808:
 16609                           	callstack 0
 16610                           
 16611                           ; 2 bytes @ 0x76
 16612   0005D6                     	ds	1
 16613   0005D7                     MPU6050_Calibrate@gx:
 16614                           	callstack 0
 16615   0005D7                     _atanf$4453:
 16616                           	callstack 0
 16617                           
 16618                           ; 4 bytes @ 0x77
 16619   0005D7                     	ds	1
 16620   0005D8                     efgtoa@pp:
 16621                           	callstack 0
 16622                           
 16623                           ; 1 bytes @ 0x78
 16624   0005D8                     	ds	1
 16625   0005D9                     efgtoa@mode:
 16626                           	callstack 0
 16627   0005D9                     MPU6050_Calibrate@gy:
 16628                           	callstack 0
 16629                           
 16630                           ; 2 bytes @ 0x79
 16631   0005D9                     	ds	1
 16632   0005DA                     efgtoa@nmode:
 16633                           	callstack 0
 16634                           
 16635                           ; 1 bytes @ 0x7A
 16636   0005DA                     	ds	1
 16637   0005DB                     atanf@sign:
 16638                           	callstack 0
 16639   0005DB                     MPU6050_Calibrate@gz:
 16640                           	callstack 0
 16641   0005DB                     efgtoa@d:
 16642                           	callstack 0
 16643                           
 16644                           ; 2 bytes @ 0x7B
 16645   0005DB                     	ds	1
 16646   0005DC                     atanf@w:
 16647                           	callstack 0
 16648                           
 16649                           ; 4 bytes @ 0x7C
 16650   0005DC                     	ds	1
 16651   0005DD                     MPU6050_Calibrate@i:
 16652                           	callstack 0
 16653   0005DD                     efgtoa@m:
 16654                           	callstack 0
 16655                           
 16656                           ; 2 bytes @ 0x7D
 16657   0005DD                     	ds	2
 16658   0005DF                     efgtoa@e:
 16659                           	callstack 0
 16660                           
 16661                           ; 2 bytes @ 0x7F
 16662   0005DF                     	ds	1
 16663   0005E0                     atanf@id:
 16664                           	callstack 0
 16665                           
 16666                           ; 1 bytes @ 0x80
 16667   0005E0                     	ds	1
 16668   0005E1                     efgtoa@w:
 16669                           	callstack 0
 16670   0005E1                     atanf@z:
 16671                           	callstack 0
 16672                           
 16673                           ; 4 bytes @ 0x81
 16674   0005E1                     	ds	2
 16675   0005E3                     efgtoa@ou:
 16676                           	callstack 0
 16677                           
 16678                           ; 4 bytes @ 0x83
 16679   0005E3                     	ds	2
 16680   0005E5                     atanf@ix:
 16681                           	callstack 0
 16682                           
 16683                           ; 4 bytes @ 0x85
 16684   0005E5                     	ds	2
 16685   0005E7                     efgtoa@i:
 16686                           	callstack 0
 16687                           
 16688                           ; 2 bytes @ 0x87
 16689   0005E7                     	ds	2
 16690   0005E9                     ?_atan2f:
 16691                           	callstack 0
 16692   0005E9                     atan2f@y:
 16693                           	callstack 0
 16694   0005E9                     efgtoa@h:
 16695                           	callstack 0
 16696                           
 16697                           ; 4 bytes @ 0x89
 16698   0005E9                     	ds	4
 16699   0005ED                     atan2f@x:
 16700                           	callstack 0
 16701   0005ED                     efgtoa@l:
 16702                           	callstack 0
 16703                           
 16704                           ; 4 bytes @ 0x8D
 16705   0005ED                     	ds	4
 16706   0005F1                     efgtoa@sign:
 16707                           	callstack 0
 16708   0005F1                     ??_atan2f:
 16709                           
 16710                           ; 1 bytes @ 0x91
 16711   0005F1                     	ds	1
 16712   0005F2                     efgtoa@g:
 16713                           	callstack 0
 16714                           
 16715                           ; 4 bytes @ 0x92
 16716   0005F2                     	ds	4
 16717   0005F6                     efgtoa@n:
 16718                           	callstack 0
 16719                           
 16720                           ; 2 bytes @ 0x96
 16721   0005F6                     	ds	2
 16722   0005F8                     efgtoa@u:
 16723                           	callstack 0
 16724                           
 16725                           ; 4 bytes @ 0x98
 16726   0005F8                     	ds	1
 16727   0005F9                     MPU6050_GetMovement@data:
 16728                           	callstack 0
 16729                           
 16730                           ; 2 bytes @ 0x99
 16731   0005F9                     	ds	3
 16732   0005FC                     ??_vfpfcnvrt:
 16733                           
 16734                           ; 1 bytes @ 0x9C
 16735   0005FC                     	ds	2
 16736                           
 16737                           	psect	cstackCOMRAM
 16738   000501                     __pcstackCOMRAM:
 16739                           	callstack 0
 16740   000501                     i2I2C1_AddrTransmit@addr:
 16741                           	callstack 0
 16742   000501                     
 16743                           ; 1 bytes @ 0x0
 16744   000501                     	ds	1
 16745   000502                     i2I2C1_CounterSet@counter:
 16746                           	callstack 0
 16747   000502                     
 16748                           ; 1 bytes @ 0x1
 16749   000502                     	ds	1
 16750   000503                     I2C1_DataTransmit@data:
 16751                           	callstack 0
 16752   000503                     
 16753                           ; 1 bytes @ 0x2
 16754   000503                     	ds	1
 16755   000504                     ??_INT0_ISR:
 16756                           
 16757                           ; 1 bytes @ 0x3
 16758   000504                     	ds	2
 16759   000506                     ??_INT1_ISR:
 16760                           
 16761                           ; 1 bytes @ 0x5
 16762   000506                     	ds	2
 16763   000508                     ??_INT2_ISR:
 16764                           
 16765                           ; 1 bytes @ 0x7
 16766   000508                     	ds	2
 16767   00050A                     UART1_Read@tempRxTail:
 16768                           	callstack 0
 16769   00050A                     
 16770                           ; 1 bytes @ 0x9
 16771   00050A                     	ds	1
 16772   00050B                     UART1_Read@readValue:
 16773                           	callstack 0
 16774                           
 16775                           ; 1 bytes @ 0xA
 16776   00050B                     	ds	1
 16777   00050C                     UART1_ReceiveISR@regValue:
 16778                           	callstack 0
 16779   00050C                     
 16780                           ; 1 bytes @ 0xB
 16781   00050C                     	ds	1
 16782   00050D                     UART1_ReceiveISR@tempRxHead:
 16783                           	callstack 0
 16784                           
 16785                           ; 1 bytes @ 0xC
 16786   00050D                     	ds	1
 16787   00050E                     ??_UART1_Receive_Vector_ISR:
 16788                           
 16789                           ; 1 bytes @ 0xD
 16790   00050E                     	ds	2
 16791   000510                     UART1_TransmitISR@tempTxTail:
 16792                           	callstack 0
 16793   000510                     
 16794                           ; 1 bytes @ 0xF
 16795   000510                     	ds	1
 16796   000511                     ?___fpclassifyf:
 16797                           	callstack 0
 16798   000511                     ?_TMR0_CounterGet:
 16799                           	callstack 0
 16800   000511                     ?___awmod:
 16801                           	callstack 0
 16802   000511                     ?___lwdiv:
 16803                           	callstack 0
 16804   000511                     ?_read_prec_or_width:
 16805                           	callstack 0
 16806   000511                     ?_labs:
 16807                           	callstack 0
 16808   000511                     ?___lmul:
 16809                           	callstack 0
 16810   000511                     ?___flneg:
 16811                           	callstack 0
 16812   000511                     ?___xxtofl:
 16813                           	callstack 0
 16814   000511                     _I2C1_IsBusy$599:
 16815                           	callstack 0
 16816   000511                     I2C1_AddrTransmit@addr:
 16817                           	callstack 0
 16818   000511                     I2C1_CounterSet@counter:
 16819                           	callstack 0
 16820   000511                     UART1_Write@tempTxHead:
 16821                           	callstack 0
 16822   000511                     Motor_SetDirection@direction:
 16823                           	callstack 0
 16824   000511                     CCP1_LoadDutyValue@dutycycleValue:
 16825                           	callstack 0
 16826   000511                     CCP2_LoadDutyValue@dutycycleValue:
 16827                           	callstack 0
 16828   000511                     ___awmod@dividend:
 16829                           	callstack 0
 16830   000511                     ___lwdiv@dividend:
 16831                           	callstack 0
 16832   000511                     read_prec_or_width@fmt:
 16833                           	callstack 0
 16834   000511                     memcpy@d1:
 16835                           	callstack 0
 16836   000511                     fputc@c:
 16837                           	callstack 0
 16838   000511                     strcpy@dest:
 16839                           	callstack 0
 16840   000511                     INT0_SetInterruptHandler@InterruptHandler:
 16841                           	callstack 0
 16842   000511                     INT1_SetInterruptHandler@InterruptHandler:
 16843                           	callstack 0
 16844   000511                     INT2_SetInterruptHandler@InterruptHandler:
 16845                           	callstack 0
 16846   000511                     UART1_FramingErrorCallbackRegister@callbackHandler:
 16847                           	callstack 0
 16848   000511                     UART1_OverrunErrorCallbackRegister@callbackHandler:
 16849                           	callstack 0
 16850   000511                     UART1_ParityErrorCallbackRegister@callbackHandler:
 16851                           	callstack 0
 16852   000511                     UART1_RxCompleteCallbackRegister@callbackHandler:
 16853                           	callstack 0
 16854   000511                     ___lmul@multiplier:
 16855                           	callstack 0
 16856   000511                     ___fleq@ff1:
 16857                           	callstack 0
 16858   000511                     ___flneg@f1:
 16859                           	callstack 0
 16860   000511                     ___xxtofl@val:
 16861                           	callstack 0
 16862   000511                     ___fpclassifyf@x:
 16863                           	callstack 0
 16864   000511                     labs@a:
 16865                           	callstack 0
 16866   000511                     ??_TMR0_Initialize:
 16867   000511                     
 16868                           ; 1 bytes @ 0x10
 16869   000511                     	ds	1
 16870   000512                     UART1_Write@txData:
 16871                           	callstack 0
 16872   000512                     I2C1_Write@address:
 16873                           	callstack 0
 16874   000512                     I2C1_WriteRead@address:
 16875                           	callstack 0
 16876   000512                     ??_Motor_SetDirection:
 16877                           
 16878                           ; 1 bytes @ 0x11
 16879   000512                     	ds	1
 16880   000513                     CCP1_LoadDutyValue@dutyValue:
 16881                           	callstack 0
 16882   000513                     CCP2_LoadDutyValue@dutyValue:
 16883                           	callstack 0
 16884   000513                     UART1_sendString@str:
 16885                           	callstack 0
 16886   000513                     ___awmod@divisor:
 16887                           	callstack 0
 16888   000513                     ___lwdiv@divisor:
 16889                           	callstack 0
 16890   000513                     read_prec_or_width@ap:
 16891                           	callstack 0
 16892   000513                     memcpy@s1:
 16893                           	callstack 0
 16894   000513                     fputc@fp:
 16895                           	callstack 0
 16896   000513                     strcpy@src:
 16897                           	callstack 0
 16898   000513                     ??_TMR0_CounterGet:
 16899                           
 16900                           ; 1 bytes @ 0x12
 16901   000513                     	ds	1
 16902   000514                     INTERRUPT_Initialize@state:
 16903                           	callstack 0
 16904   000514                     Motor_SetDirection@motor_id:
 16905                           	callstack 0
 16906   000514                     I2C1_Write@data:
 16907                           	callstack 0
 16908   000514                     I2C1_WriteRead@writeData:
 16909                           	callstack 0
 16910   000514                     
 16911                           ; 1 bytes @ 0x13
 16912   000514                     	ds	1
 16913   000515                     ___awmod@counter:
 16914                           	callstack 0
 16915   000515                     TMR0_CounterGet@counterValue:
 16916                           	callstack 0
 16917   000515                     ___lwdiv@quotient:
 16918                           	callstack 0
 16919   000515                     memcpy@n:
 16920                           	callstack 0
 16921   000515                     strcpy@d:
 16922                           	callstack 0
 16923   000515                     ___lmul@multiplicand:
 16924                           	callstack 0
 16925   000515                     ___fleq@ff2:
 16926                           	callstack 0
 16927   000515                     ??___fpclassifyf:
 16928   000515                     ??_fputc:
 16929   000515                     ??_labs:
 16930   000515                     ??___xxtofl:
 16931   000515                     ??_read_prec_or_width:
 16932                           
 16933                           ; 1 bytes @ 0x14
 16934   000515                     	ds	1
 16935   000516                     ___awmod@sign:
 16936                           	callstack 0
 16937   000516                     I2C1_Write@dataLength:
 16938                           	callstack 0
 16939   000516                     I2C1_WriteRead@writeLength:
 16940                           	callstack 0
 16941                           
 16942                           ; 2 bytes @ 0x15
 16943   000516                     	ds	1
 16944   000517                     TMR0_CounterGet@counterLowByte:
 16945                           	callstack 0
 16946   000517                     ___lwdiv@counter:
 16947                           	callstack 0
 16948   000517                     read_prec_or_width@c:
 16949                           	callstack 0
 16950   000517                     HC_SR04_Add_To_Filter@distance:
 16951                           	callstack 0
 16952   000517                     memcpy@d:
 16953                           	callstack 0
 16954   000517                     
 16955                           ; 1 bytes @ 0x16
 16956   000517                     	ds	1
 16957   000518                     I2C1_Write@retStatus:
 16958                           	callstack 0
 16959   000518                     TMR0_CounterGet@counterHighByte:
 16960                           	callstack 0
 16961   000518                     I2C1_WriteRead@readData:
 16962                           	callstack 0
 16963   000518                     read_prec_or_width@n:
 16964                           	callstack 0
 16965   000518                     
 16966                           ; 1 bytes @ 0x17
 16967   000518                     	ds	1
 16968   000519                     PCF_Wr@data:
 16969                           	callstack 0
 16970   000519                     MPU6050_WriteRegister@data:
 16971                           	callstack 0
 16972   000519                     ___xxtofl@sign:
 16973                           	callstack 0
 16974   000519                     ___fpclassifyf@e:
 16975                           	callstack 0
 16976   000519                     memcpy@s:
 16977                           	callstack 0
 16978   000519                     ___lmul@product:
 16979                           	callstack 0
 16980   000519                     ??___fleq:
 16981                           
 16982                           ; 1 bytes @ 0x18
 16983   000519                     	ds	1
 16984   00051A                     PCF_Wr@result:
 16985                           	callstack 0
 16986   00051A                     MPU6050_WriteRegister@reg:
 16987                           	callstack 0
 16988   00051A                     ___xxtofl@exp:
 16989                           	callstack 0
 16990   00051A                     I2C1_WriteRead@readLength:
 16991                           	callstack 0
 16992   00051A                     fputs@s:
 16993                           	callstack 0
 16994   00051A                     
 16995                           ; 1 bytes @ 0x19
 16996   00051A                     	ds	1
 16997   00051B                     PCF_Wr@tmp:
 16998                           	callstack 0
 16999   00051B                     memcpy@tmp:
 17000                           	callstack 0
 17001   00051B                     MPU6050_WriteRegister@tx_buffer:
 17002                           	callstack 0
 17003   00051B                     ___xxtofl@arg:
 17004                           	callstack 0
 17005   00051B                     ___fpclassifyf@u:
 17006                           	callstack 0
 17007                           
 17008                           ; 4 bytes @ 0x1A
 17009   00051B                     	ds	1
 17010   00051C                     I2C1_WriteRead@retStatus:
 17011                           	callstack 0
 17012   00051C                     __write_nibble@nibble:
 17013                           	callstack 0
 17014   00051C                     fputs@fp:
 17015                           	callstack 0
 17016   00051C                     
 17017                           ; 1 bytes @ 0x1B
 17018   00051C                     	ds	1
 17019   00051D                     ?___lldiv:
 17020                           	callstack 0
 17021   00051D                     __lcd_send@mode:
 17022                           	callstack 0
 17023   00051D                     MPU6050_WriteRegister@result:
 17024                           	callstack 0
 17025   00051D                     MPU6050_ReadRegister@reg:
 17026                           	callstack 0
 17027   00051D                     MPU6050_ReadSensorRaw@accelX:
 17028                           	callstack 0
 17029   00051D                     ___lldiv@dividend:
 17030                           	callstack 0
 17031   00051D                     
 17032                           ; 1 bytes @ 0x1C
 17033   00051D                     	ds	1
 17034   00051E                     __lcd_send@value:
 17035                           	callstack 0
 17036   00051E                     MPU6050_ReadRegister@result:
 17037                           	callstack 0
 17038   00051E                     fputs@c:
 17039                           	callstack 0
 17040   00051E                     
 17041                           ; 1 bytes @ 0x1D
 17042   00051E                     	ds	1
 17043   00051F                     ?___flmul:
 17044                           	callstack 0
 17045   00051F                     i2c_lcd_write@ch:
 17046                           	callstack 0
 17047   00051F                     MPU6050_ReadRegister@reg_addr:
 17048                           	callstack 0
 17049   00051F                     MPU6050_ReadSensorRaw@accelY:
 17050                           	callstack 0
 17051   00051F                     fputs@i:
 17052                           	callstack 0
 17053   00051F                     ___flmul@b:
 17054                           	callstack 0
 17055   00051F                     ??_i2c_lcd_command:
 17056   00051F                     
 17057                           ; 1 bytes @ 0x1E
 17058   00051F                     	ds	1
 17059   000520                     i2c_lcd_command@cmd:
 17060                           	callstack 0
 17061   000520                     MPU6050_ReadRegister@data_read:
 17062                           	callstack 0
 17063   000520                     i2c_lcd_puts@str:
 17064                           	callstack 0
 17065                           
 17066                           ; 2 bytes @ 0x1F
 17067   000520                     	ds	1
 17068   000521                     i2c_lcd_goto@row:
 17069                           	callstack 0
 17070   000521                     MPU6050_ReadSensorRaw@accelZ:
 17071                           	callstack 0
 17072   000521                     pad@fp:
 17073                           	callstack 0
 17074   000521                     ___lldiv@divisor:
 17075                           	callstack 0
 17076   000521                     ??_i2c_lcd_clear:
 17077   000521                     ??_MPU6050_Init:
 17078                           
 17079                           ; 1 bytes @ 0x20
 17080   000521                     	ds	1
 17081   000522                     i2c_lcd_goto@row_offsets:
 17082                           	callstack 0
 17083   000522                     ??_i2c_lcd_init:
 17084   000522                     
 17085                           ; 1 bytes @ 0x21
 17086   000522                     	ds	1
 17087   000523                     MPU6050_ReadSensorRaw@temp:
 17088                           	callstack 0
 17089   000523                     pad@buf:
 17090                           	callstack 0
 17091   000523                     ___flmul@a:
 17092                           	callstack 0
 17093                           
 17094                           ; 4 bytes @ 0x22
 17095   000523                     	ds	2
 17096   000525                     MPU6050_ReadSensorRaw@gyroX:
 17097                           	callstack 0
 17098   000525                     pad@p:
 17099                           	callstack 0
 17100   000525                     ___lldiv@quotient:
 17101                           	callstack 0
 17102   000525                     
 17103                           ; 1 bytes @ 0x24
 17104   000525                     	ds	1
 17105   000526                     i2c_lcd_goto@col:
 17106                           	callstack 0
 17107                           
 17108                           ; 1 bytes @ 0x25
 17109   000526                     	ds	1
 17110   000527                     MPU6050_ReadSensorRaw@gyroY:
 17111                           	callstack 0
 17112   000527                     ??___flmul:
 17113   000527                     ??_pad:
 17114                           
 17115                           ; 1 bytes @ 0x26
 17116   000527                     	ds	1
 17117   000528                     pad@i:
 17118                           	callstack 0
 17119                           
 17120                           ; 2 bytes @ 0x27
 17121   000528                     	ds	1
 17122   000529                     ___lldiv@counter:
 17123                           	callstack 0
 17124   000529                     MPU6050_ReadSensorRaw@gyroZ:
 17125                           	callstack 0
 17126                           
 17127                           ; 2 bytes @ 0x28
 17128   000529                     	ds	1
 17129   00052A                     ?_HC_SR04_Get_Filtered_Value:
 17130                           	callstack 0
 17131   00052A                     ?_ConvertPercentToPWM:
 17132                           	callstack 0
 17133                           
 17134                           ; 2 bytes @ 0x29
 17135   00052A                     	ds	1
 17136   00052B                     ??___fladd:
 17137   00052B                     ??_MPU6050_ReadSensorRaw:
 17138   00052B                     ??___fltol:
 17139                           
 17140                           ; 1 bytes @ 0x2A
 17141   00052B                     	ds	1
 17142   00052C                     ConvertPercentToPWM@percentage:
 17143                           	callstack 0
 17144   00052C                     ??_HC_SR04_Get_Filtered_Value:
 17145   00052C                     
 17146                           ; 1 bytes @ 0x2B
 17147   00052C                     	ds	1
 17148   00052D                     Motor_SetSpeed@pwm_duty_value:
 17149                           	callstack 0
 17150                           
 17151                           ; 2 bytes @ 0x2C
 17152   00052D                     	ds	2
 17153   00052F                     Motor_SetSpeed@motor_id:
 17154                           	callstack 0
 17155   00052F                     ___fltol@sign1:
 17156                           	callstack 0
 17157   00052F                     ___fladd@signs:
 17158                           	callstack 0
 17159   00052F                     
 17160                           ; 1 bytes @ 0x2E
 17161   00052F                     	ds	1
 17162   000530                     Motor_Stop@motor_id:
 17163                           	callstack 0
 17164   000530                     Motors_SynchronizedStart@dir_b:
 17165                           	callstack 0
 17166   000530                     ___fltol@exp1:
 17167                           	callstack 0
 17168   000530                     ___fladd@aexp:
 17169                           	callstack 0
 17170   000530                     ??_Motors_SynchronizedStop:
 17171                           
 17172                           ; 1 bytes @ 0x2F
 17173   000530                     	ds	1
 17174   000531                     ___fladd@bexp:
 17175                           	callstack 0
 17176   000531                     Motors_SynchronizedStart@final_pwm_duty:
 17177                           	callstack 0
 17178   000531                     
 17179                           ; 1 bytes @ 0x30
 17180   000531                     	ds	1
 17181   000532                     ___fladd@grs:
 17182                           	callstack 0
 17183                           
 17184                           ; 1 bytes @ 0x31
 17185   000532                     	ds	1
 17186   000533                     ??_HC_SR04_Read_Distance_CM:
 17187   000533                     
 17188                           ; 1 bytes @ 0x32
 17189   000533                     	ds	1
 17190                           
 17191 ;;
 17192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 17193 ;;
 17194 ;; *************** function _main *****************
 17195 ;; Defined at:
 17196 ;;		line 85 in file "main.c"
 17197 ;; Parameters:    Size  Location     Type
 17198 ;;		None
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  alert_str      64   52[BANK6 ] unsigned char [64]
 17201 ;;  current_dist    2  116[BANK6 ] unsigned short 
 17202 ;;  current_move    1  120[BANK6 ] enum E18101
 17203 ;;  i               2  118[BANK6 ] unsigned short 
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  2  1074[None  ] int 
 17206 ;; Registers used:
 17207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17215 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17216 ;;      Totals:         0       0      71       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17217 ;;Total ram usage:       71 bytes
 17218 ;; Hardware stack levels required when called: 13
 17219 ;; This function calls:
 17220 ;;		_HC_SR04_Get_Last_Status
 17221 ;;		_HC_SR04_Init
 17222 ;;		_HC_SR04_Read_Distance_CM
 17223 ;;		_MPU6050_Calibrate
 17224 ;;		_MPU6050_GetMovement
 17225 ;;		_MPU6050_Init
 17226 ;;		_MPU6050_ReadSensorData
 17227 ;;		_Motors_Initialize
 17228 ;;		_Robot_MoveBackward
 17229 ;;		_Robot_MoveForward
 17230 ;;		_Robot_Stop
 17231 ;;		_Robot_TurnLeft
 17232 ;;		_Robot_TurnRight
 17233 ;;		_SYSTEM_Initialize
 17234 ;;		_TMR0_Initialize
 17235 ;;		_TMR0_Start
 17236 ;;		_UART1_RxCompleteCallbackRegister
 17237 ;;		_UART1_Write
 17238 ;;		_UART1_sendString
 17239 ;;		___flge
 17240 ;;		___xxtofl
 17241 ;;		_i2c_lcd_clear
 17242 ;;		_i2c_lcd_goto
 17243 ;;		_i2c_lcd_init
 17244 ;;		_i2c_lcd_puts
 17245 ;;		_sprintf
 17246 ;; This function is called by:
 17247 ;;		Startup code after reset
 17248 ;; This function uses a non-reentrant model
 17249 ;;
 17250                           
 17251                           	psect	text0
 17252   011184                     __ptext0:
 17253                           	callstack 0
 17254   011184                     _main:
 17255                           	callstack 114
 17256   011184                     
 17257                           ;main.c: 87:     SYSTEM_Initialize();
 17258   011184  ECA4  F0B2         	call	_SYSTEM_Initialize	;wreg free
 17259   011188                     
 17260                           ;main.c: 89:     (INTCON0bits.GIE = 1);
 17261   011188  8ED6               	bsf	214,7,c	;volatile
 17262                           
 17263                           ;main.c: 90:     UART1_RxCompleteCallbackRegister(UART1_RxDataHandler);
 17264   01118A  0EE2               	movlw	low _UART1_RxDataHandler
 17265   01118C  6E11               	movwf	UART1_RxCompleteCallbackRegister@callbackHandler^(0+1280),c
 17266   01118E  0E66               	movlw	high _UART1_RxDataHandler
 17267   011190  6E12               	movwf	(UART1_RxCompleteCallbackRegister@callbackHandler+1)^(0+1280),c
 17268   011192  0E01               	movlw	low (_UART1_RxDataHandler shr (0+16))
 17269   011194  6E13               	movwf	(UART1_RxCompleteCallbackRegister@callbackHandler+2)^(0+1280),c
 17270   011196  EC2D  F0B3         	call	_UART1_RxCompleteCallbackRegister	;wreg free
 17271   01119A                     
 17272                           ;main.c: 93:     Motors_Initialize();
 17273   01119A  EC0E  F0B5         	call	_Motors_Initialize	;wreg free
 17274   01119E                     
 17275                           ;main.c: 101:     _delay((unsigned long)((100)*(64000000U/4000.0)));
 17276   01119E  0E09               	movlw	9
 17277   0111A0  0106               	movlb	6	; () banked
 17278   0111A2  6F33               	movwf	(??_main+1)& (0+255),b
 17279   0111A4  0E1E               	movlw	30
 17280   0111A6  6F32               	movwf	??_main& (0+255),b
 17281   0111A8  0EE4               	movlw	228
 17282   0111AA                     u10367:
 17283   0111AA  2EE8               	decfsz	wreg,f,c
 17284   0111AC  D7FE               	bra	u10367
 17285   0111AE  2F32               	decfsz	??_main& (0+255),f,b
 17286   0111B0  D7FC               	bra	u10367
 17287   0111B2  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17288   0111B4  D7FA               	bra	u10367
 17289   0111B6  0000               	nop	
 17290   0111B8                     
 17291                           ;main.c: 102:     i2c_lcd_init();
 17292   0111B8  ECF2  F0A4         	call	_i2c_lcd_init	;wreg free
 17293   0111BC                     
 17294                           ;main.c: 106:     i2c_lcd_clear();
 17295   0111BC  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 17296   0111C0                     
 17297                           ;main.c: 107:     i2c_lcd_goto(0,0);
 17298   0111C0  0E00               	movlw	0
 17299   0111C2  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17300   0111C4  0E00               	movlw	0
 17301   0111C6  EC50  F0B0         	call	_i2c_lcd_goto
 17302   0111CA                     
 17303                           ;main.c: 108:     i2c_lcd_puts(fixedPatientName);
 17304   0111CA  0E80               	movlw	low STR_1
 17305   0111CC  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17306   0111CE  0EFF               	movlw	high STR_1
 17307   0111D0  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17308   0111D2  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17309   0111D6                     
 17310                           ;main.c: 109:     i2c_lcd_goto(0,1);
 17311   0111D6  0E01               	movlw	1
 17312   0111D8  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17313   0111DA  0E00               	movlw	0
 17314   0111DC  EC50  F0B0         	call	_i2c_lcd_goto
 17315   0111E0                     
 17316                           ;main.c: 110:     i2c_lcd_puts(fixedDisease);
 17317   0111E0  0EAD               	movlw	low STR_2
 17318   0111E2  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17319   0111E4  0EFE               	movlw	high STR_2
 17320   0111E6  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17321   0111E8  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17322   0111EC                     
 17323                           ;main.c: 115:     _delay((unsigned long)((200)*(64000000U/4000.0)));
 17324   0111EC  0E11               	movlw	17
 17325   0111EE  0106               	movlb	6	; () banked
 17326   0111F0  6F33               	movwf	(??_main+1)& (0+255),b
 17327   0111F2  0E3C               	movlw	60
 17328   0111F4  6F32               	movwf	??_main& (0+255),b
 17329   0111F6  0ECB               	movlw	203
 17330   0111F8                     u10377:
 17331   0111F8  2EE8               	decfsz	wreg,f,c
 17332   0111FA  D7FE               	bra	u10377
 17333   0111FC  2F32               	decfsz	??_main& (0+255),f,b
 17334   0111FE  D7FC               	bra	u10377
 17335   011200  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17336   011202  D7FA               	bra	u10377
 17337   011204                     
 17338                           ;main.c: 116:     if (MPU6050_Init()) {
 17339   011204  ECE0  F0A9         	call	_MPU6050_Init	;wreg free
 17340   011208  0900               	iorlw	0
 17341   01120A  B4D8               	btfsc	status,2,c
 17342   01120C  EF0A  F089         	goto	u10071
 17343   011210  EF0C  F089         	goto	u10070
 17344   011214                     u10071:
 17345   011214  EF29  F089         	goto	l10783
 17346   011218                     u10070:
 17347   011218                     
 17348                           ;main.c: 117:         UART1_sendString("MPU6050: Inicializado correctamente.\r\n");
 17349   011218  0E0A               	movlw	low STR_4
 17350   01121A  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17351   01121C  0EFE               	movlw	high STR_4
 17352   01121E  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17353   011220  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17354   011224                     
 17355                           ;main.c: 118:         MPU6050_Calibrate();
 17356   011224  EC82  F097         	call	_MPU6050_Calibrate	;wreg free
 17357   011228                     
 17358                           ;main.c: 119:         UART1_sendString("MPU6050: Calibracion finalizada.\r\n");
 17359   011228  0E31               	movlw	low STR_5
 17360   01122A  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17361   01122C  0EFE               	movlw	high STR_5
 17362   01122E  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17363   011230  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17364   011234                     
 17365                           ;main.c: 120:         _delay((unsigned long)((1000)*(64000000U/4000.0)));
 17366   011234  0E52               	movlw	82
 17367   011236  0106               	movlb	6	; () banked
 17368   011238  6F33               	movwf	(??_main+1)& (0+255),b
 17369   01123A  0E2B               	movlw	43
 17370   01123C  6F32               	movwf	??_main& (0+255),b
 17371   01123E  0E00               	movlw	0
 17372   011240                     u10387:
 17373   011240  2EE8               	decfsz	wreg,f,c
 17374   011242  D7FE               	bra	u10387
 17375   011244  2F32               	decfsz	??_main& (0+255),f,b
 17376   011246  D7FC               	bra	u10387
 17377   011248  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17378   01124A  D7FA               	bra	u10387
 17379   01124C  0000               	nop	
 17380                           
 17381                           ;main.c: 121:     } else {
 17382   01124E  EF31  F089         	goto	l10785
 17383   011252                     l10783:
 17384                           
 17385                           ;main.c: 122:         UART1_sendString("MPU6050: ERROR al inicializar.\r\n");
 17386   011252  0E54               	movlw	low STR_6
 17387   011254  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17388   011256  0EFE               	movlw	high STR_6
 17389   011258  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17390   01125A  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17391   01125E                     l1077:
 17392   01125E  EF2F  F089         	goto	l1077
 17393   011262                     l10785:
 17394                           
 17395                           ;main.c: 128:     HC_SR04_Init();
 17396   011262  ECDF  F0B4         	call	_HC_SR04_Init	;wreg free
 17397   011266                     
 17398                           ;main.c: 131:     TMR0_Initialize();
 17399   011266  EC8D  F0B2         	call	_TMR0_Initialize	;wreg free
 17400   01126A                     
 17401                           ;main.c: 132:     TMR0_Start();
 17402   01126A  EC08  F0B5         	call	_TMR0_Start	;wreg free
 17403   01126E                     
 17404                           ;main.c: 136:     _delay((unsigned long)((100)*(64000000U/4000.0)));
 17405   01126E  0E09               	movlw	9
 17406   011270  0106               	movlb	6	; () banked
 17407   011272  6F33               	movwf	(??_main+1)& (0+255),b
 17408   011274  0E1E               	movlw	30
 17409   011276  6F32               	movwf	??_main& (0+255),b
 17410   011278  0EE4               	movlw	228
 17411   01127A                     u10397:
 17412   01127A  2EE8               	decfsz	wreg,f,c
 17413   01127C  D7FE               	bra	u10397
 17414   01127E  2F32               	decfsz	??_main& (0+255),f,b
 17415   011280  D7FC               	bra	u10397
 17416   011282  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17417   011284  D7FA               	bra	u10397
 17418   011286  0000               	nop	
 17419   011288                     
 17420                           ;main.c: 137:     UART1_sendString("Hola Mundo desde PIC18F57Q43!\r\n");
 17421   011288  0E75               	movlw	low STR_7
 17422   01128A  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17423   01128C  0EFE               	movlw	high STR_7
 17424   01128E  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17425   011290  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17426   011294                     
 17427                           ;main.c: 138:     for(uint16_t i = 0; i < 50; i++) {
 17428   011294  0E00               	movlw	0
 17429   011296  0106               	movlb	6	; () banked
 17430   011298  6F77               	movwf	(main@i+1)& (0+255),b
 17431   01129A  0E00               	movlw	0
 17432   01129C  6F76               	movwf	main@i& (0+255),b
 17433   01129E                     l10801:
 17434                           
 17435                           ; BSR set to: 6
 17436                           ;main.c: 139:         _delay((unsigned long)((100)*(64000000U/4000.0)));
 17437   01129E  0E09               	movlw	9
 17438   0112A0  0106               	movlb	6	; () banked
 17439   0112A2  6F33               	movwf	(??_main+1)& (0+255),b
 17440   0112A4  0E1E               	movlw	30
 17441   0112A6  6F32               	movwf	??_main& (0+255),b
 17442   0112A8  0EE4               	movlw	228
 17443   0112AA                     u10407:
 17444   0112AA  2EE8               	decfsz	wreg,f,c
 17445   0112AC  D7FE               	bra	u10407
 17446   0112AE  2F32               	decfsz	??_main& (0+255),f,b
 17447   0112B0  D7FC               	bra	u10407
 17448   0112B2  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17449   0112B4  D7FA               	bra	u10407
 17450   0112B6  0000               	nop	
 17451   0112B8                     
 17452                           ;main.c: 140:     }
 17453   0112B8  0106               	movlb	6	; () banked
 17454   0112BA  4B76               	infsnz	main@i& (0+255),f,b
 17455   0112BC  2B77               	incf	(main@i+1)& (0+255),f,b
 17456   0112BE  5177               	movf	(main@i+1)& (0+255),w,b
 17457   0112C0  E109               	bnz	u10080
 17458   0112C2  0E32               	movlw	50
 17459   0112C4  5D76               	subwf	main@i& (0+255),w,b
 17460   0112C6  A0D8               	btfss	status,0,c
 17461   0112C8  EF68  F089         	goto	u10081
 17462   0112CC  EF6A  F089         	goto	u10080
 17463   0112D0                     u10081:
 17464   0112D0  EF4F  F089         	goto	l10801
 17465   0112D4                     u10080:
 17466   0112D4                     l10805:
 17467                           
 17468                           ; BSR set to: 6
 17469                           ;main.c: 143:     {;main.c: 147:         if (newDataReceived) {
 17470   0112D4  51DC               	movf	_newDataReceived& (0+255),w,b	;volatile
 17471   0112D6  B4D8               	btfsc	status,2,c
 17472   0112D8  EF70  F089         	goto	u10091
 17473   0112DC  EF72  F089         	goto	u10090
 17474   0112E0                     u10091:
 17475   0112E0  EF2B  F08A         	goto	l10873
 17476   0112E4                     u10090:
 17477   0112E4                     
 17478                           ; BSR set to: 6
 17479                           ;main.c: 148:             newDataReceived = 0;
 17480   0112E4  6BDC               	clrf	_newDataReceived& (0+255),b	;volatile
 17481                           
 17482                           ;main.c: 150:             switch (receivedByte) {
 17483   0112E6  EF10  F08A         	goto	l10871
 17484   0112EA                     l10809:
 17485                           
 17486                           ; BSR set to: 6
 17487                           ;main.c: 152:                     Robot_MoveForward(375);
 17488   0112EA  0E01               	movlw	1
 17489   0112EC  0105               	movlb	5	; () banked
 17490   0112EE  6F72               	movwf	(Robot_MoveForward@speed_pwm_duty+1)& (0+255),b
 17491   0112F0  0E77               	movlw	119
 17492   0112F2  6F71               	movwf	Robot_MoveForward@speed_pwm_duty& (0+255),b
 17493   0112F4  EC1D  F0B4         	call	_Robot_MoveForward	;wreg free
 17494   0112F8                     
 17495                           ;main.c: 153:                     UART1_sendString("Cmd UART: Adelante\r\n");
 17496   0112F8  0E06               	movlw	low STR_8
 17497   0112FA  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17498   0112FC  0EFF               	movlw	high STR_8
 17499   0112FE  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17500   011300  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17501   011304                     l10813:
 17502                           
 17503                           ;main.c: 154:                     is_reversing_flag = 0;
 17504   011304  0106               	movlb	6	; () banked
 17505   011306  6BDB               	clrf	_is_reversing_flag& (0+255),b
 17506                           
 17507                           ;main.c: 155:                     break;
 17508   011308  EF2B  F08A         	goto	l10873
 17509   01130C                     l10815:
 17510                           
 17511                           ; BSR set to: 6
 17512                           ;main.c: 157:                     Robot_MoveBackward(375);
 17513   01130C  0E01               	movlw	1
 17514   01130E  0105               	movlb	5	; () banked
 17515   011310  6F72               	movwf	(Robot_MoveBackward@speed_pwm_duty+1)& (0+255),b
 17516   011312  0E77               	movlw	119
 17517   011314  6F71               	movwf	Robot_MoveBackward@speed_pwm_duty& (0+255),b
 17518   011316  EC28  F0B4         	call	_Robot_MoveBackward	;wreg free
 17519   01131A                     
 17520                           ;main.c: 158:                     UART1_sendString("Cmd UART: Atras\r\n");
 17521   01131A  0E93               	movlw	low STR_9
 17522   01131C  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17523   01131E  0EFF               	movlw	high STR_9
 17524   011320  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17525   011322  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17526   011326                     
 17527                           ;main.c: 159:                     is_reversing_flag = 1;
 17528   011326  0E01               	movlw	1
 17529   011328  0106               	movlb	6	; () banked
 17530   01132A  6FDB               	movwf	_is_reversing_flag& (0+255),b
 17531                           
 17532                           ;main.c: 160:                     break;
 17533   01132C  EF2B  F08A         	goto	l10873
 17534   011330                     l10821:
 17535                           
 17536                           ; BSR set to: 6
 17537                           ;main.c: 162:                     Robot_Stop();
 17538   011330  EC0B  F0B5         	call	_Robot_Stop	;wreg free
 17539   011334                     
 17540                           ;main.c: 163:                     UART1_sendString("Cmd UART: Detener\r\n");
 17541   011334  0E58               	movlw	low STR_10
 17542   011336  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17543   011338  0EFF               	movlw	high STR_10
 17544   01133A  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17545   01133C  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17546   011340  EF82  F089         	goto	l10813
 17547   011344                     l10827:
 17548                           
 17549                           ; BSR set to: 6
 17550                           ;main.c: 167:                     Robot_TurnLeft(375);
 17551   011344  0E01               	movlw	1
 17552   011346  0105               	movlb	5	; () banked
 17553   011348  6F72               	movwf	(Robot_TurnLeft@speed_pwm_duty+1)& (0+255),b
 17554   01134A  0E77               	movlw	119
 17555   01134C  6F71               	movwf	Robot_TurnLeft@speed_pwm_duty& (0+255),b
 17556   01134E  EC12  F0B4         	call	_Robot_TurnLeft	;wreg free
 17557   011352                     
 17558                           ;main.c: 168:                     UART1_sendString("Cmd UART: Izquierda\r\n");
 17559   011352  0EC4               	movlw	low STR_11
 17560   011354  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17561   011356  0EFE               	movlw	high STR_11
 17562   011358  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17563   01135A  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17564   01135E  EF82  F089         	goto	l10813
 17565   011362                     l10833:
 17566                           
 17567                           ; BSR set to: 6
 17568                           ;main.c: 172:                     Robot_TurnRight(375);
 17569   011362  0E01               	movlw	1
 17570   011364  0105               	movlb	5	; () banked
 17571   011366  6F72               	movwf	(Robot_TurnRight@speed_pwm_duty+1)& (0+255),b
 17572   011368  0E77               	movlw	119
 17573   01136A  6F71               	movwf	Robot_TurnRight@speed_pwm_duty& (0+255),b
 17574   01136C  EC07  F0B4         	call	_Robot_TurnRight	;wreg free
 17575   011370                     
 17576                           ;main.c: 173:                     UART1_sendString("Cmd UART: Derecha\r\n");
 17577   011370  0E44               	movlw	low STR_12
 17578   011372  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17579   011374  0EFF               	movlw	high STR_12
 17580   011376  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17581   011378  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17582   01137C  EF82  F089         	goto	l10813
 17583   011380                     l10839:
 17584                           
 17585                           ; BSR set to: 6
 17586                           ;main.c: 177:                     i2c_lcd_clear();
 17587   011380  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 17588   011384                     
 17589                           ;main.c: 178:                     i2c_lcd_goto(0,0); i2c_lcd_puts(fixedPatientName);
 17590   011384  0E00               	movlw	0
 17591   011386  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17592   011388  0E00               	movlw	0
 17593   01138A  EC50  F0B0         	call	_i2c_lcd_goto
 17594   01138E  0E80               	movlw	low STR_1
 17595   011390  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17596   011392  0EFF               	movlw	high STR_1
 17597   011394  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17598   011396  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17599   01139A                     
 17600                           ;main.c: 179:                     i2c_lcd_goto(0,1); i2c_lcd_puts(fixedDisease);
 17601   01139A  0E01               	movlw	1
 17602   01139C  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17603   01139E  0E00               	movlw	0
 17604   0113A0  EC50  F0B0         	call	_i2c_lcd_goto
 17605   0113A4  0EAD               	movlw	low STR_2
 17606   0113A6  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17607   0113A8  0EFE               	movlw	high STR_2
 17608   0113AA  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17609   0113AC  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17610   0113B0                     
 17611                           ;main.c: 180:                     _delay((unsigned long)((3000)*(64000000U/4000.0)));
 17612   0113B0  0EF4               	movlw	244
 17613   0113B2  0106               	movlb	6	; () banked
 17614   0113B4  6F33               	movwf	(??_main+1)& (0+255),b
 17615   0113B6  0E82               	movlw	130
 17616   0113B8  6F32               	movwf	??_main& (0+255),b
 17617   0113BA  0E05               	movlw	5
 17618   0113BC                     u10417:
 17619   0113BC  2EE8               	decfsz	wreg,f,c
 17620   0113BE  D7FE               	bra	u10417
 17621   0113C0  2F32               	decfsz	??_main& (0+255),f,b
 17622   0113C2  D7FC               	bra	u10417
 17623   0113C4  2F33               	decfsz	(??_main+1)& (0+255),f,b
 17624   0113C6  D7FA               	bra	u10417
 17625   0113C8                     
 17626                           ;main.c: 181:                     i2c_lcd_clear();
 17627   0113C8  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 17628   0113CC                     
 17629                           ;main.c: 182:                     i2c_lcd_goto(0,0); i2c_lcd_puts(fixedPatientName);
 17630   0113CC  0E00               	movlw	0
 17631   0113CE  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17632   0113D0  0E00               	movlw	0
 17633   0113D2  EC50  F0B0         	call	_i2c_lcd_goto
 17634   0113D6  0E80               	movlw	low STR_1
 17635   0113D8  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17636   0113DA  0EFF               	movlw	high STR_1
 17637   0113DC  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17638   0113DE  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17639   0113E2                     
 17640                           ;main.c: 183:                     i2c_lcd_goto(0,1); i2c_lcd_puts(fixedDisease);
 17641   0113E2  0E01               	movlw	1
 17642   0113E4  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 17643   0113E6  0E00               	movlw	0
 17644   0113E8  EC50  F0B0         	call	_i2c_lcd_goto
 17645   0113EC  0EAD               	movlw	low STR_2
 17646   0113EE  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 17647   0113F0  0EFE               	movlw	high STR_2
 17648   0113F2  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 17649   0113F4  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 17650                           
 17651                           ;main.c: 184:                     break;
 17652   0113F8  EF2B  F08A         	goto	l10873
 17653   0113FC                     l10861:
 17654                           
 17655                           ; BSR set to: 6
 17656                           ;main.c: 186:                     UART1_sendString("Cmd UART: Desconocido ("); UART1_Wri
      +                          te(receivedByte); UART1_sendString(")\r\n");
 17657   0113FC  0E95               	movlw	low STR_13
 17658   0113FE  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17659   011400  0EFE               	movlw	high STR_13
 17660   011402  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17661   011404  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17662   011408  0106               	movlb	6	; () banked
 17663   01140A  51DD               	movf	_receivedByte& (0+255),w,b	;volatile
 17664   01140C  EC9A  F0B0         	call	_UART1_Write
 17665   011410  0EFA               	movlw	low STR_14
 17666   011412  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17667   011414  0EFF               	movlw	high STR_14
 17668   011416  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17669   011418  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17670   01141C  EF82  F089         	goto	l10813
 17671   011420                     l10871:
 17672                           
 17673                           ; BSR set to: 6
 17674   011420  51DD               	movf	_receivedByte& (0+255),w,b	;volatile
 17675                           
 17676                           ; Switch size 1, requested type "simple"
 17677                           ; Number of cases is 6, Range of values is 66 to 83
 17678                           ; switch strategies available:
 17679                           ; Name         Instructions Cycles
 17680                           ; simple_byte           19    10 (average)
 17681                           ;	Chosen strategy is simple_byte
 17682   011422  0A42               	xorlw	66	; case 66
 17683   011424  B4D8               	btfsc	status,2,c
 17684   011426  EF86  F089         	goto	l10815
 17685   01142A  0A04               	xorlw	4	; case 70
 17686   01142C  B4D8               	btfsc	status,2,c
 17687   01142E  EF75  F089         	goto	l10809
 17688   011432  0A0A               	xorlw	10	; case 76
 17689   011434  B4D8               	btfsc	status,2,c
 17690   011436  EFA2  F089         	goto	l10827
 17691   01143A  0A1C               	xorlw	28	; case 80
 17692   01143C  B4D8               	btfsc	status,2,c
 17693   01143E  EFC0  F089         	goto	l10839
 17694   011442  0A02               	xorlw	2	; case 82
 17695   011444  B4D8               	btfsc	status,2,c
 17696   011446  EFB1  F089         	goto	l10833
 17697   01144A  0A01               	xorlw	1	; case 83
 17698   01144C  B4D8               	btfsc	status,2,c
 17699   01144E  EF98  F089         	goto	l10821
 17700   011452  EFFE  F089         	goto	l10861
 17701   011456                     l10873:
 17702                           
 17703                           ;main.c: 196:         static uint16_t mpu_update_counter = 0;;main.c: 197:         if(mp
      +                          u_update_counter >= 100) {
 17704   011456  0106               	movlb	6	; () banked
 17705   011458  51D5               	movf	(main@mpu_update_counter+1)& (0+255),w,b
 17706   01145A  E109               	bnz	u10100
 17707   01145C  0E64               	movlw	100
 17708   01145E  5DD4               	subwf	main@mpu_update_counter& (0+255),w,b
 17709   011460  A0D8               	btfss	status,0,c
 17710   011462  EF35  F08A         	goto	u10101
 17711   011466  EF37  F08A         	goto	u10100
 17712   01146A                     u10101:
 17713   01146A  EF1C  F08B         	goto	l10933
 17714   01146E                     u10100:
 17715   01146E                     
 17716                           ; BSR set to: 6
 17717                           ;main.c: 198:             mpu_update_counter = 0;
 17718   01146E  0E00               	movlw	0
 17719   011470  6FD5               	movwf	(main@mpu_update_counter+1)& (0+255),b
 17720   011472  0E00               	movlw	0
 17721   011474  6FD4               	movwf	main@mpu_update_counter& (0+255),b
 17722   011476                     
 17723                           ; BSR set to: 6
 17724                           ;main.c: 200:             MPU6050_ReadSensorData(&mpu_data);
 17725   011476  0EAE               	movlw	low _mpu_data
 17726   011478  0105               	movlb	5	; () banked
 17727   01147A  6FB3               	movwf	MPU6050_ReadSensorData@data& (0+255),b
 17728   01147C  0E07               	movlw	high _mpu_data
 17729   01147E  6FB4               	movwf	(MPU6050_ReadSensorData@data+1)& (0+255),b
 17730   011480  EC88  F093         	call	_MPU6050_ReadSensorData	;wreg free
 17731   011484                     
 17732                           ;main.c: 201:             MPU6050_Movement_t current_movement = MPU6050_GetMovement(&mpu
      +                          _data);
 17733   011484  0EAE               	movlw	low _mpu_data
 17734   011486  0105               	movlb	5	; () banked
 17735   011488  6FF9               	movwf	MPU6050_GetMovement@data& (0+255),b
 17736   01148A  0E07               	movlw	high _mpu_data
 17737   01148C  6FFA               	movwf	(MPU6050_GetMovement@data+1)& (0+255),b
 17738   01148E  EC25  F09B         	call	_MPU6050_GetMovement	;wreg free
 17739   011492  0106               	movlb	6	; () banked
 17740   011494  6F78               	movwf	main@current_movement& (0+255),b
 17741   011496                     
 17742                           ; BSR set to: 6
 17743                           ;main.c: 204:             if (!newDataReceived) {
 17744   011496  51DC               	movf	_newDataReceived& (0+255),w,b	;volatile
 17745   011498  A4D8               	btfss	status,2,c
 17746   01149A  EF51  F08A         	goto	u10111
 17747   01149E  EF53  F08A         	goto	u10110
 17748   0114A2                     u10111:
 17749   0114A2  EF95  F08A         	goto	l10899
 17750   0114A6                     u10110:
 17751   0114A6                     
 17752                           ; BSR set to: 6
 17753                           ;main.c: 205:                 if (current_movement == MOVEMENT_BACKWARD) {
 17754   0114A6  0E02               	movlw	2
 17755   0114A8  1978               	xorwf	main@current_movement& (0+255),w,b
 17756   0114AA  A4D8               	btfss	status,2,c
 17757   0114AC  EF5A  F08A         	goto	u10121
 17758   0114B0  EF5C  F08A         	goto	u10120
 17759   0114B4                     u10121:
 17760   0114B4  EF60  F08A         	goto	l10887
 17761   0114B8                     u10120:
 17762   0114B8                     
 17763                           ; BSR set to: 6
 17764                           ;main.c: 206:                     is_reversing_flag = 1;
 17765   0114B8  0E01               	movlw	1
 17766   0114BA  6FDB               	movwf	_is_reversing_flag& (0+255),b
 17767                           
 17768                           ;main.c: 207:                 } else if (current_movement == MOVEMENT_NONE ||
 17769   0114BC  EF95  F08A         	goto	l10899
 17770   0114C0                     l10887:
 17771                           
 17772                           ; BSR set to: 6
 17773   0114C0  5178               	movf	main@current_movement& (0+255),w,b
 17774   0114C2  B4D8               	btfsc	status,2,c
 17775   0114C4  EF66  F08A         	goto	u10131
 17776   0114C8  EF68  F08A         	goto	u10130
 17777   0114CC                     u10131:
 17778   0114CC  EF94  F08A         	goto	l1101
 17779   0114D0                     u10130:
 17780   0114D0                     
 17781                           ; BSR set to: 6
 17782   0114D0  0578               	decf	main@current_movement& (0+255),w,b
 17783   0114D2  B4D8               	btfsc	status,2,c
 17784   0114D4  EF6E  F08A         	goto	u10141
 17785   0114D8  EF70  F08A         	goto	u10140
 17786   0114DC                     u10141:
 17787   0114DC  EF94  F08A         	goto	l1101
 17788   0114E0                     u10140:
 17789   0114E0                     
 17790                           ; BSR set to: 6
 17791   0114E0  0E03               	movlw	3
 17792   0114E2  1978               	xorwf	main@current_movement& (0+255),w,b
 17793   0114E4  B4D8               	btfsc	status,2,c
 17794   0114E6  EF77  F08A         	goto	u10151
 17795   0114EA  EF79  F08A         	goto	u10150
 17796   0114EE                     u10151:
 17797   0114EE  EF94  F08A         	goto	l1101
 17798   0114F2                     u10150:
 17799   0114F2                     
 17800                           ; BSR set to: 6
 17801   0114F2  0E04               	movlw	4
 17802   0114F4  1978               	xorwf	main@current_movement& (0+255),w,b
 17803   0114F6  B4D8               	btfsc	status,2,c
 17804   0114F8  EF80  F08A         	goto	u10161
 17805   0114FC  EF82  F08A         	goto	u10160
 17806   011500                     u10161:
 17807   011500  EF94  F08A         	goto	l1101
 17808   011504                     u10160:
 17809   011504                     
 17810                           ; BSR set to: 6
 17811   011504  0E09               	movlw	9
 17812   011506  1978               	xorwf	main@current_movement& (0+255),w,b
 17813   011508  B4D8               	btfsc	status,2,c
 17814   01150A  EF89  F08A         	goto	u10171
 17815   01150E  EF8B  F08A         	goto	u10170
 17816   011512                     u10171:
 17817   011512  EF94  F08A         	goto	l1101
 17818   011516                     u10170:
 17819   011516                     
 17820                           ; BSR set to: 6
 17821   011516  0E0A               	movlw	10
 17822   011518  1978               	xorwf	main@current_movement& (0+255),w,b
 17823   01151A  A4D8               	btfss	status,2,c
 17824   01151C  EF92  F08A         	goto	u10181
 17825   011520  EF94  F08A         	goto	u10180
 17826   011524                     u10181:
 17827   011524  EF95  F08A         	goto	l10899
 17828   011528                     u10180:
 17829   011528                     l1101:
 17830                           
 17831                           ; BSR set to: 6
 17832                           ;main.c: 212:                            current_movement == MOVEMENT_TAP) {;main.c: 213
      +                          :                     is_reversing_flag = 0;
 17833   011528  6BDB               	clrf	_is_reversing_flag& (0+255),b
 17834   01152A                     l10899:
 17835                           
 17836                           ; BSR set to: 6
 17837                           ;main.c: 218:             if(!newDataReceived) {
 17838   01152A  51DC               	movf	_newDataReceived& (0+255),w,b	;volatile
 17839   01152C  A4D8               	btfss	status,2,c
 17840   01152E  EF9B  F08A         	goto	u10191
 17841   011532  EF9D  F08A         	goto	u10190
 17842   011536                     u10191:
 17843   011536  EF1C  F08B         	goto	l10933
 17844   01153A                     u10190:
 17845   01153A  EFF7  F08A         	goto	l10931
 17846   01153E                     l10903:
 17847                           
 17848                           ; BSR set to: 6
 17849                           ;main.c: 221:                         Robot_MoveForward(375);
 17850   01153E  0E01               	movlw	1
 17851   011540  0105               	movlb	5	; () banked
 17852   011542  6F72               	movwf	(Robot_MoveForward@speed_pwm_duty+1)& (0+255),b
 17853   011544  0E77               	movlw	119
 17854   011546  6F71               	movwf	Robot_MoveForward@speed_pwm_duty& (0+255),b
 17855   011548  EC1D  F0B4         	call	_Robot_MoveForward	;wreg free
 17856   01154C                     
 17857                           ;main.c: 222:                         UART1_sendString("MPU: Adelante\r\n");
 17858   01154C  0EB6               	movlw	low STR_15
 17859   01154E  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17860   011550  0EFF               	movlw	high STR_15
 17861   011552  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17862   011554  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17863                           
 17864                           ;main.c: 223:                         break;
 17865   011558  EF1C  F08B         	goto	l10933
 17866   01155C                     l10907:
 17867                           
 17868                           ; BSR set to: 6
 17869                           ;main.c: 225:                         Robot_MoveBackward(375);
 17870   01155C  0E01               	movlw	1
 17871   01155E  0105               	movlb	5	; () banked
 17872   011560  6F72               	movwf	(Robot_MoveBackward@speed_pwm_duty+1)& (0+255),b
 17873   011562  0E77               	movlw	119
 17874   011564  6F71               	movwf	Robot_MoveBackward@speed_pwm_duty& (0+255),b
 17875   011566  EC28  F0B4         	call	_Robot_MoveBackward	;wreg free
 17876   01156A                     
 17877                           ;main.c: 226:                         UART1_sendString("MPU: Atras\r\n");
 17878   01156A  0EE5               	movlw	low STR_16
 17879   01156C  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17880   01156E  0EFF               	movlw	high STR_16
 17881   011570  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17882   011572  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17883                           
 17884                           ;main.c: 227:                         break;
 17885   011576  EF1C  F08B         	goto	l10933
 17886   01157A                     l10911:
 17887                           
 17888                           ; BSR set to: 6
 17889                           ;main.c: 229:                         Robot_TurnLeft(375);
 17890   01157A  0E01               	movlw	1
 17891   01157C  0105               	movlb	5	; () banked
 17892   01157E  6F72               	movwf	(Robot_TurnLeft@speed_pwm_duty+1)& (0+255),b
 17893   011580  0E77               	movlw	119
 17894   011582  6F71               	movwf	Robot_TurnLeft@speed_pwm_duty& (0+255),b
 17895   011584  EC12  F0B4         	call	_Robot_TurnLeft	;wreg free
 17896   011588                     
 17897                           ;main.c: 230:                         UART1_sendString("MPU: Izquierda\r\n");
 17898   011588  0EA5               	movlw	low STR_17
 17899   01158A  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17900   01158C  0EFF               	movlw	high STR_17
 17901   01158E  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17902   011590  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17903                           
 17904                           ;main.c: 231:                         break;
 17905   011594  EF1C  F08B         	goto	l10933
 17906   011598                     l10915:
 17907                           
 17908                           ; BSR set to: 6
 17909                           ;main.c: 233:                         Robot_TurnRight(375);
 17910   011598  0E01               	movlw	1
 17911   01159A  0105               	movlb	5	; () banked
 17912   01159C  6F72               	movwf	(Robot_TurnRight@speed_pwm_duty+1)& (0+255),b
 17913   01159E  0E77               	movlw	119
 17914   0115A0  6F71               	movwf	Robot_TurnRight@speed_pwm_duty& (0+255),b
 17915   0115A2  EC07  F0B4         	call	_Robot_TurnRight	;wreg free
 17916   0115A6                     
 17917                           ;main.c: 234:                         UART1_sendString("MPU: Derecha\r\n");
 17918   0115A6  0ED6               	movlw	low STR_18
 17919   0115A8  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17920   0115AA  0EFF               	movlw	high STR_18
 17921   0115AC  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17922   0115AE  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17923                           
 17924                           ;main.c: 235:                         break;
 17925   0115B2  EF1C  F08B         	goto	l10933
 17926   0115B6                     l10919:
 17927                           
 17928                           ; BSR set to: 6
 17929                           ;main.c: 237:                         Robot_Stop();
 17930   0115B6  EC0B  F0B5         	call	_Robot_Stop	;wreg free
 17931   0115BA                     
 17932                           ;main.c: 238:                         UART1_sendString("MPU: SHAKE - STOP\r\n");
 17933   0115BA  0E30               	movlw	low STR_19
 17934   0115BC  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17935   0115BE  0EFF               	movlw	high STR_19
 17936   0115C0  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17937   0115C2  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17938                           
 17939                           ;main.c: 239:                         break;
 17940   0115C6  EF1C  F08B         	goto	l10933
 17941   0115CA                     l10923:
 17942                           
 17943                           ; BSR set to: 6
 17944                           ;main.c: 241:                         UART1_sendString("MPU: TAP detectado\r\n");
 17945   0115CA  0E1B               	movlw	low STR_20
 17946   0115CC  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17947   0115CE  0EFF               	movlw	high STR_20
 17948   0115D0  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17949   0115D2  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17950                           
 17951                           ;main.c: 242:                         break;
 17952   0115D6  EF1C  F08B         	goto	l10933
 17953   0115DA                     l10925:
 17954                           
 17955                           ; BSR set to: 6
 17956                           ;main.c: 244:                         Robot_Stop();
 17957   0115DA  EC0B  F0B5         	call	_Robot_Stop	;wreg free
 17958   0115DE                     
 17959                           ;main.c: 245:                         UART1_sendString("MPU: Sin Movimiento\r\n");
 17960   0115DE  0EDA               	movlw	low STR_21
 17961   0115E0  6E13               	movwf	UART1_sendString@str^(0+1280),c
 17962   0115E2  0EFE               	movlw	high STR_21
 17963   0115E4  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 17964   0115E6  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 17965                           
 17966                           ;main.c: 246:                         break;
 17967   0115EA  EF1C  F08B         	goto	l10933
 17968   0115EE                     l10931:
 17969                           
 17970                           ; BSR set to: 6
 17971   0115EE  5178               	movf	main@current_movement& (0+255),w,b
 17972   0115F0  6F32               	movwf	??_main& (0+255),b
 17973   0115F2  6B33               	clrf	(??_main+1)& (0+255),b
 17974                           
 17975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17976                           ; Switch size 1, requested type "simple"
 17977                           ; Number of cases is 1, Range of values is 0 to 0
 17978                           ; switch strategies available:
 17979                           ; Name         Instructions Cycles
 17980                           ; simple_byte            4     3 (average)
 17981                           ;	Chosen strategy is simple_byte
 17982   0115F4  5133               	movf	(??_main+1)& (0+255),w,b
 17983   0115F6  0A00               	xorlw	0	; case 0
 17984   0115F8  B4D8               	btfsc	status,2,c
 17985   0115FA  EF01  F08B         	goto	l11147
 17986   0115FE  EFED  F08A         	goto	l10925
 17987   011602                     l11147:
 17988                           
 17989                           ; BSR set to: 6
 17990                           ; Switch size 1, requested type "simple"
 17991                           ; Number of cases is 6, Range of values is 1 to 10
 17992                           ; switch strategies available:
 17993                           ; Name         Instructions Cycles
 17994                           ; simple_byte           19    10 (average)
 17995                           ;	Chosen strategy is simple_byte
 17996   011602  5132               	movf	??_main& (0+255),w,b
 17997   011604  0A01               	xorlw	1	; case 1
 17998   011606  B4D8               	btfsc	status,2,c
 17999   011608  EF9F  F08A         	goto	l10903
 18000   01160C  0A03               	xorlw	3	; case 2
 18001   01160E  B4D8               	btfsc	status,2,c
 18002   011610  EFAE  F08A         	goto	l10907
 18003   011614  0A01               	xorlw	1	; case 3
 18004   011616  B4D8               	btfsc	status,2,c
 18005   011618  EFBD  F08A         	goto	l10911
 18006   01161C  0A07               	xorlw	7	; case 4
 18007   01161E  B4D8               	btfsc	status,2,c
 18008   011620  EFCC  F08A         	goto	l10915
 18009   011624  0A0D               	xorlw	13	; case 9
 18010   011626  B4D8               	btfsc	status,2,c
 18011   011628  EFDB  F08A         	goto	l10919
 18012   01162C  0A03               	xorlw	3	; case 10
 18013   01162E  B4D8               	btfsc	status,2,c
 18014   011630  EFE5  F08A         	goto	l10923
 18015   011634  EFED  F08A         	goto	l10925
 18016   011638                     l10933:
 18017                           
 18018                           ;main.c: 250:         mpu_update_counter++;
 18019   011638  0106               	movlb	6	; () banked
 18020   01163A  4BD4               	infsnz	main@mpu_update_counter& (0+255),f,b
 18021   01163C  2BD5               	incf	(main@mpu_update_counter+1)& (0+255),f,b
 18022   01163E                     
 18023                           ; BSR set to: 6
 18024                           ;main.c: 257:         static uint16_t hcsr04_trigger_counter = 0;;main.c: 258:         i
      +                          f (is_reversing_flag) {
 18025   01163E  51DB               	movf	_is_reversing_flag& (0+255),w,b
 18026   011640  B4D8               	btfsc	status,2,c
 18027   011642  EF25  F08B         	goto	u10201
 18028   011646  EF27  F08B         	goto	u10200
 18029   01164A                     u10201:
 18030   01164A  EFFD  F08B         	goto	l10983
 18031   01164E                     u10200:
 18032   01164E                     
 18033                           ; BSR set to: 6
 18034                           ;main.c: 259:             if (hcsr04_trigger_counter >= 50) {
 18035   01164E  51D3               	movf	(main@hcsr04_trigger_counter+1)& (0+255),w,b
 18036   011650  E109               	bnz	u10210
 18037   011652  0E32               	movlw	50
 18038   011654  5DD2               	subwf	main@hcsr04_trigger_counter& (0+255),w,b
 18039   011656  A0D8               	btfss	status,0,c
 18040   011658  EF30  F08B         	goto	u10211
 18041   01165C  EF32  F08B         	goto	u10210
 18042   011660                     u10211:
 18043   011660  EFF8  F08B         	goto	l10981
 18044   011664                     u10210:
 18045   011664                     
 18046                           ; BSR set to: 6
 18047                           ;main.c: 260:                 hcsr04_trigger_counter = 0;
 18048   011664  0E00               	movlw	0
 18049   011666  6FD3               	movwf	(main@hcsr04_trigger_counter+1)& (0+255),b
 18050   011668  0E00               	movlw	0
 18051   01166A  6FD2               	movwf	main@hcsr04_trigger_counter& (0+255),b
 18052   01166C                     
 18053                           ; BSR set to: 6
 18054                           ;main.c: 262:                 uint16_t current_distance = HC_SR04_Read_Distance_CM();
 18055   01166C  EC6E  F0A3         	call	_HC_SR04_Read_Distance_CM	;wreg free
 18056   011670  C5B3  F674         	movff	?_HC_SR04_Read_Distance_CM,main@current_distance
 18057   011674  C5B4  F675         	movff	?_HC_SR04_Read_Distance_CM+1,main@current_distance+1
 18058   011678                     
 18059                           ;main.c: 264:                 if (HC_SR04_Get_Last_Status() == HC_SR04_OK) {
 18060   011678  EC17  F0B5         	call	_HC_SR04_Get_Last_Status	;wreg free
 18061   01167C  0900               	iorlw	0
 18062   01167E  A4D8               	btfss	status,2,c
 18063   011680  EF44  F08B         	goto	u10221
 18064   011684  EF46  F08B         	goto	u10220
 18065   011688                     u10221:
 18066   011688  EFF8  F08B         	goto	l10981
 18067   01168C                     u10220:
 18068   01168C                     
 18069                           ;main.c: 265:                     distance_cm = (float)current_distance;
 18070   01168C  C674  F511         	movff	main@current_distance,___xxtofl@val
 18071   011690  C675  F512         	movff	main@current_distance+1,___xxtofl@val+1
 18072   011694  6A13               	clrf	(___xxtofl@val+2)^(0+1280),c
 18073   011696  6A14               	clrf	(___xxtofl@val+3)^(0+1280),c
 18074   011698  0E00               	movlw	0
 18075   01169A  ECCA  F0A1         	call	___xxtofl
 18076   01169E  C511  F6A5         	movff	?___xxtofl,_distance_cm	;volatile
 18077   0116A2  C512  F6A6         	movff	?___xxtofl+1,_distance_cm+1	;volatile
 18078   0116A6  C513  F6A7         	movff	?___xxtofl+2,_distance_cm+2	;volatile
 18079   0116AA  C514  F6A8         	movff	?___xxtofl+3,_distance_cm+3	;volatile
 18080                           
 18081                           ;main.c: 267:                     if (distance_cm > 0 && distance_cm <= 10.0f) {
 18082   0116AE  0E00               	movlw	0
 18083   0116B0  0105               	movlb	5	; () banked
 18084   0116B2  6F75               	movwf	___flge@ff1& (0+255),b
 18085   0116B4  0E00               	movlw	0
 18086   0116B6  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 18087   0116B8  0E00               	movlw	0
 18088   0116BA  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 18089   0116BC  0E00               	movlw	0
 18090   0116BE  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 18091   0116C0  C6A5  F579         	movff	_distance_cm,___flge@ff2	;volatile
 18092   0116C4  C6A6  F57A         	movff	_distance_cm+1,___flge@ff2+1	;volatile
 18093   0116C8  C6A7  F57B         	movff	_distance_cm+2,___flge@ff2+2	;volatile
 18094   0116CC  C6A8  F57C         	movff	_distance_cm+3,___flge@ff2+3	;volatile
 18095   0116D0  EC25  F0A6         	call	___flge	;wreg free
 18096   0116D4  0105               	movlb	5	; () banked
 18097   0116D6  B0D8               	btfsc	status,0,c
 18098   0116D8  EF70  F08B         	goto	u10231
 18099   0116DC  EF72  F08B         	goto	u10230
 18100   0116E0                     u10231:
 18101   0116E0  EFF8  F08B         	goto	l10981
 18102   0116E4                     u10230:
 18103   0116E4                     
 18104                           ; BSR set to: 5
 18105   0116E4  0E00               	movlw	0
 18106   0116E6  6F75               	movwf	___flge@ff1& (0+255),b
 18107   0116E8  0E00               	movlw	0
 18108   0116EA  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 18109   0116EC  0E20               	movlw	32
 18110   0116EE  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 18111   0116F0  0E41               	movlw	65
 18112   0116F2  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 18113   0116F4  C6A5  F579         	movff	_distance_cm,___flge@ff2	;volatile
 18114   0116F8  C6A6  F57A         	movff	_distance_cm+1,___flge@ff2+1	;volatile
 18115   0116FC  C6A7  F57B         	movff	_distance_cm+2,___flge@ff2+2	;volatile
 18116   011700  C6A8  F57C         	movff	_distance_cm+3,___flge@ff2+3	;volatile
 18117   011704  EC25  F0A6         	call	___flge	;wreg free
 18118   011708  0105               	movlb	5	; () banked
 18119   01170A  A0D8               	btfss	status,0,c
 18120   01170C  EF8A  F08B         	goto	u10241
 18121   011710  EF8C  F08B         	goto	u10240
 18122   011714                     u10241:
 18123   011714  EFF8  F08B         	goto	l10981
 18124   011718                     u10240:
 18125   011718                     
 18126                           ; BSR set to: 5
 18127                           ;main.c: 268:                         Robot_Stop();
 18128   011718  EC0B  F0B5         	call	_Robot_Stop	;wreg free
 18129   01171C                     
 18130                           ;main.c: 269:                         is_reversing_flag = 0;
 18131   01171C  0106               	movlb	6	; () banked
 18132   01171E  6BDB               	clrf	_is_reversing_flag& (0+255),b
 18133   011720                     
 18134                           ; BSR set to: 6
 18135                           ;main.c: 271:                         char alert_str[64];;main.c: 272:                  
      +                                 sprintf(alert_str, "ALERTA! Obstaculo a %.1fcm. MOTORES DETENIDOS.\r\n", (double)
      +                          distance_cm);
 18136   011720  0E34               	movlw	low main@alert_str
 18137   011722  6F15               	movwf	sprintf@s& (0+255),b
 18138   011724  0E06               	movlw	high main@alert_str
 18139   011726  6F16               	movwf	(sprintf@s+1)& (0+255),b
 18140   011728  0ED9               	movlw	low STR_22
 18141   01172A  6F17               	movwf	sprintf@fmt& (0+255),b
 18142   01172C  0EFD               	movlw	high STR_22
 18143   01172E  6F18               	movwf	(sprintf@fmt+1)& (0+255),b
 18144   011730  C6A5  F619         	movff	_distance_cm,?_sprintf+4	;volatile
 18145   011734  C6A6  F61A         	movff	_distance_cm+1,?_sprintf+5	;volatile
 18146   011738  C6A7  F61B         	movff	_distance_cm+2,?_sprintf+6	;volatile
 18147   01173C  C6A8  F61C         	movff	_distance_cm+3,?_sprintf+7	;volatile
 18148   011740  EC00  F0B0         	call	_sprintf	;wreg free
 18149   011744                     
 18150                           ;main.c: 273:                         UART1_sendString(alert_str);
 18151   011744  0E34               	movlw	low main@alert_str
 18152   011746  6E13               	movwf	UART1_sendString@str^(0+1280),c
 18153   011748  0E06               	movlw	high main@alert_str
 18154   01174A  6E14               	movwf	(UART1_sendString@str+1)^(0+1280),c
 18155   01174C  ECBA  F0AD         	call	_UART1_sendString	;wreg free
 18156   011750                     
 18157                           ;main.c: 275:                         i2c_lcd_clear();
 18158   011750  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 18159   011754                     
 18160                           ;main.c: 276:                         i2c_lcd_goto(0,0); i2c_lcd_puts("!! ALERTA !!   ")
      +                          ;
 18161   011754  0E00               	movlw	0
 18162   011756  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 18163   011758  0E00               	movlw	0
 18164   01175A  EC50  F0B0         	call	_i2c_lcd_goto
 18165   01175E  0EC6               	movlw	low STR_23
 18166   011760  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 18167   011762  0EFF               	movlw	high STR_23
 18168   011764  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 18169   011766  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 18170   01176A                     
 18171                           ;main.c: 277:                         sprintf(alert_str, "Obj:%.1fcm-DETENIDO",(double)d
      +                          istance_cm);
 18172   01176A  0E34               	movlw	low main@alert_str
 18173   01176C  0106               	movlb	6	; () banked
 18174   01176E  6F15               	movwf	sprintf@s& (0+255),b
 18175   011770  0E06               	movlw	high main@alert_str
 18176   011772  6F16               	movwf	(sprintf@s+1)& (0+255),b
 18177   011774  0E6C               	movlw	low STR_24
 18178   011776  6F17               	movwf	sprintf@fmt& (0+255),b
 18179   011778  0EFF               	movlw	high STR_24
 18180   01177A  6F18               	movwf	(sprintf@fmt+1)& (0+255),b
 18181   01177C  C6A5  F619         	movff	_distance_cm,?_sprintf+4	;volatile
 18182   011780  C6A6  F61A         	movff	_distance_cm+1,?_sprintf+5	;volatile
 18183   011784  C6A7  F61B         	movff	_distance_cm+2,?_sprintf+6	;volatile
 18184   011788  C6A8  F61C         	movff	_distance_cm+3,?_sprintf+7	;volatile
 18185   01178C  EC00  F0B0         	call	_sprintf	;wreg free
 18186   011790                     
 18187                           ;main.c: 278:                         i2c_lcd_goto(0,1); i2c_lcd_puts(alert_str);
 18188   011790  0E01               	movlw	1
 18189   011792  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 18190   011794  0E00               	movlw	0
 18191   011796  EC50  F0B0         	call	_i2c_lcd_goto
 18192   01179A  0E34               	movlw	low main@alert_str
 18193   01179C  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 18194   01179E  0E06               	movlw	high main@alert_str
 18195   0117A0  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 18196   0117A2  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 18197   0117A6                     
 18198                           ;main.c: 279:                         _delay((unsigned long)((2000)*(64000000U/4000.0)))
      +                          ;
 18199   0117A6  0EA3               	movlw	163
 18200   0117A8  0106               	movlb	6	; () banked
 18201   0117AA  6F33               	movwf	(??_main+1)& (0+255),b
 18202   0117AC  0E57               	movlw	87
 18203   0117AE  6F32               	movwf	??_main& (0+255),b
 18204   0117B0  0E02               	movlw	2
 18205   0117B2                     u10427:
 18206   0117B2  2EE8               	decfsz	wreg,f,c
 18207   0117B4  D7FE               	bra	u10427
 18208   0117B6  2F32               	decfsz	??_main& (0+255),f,b
 18209   0117B8  D7FC               	bra	u10427
 18210   0117BA  2F33               	decfsz	(??_main+1)& (0+255),f,b
 18211   0117BC  D7FA               	bra	u10427
 18212   0117BE  0000               	nop	
 18213   0117C0                     
 18214                           ;main.c: 281:                         i2c_lcd_clear();
 18215   0117C0  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 18216   0117C4                     
 18217                           ;main.c: 282:                         i2c_lcd_goto(0,0); i2c_lcd_puts(fixedPatientName);
 18218   0117C4  0E00               	movlw	0
 18219   0117C6  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 18220   0117C8  0E00               	movlw	0
 18221   0117CA  EC50  F0B0         	call	_i2c_lcd_goto
 18222   0117CE  0E80               	movlw	low STR_1
 18223   0117D0  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 18224   0117D2  0EFF               	movlw	high STR_1
 18225   0117D4  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 18226   0117D6  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 18227   0117DA                     
 18228                           ;main.c: 283:                         i2c_lcd_goto(0,1); i2c_lcd_puts(fixedDisease);
 18229   0117DA  0E01               	movlw	1
 18230   0117DC  6E21               	movwf	i2c_lcd_goto@row^(0+1280),c
 18231   0117DE  0E00               	movlw	0
 18232   0117E0  EC50  F0B0         	call	_i2c_lcd_goto
 18233   0117E4  0EAD               	movlw	low STR_2
 18234   0117E6  6E20               	movwf	i2c_lcd_puts@str^(0+1280),c
 18235   0117E8  0EFE               	movlw	high STR_2
 18236   0117EA  6E21               	movwf	(i2c_lcd_puts@str+1)^(0+1280),c
 18237   0117EC  EC9B  F0AE         	call	_i2c_lcd_puts	;wreg free
 18238   0117F0                     l10981:
 18239                           
 18240                           ;main.c: 287:             hcsr04_trigger_counter++;
 18241   0117F0  0106               	movlb	6	; () banked
 18242   0117F2  4BD2               	infsnz	main@hcsr04_trigger_counter& (0+255),f,b
 18243   0117F4  2BD3               	incf	(main@hcsr04_trigger_counter+1)& (0+255),f,b
 18244                           
 18245                           ;main.c: 288:         } else {
 18246   0117F6  EF6A  F089         	goto	l10805
 18247   0117FA                     l10983:
 18248                           
 18249                           ; BSR set to: 6
 18250                           ;main.c: 289:             hcsr04_trigger_counter = 0;
 18251   0117FA  0E00               	movlw	0
 18252   0117FC  6FD3               	movwf	(main@hcsr04_trigger_counter+1)& (0+255),b
 18253   0117FE  0E00               	movlw	0
 18254   011800  6FD2               	movwf	main@hcsr04_trigger_counter& (0+255),b
 18255   011802  EF6A  F089         	goto	l10805
 18256   011806  EF81  F000         	goto	start
 18257   01180A                     __end_of_main:
 18258                           	callstack 0
 18259                           
 18260 ;; *************** function _sprintf *****************
 18261 ;; Defined at:
 18262 ;;		line 9 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/nf_sprintf.c"
 18263 ;; Parameters:    Size  Location     Type
 18264 ;;  s               2   21[BANK6 ] PTR unsigned char 
 18265 ;;		 -> main@alert_str(64), 
 18266 ;;  fmt             2   23[BANK6 ] PTR const unsigned char 
 18267 ;;		 -> STR_24(20), STR_22(49), 
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;  f              11   31[BANK6 ] struct _IO_FILE
 18270 ;;  ap              2   29[BANK6 ] PTR void [1]
 18271 ;;		 -> ?_sprintf(2), 
 18272 ;;  ret             2    0        int 
 18273 ;; Return value:  Size  Location     Type
 18274 ;;                  2   21[BANK6 ] int 
 18275 ;; Registers used:
 18276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18277 ;; Tracked objects:
 18278 ;;		On entry : 0/0
 18279 ;;		On exit  : 0/0
 18280 ;;		Unchanged: 0/0
 18281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18282 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18283 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18285 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18286 ;;Total ram usage:       21 bytes
 18287 ;; Hardware stack levels used: 1
 18288 ;; Hardware stack levels required when called: 11
 18289 ;; This function calls:
 18290 ;;		_vfprintf
 18291 ;; This function is called by:
 18292 ;;		_main
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           	psect	text1
 18297   016000                     __ptext1:
 18298                           	callstack 0
 18299   016000                     _sprintf:
 18300                           	callstack 115
 18301   016000  0E19               	movlw	low (?_sprintf+4)
 18302   016002  0106               	movlb	6	; () banked
 18303   016004  6F1D               	movwf	sprintf@ap& (0+255),b
 18304   016006  0E06               	movlw	high (?_sprintf+4)
 18305   016008  6F1E               	movwf	(sprintf@ap+1)& (0+255),b
 18306   01600A  C615  F61F         	movff	sprintf@s,sprintf@f
 18307   01600E  C616  F620         	movff	sprintf@s+1,sprintf@f+1
 18308   016012                     
 18309                           ; BSR set to: 6
 18310   016012  0E00               	movlw	0
 18311   016014  6F22               	movwf	(sprintf@f+3)& (0+255),b
 18312   016016  0E00               	movlw	0
 18313   016018  6F21               	movwf	(sprintf@f+2)& (0+255),b
 18314   01601A                     
 18315                           ; BSR set to: 6
 18316   01601A  0E00               	movlw	0
 18317   01601C  6F29               	movwf	(sprintf@f+10)& (0+255),b
 18318   01601E  0E00               	movlw	0
 18319   016020  6F28               	movwf	(sprintf@f+9)& (0+255),b
 18320   016022                     
 18321                           ; BSR set to: 6
 18322   016022  0E1F               	movlw	low sprintf@f
 18323   016024  6F0D               	movwf	vfprintf@fp& (0+255),b
 18324   016026  0E06               	movlw	high sprintf@f
 18325   016028  6F0E               	movwf	(vfprintf@fp+1)& (0+255),b
 18326   01602A  C617  F60F         	movff	sprintf@fmt,vfprintf@fmt
 18327   01602E  C618  F610         	movff	sprintf@fmt+1,vfprintf@fmt+1
 18328   016032  0E1D               	movlw	low sprintf@ap
 18329   016034  6F11               	movwf	vfprintf@ap& (0+255),b
 18330   016036  0E06               	movlw	high sprintf@ap
 18331   016038  6F12               	movwf	(vfprintf@ap+1)& (0+255),b
 18332   01603A  EC57  F0AF         	call	_vfprintf	;wreg free
 18333   01603E  0106               	movlb	6	; () banked
 18334   016040  5121               	movf	(sprintf@f+2)& (0+255),w,b
 18335   016042  2515               	addwf	sprintf@s& (0+255),w,b
 18336   016044  6ED9               	movwf	fsr2l,c
 18337   016046  5122               	movf	(sprintf@f+3)& (0+255),w,b
 18338   016048  2116               	addwfc	(sprintf@s+1)& (0+255),w,b
 18339   01604A  6EDA               	movwf	fsr2h,c
 18340   01604C  6ADF               	clrf	indf2,c
 18341   01604E                     
 18342                           ; BSR set to: 6
 18343   01604E  0012               	return		;funcret
 18344   016050                     __end_of_sprintf:
 18345                           	callstack 0
 18346                           
 18347 ;; *************** function _vfprintf *****************
 18348 ;; Defined at:
 18349 ;;		line 1817 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;  fp              2   13[BANK6 ] PTR struct _IO_FILE
 18352 ;;		 -> sprintf@f(11), 
 18353 ;;  fmt             2   15[BANK6 ] PTR const unsigned char 
 18354 ;;		 -> STR_24(20), STR_22(49), 
 18355 ;;  ap              2   17[BANK6 ] PTR PTR void 
 18356 ;;		 -> sprintf@ap(2), 
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;  cfmt            2   19[BANK6 ] PTR unsigned char 
 18359 ;;		 -> STR_24(20), STR_22(49), 
 18360 ;; Return value:  Size  Location     Type
 18361 ;;                  2   13[BANK6 ] int 
 18362 ;; Registers used:
 18363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18369 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18370 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18372 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18373 ;;Total ram usage:        8 bytes
 18374 ;; Hardware stack levels used: 1
 18375 ;; Hardware stack levels required when called: 10
 18376 ;; This function calls:
 18377 ;;		_vfpfcnvrt
 18378 ;; This function is called by:
 18379 ;;		_sprintf
 18380 ;; This function uses a non-reentrant model
 18381 ;;
 18382                           
 18383                           	psect	text2
 18384   015EAE                     __ptext2:
 18385                           	callstack 0
 18386   015EAE                     _vfprintf:
 18387                           	callstack 115
 18388   015EAE                     
 18389                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v3.00/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
 18390   015EAE  C60F  F613         	movff	vfprintf@fmt,vfprintf@cfmt
 18391   015EB2  C610  F614         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 18392                           
 18393                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
 18394   015EB6  EF6C  F0AF         	goto	l10583
 18395   015EBA                     l10581:
 18396                           
 18397                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
 18398   015EBA  C60D  F600         	movff	vfprintf@fp,vfpfcnvrt@fp
 18399   015EBE  C60E  F601         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 18400   015EC2  0E13               	movlw	low vfprintf@cfmt
 18401   015EC4  0106               	movlb	6	; () banked
 18402   015EC6  6F02               	movwf	vfpfcnvrt@fmt& (0+255),b
 18403   015EC8  0E06               	movlw	high vfprintf@cfmt
 18404   015ECA  6F03               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 18405   015ECC  C611  F604         	movff	vfprintf@ap,vfpfcnvrt@ap
 18406   015ED0  C612  F605         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 18407   015ED4  ECC2  F09C         	call	_vfpfcnvrt	;wreg free
 18408   015ED8                     l10583:
 18409                           
 18410                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
 18411   015ED8  C613  F4F6         	movff	vfprintf@cfmt,tblptrl
 18412   015EDC  C614  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 18413   015EE0                     	if	0	;tblptru may be non-zero
 18414   015EE0                     	endif
 18415   015EE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18416   015EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 18417   015EE2  6EF8               	movwf	tblptru,c
 18418   015EE4                     	endif
 18419   015EE4  0008               	tblrd		*
 18420   015EE6  50F5               	movf	tablat,w,c
 18421   015EE8  0900               	iorlw	0
 18422   015EEA  A4D8               	btfss	status,2,c
 18423   015EEC  EF7A  F0AF         	goto	u9901
 18424   015EF0  EF7C  F0AF         	goto	u9900
 18425   015EF4                     u9901:
 18426   015EF4  EF5D  F0AF         	goto	l10581
 18427   015EF8                     u9900:
 18428   015EF8                     
 18429                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1835:  return 0;
 18430   015EF8  0E00               	movlw	0
 18431   015EFA  0106               	movlb	6	; () banked
 18432   015EFC  6F0E               	movwf	(?_vfprintf+1)& (0+255),b
 18433   015EFE  0E00               	movlw	0
 18434   015F00  6F0D               	movwf	?_vfprintf& (0+255),b
 18435   015F02                     
 18436                           ; BSR set to: 6
 18437   015F02  0012               	return		;funcret
 18438   015F04                     __end_of_vfprintf:
 18439                           	callstack 0
 18440                           
 18441 ;; *************** function _vfpfcnvrt *****************
 18442 ;; Defined at:
 18443 ;;		line 1177 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 18444 ;; Parameters:    Size  Location     Type
 18445 ;;  fp              2    0[BANK6 ] PTR struct _IO_FILE
 18446 ;;		 -> sprintf@f(11), 
 18447 ;;  fmt             2    2[BANK6 ] PTR PTR unsigned char 
 18448 ;;		 -> vfprintf@cfmt(2), 
 18449 ;;  ap              2    4[BANK6 ] PTR PTR void 
 18450 ;;		 -> sprintf@ap(2), 
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;  convarg         4    6[BANK6 ] struct .
 18453 ;;  cp              2   11[BANK6 ] PTR unsigned char 
 18454 ;;		 -> STR_24(20), STR_22(49), 
 18455 ;;  c               1   10[BANK6 ] unsigned char 
 18456 ;;  done            1    0        _Bool 
 18457 ;; Return value:  Size  Location     Type
 18458 ;;                  1    wreg      void 
 18459 ;; Registers used:
 18460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18461 ;; Tracked objects:
 18462 ;;		On entry : 0/0
 18463 ;;		On exit  : 0/0
 18464 ;;		Unchanged: 0/0
 18465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18466 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18467 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18469 ;;      Totals:         0       2      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18470 ;;Total ram usage:       15 bytes
 18471 ;; Hardware stack levels used: 1
 18472 ;; Hardware stack levels required when called: 9
 18473 ;; This function calls:
 18474 ;;		_efgtoa
 18475 ;;		_fputc
 18476 ;;		_read_prec_or_width
 18477 ;; This function is called by:
 18478 ;;		_vfprintf
 18479 ;; This function uses a non-reentrant model
 18480 ;;
 18481                           
 18482                           	psect	text3
 18483   013984                     __ptext3:
 18484                           	callstack 0
 18485   013984                     _vfpfcnvrt:
 18486                           	callstack 115
 18487   013984                     
 18488                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v3.00/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
 18489   013984  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18490   013988  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18491   01398C  C4DE F4F6          	movff	postinc2,tblptrl
 18492   013990  C4DD F4F7          	movff	postdec2,tblptrh
 18493   013994                     	if	0	;tblptru may be non-zero
 18494   013994                     	endif
 18495   013994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18496   013994  0E00               	movlw	low (__mediumconst shr (0+16))
 18497   013996  6EF8               	movwf	tblptru,c
 18498   013998                     	endif
 18499   013998  0008               	tblrd		*
 18500   01399A  50F5               	movf	tablat,w,c
 18501   01399C  0A25               	xorlw	37
 18502   01399E  A4D8               	btfss	status,2,c
 18503   0139A0  EFD4  F09C         	goto	u9511
 18504   0139A4  EFD6  F09C         	goto	u9510
 18505   0139A8                     u9511:
 18506   0139A8  EFD1  F09D         	goto	l10331
 18507   0139AC                     u9510:
 18508   0139AC                     
 18509                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
 18510   0139AC  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18511   0139B0  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18512   0139B4  2ADE               	incf	postinc2,f,c
 18513   0139B6  0E00               	movlw	0
 18514   0139B8  22DD               	addwfc	postdec2,f,c
 18515   0139BA                     
 18516                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
 18517   0139BA  0E00               	movlw	0
 18518   0139BC  0106               	movlb	6	; () banked
 18519   0139BE  6FCD               	movwf	(_width+1)& (0+255),b
 18520   0139C0  0E00               	movlw	0
 18521   0139C2  6FCC               	movwf	_width& (0+255),b
 18522   0139C4  C6CC  F6D8         	movff	_width,_flags
 18523   0139C8                     
 18524                           ; BSR set to: 6
 18525                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
 18526   0139C8  69CE               	setf	_prec& (0+255),b
 18527   0139CA  69CF               	setf	(_prec+1)& (0+255),b
 18528   0139CC                     
 18529                           ; BSR set to: 6
 18530                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1265:         if ((*
      +                          fmt)[0] == '.') {
 18531   0139CC  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18532   0139D0  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18533   0139D4  C4DE F4F6          	movff	postinc2,tblptrl
 18534   0139D8  C4DD F4F7          	movff	postdec2,tblptrh
 18535   0139DC                     	if	0	;tblptru may be non-zero
 18536   0139DC                     	endif
 18537   0139DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18538   0139DC  0E00               	movlw	low (__mediumconst shr (0+16))
 18539   0139DE  6EF8               	movwf	tblptru,c
 18540   0139E0                     	endif
 18541   0139E0  0008               	tblrd		*
 18542   0139E2  50F5               	movf	tablat,w,c
 18543   0139E4  0A2E               	xorlw	46
 18544   0139E6  A4D8               	btfss	status,2,c
 18545   0139E8  EFF8  F09C         	goto	u9521
 18546   0139EC  EFFA  F09C         	goto	u9520
 18547   0139F0                     u9521:
 18548   0139F0  EF0F  F09D         	goto	l10295
 18549   0139F4                     u9520:
 18550   0139F4                     
 18551                           ; BSR set to: 6
 18552                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1266:             ++
      +                          *fmt;
 18553   0139F4  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18554   0139F8  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18555   0139FC  2ADE               	incf	postinc2,f,c
 18556   0139FE  0E00               	movlw	0
 18557   013A00  22DD               	addwfc	postdec2,f,c
 18558   013A02                     
 18559                           ; BSR set to: 6
 18560                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1267:    prec = read
      +                          _prec_or_width(fmt, ap);
 18561   013A02  C602  F511         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 18562   013A06  C603  F512         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 18563   013A0A  C604  F513         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 18564   013A0E  C605  F514         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 18565   013A12  EC9F  F0A7         	call	_read_prec_or_width	;wreg free
 18566   013A16  C511  F6CE         	movff	?_read_prec_or_width,_prec
 18567   013A1A  C512  F6CF         	movff	?_read_prec_or_width+1,_prec+1
 18568   013A1E                     l10295:
 18569                           
 18570                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
 18571   013A1E  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18572   013A22  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18573   013A26  C4DE F60B          	movff	postinc2,vfpfcnvrt@cp
 18574   013A2A  C4DD F60C          	movff	postdec2,vfpfcnvrt@cp+1
 18575   013A2E                     
 18576                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
 18577   013A2E  C60B  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 18578   013A32  C60C  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 18579   013A36                     	if	0	;tblptru may be non-zero
 18580   013A36                     	endif
 18581   013A36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18582   013A36  0E00               	movlw	low (__mediumconst shr (0+16))
 18583   013A38  6EF8               	movwf	tblptru,c
 18584   013A3A                     	endif
 18585   013A3A  0008               	tblrd		*
 18586   013A3C  C4F5 F60A          	movff	tablat,vfpfcnvrt@c
 18587                           
 18588                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
 18589   013A40  EF2D  F09D         	goto	l10305
 18590   013A44                     l10299:
 18591                           
 18592                           ; BSR set to: 6
 18593                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1695:     cp++;
 18594   013A44  4B0B               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 18595   013A46  2B0C               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 18596                           
 18597                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1696:     break;
 18598   013A48  EF3D  F09D         	goto	l10307
 18599   013A4C                     l10301:
 18600                           
 18601                           ; BSR set to: 6
 18602                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
 18603   013A4C  0E6C               	movlw	108
 18604   013A4E  6F0A               	movwf	vfpfcnvrt@c& (0+255),b
 18605                           
 18606                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1722:     break;
 18607   013A50  EF3D  F09D         	goto	l10307
 18608   013A54                     l2545:
 18609                           
 18610                           ; BSR set to: 6
 18611                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
 18612   013A54  6B0A               	clrf	vfpfcnvrt@c& (0+255),b
 18613                           
 18614                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1725:     break;
 18615   013A56  EF3D  F09D         	goto	l10307
 18616   013A5A                     l10305:
 18617   013A5A  0106               	movlb	6	; () banked
 18618   013A5C  510A               	movf	vfpfcnvrt@c& (0+255),w,b
 18619                           
 18620                           ; Switch size 1, requested type "simple"
 18621                           ; Number of cases is 3, Range of values is 76 to 108
 18622                           ; switch strategies available:
 18623                           ; Name         Instructions Cycles
 18624                           ; simple_byte           10     6 (average)
 18625                           ;	Chosen strategy is simple_byte
 18626   013A5E  0A4C               	xorlw	76	; case 76
 18627   013A60  B4D8               	btfsc	status,2,c
 18628   013A62  EF22  F09D         	goto	l10299
 18629   013A66  0A2A               	xorlw	42	; case 102
 18630   013A68  B4D8               	btfsc	status,2,c
 18631   013A6A  EF26  F09D         	goto	l10301
 18632   013A6E  0A0A               	xorlw	10	; case 108
 18633   013A70  B4D8               	btfsc	status,2,c
 18634   013A72  EF22  F09D         	goto	l10299
 18635   013A76  EF2A  F09D         	goto	l2545
 18636   013A7A                     l10307:
 18637                           
 18638                           ; BSR set to: 6
 18639   013A7A  C60B  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 18640   013A7E  C60C  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 18641   013A82                     	if	0	;tblptru may be non-zero
 18642   013A82                     	endif
 18643   013A82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18644   013A82  0E00               	movlw	low (__mediumconst shr (0+16))
 18645   013A84  6EF8               	movwf	tblptru,c
 18646   013A86                     	endif
 18647   013A86  0008               	tblrd		*
 18648   013A88  50F5               	movf	tablat,w,c
 18649   013A8A  0A66               	xorlw	102
 18650   013A8C  A4D8               	btfss	status,2,c
 18651   013A8E  EF4B  F09D         	goto	u9531
 18652   013A92  EF4D  F09D         	goto	u9530
 18653   013A96                     u9531:
 18654   013A96  EFC8  F09D         	goto	l10327
 18655   013A9A                     u9530:
 18656   013A9A  EF83  F09D         	goto	l10315
 18657   013A9E                     l10309:
 18658                           
 18659                           ; BSR set to: 6
 18660                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1756:      convarg.f
      +                           = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 18661   013A9E  C604  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 18662   013AA2  C605  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 18663   013AA6  C4DF F5FC          	movff	indf2,??_vfpfcnvrt
 18664   013AAA  0E04               	movlw	4
 18665   013AAC  26DE               	addwf	postinc2,f,c
 18666   013AAE  C4DF F5FD          	movff	indf2,??_vfpfcnvrt+1
 18667   013AB2  0E00               	movlw	0
 18668   013AB4  22DD               	addwfc	postdec2,f,c
 18669   013AB6  C5FC  F4D9         	movff	??_vfpfcnvrt,fsr2l
 18670   013ABA  C5FD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 18671   013ABE  C4DE F606          	movff	postinc2,vfpfcnvrt@convarg
 18672   013AC2  C4DE F607          	movff	postinc2,vfpfcnvrt@convarg+1
 18673   013AC6  C4DE F608          	movff	postinc2,vfpfcnvrt@convarg+2
 18674   013ACA  C4DE F609          	movff	postinc2,vfpfcnvrt@convarg+3
 18675                           
 18676                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1757:      break;
 18677   013ACE  EF8E  F09D         	goto	l10317
 18678   013AD2                     l10311:
 18679                           
 18680                           ; BSR set to: 6
 18681                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1759:      convarg.f
      +                           = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 18682   013AD2  C604  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 18683   013AD6  C605  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 18684   013ADA  C4DF F5FC          	movff	indf2,??_vfpfcnvrt
 18685   013ADE  0E04               	movlw	4
 18686   013AE0  26DE               	addwf	postinc2,f,c
 18687   013AE2  C4DF F5FD          	movff	indf2,??_vfpfcnvrt+1
 18688   013AE6  0E00               	movlw	0
 18689   013AE8  22DD               	addwfc	postdec2,f,c
 18690   013AEA  C5FC  F4D9         	movff	??_vfpfcnvrt,fsr2l
 18691   013AEE  C5FD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 18692   013AF2  C4DE F606          	movff	postinc2,vfpfcnvrt@convarg
 18693   013AF6  C4DE F607          	movff	postinc2,vfpfcnvrt@convarg+1
 18694   013AFA  C4DE F608          	movff	postinc2,vfpfcnvrt@convarg+2
 18695   013AFE  C4DE F609          	movff	postinc2,vfpfcnvrt@convarg+3
 18696                           
 18697                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1760:      break;
 18698   013B02  EF8E  F09D         	goto	l10317
 18699   013B06                     l10315:
 18700                           
 18701                           ; BSR set to: 6
 18702   013B06  510A               	movf	vfpfcnvrt@c& (0+255),w,b
 18703                           
 18704                           ; Switch size 1, requested type "simple"
 18705                           ; Number of cases is 2, Range of values is 76 to 108
 18706                           ; switch strategies available:
 18707                           ; Name         Instructions Cycles
 18708                           ; simple_byte            7     4 (average)
 18709                           ;	Chosen strategy is simple_byte
 18710   013B08  0A4C               	xorlw	76	; case 76
 18711   013B0A  B4D8               	btfsc	status,2,c
 18712   013B0C  EF69  F09D         	goto	l10311
 18713   013B10  0A20               	xorlw	32	; case 108
 18714   013B12  B4D8               	btfsc	status,2,c
 18715   013B14  EF4F  F09D         	goto	l10309
 18716   013B18  EF8E  F09D         	goto	l10317
 18717   013B1C                     l10317:
 18718                           
 18719                           ; BSR set to: 6
 18720                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1
      +                          ;
 18721   013B1C  0E01               	movlw	1
 18722   013B1E  250B               	addwf	vfpfcnvrt@cp& (0+255),w,b
 18723   013B20  0105               	movlb	5	; () banked
 18724   013B22  6FFC               	movwf	??_vfpfcnvrt& (0+255),b
 18725   013B24  0E00               	movlw	0
 18726   013B26  0106               	movlb	6	; () banked
 18727   013B28  210C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 18728   013B2A  0105               	movlb	5	; () banked
 18729   013B2C  6FFD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 18730   013B2E  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18731   013B32  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18732   013B36  C5FC  F4DE         	movff	??_vfpfcnvrt,postinc2
 18733   013B3A  C5FD  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 18734                           
 18735                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp
      +                          ) {
 18736   013B3E  EFBA  F09D         	goto	l10325
 18737   013B42                     l10319:
 18738                           
 18739                           ; BSR set to: 5
 18740                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1790:      return (v
      +                          oid) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 18741   013B42  C600  F5C7         	movff	vfpfcnvrt@fp,efgtoa@fp
 18742   013B46  C601  F5C8         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 18743   013B4A  C606  F5C9         	movff	vfpfcnvrt@convarg,efgtoa@f
 18744   013B4E  C607  F5CA         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 18745   013B52  C608  F5CB         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 18746   013B56  C609  F5CC         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 18747   013B5A  C60B  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 18748   013B5E  C60C  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 18749   013B62                     	if	0	;tblptru may be non-zero
 18750   013B62                     	endif
 18751   013B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18752   013B62  0E00               	movlw	low (__mediumconst shr (0+16))
 18753   013B64  6EF8               	movwf	tblptru,c
 18754   013B66                     	endif
 18755   013B66  0008               	tblrd		*
 18756   013B68  C4F5 F5CD          	movff	tablat,efgtoa@c
 18757   013B6C  EC00  F080         	call	_efgtoa	;wreg free
 18758   013B70  EFE7  F09D         	goto	l2555
 18759   013B74                     l10325:
 18760                           
 18761                           ; BSR set to: 5
 18762   013B74  C60B  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 18763   013B78  C60C  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 18764   013B7C                     	if	0	;tblptru may be non-zero
 18765   013B7C                     	endif
 18766   013B7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18767   013B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 18768   013B7E  6EF8               	movwf	tblptru,c
 18769   013B80                     	endif
 18770   013B80  0008               	tblrd		*
 18771   013B82  50F5               	movf	tablat,w,c
 18772                           
 18773                           ; Switch size 1, requested type "simple"
 18774                           ; Number of cases is 1, Range of values is 102 to 102
 18775                           ; switch strategies available:
 18776                           ; Name         Instructions Cycles
 18777                           ; simple_byte            4     3 (average)
 18778                           ;	Chosen strategy is simple_byte
 18779   013B84  0A66               	xorlw	102	; case 102
 18780   013B86  B4D8               	btfsc	status,2,c
 18781   013B88  EFA1  F09D         	goto	l10319
 18782   013B8C  EFC8  F09D         	goto	l10327
 18783   013B90                     l10327:
 18784                           
 18785                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
 18786   013B90  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18787   013B94  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18788   013B98  2ADE               	incf	postinc2,f,c
 18789   013B9A  0E00               	movlw	0
 18790   013B9C  22DD               	addwfc	postdec2,f,c
 18791   013B9E  EFE7  F09D         	goto	l2555
 18792   013BA2                     l10331:
 18793                           
 18794                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
 18795   013BA2  C602  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 18796   013BA6  C603  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 18797   013BAA  C4DE F4F6          	movff	postinc2,tblptrl
 18798   013BAE  C4DD F4F7          	movff	postdec2,tblptrh
 18799   013BB2                     	if	0	;tblptru may be non-zero
 18800   013BB2                     	endif
 18801   013BB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18802   013BB2  0E00               	movlw	low (__mediumconst shr (0+16))
 18803   013BB4  6EF8               	movwf	tblptru,c
 18804   013BB6                     	endif
 18805   013BB6  0008               	tblrd		*
 18806   013BB8  50F5               	movf	tablat,w,c
 18807   013BBA  6E11               	movwf	fputc@c^(0+1280),c
 18808   013BBC  6A12               	clrf	(fputc@c+1)^(0+1280),c
 18809   013BBE  C600  F513         	movff	vfpfcnvrt@fp,fputc@fp
 18810   013BC2  C601  F514         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 18811   013BC6  EC05  F0A8         	call	_fputc	;wreg free
 18812   013BCA  EFC8  F09D         	goto	l10327
 18813   013BCE                     l2555:
 18814   013BCE  0012               	return		;funcret
 18815   013BD0                     __end_of_vfpfcnvrt:
 18816                           	callstack 0
 18817                           
 18818 ;; *************** function _read_prec_or_width *****************
 18819 ;; Defined at:
 18820 ;;		line 1158 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;  fmt             2   16[COMRAM] PTR PTR const unsigned c
 18823 ;;		 -> vfprintf@cfmt(2), 
 18824 ;;  ap              2   18[COMRAM] PTR PTR void [1]
 18825 ;;		 -> sprintf@ap(2), 
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;  c               1   22[COMRAM] unsigned char 
 18828 ;;  n               2   23[COMRAM] int 
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  2   16[COMRAM] int 
 18831 ;; Registers used:
 18832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18833 ;; Tracked objects:
 18834 ;;		On entry : 0/0
 18835 ;;		On exit  : 0/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18839 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18841 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18842 ;;Total ram usage:        9 bytes
 18843 ;; Hardware stack levels used: 1
 18844 ;; Hardware stack levels required when called: 4
 18845 ;; This function calls:
 18846 ;;		Nothing
 18847 ;; This function is called by:
 18848 ;;		_vfpfcnvrt
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text4
 18853   014F3E                     __ptext4:
 18854                           	callstack 0
 18855   014F3E                     _read_prec_or_width:
 18856                           	callstack 119
 18857   014F3E                     
 18858                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
 18859   014F3E  0E00               	movlw	0
 18860   014F40  6E19               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 18861   014F42  0E00               	movlw	0
 18862   014F44  6E18               	movwf	read_prec_or_width@n^(0+1280),c
 18863   014F46                     
 18864                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
 18865   014F46  C511  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 18866   014F4A  C512  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 18867   014F4E  C4DE F4F6          	movff	postinc2,tblptrl
 18868   014F52  C4DD F4F7          	movff	postdec2,tblptrh
 18869   014F56                     	if	0	;tblptru may be non-zero
 18870   014F56                     	endif
 18871   014F56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18872   014F56  0E00               	movlw	low (__mediumconst shr (0+16))
 18873   014F58  6EF8               	movwf	tblptru,c
 18874   014F5A                     	endif
 18875   014F5A  0008               	tblrd		*
 18876   014F5C  50F5               	movf	tablat,w,c
 18877   014F5E  0A2A               	xorlw	42
 18878   014F60  A4D8               	btfss	status,2,c
 18879   014F62  EFB5  F0A7         	goto	u6081
 18880   014F66  EFB7  F0A7         	goto	u6080
 18881   014F6A                     u6081:
 18882   014F6A  EFEA  F0A7         	goto	l7379
 18883   014F6E                     u6080:
 18884   014F6E                     
 18885                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
 18886   014F6E  C511  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 18887   014F72  C512  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 18888   014F76  2ADE               	incf	postinc2,f,c
 18889   014F78  0E00               	movlw	0
 18890   014F7A  22DD               	addwfc	postdec2,f,c
 18891                           
 18892                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
 18893   014F7C  C513  F4D9         	movff	read_prec_or_width@ap,fsr2l
 18894   014F80  C514  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 18895   014F84  C4DF F515          	movff	indf2,??_read_prec_or_width
 18896   014F88  0E02               	movlw	2
 18897   014F8A  26DE               	addwf	postinc2,f,c
 18898   014F8C  C4DF F516          	movff	indf2,??_read_prec_or_width+1
 18899   014F90  0E00               	movlw	0
 18900   014F92  22DD               	addwfc	postdec2,f,c
 18901   014F94  C515  F4D9         	movff	??_read_prec_or_width,fsr2l
 18902   014F98  C516  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 18903   014F9C  C4DE F518          	movff	postinc2,read_prec_or_width@n
 18904   014FA0  C4DD F519          	movff	postdec2,read_prec_or_width@n+1
 18905                           
 18906                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1163:     } else {
 18907   014FA4  EF00  F0A8         	goto	l2531
 18908   014FA8                     l7375:
 18909                           
 18910                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
 18911   014FA8  0E0A               	movlw	10
 18912   014FAA  0218               	mulwf	read_prec_or_width@n^(0+1280),c
 18913   014FAC  C4F3 F515          	movff	prodl,??_read_prec_or_width
 18914   014FB0  C4F4 F516          	movff	prodh,??_read_prec_or_width+1
 18915   014FB4  0219               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 18916   014FB6  50F3               	movf	prodl,w,c
 18917   014FB8  2616               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 18918   014FBA  5017               	movf	read_prec_or_width@c^(0+1280),w,c
 18919   014FBC  2415               	addwf	??_read_prec_or_width^(0+1280),w,c
 18920   014FBE  6E18               	movwf	read_prec_or_width@n^(0+1280),c
 18921   014FC0  0E00               	movlw	0
 18922   014FC2  2016               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 18923   014FC4  6E19               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 18924   014FC6                     
 18925                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
 18926   014FC6  C511  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 18927   014FCA  C512  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 18928   014FCE  2ADE               	incf	postinc2,f,c
 18929   014FD0  0E00               	movlw	0
 18930   014FD2  22DD               	addwfc	postdec2,f,c
 18931   014FD4                     l7379:
 18932                           
 18933                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 18934   014FD4  C511  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 18935   014FD8  C512  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 18936   014FDC  C4DE F4F6          	movff	postinc2,tblptrl
 18937   014FE0  C4DD F4F7          	movff	postdec2,tblptrh
 18938   014FE4                     	if	0	;tblptru may be non-zero
 18939   014FE4                     	endif
 18940   014FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18941   014FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 18942   014FE6  6EF8               	movwf	tblptru,c
 18943   014FE8                     	endif
 18944   014FE8  0008               	tblrd		*
 18945   014FEA  50F5               	movf	tablat,w,c
 18946   014FEC  0FD0               	addlw	208
 18947   014FEE  6E17               	movwf	read_prec_or_width@c^(0+1280),c
 18948   014FF0  0E09               	movlw	9
 18949   014FF2  6417               	cpfsgt	read_prec_or_width@c^(0+1280),c
 18950   014FF4  EFFE  F0A7         	goto	u6091
 18951   014FF8  EF00  F0A8         	goto	u6090
 18952   014FFC                     u6091:
 18953   014FFC  EFD4  F0A7         	goto	l7375
 18954   015000                     u6090:
 18955   015000                     l2531:
 18956                           
 18957                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 1170:     return n;
 18958   015000  C518  F511         	movff	read_prec_or_width@n,?_read_prec_or_width
 18959   015004  C519  F512         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 18960   015008  0012               	return		;funcret
 18961   01500A                     __end_of_read_prec_or_width:
 18962                           	callstack 0
 18963                           
 18964 ;; *************** function _efgtoa *****************
 18965 ;; Defined at:
 18966 ;;		line 587 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 18967 ;; Parameters:    Size  Location     Type
 18968 ;;  fp              2  103[BANK5 ] PTR struct _IO_FILE
 18969 ;;		 -> sprintf@f(11), 
 18970 ;;  f               4  105[BANK5 ] PTR struct _IO_FILE
 18971 ;;  c               1  109[BANK5 ] unsigned char 
 18972 ;; Auto vars:     Size  Location     Type
 18973 ;;  u               4  152[BANK5 ] struct flui
 18974 ;;  g               4  146[BANK5 ] struct flui
 18975 ;;  l               4  141[BANK5 ] struct flui
 18976 ;;  h               4  137[BANK5 ] struct flui
 18977 ;;  ou              4  131[BANK5 ] struct flui
 18978 ;;  n               2  150[BANK5 ] int 
 18979 ;;  i               2  135[BANK5 ] int 
 18980 ;;  w               2  129[BANK5 ] int 
 18981 ;;  e               2  127[BANK5 ] int 
 18982 ;;  m               2  125[BANK5 ] int 
 18983 ;;  d               2  123[BANK5 ] int 
 18984 ;;  t               2  116[BANK5 ] int 
 18985 ;;  p               2  114[BANK5 ] int 
 18986 ;;  ne              2  112[BANK5 ] int 
 18987 ;;  sign            1  145[BANK5 ] unsigned char 
 18988 ;;  nmode           1  122[BANK5 ] unsigned char 
 18989 ;;  mode            1  121[BANK5 ] unsigned char 
 18990 ;;  pp              1  120[BANK5 ] unsigned char 
 18991 ;;  esign           1    0        unsigned char 
 18992 ;; Return value:  Size  Location     Type
 18993 ;;                  1    wreg      void 
 18994 ;; Registers used:
 18995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18996 ;; Tracked objects:
 18997 ;;		On entry : 0/0
 18998 ;;		On exit  : 0/0
 18999 ;;		Unchanged: 0/0
 19000 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19001 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19002 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19004 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19005 ;;Total ram usage:       53 bytes
 19006 ;; Hardware stack levels used: 1
 19007 ;; Hardware stack levels required when called: 8
 19008 ;; This function calls:
 19009 ;;		___fladd
 19010 ;;		___fldiv
 19011 ;;		___fleq
 19012 ;;		___flge
 19013 ;;		___flmul
 19014 ;;		___flneg
 19015 ;;		___flsub
 19016 ;;		___fltol
 19017 ;;		___fpclassifyf
 19018 ;;		_floorf
 19019 ;;		_labs
 19020 ;;		_memcpy
 19021 ;;		_pad
 19022 ;;		_strcpy
 19023 ;; This function is called by:
 19024 ;;		_vfpfcnvrt
 19025 ;; This function uses a non-reentrant model
 19026 ;;
 19027                           
 19028                           	psect	text5
 19029   010000                     __ptext5:
 19030                           	callstack 0
 19031   010000                     _efgtoa:
 19032                           	callstack 115
 19033   010000                     
 19034                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 587: static void efg
      +                          toa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v3.00/pic/sources/c99/c
      +                          ommon/doprnt.c: 588: {;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c
      +                          : 589:     char mode, nmode, pp, sign, esign;;/Applications/microchip/xc8/v3.00/pic/sour
      +                          ces/c99/common/doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;/Applications/microchi
      +                          p/xc8/v3.00/pic/sources/c99/common/doprnt.c: 591:     long double h, l;;/Applications/mi
      +                          crochip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 592:  union flui g, u, ou;
 19035   010000  0105               	movlb	5	; () banked
 19036   010002  6BF1               	clrf	efgtoa@sign& (0+255),b
 19037                           
 19038                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
 19039   010004  C5C9  F5F2         	movff	efgtoa@f,efgtoa@g
 19040   010008  C5CA  F5F3         	movff	efgtoa@f+1,efgtoa@g+1
 19041   01000C  C5CB  F5F4         	movff	efgtoa@f+2,efgtoa@g+2
 19042   010010  C5CC  F5F5         	movff	efgtoa@f+3,efgtoa@g+3
 19043   010014                     
 19044                           ; BSR set to: 5
 19045                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0
      +                          .0) {
 19046   010014  BFF5               	btfsc	(efgtoa@g+3)& (0+255),7,b
 19047   010016  EF11  F080         	goto	u9010
 19048   01001A  EF0F  F080         	goto	u9011
 19049   01001E                     u9011:
 19050   01001E  EF25  F080         	goto	l9923
 19051   010022                     u9010:
 19052   010022                     
 19053                           ; BSR set to: 5
 19054                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 598:         sign = 
      +                          1;
 19055   010022  0E01               	movlw	1
 19056   010024  6FF1               	movwf	efgtoa@sign& (0+255),b
 19057   010026                     
 19058                           ; BSR set to: 5
 19059                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 599:         g.f = -
      +                          g.f;
 19060   010026  C5F2  F511         	movff	efgtoa@g,___flneg@f1
 19061   01002A  C5F3  F512         	movff	efgtoa@g+1,___flneg@f1+1
 19062   01002E  C5F4  F513         	movff	efgtoa@g+2,___flneg@f1+2
 19063   010032  C5F5  F514         	movff	efgtoa@g+3,___flneg@f1+3
 19064   010036  ECD6  F0B1         	call	___flneg	;wreg free
 19065   01003A  C511  F5F2         	movff	?___flneg,efgtoa@g
 19066   01003E  C512  F5F3         	movff	?___flneg+1,efgtoa@g+1
 19067   010042  C513  F5F4         	movff	?___flneg+2,efgtoa@g+2
 19068   010046  C514  F5F5         	movff	?___flneg+3,efgtoa@g+3
 19069   01004A                     l9923:
 19070                           
 19071                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 603:     n = 0;
 19072   01004A  0E00               	movlw	0
 19073   01004C  0105               	movlb	5	; () banked
 19074   01004E  6FF7               	movwf	(efgtoa@n+1)& (0+255),b
 19075   010050  0E00               	movlw	0
 19076   010052  6FF6               	movwf	efgtoa@n& (0+255),b
 19077   010054                     
 19078                           ; BSR set to: 5
 19079                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 604:     w = width;
 19080   010054  C6CC  F5E1         	movff	_width,efgtoa@w
 19081   010058  C6CD  F5E2         	movff	_width+1,efgtoa@w+1
 19082   01005C                     
 19083                           ; BSR set to: 5
 19084                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 605:     if (sign
 19085   01005C  51F1               	movf	efgtoa@sign& (0+255),w,b
 19086   01005E  B4D8               	btfsc	status,2,c
 19087   010060  EF34  F080         	goto	u9021
 19088   010064  EF36  F080         	goto	u9020
 19089   010068                     u9021:
 19090   010068  EF4A  F080         	goto	l9937
 19091   01006C                     u9020:
 19092   01006C                     
 19093                           ; BSR set to: 5
 19094                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 609:    ) {;/Applica
      +                          tions/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+
      +                          ';
 19095   01006C  51F1               	movf	efgtoa@sign& (0+255),w,b
 19096   01006E  A4D8               	btfss	status,2,c
 19097   010070  EF3C  F080         	goto	u9031
 19098   010074  EF3E  F080         	goto	u9030
 19099   010078                     u9031:
 19100   010078  EF44  F080         	goto	l9933
 19101   01007C                     u9030:
 19102   01007C                     
 19103                           ; BSR set to: 5
 19104   01007C  0E00               	movlw	0
 19105   01007E  6FD7               	movwf	(_efgtoa$3808+1)& (0+255),b
 19106   010080  0E2B               	movlw	43
 19107   010082  6FD6               	movwf	_efgtoa$3808& (0+255),b
 19108   010084  EF48  F080         	goto	l9935
 19109   010088                     l9933:
 19110                           
 19111                           ; BSR set to: 5
 19112   010088  0E00               	movlw	0
 19113   01008A  6FD7               	movwf	(_efgtoa$3808+1)& (0+255),b
 19114   01008C  0E2D               	movlw	45
 19115   01008E  6FD6               	movwf	_efgtoa$3808& (0+255),b
 19116   010090                     l9935:
 19117                           
 19118                           ; BSR set to: 5
 19119   010090  C5D6  F5F1         	movff	_efgtoa$3808,efgtoa@sign
 19120   010094                     l9937:
 19121                           
 19122                           ; BSR set to: 5
 19123                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 619:     if (( __fpc
      +                          lassifyf(g.f) == 1 )) {
 19124   010094  C5F2  F511         	movff	efgtoa@g,___fpclassifyf@x
 19125   010098  C5F3  F512         	movff	efgtoa@g+1,___fpclassifyf@x+1
 19126   01009C  C5F4  F513         	movff	efgtoa@g+2,___fpclassifyf@x+2
 19127   0100A0  C5F5  F514         	movff	efgtoa@g+3,___fpclassifyf@x+3
 19128   0100A4  ECA8  F0A6         	call	___fpclassifyf	;wreg free
 19129   0100A8  0411               	decf	?___fpclassifyf^(0+1280),w,c
 19130   0100AA  1012               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 19131   0100AC  A4D8               	btfss	status,2,c
 19132   0100AE  EF5B  F080         	goto	u9041
 19133   0100B2  EF5D  F080         	goto	u9040
 19134   0100B6                     u9041:
 19135   0100B6  EF90  F080         	goto	l9955
 19136   0100BA                     u9040:
 19137   0100BA                     
 19138                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
 19139   0100BA  0105               	movlb	5	; () banked
 19140   0100BC  51F1               	movf	efgtoa@sign& (0+255),w,b
 19141   0100BE  B4D8               	btfsc	status,2,c
 19142   0100C0  EF64  F080         	goto	u9051
 19143   0100C4  EF66  F080         	goto	u9050
 19144   0100C8                     u9051:
 19145   0100C8  EF6F  F080         	goto	l9947
 19146   0100CC                     u9050:
 19147   0100CC                     
 19148                           ; BSR set to: 5
 19149                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = si
      +                          gn;
 19150   0100CC  C5F1  F75E         	movff	efgtoa@sign,_dbuf
 19151   0100D0                     
 19152                           ; BSR set to: 5
 19153                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 622:    w--;
 19154   0100D0  07E1               	decf	efgtoa@w& (0+255),f,b
 19155   0100D2  A0D8               	btfss	status,0,c
 19156   0100D4  07E2               	decf	(efgtoa@w+1)& (0+255),f,b
 19157   0100D6                     
 19158                           ; BSR set to: 5
 19159                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 623:    n = 1;
 19160   0100D6  0E00               	movlw	0
 19161   0100D8  6FF7               	movwf	(efgtoa@n+1)& (0+255),b
 19162   0100DA  0E01               	movlw	1
 19163   0100DC  6FF6               	movwf	efgtoa@n& (0+255),b
 19164   0100DE                     l9947:
 19165                           
 19166                           ; BSR set to: 5
 19167                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 631:   {;/Applicatio
      +                          ns/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n]
      +                          , "inf");
 19168   0100DE  0E5E               	movlw	low _dbuf
 19169   0100E0  25F6               	addwf	efgtoa@n& (0+255),w,b
 19170   0100E2  6E11               	movwf	strcpy@dest^(0+1280),c
 19171   0100E4  0E07               	movlw	high _dbuf
 19172   0100E6  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 19173   0100E8  6E12               	movwf	(strcpy@dest+1)^(0+1280),c
 19174   0100EA  0EF2               	movlw	low STR_25
 19175   0100EC  6E13               	movwf	strcpy@src^(0+1280),c
 19176   0100EE  0EFF               	movlw	high STR_25
 19177   0100F0  6E14               	movwf	(strcpy@src+1)^(0+1280),c
 19178   0100F2  EC45  F0B1         	call	_strcpy	;wreg free
 19179   0100F6                     l9949:
 19180                           
 19181                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 633:         };/Appl
      +                          ications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof
      +                          ("inf")/sizeof("inf"[0]))-1);
 19182   0100F6  0105               	movlb	5	; () banked
 19183   0100F8  0EFD               	movlw	253
 19184   0100FA  27E1               	addwf	efgtoa@w& (0+255),f,b
 19185   0100FC  0EFF               	movlw	255
 19186   0100FE  23E2               	addwfc	(efgtoa@w+1)& (0+255),f,b
 19187   010100                     
 19188                           ; BSR set to: 5
 19189                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 635:         return 
      +                          (void) pad(fp, &dbuf[0], w);
 19190   010100  C5C7  F521         	movff	efgtoa@fp,pad@fp
 19191   010104  C5C8  F522         	movff	efgtoa@fp+1,pad@fp+1
 19192   010108  0E5E               	movlw	low _dbuf
 19193   01010A  6E23               	movwf	pad@buf^(0+1280),c
 19194   01010C  0E07               	movlw	high _dbuf
 19195   01010E  6E24               	movwf	(pad@buf+1)^(0+1280),c
 19196   010110  C5E1  F525         	movff	efgtoa@w,pad@p
 19197   010114  C5E2  F526         	movff	efgtoa@w+1,pad@p+1
 19198   010118  EC2F  F0AE         	call	_pad	;wreg free
 19199   01011C  EFFD  F084         	goto	l2486
 19200   010120                     l9955:
 19201                           
 19202                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 637:     if (( __fpc
      +                          lassifyf(g.f) == 0 )) {
 19203   010120  C5F2  F511         	movff	efgtoa@g,___fpclassifyf@x
 19204   010124  C5F3  F512         	movff	efgtoa@g+1,___fpclassifyf@x+1
 19205   010128  C5F4  F513         	movff	efgtoa@g+2,___fpclassifyf@x+2
 19206   01012C  C5F5  F514         	movff	efgtoa@g+3,___fpclassifyf@x+3
 19207   010130  ECA8  F0A6         	call	___fpclassifyf	;wreg free
 19208   010134  5011               	movf	?___fpclassifyf^(0+1280),w,c
 19209   010136  1012               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 19210   010138  A4D8               	btfss	status,2,c
 19211   01013A  EFA1  F080         	goto	u9061
 19212   01013E  EFA3  F080         	goto	u9060
 19213   010142                     u9061:
 19214   010142  EFC3  F080         	goto	l9973
 19215   010146                     u9060:
 19216   010146                     
 19217                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
 19218   010146  0105               	movlb	5	; () banked
 19219   010148  51F1               	movf	efgtoa@sign& (0+255),w,b
 19220   01014A  B4D8               	btfsc	status,2,c
 19221   01014C  EFAA  F080         	goto	u9071
 19222   010150  EFAC  F080         	goto	u9070
 19223   010154                     u9071:
 19224   010154  EFB5  F080         	goto	l9965
 19225   010158                     u9070:
 19226   010158                     
 19227                           ; BSR set to: 5
 19228                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = si
      +                          gn;
 19229   010158  C5F1  F75E         	movff	efgtoa@sign,_dbuf
 19230   01015C                     
 19231                           ; BSR set to: 5
 19232                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 640:    w--;
 19233   01015C  07E1               	decf	efgtoa@w& (0+255),f,b
 19234   01015E  A0D8               	btfss	status,0,c
 19235   010160  07E2               	decf	(efgtoa@w+1)& (0+255),f,b
 19236   010162                     
 19237                           ; BSR set to: 5
 19238                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 641:    n = 1;
 19239   010162  0E00               	movlw	0
 19240   010164  6FF7               	movwf	(efgtoa@n+1)& (0+255),b
 19241   010166  0E01               	movlw	1
 19242   010168  6FF6               	movwf	efgtoa@n& (0+255),b
 19243   01016A                     l9965:
 19244                           
 19245                           ; BSR set to: 5
 19246                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 649:   {;/Applicatio
      +                          ns/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n]
      +                          , "nan");
 19247   01016A  0E5E               	movlw	low _dbuf
 19248   01016C  25F6               	addwf	efgtoa@n& (0+255),w,b
 19249   01016E  6E11               	movwf	strcpy@dest^(0+1280),c
 19250   010170  0E07               	movlw	high _dbuf
 19251   010172  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 19252   010174  6E12               	movwf	(strcpy@dest+1)^(0+1280),c
 19253   010176  0EF6               	movlw	low STR_28
 19254   010178  6E13               	movwf	strcpy@src^(0+1280),c
 19255   01017A  0EFF               	movlw	high STR_28
 19256   01017C  6E14               	movwf	(strcpy@src+1)^(0+1280),c
 19257   01017E  EC45  F0B1         	call	_strcpy	;wreg free
 19258   010182  EF7B  F080         	goto	l9949
 19259   010186                     l9973:
 19260                           
 19261                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
 19262   010186  0E00               	movlw	0
 19263   010188  0105               	movlb	5	; () banked
 19264   01018A  6FF8               	movwf	efgtoa@u& (0+255),b
 19265   01018C  0E00               	movlw	0
 19266   01018E  6FF9               	movwf	(efgtoa@u+1)& (0+255),b
 19267   010190  0E80               	movlw	128
 19268   010192  6FFA               	movwf	(efgtoa@u+2)& (0+255),b
 19269   010194  0E3F               	movlw	63
 19270   010196  6FFB               	movwf	(efgtoa@u+3)& (0+255),b
 19271                           
 19272                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 658:     e = 0;
 19273   010198  0E00               	movlw	0
 19274   01019A  6FE0               	movwf	(efgtoa@e+1)& (0+255),b
 19275   01019C  0E00               	movlw	0
 19276   01019E  6FDF               	movwf	efgtoa@e& (0+255),b
 19277   0101A0                     
 19278                           ; BSR set to: 5
 19279                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0
      +                          .0)) {
 19280   0101A0  C5F2  F511         	movff	efgtoa@g,___fleq@ff1
 19281   0101A4  C5F3  F512         	movff	efgtoa@g+1,___fleq@ff1+1
 19282   0101A8  C5F4  F513         	movff	efgtoa@g+2,___fleq@ff1+2
 19283   0101AC  C5F5  F514         	movff	efgtoa@g+3,___fleq@ff1+3
 19284   0101B0  0E00               	movlw	0
 19285   0101B2  6E15               	movwf	___fleq@ff2^(0+1280),c
 19286   0101B4  0E00               	movlw	0
 19287   0101B6  6E16               	movwf	(___fleq@ff2+1)^(0+1280),c
 19288   0101B8  0E00               	movlw	0
 19289   0101BA  6E17               	movwf	(___fleq@ff2+2)^(0+1280),c
 19290   0101BC  0E00               	movlw	0
 19291   0101BE  6E18               	movwf	(___fleq@ff2+3)^(0+1280),c
 19292   0101C0  ECEB  F0AA         	call	___fleq	;wreg free
 19293   0101C4  B0D8               	btfsc	status,0,c
 19294   0101C6  EFE7  F080         	goto	u9081
 19295   0101CA  EFE9  F080         	goto	u9080
 19296   0101CE                     u9081:
 19297   0101CE  EFC9  F081         	goto	l2489
 19298   0101D2                     u9080:
 19299   0101D2  EFF6  F080         	goto	l9981
 19300   0101D6                     l2491:
 19301                           
 19302                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 661:    u = ou;
 19303   0101D6  C5E3  F5F8         	movff	efgtoa@ou,efgtoa@u
 19304   0101DA  C5E4  F5F9         	movff	efgtoa@ou+1,efgtoa@u+1
 19305   0101DE  C5E5  F5FA         	movff	efgtoa@ou+2,efgtoa@u+2
 19306   0101E2  C5E6  F5FB         	movff	efgtoa@ou+3,efgtoa@u+3
 19307   0101E6                     
 19308                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 662:    ++e;
 19309   0101E6  0105               	movlb	5	; () banked
 19310   0101E8  4BDF               	infsnz	efgtoa@e& (0+255),f,b
 19311   0101EA  2BE0               	incf	(efgtoa@e+1)& (0+255),f,b
 19312   0101EC                     l9981:
 19313                           
 19314                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 660:   while ((labs(
      +                          (g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 19315   0101EC  C5F8  F51F         	movff	efgtoa@u,___flmul@b
 19316   0101F0  C5F9  F520         	movff	efgtoa@u+1,___flmul@b+1
 19317   0101F4  C5FA  F521         	movff	efgtoa@u+2,___flmul@b+2
 19318   0101F8  C5FB  F522         	movff	efgtoa@u+3,___flmul@b+3
 19319   0101FC  0E00               	movlw	0
 19320   0101FE  6E23               	movwf	___flmul@a^(0+1280),c
 19321   010200  0E00               	movlw	0
 19322   010202  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 19323   010204  0E20               	movlw	32
 19324   010206  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 19325   010208  0E41               	movlw	65
 19326   01020A  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 19327   01020C  EC74  F091         	call	___flmul	;wreg free
 19328   010210  C51F  F5E3         	movff	?___flmul,efgtoa@ou
 19329   010214  C520  F5E4         	movff	?___flmul+1,efgtoa@ou+1
 19330   010218  C521  F5E5         	movff	?___flmul+2,efgtoa@ou+2
 19331   01021C  C522  F5E6         	movff	?___flmul+3,efgtoa@ou+3
 19332   010220  0105               	movlb	5	; () banked
 19333   010222  51E3               	movf	efgtoa@ou& (0+255),w,b
 19334   010224  5DF2               	subwf	efgtoa@g& (0+255),w,b
 19335   010226  6E11               	movwf	labs@a^(0+1280),c
 19336   010228  51E4               	movf	(efgtoa@ou+1)& (0+255),w,b
 19337   01022A  59F3               	subwfb	(efgtoa@g+1)& (0+255),w,b
 19338   01022C  6E12               	movwf	(labs@a+1)^(0+1280),c
 19339   01022E  51E5               	movf	(efgtoa@ou+2)& (0+255),w,b
 19340   010230  59F4               	subwfb	(efgtoa@g+2)& (0+255),w,b
 19341   010232  6E13               	movwf	(labs@a+2)^(0+1280),c
 19342   010234  51E6               	movf	(efgtoa@ou+3)& (0+255),w,b
 19343   010236  59F5               	subwfb	(efgtoa@g+3)& (0+255),w,b
 19344   010238  6E14               	movwf	(labs@a+3)^(0+1280),c
 19345   01023A  EC82  F0AF         	call	_labs	;wreg free
 19346   01023E  BE14               	btfsc	(?_labs+3)^(0+1280),7,c
 19347   010240  EF2D  F081         	goto	u9091
 19348   010244  5014               	movf	(?_labs+3)^(0+1280),w,c
 19349   010246  1013               	iorwf	(?_labs+2)^(0+1280),w,c
 19350   010248  1012               	iorwf	(?_labs+1)^(0+1280),w,c
 19351   01024A  E109               	bnz	u9090
 19352   01024C  0E02               	movlw	2
 19353   01024E  5C11               	subwf	?_labs^(0+1280),w,c
 19354   010250  A0D8               	btfss	status,0,c
 19355   010252  EF2D  F081         	goto	u9091
 19356   010256  EF2F  F081         	goto	u9090
 19357   01025A                     u9091:
 19358   01025A  EFEB  F080         	goto	l2491
 19359   01025E                     u9090:
 19360   01025E  C5E3  F575         	movff	efgtoa@ou,___flge@ff1
 19361   010262  C5E4  F576         	movff	efgtoa@ou+1,___flge@ff1+1
 19362   010266  C5E5  F577         	movff	efgtoa@ou+2,___flge@ff1+2
 19363   01026A  C5E6  F578         	movff	efgtoa@ou+3,___flge@ff1+3
 19364   01026E  C5F2  F579         	movff	efgtoa@g,___flge@ff2
 19365   010272  C5F3  F57A         	movff	efgtoa@g+1,___flge@ff2+1
 19366   010276  C5F4  F57B         	movff	efgtoa@g+2,___flge@ff2+2
 19367   01027A  C5F5  F57C         	movff	efgtoa@g+3,___flge@ff2+3
 19368   01027E  EC25  F0A6         	call	___flge	;wreg free
 19369   010282  0105               	movlb	5	; () banked
 19370   010284  A0D8               	btfss	status,0,c
 19371   010286  EF47  F081         	goto	u9101
 19372   01028A  EF49  F081         	goto	u9100
 19373   01028E                     u9101:
 19374   01028E  EFEB  F080         	goto	l2491
 19375   010292                     u9100:
 19376   010292                     
 19377                           ; BSR set to: 5
 19378                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g)
      +                          .u-(u).u) <= 1)) {
 19379   010292  51F8               	movf	efgtoa@u& (0+255),w,b
 19380   010294  5DF2               	subwf	efgtoa@g& (0+255),w,b
 19381   010296  6E11               	movwf	labs@a^(0+1280),c
 19382   010298  51F9               	movf	(efgtoa@u+1)& (0+255),w,b
 19383   01029A  59F3               	subwfb	(efgtoa@g+1)& (0+255),w,b
 19384   01029C  6E12               	movwf	(labs@a+1)^(0+1280),c
 19385   01029E  51FA               	movf	(efgtoa@u+2)& (0+255),w,b
 19386   0102A0  59F4               	subwfb	(efgtoa@g+2)& (0+255),w,b
 19387   0102A2  6E13               	movwf	(labs@a+2)^(0+1280),c
 19388   0102A4  51FB               	movf	(efgtoa@u+3)& (0+255),w,b
 19389   0102A6  59F5               	subwfb	(efgtoa@g+3)& (0+255),w,b
 19390   0102A8  6E14               	movwf	(labs@a+3)^(0+1280),c
 19391   0102AA  EC82  F0AF         	call	_labs	;wreg free
 19392   0102AE  BE14               	btfsc	(?_labs+3)^(0+1280),7,c
 19393   0102B0  EF67  F081         	goto	u9110
 19394   0102B4  5014               	movf	(?_labs+3)^(0+1280),w,c
 19395   0102B6  1013               	iorwf	(?_labs+2)^(0+1280),w,c
 19396   0102B8  1012               	iorwf	(?_labs+1)^(0+1280),w,c
 19397   0102BA  E107               	bnz	u9111
 19398   0102BC  0E02               	movlw	2
 19399   0102BE  5C11               	subwf	?_labs^(0+1280),w,c
 19400   0102C0  B0D8               	btfsc	status,0,c
 19401   0102C2  EF65  F081         	goto	u9111
 19402   0102C6  EF67  F081         	goto	u9110
 19403   0102CA                     u9111:
 19404   0102CA  EFAF  F081         	goto	l9999
 19405   0102CE                     u9110:
 19406   0102CE                     l9989:
 19407                           
 19408                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 665:    g = u;
 19409   0102CE  C5F8  F5F2         	movff	efgtoa@u,efgtoa@g
 19410   0102D2  C5F9  F5F3         	movff	efgtoa@u+1,efgtoa@g+1
 19411   0102D6  C5FA  F5F4         	movff	efgtoa@u+2,efgtoa@g+2
 19412   0102DA  C5FB  F5F5         	movff	efgtoa@u+3,efgtoa@g+3
 19413                           
 19414                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 666:   }
 19415   0102DE  EFC9  F081         	goto	l2489
 19416   0102E2                     l9991:
 19417                           
 19418                           ; BSR set to: 5
 19419                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/1
      +                          0.0;
 19420   0102E2  C5F8  F59A         	movff	efgtoa@u,___fldiv@b
 19421   0102E6  C5F9  F59B         	movff	efgtoa@u+1,___fldiv@b+1
 19422   0102EA  C5FA  F59C         	movff	efgtoa@u+2,___fldiv@b+2
 19423   0102EE  C5FB  F59D         	movff	efgtoa@u+3,___fldiv@b+3
 19424   0102F2  0E00               	movlw	0
 19425   0102F4  6F9E               	movwf	___fldiv@a& (0+255),b
 19426   0102F6  0E00               	movlw	0
 19427   0102F8  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 19428   0102FA  0E20               	movlw	32
 19429   0102FC  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 19430   0102FE  0E41               	movlw	65
 19431   010300  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 19432   010302  EC5C  F099         	call	___fldiv	;wreg free
 19433   010306  C59A  F5F8         	movff	?___fldiv,efgtoa@u
 19434   01030A  C59B  F5F9         	movff	?___fldiv+1,efgtoa@u+1
 19435   01030E  C59C  F5FA         	movff	?___fldiv+2,efgtoa@u+2
 19436   010312  C59D  F5FB         	movff	?___fldiv+3,efgtoa@u+3
 19437   010316                     
 19438                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 670:     --e;
 19439   010316  0105               	movlb	5	; () banked
 19440   010318  07DF               	decf	efgtoa@e& (0+255),f,b
 19441   01031A  A0D8               	btfss	status,0,c
 19442   01031C  07E0               	decf	(efgtoa@e+1)& (0+255),f,b
 19443   01031E                     
 19444                           ; BSR set to: 5
 19445                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 671:     if ((labs((
      +                          g).u-(u).u) <= 1)) {
 19446   01031E  51F8               	movf	efgtoa@u& (0+255),w,b
 19447   010320  5DF2               	subwf	efgtoa@g& (0+255),w,b
 19448   010322  6E11               	movwf	labs@a^(0+1280),c
 19449   010324  51F9               	movf	(efgtoa@u+1)& (0+255),w,b
 19450   010326  59F3               	subwfb	(efgtoa@g+1)& (0+255),w,b
 19451   010328  6E12               	movwf	(labs@a+1)^(0+1280),c
 19452   01032A  51FA               	movf	(efgtoa@u+2)& (0+255),w,b
 19453   01032C  59F4               	subwfb	(efgtoa@g+2)& (0+255),w,b
 19454   01032E  6E13               	movwf	(labs@a+2)^(0+1280),c
 19455   010330  51FB               	movf	(efgtoa@u+3)& (0+255),w,b
 19456   010332  59F5               	subwfb	(efgtoa@g+3)& (0+255),w,b
 19457   010334  6E14               	movwf	(labs@a+3)^(0+1280),c
 19458   010336  EC82  F0AF         	call	_labs	;wreg free
 19459   01033A  BE14               	btfsc	(?_labs+3)^(0+1280),7,c
 19460   01033C  EFAD  F081         	goto	u9120
 19461   010340  5014               	movf	(?_labs+3)^(0+1280),w,c
 19462   010342  1013               	iorwf	(?_labs+2)^(0+1280),w,c
 19463   010344  1012               	iorwf	(?_labs+1)^(0+1280),w,c
 19464   010346  E107               	bnz	u9121
 19465   010348  0E02               	movlw	2
 19466   01034A  5C11               	subwf	?_labs^(0+1280),w,c
 19467   01034C  B0D8               	btfsc	status,0,c
 19468   01034E  EFAB  F081         	goto	u9121
 19469   010352  EFAD  F081         	goto	u9120
 19470   010356                     u9121:
 19471   010356  EFAF  F081         	goto	l9999
 19472   01035A                     u9120:
 19473   01035A  EF67  F081         	goto	l9989
 19474   01035E                     l9999:
 19475                           
 19476                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 668:    while (g.f <
      +                           u.f) {
 19477   01035E  C5F2  F575         	movff	efgtoa@g,___flge@ff1
 19478   010362  C5F3  F576         	movff	efgtoa@g+1,___flge@ff1+1
 19479   010366  C5F4  F577         	movff	efgtoa@g+2,___flge@ff1+2
 19480   01036A  C5F5  F578         	movff	efgtoa@g+3,___flge@ff1+3
 19481   01036E  C5F8  F579         	movff	efgtoa@u,___flge@ff2
 19482   010372  C5F9  F57A         	movff	efgtoa@u+1,___flge@ff2+1
 19483   010376  C5FA  F57B         	movff	efgtoa@u+2,___flge@ff2+2
 19484   01037A  C5FB  F57C         	movff	efgtoa@u+3,___flge@ff2+3
 19485   01037E  EC25  F0A6         	call	___flge	;wreg free
 19486   010382  0105               	movlb	5	; () banked
 19487   010384  A0D8               	btfss	status,0,c
 19488   010386  EFC7  F081         	goto	u9131
 19489   01038A  EFC9  F081         	goto	u9130
 19490   01038E                     u9131:
 19491   01038E  EF71  F081         	goto	l9991
 19492   010392                     u9130:
 19493   010392                     l2489:
 19494                           
 19495                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 683:  mode = c;
 19496   010392  C5CD  F5D9         	movff	efgtoa@c,efgtoa@mode
 19497                           
 19498                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 685:     nmode = mod
      +                          e;
 19499   010396  C5D9  F5DA         	movff	efgtoa@mode,efgtoa@nmode
 19500   01039A                     
 19501                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 695:  {;/Application
      +                          s/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 :
      +                           prec;
 19502   01039A  0106               	movlb	6	; () banked
 19503   01039C  BFCF               	btfsc	(_prec+1)& (0+255),7,b
 19504   01039E  EFD3  F081         	goto	u9141
 19505   0103A2  EFD5  F081         	goto	u9140
 19506   0103A6                     u9141:
 19507   0103A6  EFDB  F081         	goto	l10005
 19508   0103AA                     u9140:
 19509   0103AA                     
 19510                           ; BSR set to: 6
 19511   0103AA  C6CE  F5D2         	movff	_prec,efgtoa@p
 19512   0103AE  C6CF  F5D3         	movff	_prec+1,efgtoa@p+1
 19513   0103B2  EFE0  F081         	goto	l10007
 19514   0103B6                     l10005:
 19515                           
 19516                           ; BSR set to: 6
 19517   0103B6  0E00               	movlw	0
 19518   0103B8  0105               	movlb	5	; () banked
 19519   0103BA  6FD3               	movwf	(efgtoa@p+1)& (0+255),b
 19520   0103BC  0E06               	movlw	6
 19521   0103BE  6FD2               	movwf	efgtoa@p& (0+255),b
 19522   0103C0                     l10007:
 19523                           
 19524                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 697:     };/Applicat
      +                          ions/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 711:     m = p;
 19525   0103C0  C5D2  F5DD         	movff	efgtoa@p,efgtoa@m
 19526   0103C4  C5D3  F5DE         	movff	efgtoa@p+1,efgtoa@m+1
 19527   0103C8                     
 19528                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 715:  {;/Application
      +                          s/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 716:         ++m;
 19529   0103C8  0105               	movlb	5	; () banked
 19530   0103CA  4BDD               	infsnz	efgtoa@m& (0+255),f,b
 19531   0103CC  2BDE               	incf	(efgtoa@m+1)& (0+255),f,b
 19532   0103CE                     
 19533                           ; BSR set to: 5
 19534                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 717:     };/Applicat
      +                          ions/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
 19535   0103CE  0E66               	movlw	102
 19536   0103D0  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
 19537   0103D2  A4D8               	btfss	status,2,c
 19538   0103D4  EFEE  F081         	goto	u9151
 19539   0103D8  EFF0  F081         	goto	u9150
 19540   0103DC                     u9151:
 19541   0103DC  EF10  F082         	goto	l10021
 19542   0103E0                     u9150:
 19543   0103E0                     
 19544                           ; BSR set to: 5
 19545                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 722:         if (e <
      +                           0) {
 19546   0103E0  BFE0               	btfsc	(efgtoa@e+1)& (0+255),7,b
 19547   0103E2  EFF7  F081         	goto	u9160
 19548   0103E6  EFF5  F081         	goto	u9161
 19549   0103EA                     u9161:
 19550   0103EA  EF03  F082         	goto	l10017
 19551   0103EE                     u9160:
 19552   0103EE                     
 19553                           ; BSR set to: 5
 19554                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 723:             u.f
      +                           = 1.0;
 19555   0103EE  0E00               	movlw	0
 19556   0103F0  6FF8               	movwf	efgtoa@u& (0+255),b
 19557   0103F2  0E00               	movlw	0
 19558   0103F4  6FF9               	movwf	(efgtoa@u+1)& (0+255),b
 19559   0103F6  0E80               	movlw	128
 19560   0103F8  6FFA               	movwf	(efgtoa@u+2)& (0+255),b
 19561   0103FA  0E3F               	movlw	63
 19562   0103FC  6FFB               	movwf	(efgtoa@u+3)& (0+255),b
 19563                           
 19564                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 724:             e =
      +                           0;
 19565   0103FE  0E00               	movlw	0
 19566   010400  6FE0               	movwf	(efgtoa@e+1)& (0+255),b
 19567   010402  0E00               	movlw	0
 19568   010404  6FDF               	movwf	efgtoa@e& (0+255),b
 19569   010406                     l10017:
 19570                           
 19571                           ; BSR set to: 5
 19572                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 726:         if (!(m
      +                          ode == 'g')) {
 19573   010406  0E67               	movlw	103
 19574   010408  19D9               	xorwf	efgtoa@mode& (0+255),w,b
 19575   01040A  B4D8               	btfsc	status,2,c
 19576   01040C  EF0A  F082         	goto	u9171
 19577   010410  EF0C  F082         	goto	u9170
 19578   010414                     u9171:
 19579   010414  EF10  F082         	goto	l10021
 19580   010418                     u9170:
 19581   010418                     
 19582                           ; BSR set to: 5
 19583                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 727:             m +
      +                          = e;
 19584   010418  51DF               	movf	efgtoa@e& (0+255),w,b
 19585   01041A  27DD               	addwf	efgtoa@m& (0+255),f,b
 19586   01041C  51E0               	movf	(efgtoa@e+1)& (0+255),w,b
 19587   01041E  23DE               	addwfc	(efgtoa@m+1)& (0+255),f,b
 19588   010420                     l10021:
 19589                           
 19590                           ; BSR set to: 5
 19591                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 733:     i = 0;
 19592   010420  0E00               	movlw	0
 19593   010422  6FE8               	movwf	(efgtoa@i+1)& (0+255),b
 19594   010424  0E00               	movlw	0
 19595   010426  6FE7               	movwf	efgtoa@i& (0+255),b
 19596   010428                     
 19597                           ; BSR set to: 5
 19598                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
 19599   010428  C5F2  F5E9         	movff	efgtoa@g,efgtoa@h
 19600   01042C  C5F3  F5EA         	movff	efgtoa@g+1,efgtoa@h+1
 19601   010430  C5F4  F5EB         	movff	efgtoa@g+2,efgtoa@h+2
 19602   010434  C5F5  F5EC         	movff	efgtoa@g+3,efgtoa@h+3
 19603   010438                     
 19604                           ; BSR set to: 5
 19605                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 735:     ou = u;
 19606   010438  C5F8  F5E3         	movff	efgtoa@u,efgtoa@ou
 19607   01043C  C5F9  F5E4         	movff	efgtoa@u+1,efgtoa@ou+1
 19608   010440  C5FA  F5E5         	movff	efgtoa@u+2,efgtoa@ou+2
 19609   010444  C5FB  F5E6         	movff	efgtoa@u+3,efgtoa@ou+3
 19610                           
 19611                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
 19612   010448  EFA2  F082         	goto	l10035
 19613   01044C                     l10027:
 19614                           
 19615                           ; BSR set to: 5
 19616                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 737:         l = flo
      +                          orf(h/u.f);
 19617   01044C  C5E9  F59A         	movff	efgtoa@h,___fldiv@b
 19618   010450  C5EA  F59B         	movff	efgtoa@h+1,___fldiv@b+1
 19619   010454  C5EB  F59C         	movff	efgtoa@h+2,___fldiv@b+2
 19620   010458  C5EC  F59D         	movff	efgtoa@h+3,___fldiv@b+3
 19621   01045C  C5F8  F59E         	movff	efgtoa@u,___fldiv@a
 19622   010460  C5F9  F59F         	movff	efgtoa@u+1,___fldiv@a+1
 19623   010464  C5FA  F5A0         	movff	efgtoa@u+2,___fldiv@a+2
 19624   010468  C5FB  F5A1         	movff	efgtoa@u+3,___fldiv@a+3
 19625   01046C  EC5C  F099         	call	___fldiv	;wreg free
 19626   010470  C59A  F5B3         	movff	?___fldiv,floorf@x
 19627   010474  C59B  F5B4         	movff	?___fldiv+1,floorf@x+1
 19628   010478  C59C  F5B5         	movff	?___fldiv+2,floorf@x+2
 19629   01047C  C59D  F5B6         	movff	?___fldiv+3,floorf@x+3
 19630   010480  ECFC  F09E         	call	_floorf	;wreg free
 19631   010484  C5B3  F5ED         	movff	?_floorf,efgtoa@l
 19632   010488  C5B4  F5EE         	movff	?_floorf+1,efgtoa@l+1
 19633   01048C  C5B5  F5EF         	movff	?_floorf+2,efgtoa@l+2
 19634   010490  C5B6  F5F0         	movff	?_floorf+3,efgtoa@l+3
 19635                           
 19636                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 738:         d = (in
      +                          t)l;
 19637   010494  C5ED  F56D         	movff	efgtoa@l,___fltol@f1
 19638   010498  C5EE  F56E         	movff	efgtoa@l+1,___fltol@f1+1
 19639   01049C  C5EF  F56F         	movff	efgtoa@l+2,___fltol@f1+2
 19640   0104A0  C5F0  F570         	movff	efgtoa@l+3,___fltol@f1+3
 19641   0104A4  ECA1  F0A5         	call	___fltol	;wreg free
 19642   0104A8  C56D  F5DB         	movff	?___fltol,efgtoa@d
 19643   0104AC  C56E  F5DC         	movff	?___fltol+1,efgtoa@d+1
 19644   0104B0                     
 19645                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 739:         h -= l*
      +                          u.f;
 19646   0104B0  C5E9  F575         	movff	efgtoa@h,___flsub@b
 19647   0104B4  C5EA  F576         	movff	efgtoa@h+1,___flsub@b+1
 19648   0104B8  C5EB  F577         	movff	efgtoa@h+2,___flsub@b+2
 19649   0104BC  C5EC  F578         	movff	efgtoa@h+3,___flsub@b+3
 19650   0104C0  C5ED  F523         	movff	efgtoa@l,___flmul@a
 19651   0104C4  C5EE  F524         	movff	efgtoa@l+1,___flmul@a+1
 19652   0104C8  C5EF  F525         	movff	efgtoa@l+2,___flmul@a+2
 19653   0104CC  C5F0  F526         	movff	efgtoa@l+3,___flmul@a+3
 19654   0104D0  C5F8  F51F         	movff	efgtoa@u,___flmul@b
 19655   0104D4  C5F9  F520         	movff	efgtoa@u+1,___flmul@b+1
 19656   0104D8  C5FA  F521         	movff	efgtoa@u+2,___flmul@b+2
 19657   0104DC  C5FB  F522         	movff	efgtoa@u+3,___flmul@b+3
 19658   0104E0  EC74  F091         	call	___flmul	;wreg free
 19659   0104E4  C51F  F579         	movff	?___flmul,___flsub@a
 19660   0104E8  C520  F57A         	movff	?___flmul+1,___flsub@a+1
 19661   0104EC  C521  F57B         	movff	?___flmul+2,___flsub@a+2
 19662   0104F0  C522  F57C         	movff	?___flmul+3,___flsub@a+3
 19663   0104F4  ECBF  F0B0         	call	___flsub	;wreg free
 19664   0104F8  C575  F5E9         	movff	?___flsub,efgtoa@h
 19665   0104FC  C576  F5EA         	movff	?___flsub+1,efgtoa@h+1
 19666   010500  C577  F5EB         	movff	?___flsub+2,efgtoa@h+2
 19667   010504  C578  F5EC         	movff	?___flsub+3,efgtoa@h+3
 19668   010508                     
 19669                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 740:         u.f = u
      +                          .f/10.0;
 19670   010508  C5F8  F59A         	movff	efgtoa@u,___fldiv@b
 19671   01050C  C5F9  F59B         	movff	efgtoa@u+1,___fldiv@b+1
 19672   010510  C5FA  F59C         	movff	efgtoa@u+2,___fldiv@b+2
 19673   010514  C5FB  F59D         	movff	efgtoa@u+3,___fldiv@b+3
 19674   010518  0E00               	movlw	0
 19675   01051A  0105               	movlb	5	; () banked
 19676   01051C  6F9E               	movwf	___fldiv@a& (0+255),b
 19677   01051E  0E00               	movlw	0
 19678   010520  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 19679   010522  0E20               	movlw	32
 19680   010524  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 19681   010526  0E41               	movlw	65
 19682   010528  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 19683   01052A  EC5C  F099         	call	___fldiv	;wreg free
 19684   01052E  C59A  F5F8         	movff	?___fldiv,efgtoa@u
 19685   010532  C59B  F5F9         	movff	?___fldiv+1,efgtoa@u+1
 19686   010536  C59C  F5FA         	movff	?___fldiv+2,efgtoa@u+2
 19687   01053A  C59D  F5FB         	movff	?___fldiv+3,efgtoa@u+3
 19688   01053E                     
 19689                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 741:         ++i;
 19690   01053E  0105               	movlb	5	; () banked
 19691   010540  4BE7               	infsnz	efgtoa@i& (0+255),f,b
 19692   010542  2BE8               	incf	(efgtoa@i+1)& (0+255),f,b
 19693   010544                     l10035:
 19694                           
 19695                           ; BSR set to: 5
 19696                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 736:     while (i < 
      +                          m) {
 19697   010544  51DD               	movf	efgtoa@m& (0+255),w,b
 19698   010546  5DE7               	subwf	efgtoa@i& (0+255),w,b
 19699   010548  51E8               	movf	(efgtoa@i+1)& (0+255),w,b
 19700   01054A  0A80               	xorlw	128
 19701   01054C  6FCE               	movwf	??_efgtoa& (0+255),b
 19702   01054E  51DE               	movf	(efgtoa@m+1)& (0+255),w,b
 19703   010550  0A80               	xorlw	128
 19704   010552  59CE               	subwfb	??_efgtoa& (0+255),w,b
 19705   010554  A0D8               	btfss	status,0,c
 19706   010556  EFAF  F082         	goto	u9181
 19707   01055A  EFB1  F082         	goto	u9180
 19708   01055E                     u9181:
 19709   01055E  EF26  F082         	goto	l10027
 19710   010562                     u9180:
 19711   010562                     
 19712                           ; BSR set to: 5
 19713                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0
      +                          ;
 19714   010562  C5F8  F51F         	movff	efgtoa@u,___flmul@b
 19715   010566  C5F9  F520         	movff	efgtoa@u+1,___flmul@b+1
 19716   01056A  C5FA  F521         	movff	efgtoa@u+2,___flmul@b+2
 19717   01056E  C5FB  F522         	movff	efgtoa@u+3,___flmul@b+3
 19718   010572  0E00               	movlw	0
 19719   010574  6E23               	movwf	___flmul@a^(0+1280),c
 19720   010576  0E00               	movlw	0
 19721   010578  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 19722   01057A  0EA0               	movlw	160
 19723   01057C  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 19724   01057E  0E40               	movlw	64
 19725   010580  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 19726   010582  EC74  F091         	call	___flmul	;wreg free
 19727   010586  C51F  F5ED         	movff	?___flmul,efgtoa@l
 19728   01058A  C520  F5EE         	movff	?___flmul+1,efgtoa@l+1
 19729   01058E  C521  F5EF         	movff	?___flmul+2,efgtoa@l+2
 19730   010592  C522  F5F0         	movff	?___flmul+3,efgtoa@l+3
 19731   010596                     
 19732                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 746:     if (h < l) 
      +                          {
 19733   010596  C5E9  F575         	movff	efgtoa@h,___flge@ff1
 19734   01059A  C5EA  F576         	movff	efgtoa@h+1,___flge@ff1+1
 19735   01059E  C5EB  F577         	movff	efgtoa@h+2,___flge@ff1+2
 19736   0105A2  C5EC  F578         	movff	efgtoa@h+3,___flge@ff1+3
 19737   0105A6  C5ED  F579         	movff	efgtoa@l,___flge@ff2
 19738   0105AA  C5EE  F57A         	movff	efgtoa@l+1,___flge@ff2+1
 19739   0105AE  C5EF  F57B         	movff	efgtoa@l+2,___flge@ff2+2
 19740   0105B2  C5F0  F57C         	movff	efgtoa@l+3,___flge@ff2+3
 19741   0105B6  EC25  F0A6         	call	___flge	;wreg free
 19742   0105BA  0105               	movlb	5	; () banked
 19743   0105BC  B0D8               	btfsc	status,0,c
 19744   0105BE  EFE3  F082         	goto	u9191
 19745   0105C2  EFE5  F082         	goto	u9190
 19746   0105C6                     u9191:
 19747   0105C6  EFEF  F082         	goto	l10043
 19748   0105CA                     u9190:
 19749   0105CA                     
 19750                           ; BSR set to: 5
 19751                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 747:         l = 0.0
      +                          ;
 19752   0105CA  0E00               	movlw	0
 19753   0105CC  6FED               	movwf	efgtoa@l& (0+255),b
 19754   0105CE  0E00               	movlw	0
 19755   0105D0  6FEE               	movwf	(efgtoa@l+1)& (0+255),b
 19756   0105D2  0E00               	movlw	0
 19757   0105D4  6FEF               	movwf	(efgtoa@l+2)& (0+255),b
 19758   0105D6  0E00               	movlw	0
 19759   0105D8  6FF0               	movwf	(efgtoa@l+3)& (0+255),b
 19760                           
 19761                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 748:     } else {
 19762   0105DA  EF18  F083         	goto	l10049
 19763   0105DE                     l10043:
 19764                           
 19765                           ; BSR set to: 5
 19766                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 750:         if ((h 
      +                          == l) && !(d % 2)) {
 19767   0105DE  C5E9  F511         	movff	efgtoa@h,___fleq@ff1
 19768   0105E2  C5EA  F512         	movff	efgtoa@h+1,___fleq@ff1+1
 19769   0105E6  C5EB  F513         	movff	efgtoa@h+2,___fleq@ff1+2
 19770   0105EA  C5EC  F514         	movff	efgtoa@h+3,___fleq@ff1+3
 19771   0105EE  C5ED  F515         	movff	efgtoa@l,___fleq@ff2
 19772   0105F2  C5EE  F516         	movff	efgtoa@l+1,___fleq@ff2+1
 19773   0105F6  C5EF  F517         	movff	efgtoa@l+2,___fleq@ff2+2
 19774   0105FA  C5F0  F518         	movff	efgtoa@l+3,___fleq@ff2+3
 19775   0105FE  ECEB  F0AA         	call	___fleq	;wreg free
 19776   010602  A0D8               	btfss	status,0,c
 19777   010604  EF06  F083         	goto	u9201
 19778   010608  EF08  F083         	goto	u9200
 19779   01060C                     u9201:
 19780   01060C  EF18  F083         	goto	l10049
 19781   010610                     u9200:
 19782   010610  0105               	movlb	5	; () banked
 19783   010612  B1DB               	btfsc	efgtoa@d& (0+255),0,b
 19784   010614  EF0E  F083         	goto	u9211
 19785   010618  EF10  F083         	goto	u9210
 19786   01061C                     u9211:
 19787   01061C  EF18  F083         	goto	l10049
 19788   010620                     u9210:
 19789   010620                     
 19790                           ; BSR set to: 5
 19791                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 751:             l =
      +                           0.0;
 19792   010620  0E00               	movlw	0
 19793   010622  6FED               	movwf	efgtoa@l& (0+255),b
 19794   010624  0E00               	movlw	0
 19795   010626  6FEE               	movwf	(efgtoa@l+1)& (0+255),b
 19796   010628  0E00               	movlw	0
 19797   01062A  6FEF               	movwf	(efgtoa@l+2)& (0+255),b
 19798   01062C  0E00               	movlw	0
 19799   01062E  6FF0               	movwf	(efgtoa@l+3)& (0+255),b
 19800   010630                     l10049:
 19801                           
 19802                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l
      +                          ;
 19803   010630  C5F2  F56D         	movff	efgtoa@g,___fladd@b
 19804   010634  C5F3  F56E         	movff	efgtoa@g+1,___fladd@b+1
 19805   010638  C5F4  F56F         	movff	efgtoa@g+2,___fladd@b+2
 19806   01063C  C5F5  F570         	movff	efgtoa@g+3,___fladd@b+3
 19807   010640  C5ED  F571         	movff	efgtoa@l,___fladd@a
 19808   010644  C5EE  F572         	movff	efgtoa@l+1,___fladd@a+1
 19809   010648  C5EF  F573         	movff	efgtoa@l+2,___fladd@a+2
 19810   01064C  C5F0  F574         	movff	efgtoa@l+3,___fladd@a+3
 19811   010650  EC18  F08F         	call	___fladd	;wreg free
 19812   010654  C56D  F5E9         	movff	?___fladd,efgtoa@h
 19813   010658  C56E  F5EA         	movff	?___fladd+1,efgtoa@h+1
 19814   01065C  C56F  F5EB         	movff	?___fladd+2,efgtoa@h+2
 19815   010660  C570  F5EC         	movff	?___fladd+3,efgtoa@h+3
 19816   010664                     
 19817                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f
      +                          *10.0)) {
 19818   010664  C5E9  F575         	movff	efgtoa@h,___flge@ff1
 19819   010668  C5EA  F576         	movff	efgtoa@h+1,___flge@ff1+1
 19820   01066C  C5EB  F577         	movff	efgtoa@h+2,___flge@ff1+2
 19821   010670  C5EC  F578         	movff	efgtoa@h+3,___flge@ff1+3
 19822   010674  0E00               	movlw	0
 19823   010676  6E23               	movwf	___flmul@a^(0+1280),c
 19824   010678  0E00               	movlw	0
 19825   01067A  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 19826   01067C  0E20               	movlw	32
 19827   01067E  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 19828   010680  0E41               	movlw	65
 19829   010682  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 19830   010684  C5E3  F51F         	movff	efgtoa@ou,___flmul@b
 19831   010688  C5E4  F520         	movff	efgtoa@ou+1,___flmul@b+1
 19832   01068C  C5E5  F521         	movff	efgtoa@ou+2,___flmul@b+2
 19833   010690  C5E6  F522         	movff	efgtoa@ou+3,___flmul@b+3
 19834   010694  EC74  F091         	call	___flmul	;wreg free
 19835   010698  C51F  F579         	movff	?___flmul,___flge@ff2
 19836   01069C  C520  F57A         	movff	?___flmul+1,___flge@ff2+1
 19837   0106A0  C521  F57B         	movff	?___flmul+2,___flge@ff2+2
 19838   0106A4  C522  F57C         	movff	?___flmul+3,___flge@ff2+3
 19839   0106A8  EC25  F0A6         	call	___flge	;wreg free
 19840   0106AC  0105               	movlb	5	; () banked
 19841   0106AE  A0D8               	btfss	status,0,c
 19842   0106B0  EF5C  F083         	goto	u9221
 19843   0106B4  EF5E  F083         	goto	u9220
 19844   0106B8                     u9221:
 19845   0106B8  EF86  F083         	goto	l10061
 19846   0106BC                     u9220:
 19847   0106BC                     
 19848                           ; BSR set to: 5
 19849                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 759:   e++;
 19850   0106BC  4BDF               	infsnz	efgtoa@e& (0+255),f,b
 19851   0106BE  2BE0               	incf	(efgtoa@e+1)& (0+255),f,b
 19852   0106C0                     
 19853                           ; BSR set to: 5
 19854                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
 19855   0106C0  C5E3  F51F         	movff	efgtoa@ou,___flmul@b
 19856   0106C4  C5E4  F520         	movff	efgtoa@ou+1,___flmul@b+1
 19857   0106C8  C5E5  F521         	movff	efgtoa@ou+2,___flmul@b+2
 19858   0106CC  C5E6  F522         	movff	efgtoa@ou+3,___flmul@b+3
 19859   0106D0  0E00               	movlw	0
 19860   0106D2  6E23               	movwf	___flmul@a^(0+1280),c
 19861   0106D4  0E00               	movlw	0
 19862   0106D6  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 19863   0106D8  0E20               	movlw	32
 19864   0106DA  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 19865   0106DC  0E41               	movlw	65
 19866   0106DE  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 19867   0106E0  EC74  F091         	call	___flmul	;wreg free
 19868   0106E4  C51F  F5E3         	movff	?___flmul,efgtoa@ou
 19869   0106E8  C520  F5E4         	movff	?___flmul+1,efgtoa@ou+1
 19870   0106EC  C521  F5E5         	movff	?___flmul+2,efgtoa@ou+2
 19871   0106F0  C522  F5E6         	movff	?___flmul+3,efgtoa@ou+3
 19872   0106F4                     
 19873                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 
      +                          'f') {
 19874   0106F4  0E66               	movlw	102
 19875   0106F6  0105               	movlb	5	; () banked
 19876   0106F8  19DA               	xorwf	efgtoa@nmode& (0+255),w,b
 19877   0106FA  A4D8               	btfss	status,2,c
 19878   0106FC  EF82  F083         	goto	u9231
 19879   010700  EF84  F083         	goto	u9230
 19880   010704                     u9231:
 19881   010704  EF86  F083         	goto	l10061
 19882   010708                     u9230:
 19883   010708                     
 19884                           ; BSR set to: 5
 19885                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 764:    m++;
 19886   010708  4BDD               	infsnz	efgtoa@m& (0+255),f,b
 19887   01070A  2BDE               	incf	(efgtoa@m+1)& (0+255),f,b
 19888   01070C                     l10061:
 19889                           
 19890                           ; BSR set to: 5
 19891                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 770:     u = ou;
 19892   01070C  C5E3  F5F8         	movff	efgtoa@ou,efgtoa@u
 19893   010710  C5E4  F5F9         	movff	efgtoa@ou+1,efgtoa@u+1
 19894   010714  C5E5  F5FA         	movff	efgtoa@ou+2,efgtoa@u+2
 19895   010718  C5E6  F5FB         	movff	efgtoa@ou+3,efgtoa@u+3
 19896   01071C                     
 19897                           ; BSR set to: 5
 19898                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 774:  ne = e;
 19899   01071C  C5DF  F5D0         	movff	efgtoa@e,efgtoa@ne
 19900   010720  C5E0  F5D1         	movff	efgtoa@e+1,efgtoa@ne+1
 19901   010724                     
 19902                           ; BSR set to: 5
 19903                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
 19904   010724  6BD8               	clrf	efgtoa@pp& (0+255),b
 19905   010726                     
 19906                           ; BSR set to: 5
 19907                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 777:     t = 0;
 19908   010726  0E00               	movlw	0
 19909   010728  6FD5               	movwf	(efgtoa@t+1)& (0+255),b
 19910   01072A  0E00               	movlw	0
 19911   01072C  6FD4               	movwf	efgtoa@t& (0+255),b
 19912   01072E                     
 19913                           ; BSR set to: 5
 19914                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 778:     i = 0;
 19915   01072E  0E00               	movlw	0
 19916   010730  6FE8               	movwf	(efgtoa@i+1)& (0+255),b
 19917   010732  0E00               	movlw	0
 19918   010734  6FE7               	movwf	efgtoa@i& (0+255),b
 19919                           
 19920                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
 19921   010736  EF83  F084         	goto	l10111
 19922   01073A                     l10071:
 19923                           
 19924                           ; BSR set to: 5
 19925                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 780:         l = flo
      +                          orf(h/u.f);
 19926   01073A  C5E9  F59A         	movff	efgtoa@h,___fldiv@b
 19927   01073E  C5EA  F59B         	movff	efgtoa@h+1,___fldiv@b+1
 19928   010742  C5EB  F59C         	movff	efgtoa@h+2,___fldiv@b+2
 19929   010746  C5EC  F59D         	movff	efgtoa@h+3,___fldiv@b+3
 19930   01074A  C5F8  F59E         	movff	efgtoa@u,___fldiv@a
 19931   01074E  C5F9  F59F         	movff	efgtoa@u+1,___fldiv@a+1
 19932   010752  C5FA  F5A0         	movff	efgtoa@u+2,___fldiv@a+2
 19933   010756  C5FB  F5A1         	movff	efgtoa@u+3,___fldiv@a+3
 19934   01075A  EC5C  F099         	call	___fldiv	;wreg free
 19935   01075E  C59A  F5B3         	movff	?___fldiv,floorf@x
 19936   010762  C59B  F5B4         	movff	?___fldiv+1,floorf@x+1
 19937   010766  C59C  F5B5         	movff	?___fldiv+2,floorf@x+2
 19938   01076A  C59D  F5B6         	movff	?___fldiv+3,floorf@x+3
 19939   01076E  ECFC  F09E         	call	_floorf	;wreg free
 19940   010772  C5B3  F5ED         	movff	?_floorf,efgtoa@l
 19941   010776  C5B4  F5EE         	movff	?_floorf+1,efgtoa@l+1
 19942   01077A  C5B5  F5EF         	movff	?_floorf+2,efgtoa@l+2
 19943   01077E  C5B6  F5F0         	movff	?_floorf+3,efgtoa@l+3
 19944                           
 19945                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 781:         d = (in
      +                          t)l > 9 ? 9 : (int)l;
 19946   010782  C5ED  F56D         	movff	efgtoa@l,___fltol@f1
 19947   010786  C5EE  F56E         	movff	efgtoa@l+1,___fltol@f1+1
 19948   01078A  C5EF  F56F         	movff	efgtoa@l+2,___fltol@f1+2
 19949   01078E  C5F0  F570         	movff	efgtoa@l+3,___fltol@f1+3
 19950   010792  ECA1  F0A5         	call	___fltol	;wreg free
 19951   010796  0105               	movlb	5	; () banked
 19952   010798  BF6E               	btfsc	(?___fltol+1)& (0+255),7,b
 19953   01079A  EFDA  F083         	goto	u9240
 19954   01079E  516E               	movf	(?___fltol+1)& (0+255),w,b
 19955   0107A0  E107               	bnz	u9241
 19956   0107A2  0E0A               	movlw	10
 19957   0107A4  5D6D               	subwf	?___fltol& (0+255),w,b
 19958   0107A6  B0D8               	btfsc	status,0,c
 19959   0107A8  EFD8  F083         	goto	u9241
 19960   0107AC  EFDA  F083         	goto	u9240
 19961   0107B0                     u9241:
 19962   0107B0  EFEA  F083         	goto	l10075
 19963   0107B4                     u9240:
 19964   0107B4                     
 19965                           ; BSR set to: 5
 19966   0107B4  C5ED  F56D         	movff	efgtoa@l,___fltol@f1
 19967   0107B8  C5EE  F56E         	movff	efgtoa@l+1,___fltol@f1+1
 19968   0107BC  C5EF  F56F         	movff	efgtoa@l+2,___fltol@f1+2
 19969   0107C0  C5F0  F570         	movff	efgtoa@l+3,___fltol@f1+3
 19970   0107C4  ECA1  F0A5         	call	___fltol	;wreg free
 19971   0107C8  C56D  F5DB         	movff	?___fltol,efgtoa@d
 19972   0107CC  C56E  F5DC         	movff	?___fltol+1,efgtoa@d+1
 19973   0107D0  EFEE  F083         	goto	l2519
 19974   0107D4                     l10075:
 19975                           
 19976                           ; BSR set to: 5
 19977   0107D4  0E00               	movlw	0
 19978   0107D6  6FDC               	movwf	(efgtoa@d+1)& (0+255),b
 19979   0107D8  0E09               	movlw	9
 19980   0107DA  6FDB               	movwf	efgtoa@d& (0+255),b
 19981   0107DC                     l2519:
 19982                           
 19983                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 792:   {;/Applicatio
      +                          ns/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne 
      +                          < 0)) {
 19984   0107DC  0105               	movlb	5	; () banked
 19985   0107DE  51D8               	movf	efgtoa@pp& (0+255),w,b
 19986   0107E0  A4D8               	btfss	status,2,c
 19987   0107E2  EFF5  F083         	goto	u9251
 19988   0107E6  EFF7  F083         	goto	u9250
 19989   0107EA                     u9251:
 19990   0107EA  EF1F  F084         	goto	l10095
 19991   0107EE                     u9250:
 19992   0107EE                     
 19993                           ; BSR set to: 5
 19994   0107EE  BFD1               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 19995   0107F0  EFFE  F083         	goto	u9260
 19996   0107F4  EFFC  F083         	goto	u9261
 19997   0107F8                     u9261:
 19998   0107F8  EF1F  F084         	goto	l10095
 19999   0107FC                     u9260:
 20000   0107FC                     
 20001                           ; BSR set to: 5
 20002                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 794:                
      +                           dbuf[n++] = '.';
 20003   0107FC  0E5E               	movlw	low _dbuf
 20004   0107FE  25F6               	addwf	efgtoa@n& (0+255),w,b
 20005   010800  6ED9               	movwf	fsr2l,c
 20006   010802  0E07               	movlw	high _dbuf
 20007   010804  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 20008   010806  6EDA               	movwf	fsr2h,c
 20009   010808  0E2E               	movlw	46
 20010   01080A  6EDF               	movwf	indf2,c
 20011   01080C                     
 20012                           ; BSR set to: 5
 20013   01080C  4BF6               	infsnz	efgtoa@n& (0+255),f,b
 20014   01080E  2BF7               	incf	(efgtoa@n+1)& (0+255),f,b
 20015   010810                     
 20016                           ; BSR set to: 5
 20017                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 795:                
      +                           --w;
 20018   010810  07E1               	decf	efgtoa@w& (0+255),f,b
 20019   010812  A0D8               	btfss	status,0,c
 20020   010814  07E2               	decf	(efgtoa@w+1)& (0+255),f,b
 20021   010816                     
 20022                           ; BSR set to: 5
 20023                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 796:                
      +                           pp = 1;
 20024   010816  0E01               	movlw	1
 20025   010818  6FD8               	movwf	efgtoa@pp& (0+255),b
 20026   01081A  EF1F  F084         	goto	l10095
 20027   01081E                     l10087:
 20028                           
 20029                           ; BSR set to: 5
 20030                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 799:                
      +                           dbuf[n++] = '0';
 20031   01081E  0E5E               	movlw	low _dbuf
 20032   010820  25F6               	addwf	efgtoa@n& (0+255),w,b
 20033   010822  6ED9               	movwf	fsr2l,c
 20034   010824  0E07               	movlw	high _dbuf
 20035   010826  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 20036   010828  6EDA               	movwf	fsr2h,c
 20037   01082A  0E30               	movlw	48
 20038   01082C  6EDF               	movwf	indf2,c
 20039   01082E                     
 20040                           ; BSR set to: 5
 20041   01082E  4BF6               	infsnz	efgtoa@n& (0+255),f,b
 20042   010830  2BF7               	incf	(efgtoa@n+1)& (0+255),f,b
 20043   010832                     
 20044                           ; BSR set to: 5
 20045                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 800:                
      +                           --w;
 20046   010832  07E1               	decf	efgtoa@w& (0+255),f,b
 20047   010834  A0D8               	btfss	status,0,c
 20048   010836  07E2               	decf	(efgtoa@w+1)& (0+255),f,b
 20049   010838                     
 20050                           ; BSR set to: 5
 20051                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 801:                
      +                           --t;
 20052   010838  07D4               	decf	efgtoa@t& (0+255),f,b
 20053   01083A  A0D8               	btfss	status,0,c
 20054   01083C  07D5               	decf	(efgtoa@t+1)& (0+255),f,b
 20055   01083E                     l10095:
 20056                           
 20057                           ; BSR set to: 5
 20058                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 798:             whi
      +                          le (t) {
 20059   01083E  51D4               	movf	efgtoa@t& (0+255),w,b
 20060   010840  11D5               	iorwf	(efgtoa@t+1)& (0+255),w,b
 20061   010842  A4D8               	btfss	status,2,c
 20062   010844  EF26  F084         	goto	u9271
 20063   010848  EF28  F084         	goto	u9270
 20064   01084C                     u9271:
 20065   01084C  EF0F  F084         	goto	l10087
 20066   010850                     u9270:
 20067   010850                     
 20068                           ; BSR set to: 5
 20069                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 803:             dbu
      +                          f[n++] = (char)((int)'0' + d);
 20070   010850  0E5E               	movlw	low _dbuf
 20071   010852  25F6               	addwf	efgtoa@n& (0+255),w,b
 20072   010854  6ED9               	movwf	fsr2l,c
 20073   010856  0E07               	movlw	high _dbuf
 20074   010858  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 20075   01085A  6EDA               	movwf	fsr2h,c
 20076   01085C  51DB               	movf	efgtoa@d& (0+255),w,b
 20077   01085E  0F30               	addlw	48
 20078   010860  6EDF               	movwf	indf2,c
 20079   010862                     
 20080                           ; BSR set to: 5
 20081   010862  4BF6               	infsnz	efgtoa@n& (0+255),f,b
 20082   010864  2BF7               	incf	(efgtoa@n+1)& (0+255),f,b
 20083   010866                     
 20084                           ; BSR set to: 5
 20085                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 804:             --w
      +                          ;
 20086   010866  07E1               	decf	efgtoa@w& (0+255),f,b
 20087   010868  A0D8               	btfss	status,0,c
 20088   01086A  07E2               	decf	(efgtoa@w+1)& (0+255),f,b
 20089   01086C                     
 20090                           ; BSR set to: 5
 20091                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 805:         };/Appl
      +                          ications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
 20092   01086C  C5E9  F575         	movff	efgtoa@h,___flsub@b
 20093   010870  C5EA  F576         	movff	efgtoa@h+1,___flsub@b+1
 20094   010874  C5EB  F577         	movff	efgtoa@h+2,___flsub@b+2
 20095   010878  C5EC  F578         	movff	efgtoa@h+3,___flsub@b+3
 20096   01087C  C5ED  F523         	movff	efgtoa@l,___flmul@a
 20097   010880  C5EE  F524         	movff	efgtoa@l+1,___flmul@a+1
 20098   010884  C5EF  F525         	movff	efgtoa@l+2,___flmul@a+2
 20099   010888  C5F0  F526         	movff	efgtoa@l+3,___flmul@a+3
 20100   01088C  C5F8  F51F         	movff	efgtoa@u,___flmul@b
 20101   010890  C5F9  F520         	movff	efgtoa@u+1,___flmul@b+1
 20102   010894  C5FA  F521         	movff	efgtoa@u+2,___flmul@b+2
 20103   010898  C5FB  F522         	movff	efgtoa@u+3,___flmul@b+3
 20104   01089C  EC74  F091         	call	___flmul	;wreg free
 20105   0108A0  C51F  F579         	movff	?___flmul,___flsub@a
 20106   0108A4  C520  F57A         	movff	?___flmul+1,___flsub@a+1
 20107   0108A8  C521  F57B         	movff	?___flmul+2,___flsub@a+2
 20108   0108AC  C522  F57C         	movff	?___flmul+3,___flsub@a+3
 20109   0108B0  ECBF  F0B0         	call	___flsub	;wreg free
 20110   0108B4  C575  F5E9         	movff	?___flsub,efgtoa@h
 20111   0108B8  C576  F5EA         	movff	?___flsub+1,efgtoa@h+1
 20112   0108BC  C577  F5EB         	movff	?___flsub+2,efgtoa@h+2
 20113   0108C0  C578  F5EC         	movff	?___flsub+3,efgtoa@h+3
 20114   0108C4                     
 20115                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 807:         u.f = u
      +                          .f/10.0;
 20116   0108C4  C5F8  F59A         	movff	efgtoa@u,___fldiv@b
 20117   0108C8  C5F9  F59B         	movff	efgtoa@u+1,___fldiv@b+1
 20118   0108CC  C5FA  F59C         	movff	efgtoa@u+2,___fldiv@b+2
 20119   0108D0  C5FB  F59D         	movff	efgtoa@u+3,___fldiv@b+3
 20120   0108D4  0E00               	movlw	0
 20121   0108D6  0105               	movlb	5	; () banked
 20122   0108D8  6F9E               	movwf	___fldiv@a& (0+255),b
 20123   0108DA  0E00               	movlw	0
 20124   0108DC  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 20125   0108DE  0E20               	movlw	32
 20126   0108E0  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 20127   0108E2  0E41               	movlw	65
 20128   0108E4  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 20129   0108E6  EC5C  F099         	call	___fldiv	;wreg free
 20130   0108EA  C59A  F5F8         	movff	?___fldiv,efgtoa@u
 20131   0108EE  C59B  F5F9         	movff	?___fldiv+1,efgtoa@u+1
 20132   0108F2  C59C  F5FA         	movff	?___fldiv+2,efgtoa@u+2
 20133   0108F6  C59D  F5FB         	movff	?___fldiv+3,efgtoa@u+3
 20134   0108FA                     
 20135                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 808:         --ne;
 20136   0108FA  0105               	movlb	5	; () banked
 20137   0108FC  07D0               	decf	efgtoa@ne& (0+255),f,b
 20138   0108FE  A0D8               	btfss	status,0,c
 20139   010900  07D1               	decf	(efgtoa@ne+1)& (0+255),f,b
 20140   010902                     
 20141                           ; BSR set to: 5
 20142                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 809:         ++i;
 20143   010902  4BE7               	infsnz	efgtoa@i& (0+255),f,b
 20144   010904  2BE8               	incf	(efgtoa@i+1)& (0+255),f,b
 20145   010906                     l10111:
 20146                           
 20147                           ; BSR set to: 5
 20148                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 779:     while ((i <
      +                           m) && (n < (80 - 5))) {
 20149   010906  51DD               	movf	efgtoa@m& (0+255),w,b
 20150   010908  5DE7               	subwf	efgtoa@i& (0+255),w,b
 20151   01090A  51E8               	movf	(efgtoa@i+1)& (0+255),w,b
 20152   01090C  0A80               	xorlw	128
 20153   01090E  6FCE               	movwf	??_efgtoa& (0+255),b
 20154   010910  51DE               	movf	(efgtoa@m+1)& (0+255),w,b
 20155   010912  0A80               	xorlw	128
 20156   010914  59CE               	subwfb	??_efgtoa& (0+255),w,b
 20157   010916  B0D8               	btfsc	status,0,c
 20158   010918  EF90  F084         	goto	u9281
 20159   01091C  EF92  F084         	goto	u9280
 20160   010920                     u9281:
 20161   010920  EFA0  F084         	goto	l10115
 20162   010924                     u9280:
 20163   010924                     
 20164                           ; BSR set to: 5
 20165   010924  BFF7               	btfsc	(efgtoa@n+1)& (0+255),7,b
 20166   010926  EF9E  F084         	goto	u9291
 20167   01092A  51F7               	movf	(efgtoa@n+1)& (0+255),w,b
 20168   01092C  E109               	bnz	u9290
 20169   01092E  0E4B               	movlw	75
 20170   010930  5DF6               	subwf	efgtoa@n& (0+255),w,b
 20171   010932  A0D8               	btfss	status,0,c
 20172   010934  EF9E  F084         	goto	u9291
 20173   010938  EFA0  F084         	goto	u9290
 20174   01093C                     u9291:
 20175   01093C  EF9D  F083         	goto	l10071
 20176   010940                     u9290:
 20177   010940                     l10115:
 20178                           
 20179                           ; BSR set to: 5
 20180                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbu
      +                          f) - 1;
 20181   010940  0E00               	movlw	0
 20182   010942  6FE8               	movwf	(efgtoa@i+1)& (0+255),b
 20183   010944  0E4F               	movlw	79
 20184   010946  6FE7               	movwf	efgtoa@i& (0+255),b
 20185   010948                     
 20186                           ; BSR set to: 5
 20187                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '
      +                          \0';
 20188   010948  0E5E               	movlw	low _dbuf
 20189   01094A  25E7               	addwf	efgtoa@i& (0+255),w,b
 20190   01094C  6ED9               	movwf	fsr2l,c
 20191   01094E  0E07               	movlw	high _dbuf
 20192   010950  21E8               	addwfc	(efgtoa@i+1)& (0+255),w,b
 20193   010952  6EDA               	movwf	fsr2h,c
 20194   010954  6ADF               	clrf	indf2,c
 20195   010956                     
 20196                           ; BSR set to: 5
 20197                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i
      +                          -n], &dbuf[0], (size_t)n);
 20198   010956  0E5E               	movlw	low _dbuf
 20199   010958  6FCE               	movwf	??_efgtoa& (0+255),b
 20200   01095A  0E07               	movlw	high _dbuf
 20201   01095C  6FCF               	movwf	(??_efgtoa+1)& (0+255),b
 20202   01095E  51F6               	movf	efgtoa@n& (0+255),w,b
 20203   010960  5FCE               	subwf	??_efgtoa& (0+255),f,b
 20204   010962  51F7               	movf	(efgtoa@n+1)& (0+255),w,b
 20205   010964  5BCF               	subwfb	(??_efgtoa+1)& (0+255),f,b
 20206   010966  51E7               	movf	efgtoa@i& (0+255),w,b
 20207   010968  25CE               	addwf	??_efgtoa& (0+255),w,b
 20208   01096A  6E11               	movwf	memcpy@d1^(0+1280),c
 20209   01096C  51E8               	movf	(efgtoa@i+1)& (0+255),w,b
 20210   01096E  21CF               	addwfc	(??_efgtoa+1)& (0+255),w,b
 20211   010970  6E12               	movwf	(memcpy@d1+1)^(0+1280),c
 20212   010972  0E5E               	movlw	low _dbuf
 20213   010974  6E13               	movwf	memcpy@s1^(0+1280),c
 20214   010976  0E07               	movlw	high _dbuf
 20215   010978  6E14               	movwf	(memcpy@s1+1)^(0+1280),c
 20216   01097A  C5F6  F515         	movff	efgtoa@n,memcpy@n
 20217   01097E  C5F7  F516         	movff	efgtoa@n+1,memcpy@n+1
 20218   010982  EC28  F0B0         	call	_memcpy	;wreg free
 20219   010986                     
 20220                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
 20221   010986  0105               	movlb	5	; () banked
 20222   010988  51F6               	movf	efgtoa@n& (0+255),w,b
 20223   01098A  5DE7               	subwf	efgtoa@i& (0+255),w,b
 20224   01098C  6FF6               	movwf	efgtoa@n& (0+255),b
 20225   01098E  51F7               	movf	(efgtoa@n+1)& (0+255),w,b
 20226   010990  59E8               	subwfb	(efgtoa@i+1)& (0+255),w,b
 20227   010992  6FF7               	movwf	(efgtoa@n+1)& (0+255),b
 20228   010994                     
 20229                           ; BSR set to: 5
 20230                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 
      +                          ? 0 : 1;
 20231   010994  51F1               	movf	efgtoa@sign& (0+255),w,b
 20232   010996  A4D8               	btfss	status,2,c
 20233   010998  EFD0  F084         	goto	u9301
 20234   01099C  EFD3  F084         	goto	u9300
 20235   0109A0                     u9301:
 20236   0109A0  0E01               	movlw	1
 20237   0109A2  EFD4  F084         	goto	u9310
 20238   0109A6                     u9300:
 20239   0109A6  0E00               	movlw	0
 20240   0109A8                     u9310:
 20241   0109A8  6FE7               	movwf	efgtoa@i& (0+255),b
 20242   0109AA  6BE8               	clrf	(efgtoa@i+1)& (0+255),b
 20243   0109AC                     
 20244                           ; BSR set to: 5
 20245                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
 20246   0109AC  51F1               	movf	efgtoa@sign& (0+255),w,b
 20247   0109AE  B4D8               	btfsc	status,2,c
 20248   0109B0  EFDC  F084         	goto	u9321
 20249   0109B4  EFDE  F084         	goto	u9320
 20250   0109B8                     u9321:
 20251   0109B8  EFE9  F084         	goto	l10129
 20252   0109BC                     u9320:
 20253   0109BC                     
 20254                           ; BSR set to: 5
 20255                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = s
      +                          ign;
 20256   0109BC  07F6               	decf	efgtoa@n& (0+255),f,b
 20257   0109BE  A0D8               	btfss	status,0,c
 20258   0109C0  07F7               	decf	(efgtoa@n+1)& (0+255),f,b
 20259   0109C2  0E5E               	movlw	low _dbuf
 20260   0109C4  25F6               	addwf	efgtoa@n& (0+255),w,b
 20261   0109C6  6ED9               	movwf	fsr2l,c
 20262   0109C8  0E07               	movlw	high _dbuf
 20263   0109CA  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 20264   0109CC  6EDA               	movwf	fsr2h,c
 20265   0109CE  C5F1  F4DF         	movff	efgtoa@sign,indf2
 20266   0109D2                     l10129:
 20267                           
 20268                           ; BSR set to: 5
 20269                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 864:  w -= i;
 20270   0109D2  51E7               	movf	efgtoa@i& (0+255),w,b
 20271   0109D4  5FE1               	subwf	efgtoa@w& (0+255),f,b
 20272   0109D6  51E8               	movf	(efgtoa@i+1)& (0+255),w,b
 20273   0109D8  5BE2               	subwfb	(efgtoa@w+1)& (0+255),f,b
 20274   0109DA                     
 20275                           ; BSR set to: 5
 20276                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 867:     return (voi
      +                          d) pad(fp, &dbuf[n], w);
 20277   0109DA  C5C7  F521         	movff	efgtoa@fp,pad@fp
 20278   0109DE  C5C8  F522         	movff	efgtoa@fp+1,pad@fp+1
 20279   0109E2  0E5E               	movlw	low _dbuf
 20280   0109E4  25F6               	addwf	efgtoa@n& (0+255),w,b
 20281   0109E6  6E23               	movwf	pad@buf^(0+1280),c
 20282   0109E8  0E07               	movlw	high _dbuf
 20283   0109EA  21F7               	addwfc	(efgtoa@n+1)& (0+255),w,b
 20284   0109EC  6E24               	movwf	(pad@buf+1)^(0+1280),c
 20285   0109EE  C5E1  F525         	movff	efgtoa@w,pad@p
 20286   0109F2  C5E2  F526         	movff	efgtoa@w+1,pad@p+1
 20287   0109F6  EC2F  F0AE         	call	_pad	;wreg free
 20288   0109FA                     l2486:
 20289   0109FA  0012               	return		;funcret
 20290   0109FC                     __end_of_efgtoa:
 20291                           	callstack 0
 20292                           
 20293 ;; *************** function _strcpy *****************
 20294 ;; Defined at:
 20295 ;;		line 3 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/strcpy.c"
 20296 ;; Parameters:    Size  Location     Type
 20297 ;;  dest            2   16[COMRAM] PTR unsigned char 
 20298 ;;		 -> dbuf(80), 
 20299 ;;  src             2   18[COMRAM] PTR const unsigned char 
 20300 ;;		 -> STR_28(4), STR_25(4), 
 20301 ;; Auto vars:     Size  Location     Type
 20302 ;;  d               2   20[COMRAM] PTR unsigned char 
 20303 ;;		 -> dbuf(80), 
 20304 ;; Return value:  Size  Location     Type
 20305 ;;                  2   16[COMRAM] PTR unsigned char 
 20306 ;; Registers used:
 20307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20308 ;; Tracked objects:
 20309 ;;		On entry : 0/0
 20310 ;;		On exit  : 0/0
 20311 ;;		Unchanged: 0/0
 20312 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20317 ;;Total ram usage:        6 bytes
 20318 ;; Hardware stack levels used: 1
 20319 ;; Hardware stack levels required when called: 4
 20320 ;; This function calls:
 20321 ;;		Nothing
 20322 ;; This function is called by:
 20323 ;;		_efgtoa
 20324 ;; This function uses a non-reentrant model
 20325 ;;
 20326                           
 20327                           	psect	text6
 20328   01628A                     __ptext6:
 20329                           	callstack 0
 20330   01628A                     _strcpy:
 20331                           	callstack 118
 20332   01628A  C511  F515         	movff	strcpy@dest,strcpy@d
 20333   01628E  C512  F516         	movff	strcpy@dest+1,strcpy@d+1
 20334   016292                     l7009:
 20335   016292  C513  F4F6         	movff	strcpy@src,tblptrl
 20336   016296  C514  F4F7         	movff	strcpy@src+1,tblptrh
 20337   01629A  4A13               	infsnz	strcpy@src^(0+1280),f,c
 20338   01629C  2A14               	incf	(strcpy@src+1)^(0+1280),f,c
 20339   01629E                     	if	0	;tblptru may be non-zero
 20340   01629E                     	endif
 20341   01629E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20342   01629E  0E00               	movlw	low (__mediumconst shr (0+16))
 20343   0162A0  6EF8               	movwf	tblptru,c
 20344   0162A2                     	endif
 20345   0162A2  C515  F4D9         	movff	strcpy@d,fsr2l
 20346   0162A6  C516  F4DA         	movff	strcpy@d+1,fsr2h
 20347   0162AA  4A15               	infsnz	strcpy@d^(0+1280),f,c
 20348   0162AC  2A16               	incf	(strcpy@d+1)^(0+1280),f,c
 20349   0162AE  0008               	tblrd		*
 20350   0162B0  C4F5 F4DF          	movff	tablat,indf2
 20351   0162B4  50DF               	movf	indf2,w,c
 20352   0162B6  A4D8               	btfss	status,2,c
 20353   0162B8  EF60  F0B1         	goto	u5521
 20354   0162BC  EF62  F0B1         	goto	u5520
 20355   0162C0                     u5521:
 20356   0162C0  EF49  F0B1         	goto	l7009
 20357   0162C4                     u5520:
 20358   0162C4  0012               	return		;funcret
 20359   0162C6                     __end_of_strcpy:
 20360                           	callstack 0
 20361                           
 20362 ;; *************** function _pad *****************
 20363 ;; Defined at:
 20364 ;;		line 193 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 20367 ;;		 -> sprintf@f(11), 
 20368 ;;  buf             2   34[COMRAM] PTR unsigned char 
 20369 ;;		 -> dbuf(80), 
 20370 ;;  p               2   36[COMRAM] int 
 20371 ;; Auto vars:     Size  Location     Type
 20372 ;;  i               2   39[COMRAM] int 
 20373 ;; Return value:  Size  Location     Type
 20374 ;;                  1    wreg      void 
 20375 ;; Registers used:
 20376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20377 ;; Tracked objects:
 20378 ;;		On entry : 0/0
 20379 ;;		On exit  : 0/0
 20380 ;;		Unchanged: 0/0
 20381 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20382 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20385 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20386 ;;Total ram usage:        9 bytes
 20387 ;; Hardware stack levels used: 1
 20388 ;; Hardware stack levels required when called: 7
 20389 ;; This function calls:
 20390 ;;		_fputc
 20391 ;;		_fputs
 20392 ;; This function is called by:
 20393 ;;		_efgtoa
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text7
 20398   015C5E                     __ptext7:
 20399                           	callstack 0
 20400   015C5E                     _pad:
 20401                           	callstack 115
 20402   015C5E                     
 20403                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v3.00/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 205:  if (p
      +                           < 0) {
 20404   015C5E  BE26               	btfsc	(pad@p+1)^(0+1280),7,c
 20405   015C60  EF36  F0AE         	goto	u5500
 20406   015C64  EF34  F0AE         	goto	u5501
 20407   015C68                     u5501:
 20408   015C68  EF3A  F0AE         	goto	l2471
 20409   015C6C                     u5500:
 20410   015C6C                     
 20411                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 206:   p = 0;
 20412   015C6C  0E00               	movlw	0
 20413   015C6E  6E26               	movwf	(pad@p+1)^(0+1280),c
 20414   015C70  0E00               	movlw	0
 20415   015C72  6E25               	movwf	pad@p^(0+1280),c
 20416   015C74                     l2471:
 20417                           
 20418                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 208:     i = 0;
 20419   015C74  0E00               	movlw	0
 20420   015C76  6E29               	movwf	(pad@i+1)^(0+1280),c
 20421   015C78  0E00               	movlw	0
 20422   015C7A  6E28               	movwf	pad@i^(0+1280),c
 20423                           
 20424                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
 20425   015C7C  EF4C  F0AE         	goto	l7003
 20426   015C80                     l6999:
 20427                           
 20428                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
 20429   015C80  0E00               	movlw	0
 20430   015C82  6E12               	movwf	(fputc@c+1)^(0+1280),c
 20431   015C84  0E20               	movlw	32
 20432   015C86  6E11               	movwf	fputc@c^(0+1280),c
 20433   015C88  C521  F513         	movff	pad@fp,fputc@fp
 20434   015C8C  C522  F514         	movff	pad@fp+1,fputc@fp+1
 20435   015C90  EC05  F0A8         	call	_fputc	;wreg free
 20436   015C94                     
 20437                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 211:         ++i;
 20438   015C94  4A28               	infsnz	pad@i^(0+1280),f,c
 20439   015C96  2A29               	incf	(pad@i+1)^(0+1280),f,c
 20440   015C98                     l7003:
 20441                           
 20442                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
 20443   015C98  5025               	movf	pad@p^(0+1280),w,c
 20444   015C9A  5C28               	subwf	pad@i^(0+1280),w,c
 20445   015C9C  5029               	movf	(pad@i+1)^(0+1280),w,c
 20446   015C9E  0A80               	xorlw	128
 20447   015CA0  6E27               	movwf	??_pad^(0+1280),c
 20448   015CA2  5026               	movf	(pad@p+1)^(0+1280),w,c
 20449   015CA4  0A80               	xorlw	128
 20450   015CA6  5827               	subwfb	??_pad^(0+1280),w,c
 20451   015CA8  A0D8               	btfss	status,0,c
 20452   015CAA  EF59  F0AE         	goto	u5511
 20453   015CAE  EF5B  F0AE         	goto	u5510
 20454   015CB2                     u5511:
 20455   015CB2  EF40  F0AE         	goto	l6999
 20456   015CB6                     u5510:
 20457   015CB6                     
 20458                           ;/Applications/microchip/xc8/v3.00/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
 20459   015CB6  C523  F51A         	movff	pad@buf,fputs@s
 20460   015CBA  C524  F51B         	movff	pad@buf+1,fputs@s+1
 20461   015CBE  C521  F51C         	movff	pad@fp,fputs@fp
 20462   015CC2  C522  F51D         	movff	pad@fp+1,fputs@fp+1
 20463   015CC6  ECE3  F0B0         	call	_fputs	;wreg free
 20464   015CCA  0012               	return		;funcret
 20465   015CCC                     __end_of_pad:
 20466                           	callstack 0
 20467                           
 20468 ;; *************** function _fputs *****************
 20469 ;; Defined at:
 20470 ;;		line 8 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputs.c"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;  s               2   25[COMRAM] PTR const unsigned char 
 20473 ;;		 -> dbuf(80), 
 20474 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 20475 ;;		 -> sprintf@f(11), 
 20476 ;; Auto vars:     Size  Location     Type
 20477 ;;  i               2   30[COMRAM] int 
 20478 ;;  c               1   29[COMRAM] unsigned char 
 20479 ;; Return value:  Size  Location     Type
 20480 ;;                  2   25[COMRAM] int 
 20481 ;; Registers used:
 20482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20483 ;; Tracked objects:
 20484 ;;		On entry : 0/0
 20485 ;;		On exit  : 0/0
 20486 ;;		Unchanged: 0/0
 20487 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20489 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20491 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20492 ;;Total ram usage:        7 bytes
 20493 ;; Hardware stack levels used: 1
 20494 ;; Hardware stack levels required when called: 6
 20495 ;; This function calls:
 20496 ;;		_fputc
 20497 ;; This function is called by:
 20498 ;;		_pad
 20499 ;; This function uses a non-reentrant model
 20500 ;;
 20501                           
 20502                           	psect	text8
 20503   0161C6                     __ptext8:
 20504                           	callstack 0
 20505   0161C6                     _fputs:
 20506                           	callstack 115
 20507   0161C6  0E00               	movlw	0
 20508   0161C8  6E20               	movwf	(fputs@i+1)^(0+1280),c
 20509   0161CA  0E00               	movlw	0
 20510   0161CC  6E1F               	movwf	fputs@i^(0+1280),c
 20511   0161CE  EFF4  F0B0         	goto	l6533
 20512   0161D2                     l6529:
 20513   0161D2  C51E  F511         	movff	fputs@c,fputc@c
 20514   0161D6  6A12               	clrf	(fputc@c+1)^(0+1280),c
 20515   0161D8  C51C  F513         	movff	fputs@fp,fputc@fp
 20516   0161DC  C51D  F514         	movff	fputs@fp+1,fputc@fp+1
 20517   0161E0  EC05  F0A8         	call	_fputc	;wreg free
 20518   0161E4  4A1F               	infsnz	fputs@i^(0+1280),f,c
 20519   0161E6  2A20               	incf	(fputs@i+1)^(0+1280),f,c
 20520   0161E8                     l6533:
 20521   0161E8  501F               	movf	fputs@i^(0+1280),w,c
 20522   0161EA  241A               	addwf	fputs@s^(0+1280),w,c
 20523   0161EC  6ED9               	movwf	fsr2l,c
 20524   0161EE  5020               	movf	(fputs@i+1)^(0+1280),w,c
 20525   0161F0  201B               	addwfc	(fputs@s+1)^(0+1280),w,c
 20526   0161F2  6EDA               	movwf	fsr2h,c
 20527   0161F4  50DF               	movf	indf2,w,c
 20528   0161F6  6E1E               	movwf	fputs@c^(0+1280),c
 20529   0161F8  501E               	movf	fputs@c^(0+1280),w,c
 20530   0161FA  A4D8               	btfss	status,2,c
 20531   0161FC  EF02  F0B1         	goto	u4751
 20532   016200  EF04  F0B1         	goto	u4750
 20533   016204                     u4751:
 20534   016204  EFE9  F0B0         	goto	l6529
 20535   016208                     u4750:
 20536   016208  0012               	return		;funcret
 20537   01620A                     __end_of_fputs:
 20538                           	callstack 0
 20539                           
 20540 ;; *************** function _fputc *****************
 20541 ;; Defined at:
 20542 ;;		line 8 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/nf_fputc.c"
 20543 ;; Parameters:    Size  Location     Type
 20544 ;;  c               2   16[COMRAM] int 
 20545 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 20546 ;;		 -> sprintf@f(11), 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;		None
 20549 ;; Return value:  Size  Location     Type
 20550 ;;                  2   16[COMRAM] int 
 20551 ;; Registers used:
 20552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20553 ;; Tracked objects:
 20554 ;;		On entry : 0/0
 20555 ;;		On exit  : 0/0
 20556 ;;		Unchanged: 0/0
 20557 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20560 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;Total ram usage:        9 bytes
 20563 ;; Hardware stack levels used: 1
 20564 ;; Hardware stack levels required when called: 5
 20565 ;; This function calls:
 20566 ;;		_putch
 20567 ;; This function is called by:
 20568 ;;		_pad
 20569 ;;		_vfpfcnvrt
 20570 ;;		_fputs
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text9
 20575   01500A                     __ptext9:
 20576                           	callstack 0
 20577   01500A                     _fputc:
 20578                           	callstack 118
 20579   01500A  5013               	movf	fputc@fp^(0+1280),w,c
 20580   01500C  1014               	iorwf	(fputc@fp+1)^(0+1280),w,c
 20581   01500E  B4D8               	btfsc	status,2,c
 20582   015010  EF0C  F0A8         	goto	u4241
 20583   015014  EF0E  F0A8         	goto	u4240
 20584   015018                     u4241:
 20585   015018  EF17  F0A8         	goto	l6271
 20586   01501C                     u4240:
 20587   01501C  5013               	movf	fputc@fp^(0+1280),w,c
 20588   01501E  1014               	iorwf	(fputc@fp+1)^(0+1280),w,c
 20589   015020  A4D8               	btfss	status,2,c
 20590   015022  EF15  F0A8         	goto	u4251
 20591   015026  EF17  F0A8         	goto	u4250
 20592   01502A                     u4251:
 20593   01502A  EF1C  F0A8         	goto	l6273
 20594   01502E                     u4250:
 20595   01502E                     l6271:
 20596   01502E  5011               	movf	fputc@c^(0+1280),w,c
 20597   015030  EC2D  F0B5         	call	_putch
 20598   015034  EF69  F0A8         	goto	l2600
 20599   015038                     l6273:
 20600   015038  EE20 F009          	lfsr	2,9
 20601   01503C  5013               	movf	fputc@fp^(0+1280),w,c
 20602   01503E  26D9               	addwf	fsr2l,f,c
 20603   015040  5014               	movf	(fputc@fp+1)^(0+1280),w,c
 20604   015042  22DA               	addwfc	fsr2h,f,c
 20605   015044  50DE               	movf	postinc2,w,c
 20606   015046  10DE               	iorwf	postinc2,w,c
 20607   015048  B4D8               	btfsc	status,2,c
 20608   01504A  EF29  F0A8         	goto	u4261
 20609   01504E  EF2B  F0A8         	goto	u4260
 20610   015052                     u4261:
 20611   015052  EF46  F0A8         	goto	l6277
 20612   015056                     u4260:
 20613   015056  EE20 F009          	lfsr	2,9
 20614   01505A  5013               	movf	fputc@fp^(0+1280),w,c
 20615   01505C  26D9               	addwf	fsr2l,f,c
 20616   01505E  5014               	movf	(fputc@fp+1)^(0+1280),w,c
 20617   015060  22DA               	addwfc	fsr2h,f,c
 20618   015062  EE10 F002          	lfsr	1,2
 20619   015066  5013               	movf	fputc@fp^(0+1280),w,c
 20620   015068  26E1               	addwf	fsr1l,f,c
 20621   01506A  5014               	movf	(fputc@fp+1)^(0+1280),w,c
 20622   01506C  22E2               	addwfc	fsr1h,f,c
 20623   01506E  50DE               	movf	postinc2,w,c
 20624   015070  5CE6               	subwf	postinc1,w,c
 20625   015072  50E6               	movf	postinc1,w,c
 20626   015074  0A80               	xorlw	128
 20627   015076  6E19               	movwf	(??_fputc+4)^(0+1280),c
 20628   015078  50DE               	movf	postinc2,w,c
 20629   01507A  0A80               	xorlw	128
 20630   01507C  5819               	subwfb	(??_fputc+4)^(0+1280),w,c
 20631   01507E  B0D8               	btfsc	status,0,c
 20632   015080  EF44  F0A8         	goto	u4271
 20633   015084  EF46  F0A8         	goto	u4270
 20634   015088                     u4271:
 20635   015088  EF69  F0A8         	goto	l2600
 20636   01508C                     u4270:
 20637   01508C                     l6277:
 20638   01508C  EE20 F002          	lfsr	2,2
 20639   015090  5013               	movf	fputc@fp^(0+1280),w,c
 20640   015092  26D9               	addwf	fsr2l,f,c
 20641   015094  5014               	movf	(fputc@fp+1)^(0+1280),w,c
 20642   015096  22DA               	addwfc	fsr2h,f,c
 20643   015098  C4DE F515          	movff	postinc2,??_fputc
 20644   01509C  C4DD F516          	movff	postdec2,??_fputc+1
 20645   0150A0  C513  F4D9         	movff	fputc@fp,fsr2l
 20646   0150A4  C514  F4DA         	movff	fputc@fp+1,fsr2h
 20647   0150A8  C4DE F517          	movff	postinc2,??_fputc+2
 20648   0150AC  C4DD F518          	movff	postdec2,??_fputc+3
 20649   0150B0  5015               	movf	??_fputc^(0+1280),w,c
 20650   0150B2  2417               	addwf	(??_fputc+2)^(0+1280),w,c
 20651   0150B4  6ED9               	movwf	fsr2l,c
 20652   0150B6  5016               	movf	(??_fputc+1)^(0+1280),w,c
 20653   0150B8  2018               	addwfc	(??_fputc+3)^(0+1280),w,c
 20654   0150BA  6EDA               	movwf	fsr2h,c
 20655   0150BC  C511  F4DF         	movff	fputc@c,indf2
 20656   0150C0  EE20 F002          	lfsr	2,2
 20657   0150C4  5013               	movf	fputc@fp^(0+1280),w,c
 20658   0150C6  26D9               	addwf	fsr2l,f,c
 20659   0150C8  5014               	movf	(fputc@fp+1)^(0+1280),w,c
 20660   0150CA  22DA               	addwfc	fsr2h,f,c
 20661   0150CC  2ADE               	incf	postinc2,f,c
 20662   0150CE  0E00               	movlw	0
 20663   0150D0  22DD               	addwfc	postdec2,f,c
 20664   0150D2                     l2600:
 20665   0150D2  0012               	return		;funcret
 20666   0150D4                     __end_of_fputc:
 20667                           	callstack 0
 20668                           
 20669 ;; *************** function _putch *****************
 20670 ;; Defined at:
 20671 ;;		line 7 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/putch.c"
 20672 ;; Parameters:    Size  Location     Type
 20673 ;;  c               1    wreg     unsigned char 
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;  c               1    0[COMRAM] unsigned char 
 20676 ;; Return value:  Size  Location     Type
 20677 ;;                  1    wreg      void 
 20678 ;; Registers used:
 20679 ;;		wreg
 20680 ;; Tracked objects:
 20681 ;;		On entry : 0/0
 20682 ;;		On exit  : 0/0
 20683 ;;		Unchanged: 0/0
 20684 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20689 ;;Total ram usage:        0 bytes
 20690 ;; Hardware stack levels used: 1
 20691 ;; Hardware stack levels required when called: 4
 20692 ;; This function calls:
 20693 ;;		Nothing
 20694 ;; This function is called by:
 20695 ;;		_fputc
 20696 ;; This function uses a non-reentrant model
 20697 ;;
 20698                           
 20699                           	psect	text10
 20700   016A5A                     __ptext10:
 20701                           	callstack 0
 20702   016A5A                     _putch:
 20703                           	callstack 118
 20704   016A5A  0012               	return		;funcret
 20705   016A5C                     __end_of_putch:
 20706                           	callstack 0
 20707                           
 20708 ;; *************** function _memcpy *****************
 20709 ;; Defined at:
 20710 ;;		line 4 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/memcpy.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;  d1              2   16[COMRAM] PTR void 
 20713 ;;		 -> dbuf(80), 
 20714 ;;  s1              2   18[COMRAM] PTR const void 
 20715 ;;		 -> dbuf(80), 
 20716 ;;  n               2   20[COMRAM] unsigned int 
 20717 ;; Auto vars:     Size  Location     Type
 20718 ;;  s               2   24[COMRAM] PTR const unsigned char 
 20719 ;;		 -> dbuf(80), 
 20720 ;;  d               2   22[COMRAM] PTR unsigned char 
 20721 ;;		 -> dbuf(80), 
 20722 ;;  tmp             1   26[COMRAM] unsigned char 
 20723 ;; Return value:  Size  Location     Type
 20724 ;;                  2   16[COMRAM] PTR void 
 20725 ;; Registers used:
 20726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20727 ;; Tracked objects:
 20728 ;;		On entry : 0/0
 20729 ;;		On exit  : 0/0
 20730 ;;		Unchanged: 0/0
 20731 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20732 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20733 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20735 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20736 ;;Total ram usage:       11 bytes
 20737 ;; Hardware stack levels used: 1
 20738 ;; Hardware stack levels required when called: 4
 20739 ;; This function calls:
 20740 ;;		Nothing
 20741 ;; This function is called by:
 20742 ;;		_efgtoa
 20743 ;; This function uses a non-reentrant model
 20744 ;;
 20745                           
 20746                           	psect	text11
 20747   016050                     __ptext11:
 20748                           	callstack 0
 20749   016050                     _memcpy:
 20750                           	callstack 118
 20751   016050  C513  F519         	movff	memcpy@s1,memcpy@s
 20752   016054  C514  F51A         	movff	memcpy@s1+1,memcpy@s+1
 20753   016058  C511  F517         	movff	memcpy@d1,memcpy@d
 20754   01605C  C512  F518         	movff	memcpy@d1+1,memcpy@d+1
 20755   016060  EF42  F0B0         	goto	l7057
 20756   016064                     l7049:
 20757   016064  C519  F4D9         	movff	memcpy@s,fsr2l
 20758   016068  C51A  F4DA         	movff	memcpy@s+1,fsr2h
 20759   01606C  50DF               	movf	indf2,w,c
 20760   01606E  6E1B               	movwf	memcpy@tmp^(0+1280),c
 20761   016070  4A19               	infsnz	memcpy@s^(0+1280),f,c
 20762   016072  2A1A               	incf	(memcpy@s+1)^(0+1280),f,c
 20763   016074  C517  F4D9         	movff	memcpy@d,fsr2l
 20764   016078  C518  F4DA         	movff	memcpy@d+1,fsr2h
 20765   01607C  C51B  F4DF         	movff	memcpy@tmp,indf2
 20766   016080  4A17               	infsnz	memcpy@d^(0+1280),f,c
 20767   016082  2A18               	incf	(memcpy@d+1)^(0+1280),f,c
 20768   016084                     l7057:
 20769   016084  0615               	decf	memcpy@n^(0+1280),f,c
 20770   016086  A0D8               	btfss	status,0,c
 20771   016088  0616               	decf	(memcpy@n+1)^(0+1280),f,c
 20772   01608A  2815               	incf	memcpy@n^(0+1280),w,c
 20773   01608C  E106               	bnz	u5641
 20774   01608E  2816               	incf	(memcpy@n+1)^(0+1280),w,c
 20775   016090  A4D8               	btfss	status,2,c
 20776   016092  EF4D  F0B0         	goto	u5641
 20777   016096  EF4F  F0B0         	goto	u5640
 20778   01609A                     u5641:
 20779   01609A  EF32  F0B0         	goto	l7049
 20780   01609E                     u5640:
 20781   01609E  0012               	return		;funcret
 20782   0160A0                     __end_of_memcpy:
 20783                           	callstack 0
 20784                           
 20785 ;; *************** function _labs *****************
 20786 ;; Defined at:
 20787 ;;		line 1 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/labs.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  a               4   16[COMRAM] long 
 20790 ;; Auto vars:     Size  Location     Type
 20791 ;;		None
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  4   16[COMRAM] long 
 20794 ;; Registers used:
 20795 ;;		wreg, status,2, status,0
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : 0/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20804 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20805 ;;Total ram usage:        8 bytes
 20806 ;; Hardware stack levels used: 1
 20807 ;; Hardware stack levels required when called: 4
 20808 ;; This function calls:
 20809 ;;		Nothing
 20810 ;; This function is called by:
 20811 ;;		_efgtoa
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           	psect	text12
 20816   015F04                     __ptext12:
 20817                           	callstack 0
 20818   015F04                     _labs:
 20819                           	callstack 118
 20820   015F04  BE14               	btfsc	(labs@a+3)^(0+1280),7,c
 20821   015F06  EF87  F0AF         	goto	u5531
 20822   015F0A  EF89  F0AF         	goto	u5530
 20823   015F0E                     u5531:
 20824   015F0E  EF93  F0AF         	goto	l7015
 20825   015F12                     u5530:
 20826   015F12  C511  F511         	movff	labs@a,?_labs
 20827   015F16  C512  F512         	movff	labs@a+1,?_labs+1
 20828   015F1A  C513  F513         	movff	labs@a+2,?_labs+2
 20829   015F1E  C514  F514         	movff	labs@a+3,?_labs+3
 20830   015F22  EFAC  F0AF         	goto	l2582
 20831   015F26                     l7015:
 20832   015F26  C511  F515         	movff	labs@a,??_labs
 20833   015F2A  C512  F516         	movff	labs@a+1,??_labs+1
 20834   015F2E  C513  F517         	movff	labs@a+2,??_labs+2
 20835   015F32  C514  F518         	movff	labs@a+3,??_labs+3
 20836   015F36  1E15               	comf	??_labs^(0+1280),f,c
 20837   015F38  1E16               	comf	(??_labs+1)^(0+1280),f,c
 20838   015F3A  1E17               	comf	(??_labs+2)^(0+1280),f,c
 20839   015F3C  1E18               	comf	(??_labs+3)^(0+1280),f,c
 20840   015F3E  2A15               	incf	??_labs^(0+1280),f,c
 20841   015F40  0E00               	movlw	0
 20842   015F42  2216               	addwfc	(??_labs+1)^(0+1280),f,c
 20843   015F44  2217               	addwfc	(??_labs+2)^(0+1280),f,c
 20844   015F46  2218               	addwfc	(??_labs+3)^(0+1280),f,c
 20845   015F48  C515  F511         	movff	??_labs,?_labs
 20846   015F4C  C516  F512         	movff	??_labs+1,?_labs+1
 20847   015F50  C517  F513         	movff	??_labs+2,?_labs+2
 20848   015F54  C518  F514         	movff	??_labs+3,?_labs+3
 20849   015F58                     l2582:
 20850   015F58  0012               	return		;funcret
 20851   015F5A                     __end_of_labs:
 20852                           	callstack 0
 20853                           
 20854 ;; *************** function _floorf *****************
 20855 ;; Defined at:
 20856 ;;		line 3 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/floorf.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;  x               4   83[BANK5 ] float 
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;  u               4   99[BANK5 ] struct .
 20861 ;;  m               4   93[BANK5 ] unsigned long 
 20862 ;;  e               2   97[BANK5 ] int 
 20863 ;; Return value:  Size  Location     Type
 20864 ;;                  4   83[BANK5 ] float 
 20865 ;; Registers used:
 20866 ;;		wreg, status,2, status,0
 20867 ;; Tracked objects:
 20868 ;;		On entry : 0/0
 20869 ;;		On exit  : 0/0
 20870 ;;		Unchanged: 0/0
 20871 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20873 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20874 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20875 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20876 ;;Total ram usage:       20 bytes
 20877 ;; Hardware stack levels used: 1
 20878 ;; Hardware stack levels required when called: 4
 20879 ;; This function calls:
 20880 ;;		Nothing
 20881 ;; This function is called by:
 20882 ;;		_efgtoa
 20883 ;; This function uses a non-reentrant model
 20884 ;;
 20885                           
 20886                           	psect	text13
 20887   013DF8                     __ptext13:
 20888                           	callstack 0
 20889   013DF8                     _floorf:
 20890                           	callstack 118
 20891   013DF8  C691  F5C3         	movff	floorf@F521,floorf@u
 20892   013DFC  C692  F5C4         	movff	floorf@F521+1,floorf@u+1
 20893   013E00  C693  F5C5         	movff	floorf@F521+2,floorf@u+2
 20894   013E04  C694  F5C6         	movff	floorf@F521+3,floorf@u+3
 20895   013E08  C5B3  F5C3         	movff	floorf@x,floorf@u
 20896   013E0C  C5B4  F5C4         	movff	floorf@x+1,floorf@u+1
 20897   013E10  C5B5  F5C5         	movff	floorf@x+2,floorf@u+2
 20898   013E14  C5B6  F5C6         	movff	floorf@x+3,floorf@u+3
 20899   013E18  0E81               	movlw	129
 20900   013E1A  0105               	movlb	5	; () banked
 20901   013E1C  6FB7               	movwf	??_floorf& (0+255),b
 20902   013E1E  0EFF               	movlw	255
 20903   013E20  6FB8               	movwf	(??_floorf+1)& (0+255),b
 20904   013E22  C5C3  F5B9         	movff	floorf@u,??_floorf+2
 20905   013E26  C5C4  F5BA         	movff	floorf@u+1,??_floorf+3
 20906   013E2A  C5C5  F5BB         	movff	floorf@u+2,??_floorf+4
 20907   013E2E  C5C6  F5BC         	movff	floorf@u+3,??_floorf+5
 20908   013E32  0E18               	movlw	24
 20909   013E34  EF21  F09F         	goto	u5540
 20910   013E38                     u5545:
 20911   013E38  90D8               	bcf	status,0,c
 20912   013E3A  33BC               	rrcf	(??_floorf+5)& (0+255),f,b
 20913   013E3C  33BB               	rrcf	(??_floorf+4)& (0+255),f,b
 20914   013E3E  33BA               	rrcf	(??_floorf+3)& (0+255),f,b
 20915   013E40  33B9               	rrcf	(??_floorf+2)& (0+255),f,b
 20916   013E42                     u5540:
 20917   013E42  2EE8               	decfsz	wreg,f,c
 20918   013E44  EF1C  F09F         	goto	u5545
 20919   013E48  51B9               	movf	(??_floorf+2)& (0+255),w,b
 20920   013E4A  25B7               	addwf	??_floorf& (0+255),w,b
 20921   013E4C  6FC1               	movwf	floorf@e& (0+255),b
 20922   013E4E  0E00               	movlw	0
 20923   013E50  21B8               	addwfc	(??_floorf+1)& (0+255),w,b
 20924   013E52  6FC2               	movwf	(floorf@e+1)& (0+255),b
 20925   013E54  BFC2               	btfsc	(floorf@e+1)& (0+255),7,b
 20926   013E56  EF36  F09F         	goto	u5551
 20927   013E5A  51C2               	movf	(floorf@e+1)& (0+255),w,b
 20928   013E5C  E109               	bnz	u5550
 20929   013E5E  0E17               	movlw	23
 20930   013E60  5DC1               	subwf	floorf@e& (0+255),w,b
 20931   013E62  A0D8               	btfss	status,0,c
 20932   013E64  EF36  F09F         	goto	u5551
 20933   013E68  EF38  F09F         	goto	u5550
 20934   013E6C                     u5551:
 20935   013E6C  EF42  F09F         	goto	l7025
 20936   013E70                     u5550:
 20937   013E70                     l7023:
 20938                           
 20939                           ; BSR set to: 5
 20940   013E70  C5B3  F5B3         	movff	floorf@x,?_floorf
 20941   013E74  C5B4  F5B4         	movff	floorf@x+1,?_floorf+1
 20942   013E78  C5B5  F5B5         	movff	floorf@x+2,?_floorf+2
 20943   013E7C  C5B6  F5B6         	movff	floorf@x+3,?_floorf+3
 20944   013E80  EF06  F0A0         	goto	l2568
 20945   013E84                     l7025:
 20946                           
 20947                           ; BSR set to: 5
 20948   013E84  BFC2               	btfsc	(floorf@e+1)& (0+255),7,b
 20949   013E86  EF47  F09F         	goto	u5561
 20950   013E8A  EF49  F09F         	goto	u5560
 20951   013E8E                     u5561:
 20952   013E8E  EFBA  F09F         	goto	l7035
 20953   013E92                     u5560:
 20954   013E92                     
 20955                           ; BSR set to: 5
 20956   013E92  C5C1  F5B7         	movff	floorf@e,??_floorf
 20957   013E96  0EFF               	movlw	255
 20958   013E98  6FB8               	movwf	(??_floorf+1)& (0+255),b
 20959   013E9A  0EFF               	movlw	255
 20960   013E9C  6FB9               	movwf	(??_floorf+2)& (0+255),b
 20961   013E9E  0E7F               	movlw	127
 20962   013EA0  6FBA               	movwf	(??_floorf+3)& (0+255),b
 20963   013EA2  0E00               	movlw	0
 20964   013EA4  6FBB               	movwf	(??_floorf+4)& (0+255),b
 20965   013EA6                     u5575:
 20966   013EA6  67B7               	tstfsz	??_floorf& (0+255),b
 20967   013EA8  EF58  F09F         	goto	u5576
 20968   013EAC  EF60  F09F         	goto	u5577
 20969   013EB0                     u5576:
 20970   013EB0  35BB               	rlcf	(??_floorf+4)& (0+255),w,b
 20971   013EB2  33BB               	rrcf	(??_floorf+4)& (0+255),f,b
 20972   013EB4  33BA               	rrcf	(??_floorf+3)& (0+255),f,b
 20973   013EB6  33B9               	rrcf	(??_floorf+2)& (0+255),f,b
 20974   013EB8  33B8               	rrcf	(??_floorf+1)& (0+255),f,b
 20975   013EBA  2FB7               	decfsz	??_floorf& (0+255),f,b
 20976   013EBC  EF53  F09F         	goto	u5575
 20977   013EC0                     u5577:
 20978   013EC0  C5B8  F5BD         	movff	??_floorf+1,floorf@m
 20979   013EC4  C5B9  F5BE         	movff	??_floorf+2,floorf@m+1
 20980   013EC8  C5BA  F5BF         	movff	??_floorf+3,floorf@m+2
 20981   013ECC  C5BB  F5C0         	movff	??_floorf+4,floorf@m+3
 20982   013ED0  0105               	movlb	5	; () banked
 20983   013ED2  51BD               	movf	floorf@m& (0+255),w,b
 20984   013ED4  15C3               	andwf	floorf@u& (0+255),w,b
 20985   013ED6  6FB7               	movwf	??_floorf& (0+255),b
 20986   013ED8  51BE               	movf	(floorf@m+1)& (0+255),w,b
 20987   013EDA  15C4               	andwf	(floorf@u+1)& (0+255),w,b
 20988   013EDC  6FB8               	movwf	(??_floorf+1)& (0+255),b
 20989   013EDE  51BF               	movf	(floorf@m+2)& (0+255),w,b
 20990   013EE0  15C5               	andwf	(floorf@u+2)& (0+255),w,b
 20991   013EE2  6FB9               	movwf	(??_floorf+2)& (0+255),b
 20992   013EE4  51C0               	movf	(floorf@m+3)& (0+255),w,b
 20993   013EE6  15C6               	andwf	(floorf@u+3)& (0+255),w,b
 20994   013EE8  6FBA               	movwf	(??_floorf+3)& (0+255),b
 20995   013EEA  51B7               	movf	??_floorf& (0+255),w,b
 20996   013EEC  11B8               	iorwf	(??_floorf+1)& (0+255),w,b
 20997   013EEE  11B9               	iorwf	(??_floorf+2)& (0+255),w,b
 20998   013EF0  11BA               	iorwf	(??_floorf+3)& (0+255),w,b
 20999   013EF2  A4D8               	btfss	status,2,c
 21000   013EF4  EF7E  F09F         	goto	u5581
 21001   013EF8  EF80  F09F         	goto	u5580
 21002   013EFC                     u5581:
 21003   013EFC  EF82  F09F         	goto	l7031
 21004   013F00                     u5580:
 21005   013F00  EF38  F09F         	goto	l7023
 21006   013F04                     l7031:
 21007                           
 21008                           ; BSR set to: 5
 21009   013F04  C5C3  F5B7         	movff	floorf@u,??_floorf
 21010   013F08  C5C4  F5B8         	movff	floorf@u+1,??_floorf+1
 21011   013F0C  C5C5  F5B9         	movff	floorf@u+2,??_floorf+2
 21012   013F10  C5C6  F5BA         	movff	floorf@u+3,??_floorf+3
 21013   013F14  0E20               	movlw	32
 21014   013F16  EF92  F09F         	goto	u5590
 21015   013F1A                     u5595:
 21016   013F1A  90D8               	bcf	status,0,c
 21017   013F1C  33BA               	rrcf	(??_floorf+3)& (0+255),f,b
 21018   013F1E  33B9               	rrcf	(??_floorf+2)& (0+255),f,b
 21019   013F20  33B8               	rrcf	(??_floorf+1)& (0+255),f,b
 21020   013F22  33B7               	rrcf	??_floorf& (0+255),f,b
 21021   013F24                     u5590:
 21022   013F24  2EE8               	decfsz	wreg,f,c
 21023   013F26  EF8D  F09F         	goto	u5595
 21024   013F2A  51B7               	movf	??_floorf& (0+255),w,b
 21025   013F2C  11B8               	iorwf	(??_floorf+1)& (0+255),w,b
 21026   013F2E  11B9               	iorwf	(??_floorf+2)& (0+255),w,b
 21027   013F30  11BA               	iorwf	(??_floorf+3)& (0+255),w,b
 21028   013F32  B4D8               	btfsc	status,2,c
 21029   013F34  EF9E  F09F         	goto	u5601
 21030   013F38  EFA0  F09F         	goto	u5600
 21031   013F3C                     u5601:
 21032   013F3C  EFA8  F09F         	goto	l2571
 21033   013F40                     u5600:
 21034   013F40                     
 21035                           ; BSR set to: 5
 21036   013F40  51BD               	movf	floorf@m& (0+255),w,b
 21037   013F42  27C3               	addwf	floorf@u& (0+255),f,b
 21038   013F44  51BE               	movf	(floorf@m+1)& (0+255),w,b
 21039   013F46  23C4               	addwfc	(floorf@u+1)& (0+255),f,b
 21040   013F48  51BF               	movf	(floorf@m+2)& (0+255),w,b
 21041   013F4A  23C5               	addwfc	(floorf@u+2)& (0+255),f,b
 21042   013F4C  51C0               	movf	(floorf@m+3)& (0+255),w,b
 21043   013F4E  23C6               	addwfc	(floorf@u+3)& (0+255),f,b
 21044   013F50                     l2571:
 21045                           
 21046                           ; BSR set to: 5
 21047   013F50  1DBD               	comf	floorf@m& (0+255),w,b
 21048   013F52  6FB7               	movwf	??_floorf& (0+255),b
 21049   013F54  1DBE               	comf	(floorf@m+1)& (0+255),w,b
 21050   013F56  6FB8               	movwf	(??_floorf+1)& (0+255),b
 21051   013F58  1DBF               	comf	(floorf@m+2)& (0+255),w,b
 21052   013F5A  6FB9               	movwf	(??_floorf+2)& (0+255),b
 21053   013F5C  1DC0               	comf	(floorf@m+3)& (0+255),w,b
 21054   013F5E  6FBA               	movwf	(??_floorf+3)& (0+255),b
 21055   013F60  51B7               	movf	??_floorf& (0+255),w,b
 21056   013F62  17C3               	andwf	floorf@u& (0+255),f,b
 21057   013F64  51B8               	movf	(??_floorf+1)& (0+255),w,b
 21058   013F66  17C4               	andwf	(floorf@u+1)& (0+255),f,b
 21059   013F68  51B9               	movf	(??_floorf+2)& (0+255),w,b
 21060   013F6A  17C5               	andwf	(floorf@u+2)& (0+255),f,b
 21061   013F6C  51BA               	movf	(??_floorf+3)& (0+255),w,b
 21062   013F6E  17C6               	andwf	(floorf@u+3)& (0+255),f,b
 21063   013F70  EFFE  F09F         	goto	l7043
 21064   013F74                     l7035:
 21065                           
 21066                           ; BSR set to: 5
 21067   013F74  C5C3  F5B7         	movff	floorf@u,??_floorf
 21068   013F78  C5C4  F5B8         	movff	floorf@u+1,??_floorf+1
 21069   013F7C  C5C5  F5B9         	movff	floorf@u+2,??_floorf+2
 21070   013F80  C5C6  F5BA         	movff	floorf@u+3,??_floorf+3
 21071   013F84  0E20               	movlw	32
 21072   013F86  EFCA  F09F         	goto	u5610
 21073   013F8A                     u5615:
 21074   013F8A  90D8               	bcf	status,0,c
 21075   013F8C  33BA               	rrcf	(??_floorf+3)& (0+255),f,b
 21076   013F8E  33B9               	rrcf	(??_floorf+2)& (0+255),f,b
 21077   013F90  33B8               	rrcf	(??_floorf+1)& (0+255),f,b
 21078   013F92  33B7               	rrcf	??_floorf& (0+255),f,b
 21079   013F94                     u5610:
 21080   013F94  2EE8               	decfsz	wreg,f,c
 21081   013F96  EFC5  F09F         	goto	u5615
 21082   013F9A  51B7               	movf	??_floorf& (0+255),w,b
 21083   013F9C  11B8               	iorwf	(??_floorf+1)& (0+255),w,b
 21084   013F9E  11B9               	iorwf	(??_floorf+2)& (0+255),w,b
 21085   013FA0  11BA               	iorwf	(??_floorf+3)& (0+255),w,b
 21086   013FA2  A4D8               	btfss	status,2,c
 21087   013FA4  EFD6  F09F         	goto	u5621
 21088   013FA8  EFD8  F09F         	goto	u5620
 21089   013FAC                     u5621:
 21090   013FAC  EFE2  F09F         	goto	l7039
 21091   013FB0                     u5620:
 21092   013FB0                     
 21093                           ; BSR set to: 5
 21094   013FB0  0E00               	movlw	0
 21095   013FB2  6FC3               	movwf	floorf@u& (0+255),b
 21096   013FB4  0E00               	movlw	0
 21097   013FB6  6FC4               	movwf	(floorf@u+1)& (0+255),b
 21098   013FB8  0E00               	movlw	0
 21099   013FBA  6FC5               	movwf	(floorf@u+2)& (0+255),b
 21100   013FBC  0E00               	movlw	0
 21101   013FBE  6FC6               	movwf	(floorf@u+3)& (0+255),b
 21102   013FC0  EFFE  F09F         	goto	l7043
 21103   013FC4                     l7039:
 21104                           
 21105                           ; BSR set to: 5
 21106   013FC4  90D8               	bcf	status,0,c
 21107   013FC6  35C3               	rlcf	floorf@u& (0+255),w,b
 21108   013FC8  6FB7               	movwf	??_floorf& (0+255),b
 21109   013FCA  35C4               	rlcf	(floorf@u+1)& (0+255),w,b
 21110   013FCC  6FB8               	movwf	(??_floorf+1)& (0+255),b
 21111   013FCE  35C5               	rlcf	(floorf@u+2)& (0+255),w,b
 21112   013FD0  6FB9               	movwf	(??_floorf+2)& (0+255),b
 21113   013FD2  35C6               	rlcf	(floorf@u+3)& (0+255),w,b
 21114   013FD4  6FBA               	movwf	(??_floorf+3)& (0+255),b
 21115   013FD6  51B7               	movf	??_floorf& (0+255),w,b
 21116   013FD8  11B8               	iorwf	(??_floorf+1)& (0+255),w,b
 21117   013FDA  11B9               	iorwf	(??_floorf+2)& (0+255),w,b
 21118   013FDC  11BA               	iorwf	(??_floorf+3)& (0+255),w,b
 21119   013FDE  B4D8               	btfsc	status,2,c
 21120   013FE0  EFF4  F09F         	goto	u5631
 21121   013FE4  EFF6  F09F         	goto	u5630
 21122   013FE8                     u5631:
 21123   013FE8  EFFE  F09F         	goto	l7043
 21124   013FEC                     u5630:
 21125   013FEC                     
 21126                           ; BSR set to: 5
 21127   013FEC  0E00               	movlw	0
 21128   013FEE  6FC3               	movwf	floorf@u& (0+255),b
 21129   013FF0  0E00               	movlw	0
 21130   013FF2  6FC4               	movwf	(floorf@u+1)& (0+255),b
 21131   013FF4  0E80               	movlw	128
 21132   013FF6  6FC5               	movwf	(floorf@u+2)& (0+255),b
 21133   013FF8  0EBF               	movlw	191
 21134   013FFA  6FC6               	movwf	(floorf@u+3)& (0+255),b
 21135   013FFC                     l7043:
 21136                           
 21137                           ; BSR set to: 5
 21138   013FFC  C5C3  F5B3         	movff	floorf@u,?_floorf
 21139   014000  C5C4  F5B4         	movff	floorf@u+1,?_floorf+1
 21140   014004  C5C5  F5B5         	movff	floorf@u+2,?_floorf+2
 21141   014008  C5C6  F5B6         	movff	floorf@u+3,?_floorf+3
 21142   01400C                     l2568:
 21143                           
 21144                           ; BSR set to: 5
 21145   01400C  0012               	return		;funcret
 21146   01400E                     __end_of_floorf:
 21147                           	callstack 0
 21148                           
 21149 ;; *************** function ___fleq *****************
 21150 ;; Defined at:
 21151 ;;		line 4 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/fleq.c"
 21152 ;; Parameters:    Size  Location     Type
 21153 ;;  ff1             4   16[COMRAM] float 
 21154 ;;  ff2             4   20[COMRAM] float 
 21155 ;; Auto vars:     Size  Location     Type
 21156 ;;		None
 21157 ;; Return value:  Size  Location     Type
 21158 ;;		None               void
 21159 ;; Registers used:
 21160 ;;		wreg, status,2, status,0
 21161 ;; Tracked objects:
 21162 ;;		On entry : 0/0
 21163 ;;		On exit  : 0/0
 21164 ;;		Unchanged: 0/0
 21165 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21169 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21170 ;;Total ram usage:       12 bytes
 21171 ;; Hardware stack levels used: 1
 21172 ;; Hardware stack levels required when called: 4
 21173 ;; This function calls:
 21174 ;;		Nothing
 21175 ;; This function is called by:
 21176 ;;		_efgtoa
 21177 ;; This function uses a non-reentrant model
 21178 ;;
 21179                           
 21180                           	psect	text14
 21181   0155D6                     __ptext14:
 21182                           	callstack 0
 21183   0155D6                     ___fleq:
 21184                           	callstack 118
 21185   0155D6  0E00               	movlw	0
 21186   0155D8  1411               	andwf	___fleq@ff1^(0+1280),w,c
 21187   0155DA  6E19               	movwf	??___fleq^(0+1280),c
 21188   0155DC  0E00               	movlw	0
 21189   0155DE  1412               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 21190   0155E0  6E1A               	movwf	(??___fleq+1)^(0+1280),c
 21191   0155E2  0E80               	movlw	128
 21192   0155E4  1413               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 21193   0155E6  6E1B               	movwf	(??___fleq+2)^(0+1280),c
 21194   0155E8  0E7F               	movlw	127
 21195   0155EA  1414               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 21196   0155EC  6E1C               	movwf	(??___fleq+3)^(0+1280),c
 21197   0155EE  5019               	movf	??___fleq^(0+1280),w,c
 21198   0155F0  101A               	iorwf	(??___fleq+1)^(0+1280),w,c
 21199   0155F2  101B               	iorwf	(??___fleq+2)^(0+1280),w,c
 21200   0155F4  101C               	iorwf	(??___fleq+3)^(0+1280),w,c
 21201   0155F6  A4D8               	btfss	status,2,c
 21202   0155F8  EF00  F0AB         	goto	u5271
 21203   0155FC  EF02  F0AB         	goto	u5270
 21204   015600                     u5271:
 21205   015600  EF0A  F0AB         	goto	l6887
 21206   015604                     u5270:
 21207   015604  0E00               	movlw	0
 21208   015606  6E11               	movwf	___fleq@ff1^(0+1280),c
 21209   015608  0E00               	movlw	0
 21210   01560A  6E12               	movwf	(___fleq@ff1+1)^(0+1280),c
 21211   01560C  0E00               	movlw	0
 21212   01560E  6E13               	movwf	(___fleq@ff1+2)^(0+1280),c
 21213   015610  0E00               	movlw	0
 21214   015612  6E14               	movwf	(___fleq@ff1+3)^(0+1280),c
 21215   015614                     l6887:
 21216   015614  0E00               	movlw	0
 21217   015616  1415               	andwf	___fleq@ff2^(0+1280),w,c
 21218   015618  6E19               	movwf	??___fleq^(0+1280),c
 21219   01561A  0E00               	movlw	0
 21220   01561C  1416               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 21221   01561E  6E1A               	movwf	(??___fleq+1)^(0+1280),c
 21222   015620  0E80               	movlw	128
 21223   015622  1417               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 21224   015624  6E1B               	movwf	(??___fleq+2)^(0+1280),c
 21225   015626  0E7F               	movlw	127
 21226   015628  1418               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 21227   01562A  6E1C               	movwf	(??___fleq+3)^(0+1280),c
 21228   01562C  5019               	movf	??___fleq^(0+1280),w,c
 21229   01562E  101A               	iorwf	(??___fleq+1)^(0+1280),w,c
 21230   015630  101B               	iorwf	(??___fleq+2)^(0+1280),w,c
 21231   015632  101C               	iorwf	(??___fleq+3)^(0+1280),w,c
 21232   015634  A4D8               	btfss	status,2,c
 21233   015636  EF1F  F0AB         	goto	u5281
 21234   01563A  EF21  F0AB         	goto	u5280
 21235   01563E                     u5281:
 21236   01563E  EF29  F0AB         	goto	l6891
 21237   015642                     u5280:
 21238   015642  0E00               	movlw	0
 21239   015644  6E15               	movwf	___fleq@ff2^(0+1280),c
 21240   015646  0E00               	movlw	0
 21241   015648  6E16               	movwf	(___fleq@ff2+1)^(0+1280),c
 21242   01564A  0E00               	movlw	0
 21243   01564C  6E17               	movwf	(___fleq@ff2+2)^(0+1280),c
 21244   01564E  0E00               	movlw	0
 21245   015650  6E18               	movwf	(___fleq@ff2+3)^(0+1280),c
 21246   015652                     l6891:
 21247   015652  5015               	movf	___fleq@ff2^(0+1280),w,c
 21248   015654  1811               	xorwf	___fleq@ff1^(0+1280),w,c
 21249   015656  E10F               	bnz	u5290
 21250   015658  5016               	movf	(___fleq@ff2+1)^(0+1280),w,c
 21251   01565A  1812               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 21252   01565C  E10C               	bnz	u5290
 21253   01565E  5017               	movf	(___fleq@ff2+2)^(0+1280),w,c
 21254   015660  1813               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 21255   015662  E109               	bnz	u5290
 21256   015664  5018               	movf	(___fleq@ff2+3)^(0+1280),w,c
 21257   015666  1814               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 21258   015668  B4D8               	btfsc	status,2,c
 21259   01566A  EF39  F0AB         	goto	u5291
 21260   01566E  EF3B  F0AB         	goto	u5290
 21261   015672                     u5291:
 21262   015672  EF3E  F0AB         	goto	l6895
 21263   015676                     u5290:
 21264   015676  90D8               	bcf	status,0,c
 21265   015678  EF3F  F0AB         	goto	l1908
 21266   01567C                     l6895:
 21267   01567C  80D8               	bsf	status,0,c
 21268   01567E                     l1908:
 21269   01567E  0012               	return		;funcret
 21270   015680                     __end_of___fleq:
 21271                           	callstack 0
 21272                           
 21273 ;; *************** function _i2c_lcd_puts *****************
 21274 ;; Defined at:
 21275 ;;		line 147 in file "I2C_LCD.c"
 21276 ;; Parameters:    Size  Location     Type
 21277 ;;  str             2   31[COMRAM] PTR unsigned char 
 21278 ;;		 -> STR_23(16), main@alert_str(64), STR_2(23), STR_1(19), 
 21279 ;; Auto vars:     Size  Location     Type
 21280 ;;		None
 21281 ;; Return value:  Size  Location     Type
 21282 ;;                  1    wreg      void 
 21283 ;; Registers used:
 21284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21285 ;; Tracked objects:
 21286 ;;		On entry : 0/0
 21287 ;;		On exit  : 0/0
 21288 ;;		Unchanged: 0/0
 21289 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21294 ;;Total ram usage:        2 bytes
 21295 ;; Hardware stack levels used: 1
 21296 ;; Hardware stack levels required when called: 11
 21297 ;; This function calls:
 21298 ;;		_i2c_lcd_write
 21299 ;; This function is called by:
 21300 ;;		_main
 21301 ;; This function uses a non-reentrant model
 21302 ;;
 21303                           
 21304                           	psect	text15
 21305   015D36                     __ptext15:
 21306                           	callstack 0
 21307   015D36                     _i2c_lcd_puts:
 21308                           	callstack 115
 21309   015D36                     
 21310                           ;I2C_LCD.c: 147: void i2c_lcd_puts(char *str);I2C_LCD.c: 148: {;I2C_LCD.c: 149:     whil
      +                          e(*str)
 21311   015D36  EFB2  F0AE         	goto	l8723
 21312   015D3A                     l8719:
 21313                           
 21314                           ;I2C_LCD.c: 150:     {;I2C_LCD.c: 151:         i2c_lcd_write(*str++);
 21315   015D3A  C520  F4F6         	movff	i2c_lcd_puts@str,tblptrl
 21316   015D3E  C521  F4F7         	movff	i2c_lcd_puts@str+1,tblptrh
 21317   015D42  0E00               	movlw	low (__mediumconst shr (0+16))
 21318   015D44  6EF8               	movwf	tblptru,c
 21319   015D46  0E25               	movlw	(high __ramtop+-1)
 21320   015D48  64F7               	cpfsgt	tblptrh,c
 21321   015D4A  D003               	bra	u7527
 21322   015D4C  0008               	tblrd		*
 21323   015D4E  50F5               	movf	tablat,w,c
 21324   015D50  D005               	bra	u7520
 21325   015D52                     u7527:
 21326   015D52  C4F6 F4E9          	movff	tblptrl,fsr0l
 21327   015D56  C4F7 F4EA          	movff	tblptrh,fsr0h
 21328   015D5A  50EF               	movf	indf0,w,c
 21329   015D5C                     u7520:
 21330   015D5C  ECD0  F0B3         	call	_i2c_lcd_write
 21331   015D60  4A20               	infsnz	i2c_lcd_puts@str^(0+1280),f,c
 21332   015D62  2A21               	incf	(i2c_lcd_puts@str+1)^(0+1280),f,c
 21333   015D64                     l8723:
 21334                           
 21335                           ;I2C_LCD.c: 149:     while(*str)
 21336   015D64  C520  F4F6         	movff	i2c_lcd_puts@str,tblptrl
 21337   015D68  C521  F4F7         	movff	i2c_lcd_puts@str+1,tblptrh
 21338   015D6C  0E00               	movlw	low (__mediumconst shr (0+16))
 21339   015D6E  6EF8               	movwf	tblptru,c
 21340   015D70  0E25               	movlw	(high __ramtop+-1)
 21341   015D72  64F7               	cpfsgt	tblptrh,c
 21342   015D74  D003               	bra	u7537
 21343   015D76  0008               	tblrd		*
 21344   015D78  50F5               	movf	tablat,w,c
 21345   015D7A  D005               	bra	u7530
 21346   015D7C                     u7537:
 21347   015D7C  C4F6 F4E9          	movff	tblptrl,fsr0l
 21348   015D80  C4F7 F4EA          	movff	tblptrh,fsr0h
 21349   015D84  50EF               	movf	indf0,w,c
 21350   015D86                     u7530:
 21351   015D86  0900               	iorlw	0
 21352   015D88  A4D8               	btfss	status,2,c
 21353   015D8A  EFC9  F0AE         	goto	u7541
 21354   015D8E  EFCB  F0AE         	goto	u7540
 21355   015D92                     u7541:
 21356   015D92  EF9D  F0AE         	goto	l8719
 21357   015D96                     u7540:
 21358   015D96  0012               	return		;funcret
 21359   015D98                     __end_of_i2c_lcd_puts:
 21360                           	callstack 0
 21361                           
 21362 ;; *************** function _i2c_lcd_write *****************
 21363 ;; Defined at:
 21364 ;;		line 129 in file "I2C_LCD.c"
 21365 ;; Parameters:    Size  Location     Type
 21366 ;;  ch              1    wreg     unsigned char 
 21367 ;; Auto vars:     Size  Location     Type
 21368 ;;  ch              1   30[COMRAM] unsigned char 
 21369 ;; Return value:  Size  Location     Type
 21370 ;;                  1    wreg      void 
 21371 ;; Registers used:
 21372 ;;		wreg, status,2, status,0, cstack
 21373 ;; Tracked objects:
 21374 ;;		On entry : 0/0
 21375 ;;		On exit  : 0/0
 21376 ;;		Unchanged: 0/0
 21377 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21382 ;;Total ram usage:        1 bytes
 21383 ;; Hardware stack levels used: 1
 21384 ;; Hardware stack levels required when called: 10
 21385 ;; This function calls:
 21386 ;;		__lcd_send
 21387 ;; This function is called by:
 21388 ;;		_i2c_lcd_puts
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           	psect	text16
 21393   0167A0                     __ptext16:
 21394                           	callstack 0
 21395   0167A0                     _i2c_lcd_write:
 21396                           	callstack 115
 21397                           
 21398                           ;incstack = 0
 21399                           ;i2c_lcd_write@ch stored from wreg
 21400   0167A0  6E1F               	movwf	i2c_lcd_write@ch^(0+1280),c
 21401   0167A2                     
 21402                           ;I2C_LCD.c: 129: void i2c_lcd_write(uint8_t ch);I2C_LCD.c: 130: {;I2C_LCD.c: 131:     _l
      +                          cd_send(ch, 1);
 21403   0167A2  0E01               	movlw	1
 21404   0167A4  6E1D               	movwf	__lcd_send@mode^(0+1280),c
 21405   0167A6  501F               	movf	i2c_lcd_write@ch^(0+1280),w,c
 21406   0167A8  EC63  F0B1         	call	__lcd_send
 21407   0167AC                     
 21408                           ;I2C_LCD.c: 132:     _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21409   0167AC  0EA0               	movlw	160
 21410   0167AE                     u10437:
 21411   0167AE  D000               	nop2	
 21412   0167B0  2EE8               	decfsz	wreg,f,c
 21413   0167B2  D7FD               	bra	u10437
 21414   0167B4  0012               	return		;funcret
 21415   0167B6                     __end_of_i2c_lcd_write:
 21416                           	callstack 0
 21417                           
 21418 ;; *************** function _i2c_lcd_init *****************
 21419 ;; Defined at:
 21420 ;;		line 73 in file "I2C_LCD.c"
 21421 ;; Parameters:    Size  Location     Type
 21422 ;;		None
 21423 ;; Auto vars:     Size  Location     Type
 21424 ;;		None
 21425 ;; Return value:  Size  Location     Type
 21426 ;;                  1    wreg      void 
 21427 ;; Registers used:
 21428 ;;		wreg, status,2, status,0, cstack
 21429 ;; Tracked objects:
 21430 ;;		On entry : 0/0
 21431 ;;		On exit  : 0/0
 21432 ;;		Unchanged: 0/0
 21433 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21438 ;;Total ram usage:        2 bytes
 21439 ;; Hardware stack levels used: 1
 21440 ;; Hardware stack levels required when called: 12
 21441 ;; This function calls:
 21442 ;;		_PCF_Wr
 21443 ;;		_i2c_lcd_clear
 21444 ;;		_i2c_lcd_command
 21445 ;; This function is called by:
 21446 ;;		_main
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text17
 21451   0149E4                     __ptext17:
 21452                           	callstack 0
 21453   0149E4                     _i2c_lcd_init:
 21454                           	callstack 114
 21455   0149E4                     
 21456                           ;I2C_LCD.c: 76:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 21457   0149E4  0E09               	movlw	9
 21458   0149E6  6E23               	movwf	(??_i2c_lcd_init+1)^(0+1280),c
 21459   0149E8  0E1E               	movlw	30
 21460   0149EA  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21461   0149EC  0EE4               	movlw	228
 21462   0149EE                     u10447:
 21463   0149EE  2EE8               	decfsz	wreg,f,c
 21464   0149F0  D7FE               	bra	u10447
 21465   0149F2  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21466   0149F4  D7FC               	bra	u10447
 21467   0149F6  2E23               	decfsz	(??_i2c_lcd_init+1)^(0+1280),f,c
 21468   0149F8  D7FA               	bra	u10447
 21469   0149FA  D000               	nop2	
 21470   0149FC                     
 21471                           ;I2C_LCD.c: 79:     word = 0;
 21472   0149FC  6A49               	clrf	_word^(0+1280),c
 21473   0149FE                     
 21474                           ;I2C_LCD.c: 80:     PCF_Wr(word);
 21475   0149FE  5049               	movf	_word^(0+1280),w,c
 21476   014A00  EC3C  F0AD         	call	_PCF_Wr
 21477   014A04                     
 21478                           ;I2C_LCD.c: 81:     _delay((unsigned long)((50)*(64000000UL/4000.0)));
 21479   014A04  0E05               	movlw	5
 21480   014A06  6E23               	movwf	(??_i2c_lcd_init+1)^(0+1280),c
 21481   014A08  0E0F               	movlw	15
 21482   014A0A  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21483   014A0C  0EF1               	movlw	241
 21484   014A0E                     u10457:
 21485   014A0E  2EE8               	decfsz	wreg,f,c
 21486   014A10  D7FE               	bra	u10457
 21487   014A12  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21488   014A14  D7FC               	bra	u10457
 21489   014A16  2E23               	decfsz	(??_i2c_lcd_init+1)^(0+1280),f,c
 21490   014A18  D7FA               	bra	u10457
 21491   014A1A  0000               	nop	
 21492   014A1C                     
 21493                           ;I2C_LCD.c: 85:     _delay((unsigned long)((50)*(64000000UL/4000.0)));
 21494   014A1C  0E05               	movlw	5
 21495   014A1E  6E23               	movwf	(??_i2c_lcd_init+1)^(0+1280),c
 21496   014A20  0E0F               	movlw	15
 21497   014A22  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21498   014A24  0EF1               	movlw	241
 21499   014A26                     u10467:
 21500   014A26  2EE8               	decfsz	wreg,f,c
 21501   014A28  D7FE               	bra	u10467
 21502   014A2A  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21503   014A2C  D7FC               	bra	u10467
 21504   014A2E  2E23               	decfsz	(??_i2c_lcd_init+1)^(0+1280),f,c
 21505   014A30  D7FA               	bra	u10467
 21506   014A32  0000               	nop	
 21507   014A34                     
 21508                           ;I2C_LCD.c: 88:     word = 0x30;
 21509   014A34  0E30               	movlw	48
 21510   014A36  6E49               	movwf	_word^(0+1280),c
 21511   014A38                     
 21512                           ;I2C_LCD.c: 89:     word |= (1 << 3);
 21513   014A38  8649               	bsf	_word^(0+1280),3,c
 21514   014A3A                     
 21515                           ;I2C_LCD.c: 90:     PCF_Wr(word);
 21516   014A3A  5049               	movf	_word^(0+1280),w,c
 21517   014A3C  EC3C  F0AD         	call	_PCF_Wr
 21518   014A40                     
 21519                           ;I2C_LCD.c: 91:     _delay((unsigned long)((5)*(64000000UL/4000.0)));
 21520   014A40  0E68               	movlw	104
 21521   014A42  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21522   014A44  0EE4               	movlw	228
 21523   014A46                     u10477:
 21524   014A46  2EE8               	decfsz	wreg,f,c
 21525   014A48  D7FE               	bra	u10477
 21526   014A4A  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21527   014A4C  D7FC               	bra	u10477
 21528   014A4E  D000               	nop2	
 21529   014A50                     
 21530                           ;I2C_LCD.c: 93:     word |= (1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(64000000
      +                          UL/4000000.0)));
 21531   014A50  8449               	bsf	_word^(0+1280),2,c
 21532   014A52  5049               	movf	_word^(0+1280),w,c
 21533   014A54  EC3C  F0AD         	call	_PCF_Wr
 21534   014A58  0E05               	movlw	5
 21535   014A5A                     u10487:
 21536   014A5A  2EE8               	decfsz	wreg,f,c
 21537   014A5C  D7FE               	bra	u10487
 21538   014A5E  0000               	nop	
 21539   014A60                     
 21540                           ;I2C_LCD.c: 94:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((5)*(6400000
      +                          0UL/4000.0)));
 21541   014A60  9449               	bcf	_word^(0+1280),2,c
 21542   014A62  5049               	movf	_word^(0+1280),w,c
 21543   014A64  EC3C  F0AD         	call	_PCF_Wr
 21544   014A68  0E68               	movlw	104
 21545   014A6A  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21546   014A6C  0EE4               	movlw	228
 21547   014A6E                     u10497:
 21548   014A6E  2EE8               	decfsz	wreg,f,c
 21549   014A70  D7FE               	bra	u10497
 21550   014A72  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21551   014A74  D7FC               	bra	u10497
 21552   014A76  D000               	nop2	
 21553   014A78                     
 21554                           ;I2C_LCD.c: 97:     word |= (1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(64000000
      +                          UL/4000000.0)));
 21555   014A78  8449               	bsf	_word^(0+1280),2,c
 21556   014A7A  5049               	movf	_word^(0+1280),w,c
 21557   014A7C  EC3C  F0AD         	call	_PCF_Wr
 21558   014A80  0E05               	movlw	5
 21559   014A82                     u10507:
 21560   014A82  2EE8               	decfsz	wreg,f,c
 21561   014A84  D7FE               	bra	u10507
 21562   014A86  0000               	nop	
 21563   014A88                     
 21564                           ;I2C_LCD.c: 98:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((200)*(64000
      +                          000UL/4000000.0)));
 21565   014A88  9449               	bcf	_word^(0+1280),2,c
 21566   014A8A  5049               	movf	_word^(0+1280),w,c
 21567   014A8C  EC3C  F0AD         	call	_PCF_Wr
 21568   014A90  0E05               	movlw	5
 21569   014A92  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21570   014A94  0E26               	movlw	38
 21571   014A96                     u10517:
 21572   014A96  2EE8               	decfsz	wreg,f,c
 21573   014A98  D7FE               	bra	u10517
 21574   014A9A  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21575   014A9C  D7FC               	bra	u10517
 21576   014A9E  D000               	nop2	
 21577   014AA0                     
 21578                           ;I2C_LCD.c: 101:     word |= (1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(6400000
      +                          0UL/4000000.0)));
 21579   014AA0  8449               	bsf	_word^(0+1280),2,c
 21580   014AA2  5049               	movf	_word^(0+1280),w,c
 21581   014AA4  EC3C  F0AD         	call	_PCF_Wr
 21582   014AA8  0E05               	movlw	5
 21583   014AAA                     u10527:
 21584   014AAA  2EE8               	decfsz	wreg,f,c
 21585   014AAC  D7FE               	bra	u10527
 21586   014AAE  0000               	nop	
 21587   014AB0                     
 21588                           ;I2C_LCD.c: 102:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((200)*(6400
      +                          0000UL/4000000.0)));
 21589   014AB0  9449               	bcf	_word^(0+1280),2,c
 21590   014AB2  5049               	movf	_word^(0+1280),w,c
 21591   014AB4  EC3C  F0AD         	call	_PCF_Wr
 21592   014AB8  0E05               	movlw	5
 21593   014ABA  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21594   014ABC  0E26               	movlw	38
 21595   014ABE                     u10537:
 21596   014ABE  2EE8               	decfsz	wreg,f,c
 21597   014AC0  D7FE               	bra	u10537
 21598   014AC2  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21599   014AC4  D7FC               	bra	u10537
 21600   014AC6  D000               	nop2	
 21601   014AC8                     
 21602                           ;I2C_LCD.c: 105:     word = 0x20;
 21603   014AC8  0E20               	movlw	32
 21604   014ACA  6E49               	movwf	_word^(0+1280),c
 21605                           
 21606                           ;I2C_LCD.c: 106:     word |= (1 << 3);
 21607   014ACC  8649               	bsf	_word^(0+1280),3,c
 21608   014ACE                     
 21609                           ;I2C_LCD.c: 107:     PCF_Wr(word);
 21610   014ACE  5049               	movf	_word^(0+1280),w,c
 21611   014AD0  EC3C  F0AD         	call	_PCF_Wr
 21612   014AD4                     
 21613                           ;I2C_LCD.c: 108:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 21614   014AD4  0E05               	movlw	5
 21615   014AD6                     u10547:
 21616   014AD6  2EE8               	decfsz	wreg,f,c
 21617   014AD8  D7FE               	bra	u10547
 21618   014ADA  0000               	nop	
 21619   014ADC                     
 21620                           ;I2C_LCD.c: 110:     word |= (1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(6400000
      +                          0UL/4000000.0)));
 21621   014ADC  8449               	bsf	_word^(0+1280),2,c
 21622   014ADE  5049               	movf	_word^(0+1280),w,c
 21623   014AE0  EC3C  F0AD         	call	_PCF_Wr
 21624   014AE4  0E05               	movlw	5
 21625   014AE6                     u10557:
 21626   014AE6  2EE8               	decfsz	wreg,f,c
 21627   014AE8  D7FE               	bra	u10557
 21628   014AEA  0000               	nop	
 21629   014AEC                     
 21630                           ;I2C_LCD.c: 111:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((200)*(6400
      +                          0000UL/4000000.0)));
 21631   014AEC  9449               	bcf	_word^(0+1280),2,c
 21632   014AEE  5049               	movf	_word^(0+1280),w,c
 21633   014AF0  EC3C  F0AD         	call	_PCF_Wr
 21634   014AF4  0E05               	movlw	5
 21635   014AF6  6E22               	movwf	??_i2c_lcd_init^(0+1280),c
 21636   014AF8  0E26               	movlw	38
 21637   014AFA                     u10567:
 21638   014AFA  2EE8               	decfsz	wreg,f,c
 21639   014AFC  D7FE               	bra	u10567
 21640   014AFE  2E22               	decfsz	??_i2c_lcd_init^(0+1280),f,c
 21641   014B00  D7FC               	bra	u10567
 21642   014B02  D000               	nop2	
 21643   014B04                     
 21644                           ;I2C_LCD.c: 114:     i2c_lcd_command(0x20 | 0x08 | 0x00);
 21645   014B04  0E28               	movlw	40
 21646   014B06  EC75  F0B0         	call	_i2c_lcd_command
 21647   014B0A                     
 21648                           ;I2C_LCD.c: 115:     _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21649   014B0A  0EA0               	movlw	160
 21650   014B0C                     u10577:
 21651   014B0C  D000               	nop2	
 21652   014B0E  2EE8               	decfsz	wreg,f,c
 21653   014B10  D7FD               	bra	u10577
 21654   014B12                     
 21655                           ;I2C_LCD.c: 117:     i2c_lcd_command(0x08 | 0x00);
 21656   014B12  0E08               	movlw	8
 21657   014B14  EC75  F0B0         	call	_i2c_lcd_command
 21658   014B18                     
 21659                           ;I2C_LCD.c: 118:     _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21660   014B18  0EA0               	movlw	160
 21661   014B1A                     u10587:
 21662   014B1A  D000               	nop2	
 21663   014B1C  2EE8               	decfsz	wreg,f,c
 21664   014B1E  D7FD               	bra	u10587
 21665   014B20                     
 21666                           ;I2C_LCD.c: 120:     i2c_lcd_clear();
 21667   014B20  ECDB  F0B3         	call	_i2c_lcd_clear	;wreg free
 21668   014B24                     
 21669                           ;I2C_LCD.c: 122:     i2c_lcd_command(0x04 | 0x00 | 0x00);
 21670   014B24  0E04               	movlw	4
 21671   014B26  EC75  F0B0         	call	_i2c_lcd_command
 21672   014B2A                     
 21673                           ;I2C_LCD.c: 123:     _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21674   014B2A  0EA0               	movlw	160
 21675   014B2C                     u10597:
 21676   014B2C  D000               	nop2	
 21677   014B2E  2EE8               	decfsz	wreg,f,c
 21678   014B30  D7FD               	bra	u10597
 21679   014B32                     
 21680                           ;I2C_LCD.c: 125:     i2c_lcd_command(0x08 | 0x04 | 0x00 | 0x00);
 21681   014B32  0E0C               	movlw	12
 21682   014B34  EC75  F0B0         	call	_i2c_lcd_command
 21683   014B38                     
 21684                           ;I2C_LCD.c: 126:     _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21685   014B38  0EA0               	movlw	160
 21686   014B3A                     u10607:
 21687   014B3A  D000               	nop2	
 21688   014B3C  2EE8               	decfsz	wreg,f,c
 21689   014B3E  D7FD               	bra	u10607
 21690   014B40  0012               	return		;funcret
 21691   014B42                     __end_of_i2c_lcd_init:
 21692                           	callstack 0
 21693                           
 21694 ;; *************** function _i2c_lcd_clear *****************
 21695 ;; Defined at:
 21696 ;;		line 155 in file "I2C_LCD.c"
 21697 ;; Parameters:    Size  Location     Type
 21698 ;;		None
 21699 ;; Auto vars:     Size  Location     Type
 21700 ;;		None
 21701 ;; Return value:  Size  Location     Type
 21702 ;;                  1    wreg      void 
 21703 ;; Registers used:
 21704 ;;		wreg, status,2, status,0, cstack
 21705 ;; Tracked objects:
 21706 ;;		On entry : 0/0
 21707 ;;		On exit  : 0/0
 21708 ;;		Unchanged: 0/0
 21709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21713 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21714 ;;Total ram usage:        1 bytes
 21715 ;; Hardware stack levels used: 1
 21716 ;; Hardware stack levels required when called: 11
 21717 ;; This function calls:
 21718 ;;		_i2c_lcd_command
 21719 ;; This function is called by:
 21720 ;;		_main
 21721 ;;		_i2c_lcd_init
 21722 ;; This function uses a non-reentrant model
 21723 ;;
 21724                           
 21725                           	psect	text18
 21726   0167B6                     __ptext18:
 21727                           	callstack 0
 21728   0167B6                     _i2c_lcd_clear:
 21729                           	callstack 114
 21730   0167B6                     
 21731                           ;I2C_LCD.c: 157:     i2c_lcd_command(0x01);
 21732   0167B6  0E01               	movlw	1
 21733   0167B8  EC75  F0B0         	call	_i2c_lcd_command
 21734   0167BC                     
 21735                           ;I2C_LCD.c: 158:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
 21736   0167BC  0E2A               	movlw	42
 21737   0167BE  6E21               	movwf	??_i2c_lcd_clear^(0+1280),c
 21738   0167C0  0E8E               	movlw	142
 21739   0167C2                     u10617:
 21740   0167C2  2EE8               	decfsz	wreg,f,c
 21741   0167C4  D7FE               	bra	u10617
 21742   0167C6  2E21               	decfsz	??_i2c_lcd_clear^(0+1280),f,c
 21743   0167C8  D7FC               	bra	u10617
 21744   0167CA  0012               	return		;funcret
 21745   0167CC                     __end_of_i2c_lcd_clear:
 21746                           	callstack 0
 21747                           
 21748 ;; *************** function _i2c_lcd_goto *****************
 21749 ;; Defined at:
 21750 ;;		line 161 in file "I2C_LCD.c"
 21751 ;; Parameters:    Size  Location     Type
 21752 ;;  col             1    wreg     unsigned char 
 21753 ;;  row             1   32[COMRAM] unsigned char 
 21754 ;; Auto vars:     Size  Location     Type
 21755 ;;  col             1   37[COMRAM] unsigned char 
 21756 ;;  row_offsets     4   33[COMRAM] unsigned char [4]
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      void 
 21759 ;; Registers used:
 21760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21767 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21770 ;;Total ram usage:        6 bytes
 21771 ;; Hardware stack levels used: 1
 21772 ;; Hardware stack levels required when called: 11
 21773 ;; This function calls:
 21774 ;;		_i2c_lcd_command
 21775 ;; This function is called by:
 21776 ;;		_main
 21777 ;; This function uses a non-reentrant model
 21778 ;;
 21779                           
 21780                           	psect	text19
 21781   0160A0                     __ptext19:
 21782                           	callstack 0
 21783   0160A0                     _i2c_lcd_goto:
 21784                           	callstack 115
 21785                           
 21786                           ;incstack = 0
 21787                           ;i2c_lcd_goto@col stored from wreg
 21788   0160A0  6E26               	movwf	i2c_lcd_goto@col^(0+1280),c
 21789   0160A2                     
 21790                           ;I2C_LCD.c: 161: void i2c_lcd_goto(uint8_t col, uint8_t row);I2C_LCD.c: 162: {;I2C_LCD.c
      +                          : 163:     uint8_t row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
 21791   0160A2  C6E6  F522         	movff	i2c_lcd_goto@F17405,i2c_lcd_goto@row_offsets
 21792   0160A6  C6E7  F523         	movff	i2c_lcd_goto@F17405+1,i2c_lcd_goto@row_offsets+1
 21793   0160AA  C6E8  F524         	movff	i2c_lcd_goto@F17405+2,i2c_lcd_goto@row_offsets+2
 21794   0160AE  C6E9  F525         	movff	i2c_lcd_goto@F17405+3,i2c_lcd_goto@row_offsets+3
 21795   0160B2                     
 21796                           ;I2C_LCD.c: 164:     if(row < 4 && col < 20) {
 21797   0160B2  0E04               	movlw	4
 21798   0160B4  6021               	cpfslt	i2c_lcd_goto@row^(0+1280),c
 21799   0160B6  EF5F  F0B0         	goto	u7501
 21800   0160BA  EF61  F0B0         	goto	u7500
 21801   0160BE                     u7501:
 21802   0160BE  EF74  F0B0         	goto	l1187
 21803   0160C2                     u7500:
 21804   0160C2  0E14               	movlw	20
 21805   0160C4  6026               	cpfslt	i2c_lcd_goto@col^(0+1280),c
 21806   0160C6  EF67  F0B0         	goto	u7511
 21807   0160CA  EF69  F0B0         	goto	u7510
 21808   0160CE                     u7511:
 21809   0160CE  EF74  F0B0         	goto	l1187
 21810   0160D2                     u7510:
 21811   0160D2                     
 21812                           ;I2C_LCD.c: 165:         i2c_lcd_command(0x80 | (col + row_offsets[row]));
 21813   0160D2  0E22               	movlw	low i2c_lcd_goto@row_offsets
 21814   0160D4  2421               	addwf	i2c_lcd_goto@row^(0+1280),w,c
 21815   0160D6  6ED9               	movwf	fsr2l,c
 21816   0160D8  6ADA               	clrf	fsr2h,c
 21817   0160DA  0E05               	movlw	high i2c_lcd_goto@row_offsets
 21818   0160DC  22DA               	addwfc	fsr2h,f,c
 21819   0160DE  50DF               	movf	indf2,w,c
 21820   0160E0  2426               	addwf	i2c_lcd_goto@col^(0+1280),w,c
 21821   0160E2  0980               	iorlw	128
 21822   0160E4  EC75  F0B0         	call	_i2c_lcd_command
 21823   0160E8                     l1187:
 21824   0160E8  0012               	return		;funcret
 21825   0160EA                     __end_of_i2c_lcd_goto:
 21826                           	callstack 0
 21827                           
 21828 ;; *************** function _i2c_lcd_command *****************
 21829 ;; Defined at:
 21830 ;;		line 135 in file "I2C_LCD.c"
 21831 ;; Parameters:    Size  Location     Type
 21832 ;;  cmd             1    wreg     unsigned char 
 21833 ;; Auto vars:     Size  Location     Type
 21834 ;;  cmd             1   31[COMRAM] unsigned char 
 21835 ;; Return value:  Size  Location     Type
 21836 ;;                  1    wreg      void 
 21837 ;; Registers used:
 21838 ;;		wreg, status,2, status,0, cstack
 21839 ;; Tracked objects:
 21840 ;;		On entry : 0/0
 21841 ;;		On exit  : 0/0
 21842 ;;		Unchanged: 0/0
 21843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21848 ;;Total ram usage:        2 bytes
 21849 ;; Hardware stack levels used: 1
 21850 ;; Hardware stack levels required when called: 10
 21851 ;; This function calls:
 21852 ;;		__lcd_send
 21853 ;; This function is called by:
 21854 ;;		_i2c_lcd_init
 21855 ;;		_i2c_lcd_clear
 21856 ;;		_i2c_lcd_goto
 21857 ;;		_i2c_lcd_enable_display
 21858 ;;		_i2c_lcd_disable_display
 21859 ;;		_i2c_lcd_enable_blink
 21860 ;;		_i2c_lcd_disable_blink
 21861 ;;		_i2c_lcd_enable_cursor
 21862 ;;		_i2c_lcd_disable_cursor
 21863 ;;		_i2c_lcd_scroll_left
 21864 ;;		_i2c_lcd_scroll_right
 21865 ;; This function uses a non-reentrant model
 21866 ;;
 21867                           
 21868                           	psect	text20
 21869   0160EA                     __ptext20:
 21870                           	callstack 0
 21871   0160EA                     _i2c_lcd_command:
 21872                           	callstack 115
 21873                           
 21874                           ;incstack = 0
 21875                           ;i2c_lcd_command@cmd stored from wreg
 21876   0160EA  6E20               	movwf	i2c_lcd_command@cmd^(0+1280),c
 21877   0160EC                     
 21878                           ;I2C_LCD.c: 135: void i2c_lcd_command(uint8_t cmd);I2C_LCD.c: 136: {;I2C_LCD.c: 137:    
      +                           _lcd_send(cmd, 0);
 21879   0160EC  0E00               	movlw	0
 21880   0160EE  6E1D               	movwf	__lcd_send@mode^(0+1280),c
 21881   0160F0  5020               	movf	i2c_lcd_command@cmd^(0+1280),w,c
 21882   0160F2  EC63  F0B1         	call	__lcd_send
 21883   0160F6                     
 21884                           ;I2C_LCD.c: 140:     if(cmd == 0x01 || cmd == 0x02) {
 21885   0160F6  0420               	decf	i2c_lcd_command@cmd^(0+1280),w,c
 21886   0160F8  B4D8               	btfsc	status,2,c
 21887   0160FA  EF81  F0B0         	goto	u6171
 21888   0160FE  EF83  F0B0         	goto	u6170
 21889   016102                     u6171:
 21890   016102  EF8C  F0B0         	goto	l7457
 21891   016106                     u6170:
 21892   016106  0E02               	movlw	2
 21893   016108  1820               	xorwf	i2c_lcd_command@cmd^(0+1280),w,c
 21894   01610A  A4D8               	btfss	status,2,c
 21895   01610C  EF8A  F0B0         	goto	u6181
 21896   016110  EF8C  F0B0         	goto	u6180
 21897   016114                     u6181:
 21898   016114  EF95  F0B0         	goto	l7459
 21899   016118                     u6180:
 21900   016118                     l7457:
 21901                           
 21902                           ;I2C_LCD.c: 141:         _delay((unsigned long)((2)*(64000000UL/4000.0)));
 21903   016118  0E2A               	movlw	42
 21904   01611A  6E1F               	movwf	??_i2c_lcd_command^(0+1280),c
 21905   01611C  0E8E               	movlw	142
 21906   01611E                     u10627:
 21907   01611E  2EE8               	decfsz	wreg,f,c
 21908   016120  D7FE               	bra	u10627
 21909   016122  2E1F               	decfsz	??_i2c_lcd_command^(0+1280),f,c
 21910   016124  D7FC               	bra	u10627
 21911                           
 21912                           ;I2C_LCD.c: 142:     } else {
 21913   016126  EF99  F0B0         	goto	l1172
 21914   01612A                     l7459:
 21915                           
 21916                           ;I2C_LCD.c: 143:         _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 21917   01612A  0EA0               	movlw	160
 21918   01612C                     u10637:
 21919   01612C  D000               	nop2	
 21920   01612E  2EE8               	decfsz	wreg,f,c
 21921   016130  D7FD               	bra	u10637
 21922   016132                     l1172:
 21923   016132  0012               	return		;funcret
 21924   016134                     __end_of_i2c_lcd_command:
 21925                           	callstack 0
 21926                           
 21927 ;; *************** function __lcd_send *****************
 21928 ;; Defined at:
 21929 ;;		line 51 in file "I2C_LCD.c"
 21930 ;; Parameters:    Size  Location     Type
 21931 ;;  value           1    wreg     unsigned char 
 21932 ;;  mode            1   28[COMRAM] unsigned char 
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;  value           1   29[COMRAM] unsigned char 
 21935 ;; Return value:  Size  Location     Type
 21936 ;;                  1    wreg      void 
 21937 ;; Registers used:
 21938 ;;		wreg, status,2, status,0, cstack
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21944 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;Total ram usage:        2 bytes
 21949 ;; Hardware stack levels used: 1
 21950 ;; Hardware stack levels required when called: 9
 21951 ;; This function calls:
 21952 ;;		_PCF_Wr
 21953 ;;		__write_nibble
 21954 ;; This function is called by:
 21955 ;;		_i2c_lcd_write
 21956 ;;		_i2c_lcd_command
 21957 ;; This function uses a non-reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text21
 21961   0162C6                     __ptext21:
 21962                           	callstack 0
 21963   0162C6                     __lcd_send:
 21964                           	callstack 115
 21965                           
 21966                           ;incstack = 0
 21967                           ;__lcd_send@value stored from wreg
 21968   0162C6  6E1E               	movwf	__lcd_send@value^(0+1280),c
 21969   0162C8                     
 21970                           ;I2C_LCD.c: 51: static void _lcd_send(uint8_t value, uint8_t mode);I2C_LCD.c: 52: {;I2C_
      +                          LCD.c: 54:     if (mode == 0)
 21971   0162C8  501D               	movf	__lcd_send@mode^(0+1280),w,c
 21972   0162CA  A4D8               	btfss	status,2,c
 21973   0162CC  EF6A  F0B1         	goto	u5651
 21974   0162D0  EF6C  F0B1         	goto	u5650
 21975   0162D4                     u5651:
 21976   0162D4  EF6F  F0B1         	goto	l7063
 21977   0162D8                     u5650:
 21978   0162D8                     
 21979                           ;I2C_LCD.c: 55:         word &= ~(1 << 0);
 21980   0162D8  9049               	bcf	_word^(0+1280),0,c
 21981   0162DA  EF70  F0B1         	goto	l1158
 21982   0162DE                     l7063:
 21983                           
 21984                           ;I2C_LCD.c: 57:         word |= (1 << 0);
 21985   0162DE  8049               	bsf	_word^(0+1280),0,c
 21986   0162E0                     l1158:
 21987                           
 21988                           ;I2C_LCD.c: 60:     word &= ~(1 << 1);
 21989   0162E0  9249               	bcf	_word^(0+1280),1,c
 21990   0162E2                     
 21991                           ;I2C_LCD.c: 61:     PCF_Wr(word);
 21992   0162E2  5049               	movf	_word^(0+1280),w,c
 21993   0162E4  EC3C  F0AD         	call	_PCF_Wr
 21994   0162E8                     
 21995                           ;I2C_LCD.c: 62:     _delay((unsigned long)((1)*(64000000UL/4000000.0)));
 21996   0162E8  0E05               	movlw	5
 21997   0162EA                     u10647:
 21998   0162EA  2EE8               	decfsz	wreg,f,c
 21999   0162EC  D7FE               	bra	u10647
 22000   0162EE  0000               	nop	
 22001   0162F0                     
 22002                           ;I2C_LCD.c: 65:     _write_nibble(value >> 4);
 22003   0162F0  381E               	swapf	__lcd_send@value^(0+1280),w,c
 22004   0162F2  0B0F               	andlw	15
 22005   0162F4  EC73  F0AC         	call	__write_nibble
 22006   0162F8                     
 22007                           ;I2C_LCD.c: 66:     _write_nibble(value & 0x0F);
 22008   0162F8  501E               	movf	__lcd_send@value^(0+1280),w,c
 22009   0162FA  0B0F               	andlw	15
 22010   0162FC  EC73  F0AC         	call	__write_nibble
 22011   016300  0012               	return		;funcret
 22012   016302                     __end_of__lcd_send:
 22013                           	callstack 0
 22014                           
 22015 ;; *************** function __write_nibble *****************
 22016 ;; Defined at:
 22017 ;;		line 36 in file "I2C_LCD.c"
 22018 ;; Parameters:    Size  Location     Type
 22019 ;;  nibble          1    wreg     unsigned char 
 22020 ;; Auto vars:     Size  Location     Type
 22021 ;;  nibble          1   27[COMRAM] unsigned char 
 22022 ;; Return value:  Size  Location     Type
 22023 ;;                  1    wreg      void 
 22024 ;; Registers used:
 22025 ;;		wreg, status,2, status,0, cstack
 22026 ;; Tracked objects:
 22027 ;;		On entry : 0/0
 22028 ;;		On exit  : 0/0
 22029 ;;		Unchanged: 0/0
 22030 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22035 ;;Total ram usage:        1 bytes
 22036 ;; Hardware stack levels used: 1
 22037 ;; Hardware stack levels required when called: 8
 22038 ;; This function calls:
 22039 ;;		_PCF_Wr
 22040 ;; This function is called by:
 22041 ;;		__lcd_send
 22042 ;; This function uses a non-reentrant model
 22043 ;;
 22044                           
 22045                           	psect	text22
 22046   0158E6                     __ptext22:
 22047                           	callstack 0
 22048   0158E6                     __write_nibble:
 22049                           	callstack 115
 22050                           
 22051                           ;incstack = 0
 22052                           ;__write_nibble@nibble stored from wreg
 22053   0158E6  6E1C               	movwf	__write_nibble@nibble^(0+1280),c
 22054   0158E8                     
 22055                           ;I2C_LCD.c: 36: static void _write_nibble(uint8_t nibble);I2C_LCD.c: 37: {;I2C_LCD.c: 39
      +                          :     if (nibble & 0x01) word |= (1 << 4); else word &= ~(1 << 4);
 22056   0158E8  A01C               	btfss	__write_nibble@nibble^(0+1280),0,c
 22057   0158EA  EF79  F0AC         	goto	u4801
 22058   0158EE  EF7B  F0AC         	goto	u4800
 22059   0158F2                     u4801:
 22060   0158F2  EF7E  F0AC         	goto	l6571
 22061   0158F6                     u4800:
 22062   0158F6  8849               	bsf	_word^(0+1280),4,c
 22063   0158F8  EF7F  F0AC         	goto	l6573
 22064   0158FC                     l6571:
 22065   0158FC  9849               	bcf	_word^(0+1280),4,c
 22066   0158FE                     l6573:
 22067                           
 22068                           ;I2C_LCD.c: 40:     if (nibble & 0x02) word |= (1 << 5); else word &= ~(1 << 5);
 22069   0158FE  A21C               	btfss	__write_nibble@nibble^(0+1280),1,c
 22070   015900  EF84  F0AC         	goto	u4811
 22071   015904  EF86  F0AC         	goto	u4810
 22072   015908                     u4811:
 22073   015908  EF89  F0AC         	goto	l6577
 22074   01590C                     u4810:
 22075   01590C  8A49               	bsf	_word^(0+1280),5,c
 22076   01590E  EF8A  F0AC         	goto	l6579
 22077   015912                     l6577:
 22078   015912  9A49               	bcf	_word^(0+1280),5,c
 22079   015914                     l6579:
 22080                           
 22081                           ;I2C_LCD.c: 41:     if (nibble & 0x04) word |= (1 << 6); else word &= ~(1 << 6);
 22082   015914  A41C               	btfss	__write_nibble@nibble^(0+1280),2,c
 22083   015916  EF8F  F0AC         	goto	u4821
 22084   01591A  EF91  F0AC         	goto	u4820
 22085   01591E                     u4821:
 22086   01591E  EF94  F0AC         	goto	l6583
 22087   015922                     u4820:
 22088   015922  8C49               	bsf	_word^(0+1280),6,c
 22089   015924  EF95  F0AC         	goto	l6585
 22090   015928                     l6583:
 22091   015928  9C49               	bcf	_word^(0+1280),6,c
 22092   01592A                     l6585:
 22093                           
 22094                           ;I2C_LCD.c: 42:     if (nibble & 0x08) word |= (1 << 7); else word &= ~(1 << 7);
 22095   01592A  A61C               	btfss	__write_nibble@nibble^(0+1280),3,c
 22096   01592C  EF9A  F0AC         	goto	u4831
 22097   015930  EF9C  F0AC         	goto	u4830
 22098   015934                     u4831:
 22099   015934  EF9F  F0AC         	goto	l6589
 22100   015938                     u4830:
 22101   015938  8E49               	bsf	_word^(0+1280),7,c
 22102   01593A  EFA0  F0AC         	goto	l1153
 22103   01593E                     l6589:
 22104   01593E  9E49               	bcf	_word^(0+1280),7,c
 22105   015940                     l1153:
 22106                           
 22107                           ;I2C_LCD.c: 45:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(6400000
      +                          0UL/4000000.0)));
 22108   015940  9449               	bcf	_word^(0+1280),2,c
 22109   015942  5049               	movf	_word^(0+1280),w,c
 22110   015944  EC3C  F0AD         	call	_PCF_Wr
 22111   015948  0E05               	movlw	5
 22112   01594A                     u10657:
 22113   01594A  2EE8               	decfsz	wreg,f,c
 22114   01594C  D7FE               	bra	u10657
 22115   01594E  0000               	nop	
 22116   015950                     
 22117                           ;I2C_LCD.c: 46:     word |= (1 << 2); PCF_Wr(word); _delay((unsigned long)((1)*(64000000
      +                          UL/4000000.0)));
 22118   015950  8449               	bsf	_word^(0+1280),2,c
 22119   015952  5049               	movf	_word^(0+1280),w,c
 22120   015954  EC3C  F0AD         	call	_PCF_Wr
 22121   015958  0E05               	movlw	5
 22122   01595A                     u10667:
 22123   01595A  2EE8               	decfsz	wreg,f,c
 22124   01595C  D7FE               	bra	u10667
 22125   01595E  0000               	nop	
 22126   015960                     
 22127                           ;I2C_LCD.c: 47:     word &= ~(1 << 2); PCF_Wr(word); _delay((unsigned long)((50)*(640000
      +                          00UL/4000000.0)));
 22128   015960  9449               	bcf	_word^(0+1280),2,c
 22129   015962  5049               	movf	_word^(0+1280),w,c
 22130   015964  EC3C  F0AD         	call	_PCF_Wr
 22131   015968  0EA0               	movlw	160
 22132   01596A                     u10677:
 22133   01596A  D000               	nop2	
 22134   01596C  2EE8               	decfsz	wreg,f,c
 22135   01596E  D7FD               	bra	u10677
 22136   015970  0012               	return		;funcret
 22137   015972                     __end_of__write_nibble:
 22138                           	callstack 0
 22139                           
 22140 ;; *************** function _PCF_Wr *****************
 22141 ;; Defined at:
 22142 ;;		line 9 in file "I2C_LCD.c"
 22143 ;; Parameters:    Size  Location     Type
 22144 ;;  data            1    wreg     unsigned char 
 22145 ;; Auto vars:     Size  Location     Type
 22146 ;;  data            1   24[COMRAM] unsigned char 
 22147 ;;  tmp             1   26[COMRAM] unsigned char 
 22148 ;;  result          1   25[COMRAM] _Bool 
 22149 ;; Return value:  Size  Location     Type
 22150 ;;                  1    wreg      void 
 22151 ;; Registers used:
 22152 ;;		wreg, status,2, status,0, cstack
 22153 ;; Tracked objects:
 22154 ;;		On entry : 0/0
 22155 ;;		On exit  : 0/0
 22156 ;;		Unchanged: 0/0
 22157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22159 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22162 ;;Total ram usage:        3 bytes
 22163 ;; Hardware stack levels used: 1
 22164 ;; Hardware stack levels required when called: 7
 22165 ;; This function calls:
 22166 ;;		_I2C1_IsBusy
 22167 ;;		_I2C1_Write
 22168 ;; This function is called by:
 22169 ;;		__write_nibble
 22170 ;;		__lcd_send
 22171 ;;		_i2c_lcd_init
 22172 ;; This function uses a non-reentrant model
 22173 ;;
 22174                           
 22175                           	psect	text23
 22176   015A78                     __ptext23:
 22177                           	callstack 0
 22178   015A78                     _PCF_Wr:
 22179                           	callstack 115
 22180                           
 22181                           ;incstack = 0
 22182                           ;PCF_Wr@data stored from wreg
 22183   015A78  6E19               	movwf	PCF_Wr@data^(0+1280),c
 22184   015A7A                     
 22185                           ;I2C_LCD.c: 9: static void PCF_Wr(uint8_t data);I2C_LCD.c: 10: {;I2C_LCD.c: 12:     data
      +                           |= (1 << 3);
 22186   015A7A  8619               	bsf	PCF_Wr@data^(0+1280),3,c
 22187   015A7C                     
 22188                           ;I2C_LCD.c: 14:     uint8_t tmp = data;
 22189   015A7C  C519  F51B         	movff	PCF_Wr@data,PCF_Wr@tmp
 22190                           
 22191                           ;I2C_LCD.c: 17:     while(I2C1_IsBusy()) {
 22192   015A80  EF46  F0AD         	goto	l6287
 22193   015A84                     l6285:
 22194                           
 22195                           ;I2C_LCD.c: 18:         _delay((unsigned long)((10)*(64000000UL/4000000.0)));
 22196   015A84  0E35               	movlw	53
 22197   015A86                     u10687:
 22198   015A86  2EE8               	decfsz	wreg,f,c
 22199   015A88  D7FE               	bra	u10687
 22200   015A8A  0000               	nop	
 22201   015A8C                     l6287:
 22202                           
 22203                           ;I2C_LCD.c: 17:     while(I2C1_IsBusy()) {
 22204   015A8C  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 22205   015A90  0900               	iorlw	0
 22206   015A92  A4D8               	btfss	status,2,c
 22207   015A94  EF4E  F0AD         	goto	u4281
 22208   015A98  EF50  F0AD         	goto	u4280
 22209   015A9C                     u4281:
 22210   015A9C  EF42  F0AD         	goto	l6285
 22211   015AA0                     u4280:
 22212   015AA0                     
 22213                           ;I2C_LCD.c: 22:     _Bool result = I2C1_Write(0x27, &tmp, 1);
 22214   015AA0  0E00               	movlw	0
 22215   015AA2  6E13               	movwf	(I2C1_Write@address+1)^(0+1280),c
 22216   015AA4  0E27               	movlw	39
 22217   015AA6  6E12               	movwf	I2C1_Write@address^(0+1280),c
 22218   015AA8  0E1B               	movlw	low PCF_Wr@tmp
 22219   015AAA  6E14               	movwf	I2C1_Write@data^(0+1280),c
 22220   015AAC  0E05               	movlw	high PCF_Wr@tmp
 22221   015AAE  6E15               	movwf	(I2C1_Write@data+1)^(0+1280),c
 22222   015AB0  0E00               	movlw	0
 22223   015AB2  6E17               	movwf	(I2C1_Write@dataLength+1)^(0+1280),c
 22224   015AB4  0E01               	movlw	1
 22225   015AB6  6E16               	movwf	I2C1_Write@dataLength^(0+1280),c
 22226   015AB8  ECD7  F0AF         	call	_I2C1_Write	;wreg free
 22227   015ABC  6E1A               	movwf	PCF_Wr@result^(0+1280),c
 22228   015ABE                     
 22229                           ;I2C_LCD.c: 24:     if(result) {
 22230   015ABE  501A               	movf	PCF_Wr@result^(0+1280),w,c
 22231   015AC0  B4D8               	btfsc	status,2,c
 22232   015AC2  EF65  F0AD         	goto	u4291
 22233   015AC6  EF67  F0AD         	goto	u4290
 22234   015ACA                     u4291:
 22235   015ACA  EF7B  F0AD         	goto	l1143
 22236   015ACE                     u4290:
 22237   015ACE  EF6D  F0AD         	goto	l6297
 22238   015AD2                     l6295:
 22239                           
 22240                           ;I2C_LCD.c: 27:             _delay((unsigned long)((10)*(64000000UL/4000000.0)));
 22241   015AD2  0E35               	movlw	53
 22242   015AD4                     u10697:
 22243   015AD4  2EE8               	decfsz	wreg,f,c
 22244   015AD6  D7FE               	bra	u10697
 22245   015AD8  0000               	nop	
 22246   015ADA                     l6297:
 22247                           
 22248                           ;I2C_LCD.c: 26:         while(I2C1_IsBusy()) {
 22249   015ADA  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 22250   015ADE  0900               	iorlw	0
 22251   015AE0  A4D8               	btfss	status,2,c
 22252   015AE2  EF75  F0AD         	goto	u4301
 22253   015AE6  EF77  F0AD         	goto	u4300
 22254   015AEA                     u4301:
 22255   015AEA  EF69  F0AD         	goto	l6295
 22256   015AEE                     u4300:
 22257   015AEE                     
 22258                           ;I2C_LCD.c: 31:         _delay((unsigned long)((50)*(64000000UL/4000000.0)));
 22259   015AEE  0EA0               	movlw	160
 22260   015AF0                     u10707:
 22261   015AF0  D000               	nop2	
 22262   015AF2  2EE8               	decfsz	wreg,f,c
 22263   015AF4  D7FD               	bra	u10707
 22264   015AF6                     l1143:
 22265   015AF6  0012               	return		;funcret
 22266   015AF8                     __end_of_PCF_Wr:
 22267                           	callstack 0
 22268                           
 22269 ;; *************** function _UART1_sendString *****************
 22270 ;; Defined at:
 22271 ;;		line 70 in file "main.c"
 22272 ;; Parameters:    Size  Location     Type
 22273 ;;  str             2   18[COMRAM] PTR const unsigned char 
 22274 ;;		 -> main@alert_str(64), STR_21(22), STR_20(21), STR_19(20), 
 22275 ;;		 -> STR_18(15), STR_17(17), STR_16(13), STR_15(16), 
 22276 ;;		 -> STR_14(4), STR_13(24), STR_12(20), STR_11(22), 
 22277 ;;		 -> STR_10(20), STR_9(18), STR_8(21), STR_7(32), 
 22278 ;;		 -> STR_6(33), STR_5(35), STR_4(39), 
 22279 ;; Auto vars:     Size  Location     Type
 22280 ;;		None
 22281 ;; Return value:  Size  Location     Type
 22282 ;;                  1    wreg      void 
 22283 ;; Registers used:
 22284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22285 ;; Tracked objects:
 22286 ;;		On entry : 0/0
 22287 ;;		On exit  : 0/0
 22288 ;;		Unchanged: 0/0
 22289 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22294 ;;Total ram usage:        2 bytes
 22295 ;; Hardware stack levels used: 1
 22296 ;; Hardware stack levels required when called: 5
 22297 ;; This function calls:
 22298 ;;		_UART1_IsTxReady
 22299 ;;		_UART1_Write
 22300 ;; This function is called by:
 22301 ;;		_main
 22302 ;; This function uses a non-reentrant model
 22303 ;;
 22304                           
 22305                           	psect	text24
 22306   015B74                     __ptext24:
 22307                           	callstack 0
 22308   015B74                     _UART1_sendString:
 22309                           	callstack 121
 22310   015B74                     
 22311                           ;main.c: 71:     while (*str != '\0') {
 22312   015B74  EFDB  F0AD         	goto	l8617
 22313   015B78                     l8611:
 22314                           
 22315                           ;main.c: 72:         while (!UART1_IsTxReady()) {
 22316   015B78  ECE6  F0B3         	call	_UART1_IsTxReady	;wreg free
 22317   015B7C  0900               	iorlw	0
 22318   015B7E  B4D8               	btfsc	status,2,c
 22319   015B80  EFC4  F0AD         	goto	u7461
 22320   015B84  EFC6  F0AD         	goto	u7460
 22321   015B88                     u7461:
 22322   015B88  EFBC  F0AD         	goto	l8611
 22323   015B8C                     u7460:
 22324   015B8C                     
 22325                           ;main.c: 75:         UART1_Write(*str);
 22326   015B8C  C513  F4F6         	movff	UART1_sendString@str,tblptrl
 22327   015B90  C514  F4F7         	movff	UART1_sendString@str+1,tblptrh
 22328   015B94  0E00               	movlw	low (__mediumconst shr (0+16))
 22329   015B96  6EF8               	movwf	tblptru,c
 22330   015B98  0E25               	movlw	(high __ramtop+-1)
 22331   015B9A  64F7               	cpfsgt	tblptrh,c
 22332   015B9C  D003               	bra	u7477
 22333   015B9E  0008               	tblrd		*
 22334   015BA0  50F5               	movf	tablat,w,c
 22335   015BA2  D005               	bra	u7470
 22336   015BA4                     u7477:
 22337   015BA4  C4F6 F4E9          	movff	tblptrl,fsr0l
 22338   015BA8  C4F7 F4EA          	movff	tblptrh,fsr0h
 22339   015BAC  50EF               	movf	indf0,w,c
 22340   015BAE                     u7470:
 22341   015BAE  EC9A  F0B0         	call	_UART1_Write
 22342   015BB2                     
 22343                           ;main.c: 76:         str++;
 22344   015BB2  4A13               	infsnz	UART1_sendString@str^(0+1280),f,c
 22345   015BB4  2A14               	incf	(UART1_sendString@str+1)^(0+1280),f,c
 22346   015BB6                     l8617:
 22347                           
 22348                           ;main.c: 71:     while (*str != '\0') {
 22349   015BB6  C513  F4F6         	movff	UART1_sendString@str,tblptrl
 22350   015BBA  C514  F4F7         	movff	UART1_sendString@str+1,tblptrh
 22351   015BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 22352   015BC0  6EF8               	movwf	tblptru,c
 22353   015BC2  0E25               	movlw	(high __ramtop+-1)
 22354   015BC4  64F7               	cpfsgt	tblptrh,c
 22355   015BC6  D003               	bra	u7487
 22356   015BC8  0008               	tblrd		*
 22357   015BCA  50F5               	movf	tablat,w,c
 22358   015BCC  D005               	bra	u7480
 22359   015BCE                     u7487:
 22360   015BCE  C4F6 F4E9          	movff	tblptrl,fsr0l
 22361   015BD2  C4F7 F4EA          	movff	tblptrh,fsr0h
 22362   015BD6  50EF               	movf	indf0,w,c
 22363   015BD8                     u7480:
 22364   015BD8  0900               	iorlw	0
 22365   015BDA  A4D8               	btfss	status,2,c
 22366   015BDC  EFF2  F0AD         	goto	u7491
 22367   015BE0  EFF4  F0AD         	goto	u7490
 22368   015BE4                     u7491:
 22369   015BE4  EFBC  F0AD         	goto	l8611
 22370   015BE8                     u7490:
 22371   015BE8  0012               	return		;funcret
 22372   015BEA                     __end_of_UART1_sendString:
 22373                           	callstack 0
 22374                           
 22375 ;; *************** function _UART1_Write *****************
 22376 ;; Defined at:
 22377 ;;		line 369 in file "mcc_generated_files/uart/src/uart1.c"
 22378 ;; Parameters:    Size  Location     Type
 22379 ;;  txData          1    wreg     unsigned char 
 22380 ;; Auto vars:     Size  Location     Type
 22381 ;;  txData          1   17[COMRAM] unsigned char 
 22382 ;;  tempTxHead      1   16[COMRAM] unsigned char 
 22383 ;; Return value:  Size  Location     Type
 22384 ;;                  1    wreg      void 
 22385 ;; Registers used:
 22386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22387 ;; Tracked objects:
 22388 ;;		On entry : 0/0
 22389 ;;		On exit  : 0/0
 22390 ;;		Unchanged: 0/0
 22391 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22396 ;;Total ram usage:        2 bytes
 22397 ;; Hardware stack levels used: 1
 22398 ;; Hardware stack levels required when called: 4
 22399 ;; This function calls:
 22400 ;;		Nothing
 22401 ;; This function is called by:
 22402 ;;		_UART1_sendString
 22403 ;;		_main
 22404 ;; This function uses a non-reentrant model
 22405 ;;
 22406                           
 22407                           	psect	text25
 22408   016134                     __ptext25:
 22409                           	callstack 0
 22410   016134                     _UART1_Write:
 22411                           	callstack 121
 22412                           
 22413                           ;incstack = 0
 22414                           ;UART1_Write@txData stored from wreg
 22415   016134  6E12               	movwf	UART1_Write@txData^(0+1280),c
 22416   016136                     
 22417                           ;mcc_generated_files/uart/src/uart1.c: 369: void UART1_Write(uint8_t txData);mcc_generat
      +                          ed_files/uart/src/uart1.c: 370: {;mcc_generated_files/uart/src/uart1.c: 371:     uint8_t
      +                           tempTxHead;;mcc_generated_files/uart/src/uart1.c: 373:     if(0 == PIE4bits.U1TXIE)
 22418   016136  B2A2               	btfsc	162,1,c	;volatile
 22419   016138  EFA0  F0B0         	goto	u6591
 22420   01613C  EFA2  F0B0         	goto	u6590
 22421   016140                     u6591:
 22422   016140  EFA6  F0B0         	goto	l8061
 22423   016144                     u6590:
 22424   016144                     
 22425                           ;mcc_generated_files/uart/src/uart1.c: 374:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          375:         U1TXB = txData;
 22426   016144  C512  F2A3         	movff	UART1_Write@txData,675	;volatile
 22427                           
 22428                           ;mcc_generated_files/uart/src/uart1.c: 376:     }
 22429   016148  EFBD  F0B0         	goto	l942
 22430   01614C                     l8061:
 22431   01614C  504D               	movf	_uart1TxBufferRemaining^(0+1280),w,c	;volatile
 22432   01614E  B4D8               	btfsc	status,2,c
 22433   016150  EFAC  F0B0         	goto	u6601
 22434   016154  EFAE  F0B0         	goto	u6600
 22435   016158                     u6601:
 22436   016158  EFBD  F0B0         	goto	l942
 22437   01615C                     u6600:
 22438   01615C                     
 22439                           ;mcc_generated_files/uart/src/uart1.c: 378:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          379:        uart1TxBuffer[uart1TxHead] = txData;
 22440   01615C  0E56               	movlw	low _uart1TxBuffer
 22441   01615E  244F               	addwf	_uart1TxHead^(0+1280),w,c	;volatile
 22442   016160  6ED9               	movwf	fsr2l,c
 22443   016162  6ADA               	clrf	fsr2h,c
 22444   016164  0E07               	movlw	high _uart1TxBuffer
 22445   016166  22DA               	addwfc	fsr2h,f,c
 22446   016168  C512  F4DF         	movff	UART1_Write@txData,indf2
 22447   01616C                     
 22448                           ;mcc_generated_files/uart/src/uart1.c: 380:        tempTxHead = (uart1TxHead + 1U) & ((8
      +                          U) - 1U);
 22449   01616C  284F               	incf	_uart1TxHead^(0+1280),w,c	;volatile
 22450   01616E  0B07               	andlw	7
 22451   016170  6E11               	movwf	UART1_Write@tempTxHead^(0+1280),c
 22452   016172                     
 22453                           ;mcc_generated_files/uart/src/uart1.c: 382:        uart1TxHead = tempTxHead;
 22454   016172  C511  F54F         	movff	UART1_Write@tempTxHead,_uart1TxHead	;volatile
 22455   016176                     
 22456                           ;mcc_generated_files/uart/src/uart1.c: 383:        PIE4bits.U1TXIE = 0;
 22457   016176  92A2               	bcf	162,1,c	;volatile
 22458   016178                     
 22459                           ;mcc_generated_files/uart/src/uart1.c: 384:        uart1TxBufferRemaining--;
 22460   016178  064D               	decf	_uart1TxBufferRemaining^(0+1280),f,c	;volatile
 22461   01617A                     l942:
 22462                           
 22463                           ;mcc_generated_files/uart/src/uart1.c: 390:     PIE4bits.U1TXIE = 1;
 22464   01617A  82A2               	bsf	162,1,c	;volatile
 22465   01617C  0012               	return		;funcret
 22466   01617E                     __end_of_UART1_Write:
 22467                           	callstack 0
 22468                           
 22469 ;; *************** function _UART1_IsTxReady *****************
 22470 ;; Defined at:
 22471 ;;		line 278 in file "mcc_generated_files/uart/src/uart1.c"
 22472 ;; Parameters:    Size  Location     Type
 22473 ;;		None
 22474 ;; Auto vars:     Size  Location     Type
 22475 ;;		None
 22476 ;; Return value:  Size  Location     Type
 22477 ;;                  1    wreg      _Bool 
 22478 ;; Registers used:
 22479 ;;		wreg, status,2
 22480 ;; Tracked objects:
 22481 ;;		On entry : 0/0
 22482 ;;		On exit  : 0/0
 22483 ;;		Unchanged: 0/0
 22484 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22489 ;;Total ram usage:        0 bytes
 22490 ;; Hardware stack levels used: 1
 22491 ;; Hardware stack levels required when called: 4
 22492 ;; This function calls:
 22493 ;;		Nothing
 22494 ;; This function is called by:
 22495 ;;		_UART1_sendString
 22496 ;; This function uses a non-reentrant model
 22497 ;;
 22498                           
 22499                           	psect	text26
 22500   0167CC                     __ptext26:
 22501                           	callstack 0
 22502   0167CC                     _UART1_IsTxReady:
 22503                           	callstack 121
 22504   0167CC                     
 22505                           ;mcc_generated_files/uart/src/uart1.c: 280:     return (uart1TxBufferRemaining ? 1 : 0);
 22506   0167CC  504D               	movf	_uart1TxBufferRemaining^(0+1280),w,c	;volatile
 22507   0167CE  A4D8               	btfss	status,2,c
 22508   0167D0  EFEC  F0B3         	goto	u6571
 22509   0167D4  EFEF  F0B3         	goto	u6570
 22510   0167D8                     u6571:
 22511   0167D8  0E01               	movlw	1
 22512   0167DA  EFF0  F0B3         	goto	u6580
 22513   0167DE                     u6570:
 22514   0167DE  0E00               	movlw	0
 22515   0167E0                     u6580:
 22516   0167E0  0012               	return		;funcret
 22517   0167E2                     __end_of_UART1_IsTxReady:
 22518                           	callstack 0
 22519                           
 22520 ;; *************** function _UART1_RxCompleteCallbackRegister *****************
 22521 ;; Defined at:
 22522 ;;		line 462 in file "mcc_generated_files/uart/src/uart1.c"
 22523 ;; Parameters:    Size  Location     Type
 22524 ;;  callbackHand    3   16[COMRAM] PTR FTN()void 
 22525 ;;		 -> UART1_RxDataHandler(1), 
 22526 ;; Auto vars:     Size  Location     Type
 22527 ;;		None
 22528 ;; Return value:  Size  Location     Type
 22529 ;;                  1    wreg      void 
 22530 ;; Registers used:
 22531 ;;		wreg, status,2, status,0
 22532 ;; Tracked objects:
 22533 ;;		On entry : 0/0
 22534 ;;		On exit  : 0/0
 22535 ;;		Unchanged: 0/0
 22536 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22537 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22541 ;;Total ram usage:        3 bytes
 22542 ;; Hardware stack levels used: 1
 22543 ;; Hardware stack levels required when called: 4
 22544 ;; This function calls:
 22545 ;;		Nothing
 22546 ;; This function is called by:
 22547 ;;		_main
 22548 ;; This function uses a non-reentrant model
 22549 ;;
 22550                           
 22551                           	psect	text27
 22552   01665A                     __ptext27:
 22553                           	callstack 0
 22554   01665A                     _UART1_RxCompleteCallbackRegister:
 22555                           	callstack 122
 22556   01665A                     
 22557                           ;mcc_generated_files/uart/src/uart1.c: 462: void UART1_RxCompleteCallbackRegister(void (
      +                          * callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 463: {;mcc_generated_fil
      +                          es/uart/src/uart1.c: 464:     if(((void*)0) != callbackHandler)
 22558   01665A  5011               	movf	UART1_RxCompleteCallbackRegister@callbackHandler^(0+1280),w,c
 22559   01665C  1012               	iorwf	(UART1_RxCompleteCallbackRegister@callbackHandler+1)^(0+1280),w,c
 22560   01665E  1013               	iorwf	(UART1_RxCompleteCallbackRegister@callbackHandler+2)^(0+1280),w,c
 22561   016660  B4D8               	btfsc	status,2,c
 22562   016662  EF35  F0B3         	goto	u7451
 22563   016666  EF37  F0B3         	goto	u7450
 22564   01666A                     u7451:
 22565   01666A  EF3D  F0B3         	goto	l981
 22566   01666E                     u7450:
 22567   01666E                     
 22568                           ;mcc_generated_files/uart/src/uart1.c: 465:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          466:        UART1_RxCompleteInterruptHandler = callbackHandler;
 22569   01666E  C511  F6A9         	movff	UART1_RxCompleteCallbackRegister@callbackHandler,_UART1_RxCompleteInterruptHandle
      +                          r
 22570   016672  C512  F6AA         	movff	UART1_RxCompleteCallbackRegister@callbackHandler+1,_UART1_RxCompleteInterruptHand
      +                          ler+1
 22571   016676  C513  F6AB         	movff	UART1_RxCompleteCallbackRegister@callbackHandler+2,_UART1_RxCompleteInterruptHand
      +                          ler+2
 22572   01667A                     l981:
 22573   01667A  0012               	return		;funcret
 22574   01667C                     __end_of_UART1_RxCompleteCallbackRegister:
 22575                           	callstack 0
 22576                           
 22577 ;; *************** function _TMR0_Start *****************
 22578 ;; Defined at:
 22579 ;;		line 78 in file "mcc_generated_files/timer/src/tmr0.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;		None
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;		None
 22584 ;; Return value:  Size  Location     Type
 22585 ;;                  1    wreg      void 
 22586 ;; Registers used:
 22587 ;;		None
 22588 ;; Tracked objects:
 22589 ;;		On entry : 0/0
 22590 ;;		On exit  : 0/0
 22591 ;;		Unchanged: 0/0
 22592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22597 ;;Total ram usage:        0 bytes
 22598 ;; Hardware stack levels used: 1
 22599 ;; Hardware stack levels required when called: 4
 22600 ;; This function calls:
 22601 ;;		Nothing
 22602 ;; This function is called by:
 22603 ;;		_main
 22604 ;; This function uses a non-reentrant model
 22605 ;;
 22606                           
 22607                           	psect	text28
 22608   016A10                     __ptext28:
 22609                           	callstack 0
 22610   016A10                     _TMR0_Start:
 22611                           	callstack 122
 22612   016A10                     
 22613                           ;mcc_generated_files/timer/src/tmr0.c: 80:     T0CON0bits.T0EN = 1;
 22614   016A10  0103               	movlb	3	; () banked
 22615   016A12  8F1A               	bsf	26,7,b	;volatile
 22616   016A14                     
 22617                           ; BSR set to: 3
 22618   016A14  0012               	return		;funcret
 22619   016A16                     __end_of_TMR0_Start:
 22620                           	callstack 0
 22621                           
 22622 ;; *************** function _SYSTEM_Initialize *****************
 22623 ;; Defined at:
 22624 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;		None
 22627 ;; Auto vars:     Size  Location     Type
 22628 ;;		None
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  1    wreg      void 
 22631 ;; Registers used:
 22632 ;;		wreg, status,2, status,0, cstack
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;Total ram usage:        0 bytes
 22643 ;; Hardware stack levels used: 1
 22644 ;; Hardware stack levels required when called: 6
 22645 ;; This function calls:
 22646 ;;		_CCP1_Initialize
 22647 ;;		_CCP2_Initialize
 22648 ;;		_CLOCK_Initialize
 22649 ;;		_I2C1_Initialize
 22650 ;;		_INTERRUPT_Initialize
 22651 ;;		_PIN_MANAGER_Initialize
 22652 ;;		_TMR0_Initialize
 22653 ;;		_TMR2_Initialize
 22654 ;;		_TMR4_Initialize
 22655 ;;		_UART1_Initialize
 22656 ;; This function is called by:
 22657 ;;		_main
 22658 ;; This function uses a non-reentrant model
 22659 ;;
 22660                           
 22661                           	psect	text29
 22662   016548                     __ptext29:
 22663                           	callstack 0
 22664   016548                     _SYSTEM_Initialize:
 22665                           	callstack 120
 22666   016548                     
 22667                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 22668   016548  EC8A  F0B4         	call	_CLOCK_Initialize	;wreg free
 22669                           
 22670                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 22671   01654C  EC6A  F0A8         	call	_PIN_MANAGER_Initialize	;wreg free
 22672                           
 22673                           ;mcc_generated_files/system/src/system.c: 42:     CCP1_Initialize();
 22674   016550  ECFC  F0B3         	call	_CCP1_Initialize	;wreg free
 22675                           
 22676                           ;mcc_generated_files/system/src/system.c: 43:     CCP2_Initialize();
 22677   016554  ECF1  F0B3         	call	_CCP2_Initialize	;wreg free
 22678   016558                     
 22679                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
 22680   016558  EC8D  F0B2         	call	_TMR0_Initialize	;wreg free
 22681   01655C                     
 22682                           ;mcc_generated_files/system/src/system.c: 45:     TMR2_Initialize();
 22683   01655C  ECE1  F0B2         	call	_TMR2_Initialize	;wreg free
 22684   016560                     
 22685                           ;mcc_generated_files/system/src/system.c: 46:     TMR4_Initialize();
 22686   016560  ECCE  F0B2         	call	_TMR4_Initialize	;wreg free
 22687   016564                     
 22688                           ;mcc_generated_files/system/src/system.c: 47:     I2C1_Initialize();
 22689   016564  ECFD  F0AE         	call	_I2C1_Initialize	;wreg free
 22690   016568                     
 22691                           ;mcc_generated_files/system/src/system.c: 48:     UART1_Initialize();
 22692   016568  EC92  F0AB         	call	_UART1_Initialize	;wreg free
 22693   01656C                     
 22694                           ;mcc_generated_files/system/src/system.c: 49:     INTERRUPT_Initialize();
 22695   01656C  ECB9  F0AC         	call	_INTERRUPT_Initialize	;wreg free
 22696   016570  0012               	return		;funcret
 22697   016572                     __end_of_SYSTEM_Initialize:
 22698                           	callstack 0
 22699                           
 22700 ;; *************** function _UART1_Initialize *****************
 22701 ;; Defined at:
 22702 ;;		line 98 in file "mcc_generated_files/uart/src/uart1.c"
 22703 ;; Parameters:    Size  Location     Type
 22704 ;;		None
 22705 ;; Auto vars:     Size  Location     Type
 22706 ;;		None
 22707 ;; Return value:  Size  Location     Type
 22708 ;;                  1    wreg      void 
 22709 ;; Registers used:
 22710 ;;		wreg, status,2, status,0, cstack
 22711 ;; Tracked objects:
 22712 ;;		On entry : 0/0
 22713 ;;		On exit  : 0/0
 22714 ;;		Unchanged: 0/0
 22715 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;Total ram usage:        0 bytes
 22721 ;; Hardware stack levels used: 1
 22722 ;; Hardware stack levels required when called: 5
 22723 ;; This function calls:
 22724 ;;		_UART1_FramingErrorCallbackRegister
 22725 ;;		_UART1_OverrunErrorCallbackRegister
 22726 ;;		_UART1_ParityErrorCallbackRegister
 22727 ;; This function is called by:
 22728 ;;		_SYSTEM_Initialize
 22729 ;; This function uses a non-reentrant model
 22730 ;;
 22731                           
 22732                           	psect	text30
 22733   015724                     __ptext30:
 22734                           	callstack 0
 22735   015724                     _UART1_Initialize:
 22736                           	callstack 120
 22737   015724                     
 22738                           ;mcc_generated_files/uart/src/uart1.c: 100:     PIE4bits.U1RXIE = 0;
 22739   015724  90A2               	bcf	162,0,c	;volatile
 22740   015726                     
 22741                           ;mcc_generated_files/uart/src/uart1.c: 101:     UART1_RxInterruptHandler = UART1_Receive
      +                          ISR;
 22742   015726  0E6C               	movlw	low _UART1_ReceiveISR
 22743   015728  0106               	movlb	6	; () banked
 22744   01572A  6FAC               	movwf	_UART1_RxInterruptHandler& (0+255),b
 22745   01572C  0E48               	movlw	high _UART1_ReceiveISR
 22746   01572E  6FAD               	movwf	(_UART1_RxInterruptHandler+1)& (0+255),b
 22747   015730  0E01               	movlw	low (_UART1_ReceiveISR shr (0+16))
 22748   015732  6FAE               	movwf	(_UART1_RxInterruptHandler+2)& (0+255),b
 22749   015734                     
 22750                           ; BSR set to: 6
 22751                           ;mcc_generated_files/uart/src/uart1.c: 102:     PIE4bits.U1TXIE = 0;
 22752   015734  92A2               	bcf	162,1,c	;volatile
 22753                           
 22754                           ;mcc_generated_files/uart/src/uart1.c: 103:     UART1_TxInterruptHandler = UART1_Transmi
      +                          tISR;
 22755   015736  0E1A               	movlw	low _UART1_TransmitISR
 22756   015738  6FB2               	movwf	_UART1_TxInterruptHandler& (0+255),b
 22757   01573A  0E64               	movlw	high _UART1_TransmitISR
 22758   01573C  6FB3               	movwf	(_UART1_TxInterruptHandler+1)& (0+255),b
 22759   01573E  0E01               	movlw	low (_UART1_TransmitISR shr (0+16))
 22760   015740  6FB4               	movwf	(_UART1_TxInterruptHandler+2)& (0+255),b
 22761   015742                     
 22762                           ; BSR set to: 6
 22763                           ;mcc_generated_files/uart/src/uart1.c: 108:     U1RXCHK = 0x0;
 22764   015742  0102               	movlb	2	; () banked
 22765   015744  6BA2               	clrf	162,b	;volatile
 22766   015746                     
 22767                           ; BSR set to: 2
 22768                           ;mcc_generated_files/uart/src/uart1.c: 110:     U1TXCHK = 0x0;
 22769   015746  6BA4               	clrf	164,b	;volatile
 22770   015748                     
 22771                           ; BSR set to: 2
 22772                           ;mcc_generated_files/uart/src/uart1.c: 112:     U1P1L = 0x0;
 22773   015748  6BA5               	clrf	165,b	;volatile
 22774   01574A                     
 22775                           ; BSR set to: 2
 22776                           ;mcc_generated_files/uart/src/uart1.c: 114:     U1P1H = 0x0;
 22777   01574A  6BA6               	clrf	166,b	;volatile
 22778   01574C                     
 22779                           ; BSR set to: 2
 22780                           ;mcc_generated_files/uart/src/uart1.c: 116:     U1P2L = 0x0;
 22781   01574C  6BA7               	clrf	167,b	;volatile
 22782   01574E                     
 22783                           ; BSR set to: 2
 22784                           ;mcc_generated_files/uart/src/uart1.c: 118:     U1P2H = 0x0;
 22785   01574E  6BA8               	clrf	168,b	;volatile
 22786   015750                     
 22787                           ; BSR set to: 2
 22788                           ;mcc_generated_files/uart/src/uart1.c: 120:     U1P3L = 0x0;
 22789   015750  6BA9               	clrf	169,b	;volatile
 22790   015752                     
 22791                           ; BSR set to: 2
 22792                           ;mcc_generated_files/uart/src/uart1.c: 122:     U1P3H = 0x0;
 22793   015752  6BAA               	clrf	170,b	;volatile
 22794   015754                     
 22795                           ; BSR set to: 2
 22796                           ;mcc_generated_files/uart/src/uart1.c: 124:     U1CON0 = 0xB0;
 22797   015754  0EB0               	movlw	176
 22798   015756  6FAB               	movwf	171,b	;volatile
 22799   015758                     
 22800                           ; BSR set to: 2
 22801                           ;mcc_generated_files/uart/src/uart1.c: 126:     U1CON1 = 0x80;
 22802   015758  0E80               	movlw	128
 22803   01575A  6FAC               	movwf	172,b	;volatile
 22804   01575C                     
 22805                           ; BSR set to: 2
 22806                           ;mcc_generated_files/uart/src/uart1.c: 128:     U1CON2 = 0x80;
 22807   01575C  0E80               	movlw	128
 22808   01575E  6FAD               	movwf	173,b	;volatile
 22809   015760                     
 22810                           ; BSR set to: 2
 22811                           ;mcc_generated_files/uart/src/uart1.c: 130:     U1BRGL = 0x82;
 22812   015760  0E82               	movlw	130
 22813   015762  6FAE               	movwf	174,b	;volatile
 22814   015764                     
 22815                           ; BSR set to: 2
 22816                           ;mcc_generated_files/uart/src/uart1.c: 132:     U1BRGH = 0x6;
 22817   015764  0E06               	movlw	6
 22818   015766  6FAF               	movwf	175,b	;volatile
 22819   015768                     
 22820                           ; BSR set to: 2
 22821                           ;mcc_generated_files/uart/src/uart1.c: 134:     U1FIFO = 0x2E;
 22822   015768  0E2E               	movlw	46
 22823   01576A  6FB0               	movwf	176,b	;volatile
 22824   01576C                     
 22825                           ; BSR set to: 2
 22826                           ;mcc_generated_files/uart/src/uart1.c: 136:     U1UIR = 0x0;
 22827   01576C  6BB1               	clrf	177,b	;volatile
 22828   01576E                     
 22829                           ; BSR set to: 2
 22830                           ;mcc_generated_files/uart/src/uart1.c: 138:     U1ERRIR = 0x80;
 22831   01576E  0E80               	movlw	128
 22832   015770  6FB2               	movwf	178,b	;volatile
 22833   015772                     
 22834                           ; BSR set to: 2
 22835                           ;mcc_generated_files/uart/src/uart1.c: 140:     U1ERRIE = 0x0;
 22836   015772  6BB3               	clrf	179,b	;volatile
 22837   015774                     
 22838                           ; BSR set to: 2
 22839                           ;mcc_generated_files/uart/src/uart1.c: 142:     UART1_FramingErrorCallbackRegister(UART1
      +                          _DefaultFramingErrorCallback);
 22840   015774  0E68               	movlw	low _UART1_DefaultFramingErrorCallback
 22841   015776  6E11               	movwf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),c
 22842   015778  0E6A               	movlw	high _UART1_DefaultFramingErrorCallback
 22843   01577A  6E12               	movwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 22844   01577C  0E01               	movlw	low (_UART1_DefaultFramingErrorCallback shr (0+16))
 22845   01577E  6E13               	movwf	(UART1_FramingErrorCallbackRegister@callbackHandler+2)^(0+1280),c
 22846   015780  EC60  F0B3         	call	_UART1_FramingErrorCallbackRegister	;wreg free
 22847   015784                     
 22848                           ;mcc_generated_files/uart/src/uart1.c: 143:     UART1_OverrunErrorCallbackRegister(UART1
      +                          _DefaultOverrunErrorCallback);
 22849   015784  0E66               	movlw	low _UART1_DefaultOverrunErrorCallback
 22850   015786  6E11               	movwf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),c
 22851   015788  0E6A               	movlw	high _UART1_DefaultOverrunErrorCallback
 22852   01578A  6E12               	movwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 22853   01578C  0E01               	movlw	low (_UART1_DefaultOverrunErrorCallback shr (0+16))
 22854   01578E  6E13               	movwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+2)^(0+1280),c
 22855   015790  EC4F  F0B3         	call	_UART1_OverrunErrorCallbackRegister	;wreg free
 22856   015794                     
 22857                           ;mcc_generated_files/uart/src/uart1.c: 144:     UART1_ParityErrorCallbackRegister(UART1_
      +                          DefaultParityErrorCallback);
 22858   015794  0E64               	movlw	low _UART1_DefaultParityErrorCallback
 22859   015796  6E11               	movwf	UART1_ParityErrorCallbackRegister@callbackHandler^(0+1280),c
 22860   015798  0E6A               	movlw	high _UART1_DefaultParityErrorCallback
 22861   01579A  6E12               	movwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 22862   01579C  0E01               	movlw	low (_UART1_DefaultParityErrorCallback shr (0+16))
 22863   01579E  6E13               	movwf	(UART1_ParityErrorCallbackRegister@callbackHandler+2)^(0+1280),c
 22864   0157A0  EC3E  F0B3         	call	_UART1_ParityErrorCallbackRegister	;wreg free
 22865   0157A4                     
 22866                           ;mcc_generated_files/uart/src/uart1.c: 146:     uart1RxLastError.status = 0;
 22867   0157A4  0E00               	movlw	0
 22868   0157A6  0106               	movlb	6	; () banked
 22869   0157A8  6FD7               	movwf	(_uart1RxLastError+1)& (0+255),b	;volatile
 22870   0157AA  0E00               	movlw	0
 22871   0157AC  6FD6               	movwf	_uart1RxLastError& (0+255),b	;volatile
 22872   0157AE                     
 22873                           ; BSR set to: 6
 22874                           ;mcc_generated_files/uart/src/uart1.c: 147:     uart1TxHead = 0;
 22875   0157AE  6A4F               	clrf	_uart1TxHead^(0+1280),c	;volatile
 22876   0157B0                     
 22877                           ; BSR set to: 6
 22878                           ;mcc_generated_files/uart/src/uart1.c: 148:     uart1TxTail = 0;
 22879   0157B0  6A4E               	clrf	_uart1TxTail^(0+1280),c	;volatile
 22880   0157B2                     
 22881                           ; BSR set to: 6
 22882                           ;mcc_generated_files/uart/src/uart1.c: 149:     uart1TxBufferRemaining = sizeof(uart1TxB
      +                          uffer);
 22883   0157B2  0E08               	movlw	8
 22884   0157B4  6E4D               	movwf	_uart1TxBufferRemaining^(0+1280),c	;volatile
 22885   0157B6                     
 22886                           ; BSR set to: 6
 22887                           ;mcc_generated_files/uart/src/uart1.c: 150:     uart1RxHead = 0;
 22888   0157B6  6A4C               	clrf	_uart1RxHead^(0+1280),c	;volatile
 22889   0157B8                     
 22890                           ; BSR set to: 6
 22891                           ;mcc_generated_files/uart/src/uart1.c: 151:     uart1RxTail = 0;
 22892   0157B8  6A4B               	clrf	_uart1RxTail^(0+1280),c	;volatile
 22893   0157BA                     
 22894                           ; BSR set to: 6
 22895                           ;mcc_generated_files/uart/src/uart1.c: 152:     uart1RxCount = 0;
 22896   0157BA  6A4A               	clrf	_uart1RxCount^(0+1280),c	;volatile
 22897   0157BC                     
 22898                           ; BSR set to: 6
 22899                           ;mcc_generated_files/uart/src/uart1.c: 153:     PIE4bits.U1RXIE = 1;
 22900   0157BC  80A2               	bsf	162,0,c	;volatile
 22901   0157BE                     
 22902                           ; BSR set to: 6
 22903   0157BE  0012               	return		;funcret
 22904   0157C0                     __end_of_UART1_Initialize:
 22905                           	callstack 0
 22906                           
 22907 ;; *************** function _UART1_ParityErrorCallbackRegister *****************
 22908 ;; Defined at:
 22909 ;;		line 455 in file "mcc_generated_files/uart/src/uart1.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;  callbackHand    3   16[COMRAM] PTR FTN()void 
 22912 ;;		 -> UART1_DefaultParityErrorCallback(1), 
 22913 ;; Auto vars:     Size  Location     Type
 22914 ;;		None
 22915 ;; Return value:  Size  Location     Type
 22916 ;;                  1    wreg      void 
 22917 ;; Registers used:
 22918 ;;		wreg, status,2, status,0
 22919 ;; Tracked objects:
 22920 ;;		On entry : 0/0
 22921 ;;		On exit  : 0/0
 22922 ;;		Unchanged: 0/0
 22923 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22928 ;;Total ram usage:        3 bytes
 22929 ;; Hardware stack levels used: 1
 22930 ;; Hardware stack levels required when called: 4
 22931 ;; This function calls:
 22932 ;;		Nothing
 22933 ;; This function is called by:
 22934 ;;		_UART1_Initialize
 22935 ;; This function uses a non-reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text31
 22939   01667C                     __ptext31:
 22940                           	callstack 0
 22941   01667C                     _UART1_ParityErrorCallbackRegister:
 22942                           	callstack 120
 22943   01667C                     
 22944                           ;mcc_generated_files/uart/src/uart1.c: 455: void UART1_ParityErrorCallbackRegister(void 
      +                          (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 456: {;mcc_generated_fi
      +                          les/uart/src/uart1.c: 457:     if(((void*)0) != callbackHandler)
 22945   01667C  5011               	movf	UART1_ParityErrorCallbackRegister@callbackHandler^(0+1280),w,c
 22946   01667E  1012               	iorwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 22947   016680  1013               	iorwf	(UART1_ParityErrorCallbackRegister@callbackHandler+2)^(0+1280),w,c
 22948   016682  B4D8               	btfsc	status,2,c
 22949   016684  EF46  F0B3         	goto	u6131
 22950   016688  EF48  F0B3         	goto	u6130
 22951   01668C                     u6131:
 22952   01668C  EF4E  F0B3         	goto	l977
 22953   016690                     u6130:
 22954   016690                     
 22955                           ;mcc_generated_files/uart/src/uart1.c: 458:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          459:         UART1_ParityErrorHandler = callbackHandler;
 22956   016690  C511  F6B5         	movff	UART1_ParityErrorCallbackRegister@callbackHandler,_UART1_ParityErrorHandler
 22957   016694  C512  F6B6         	movff	UART1_ParityErrorCallbackRegister@callbackHandler+1,_UART1_ParityErrorHandler+1
 22958   016698  C513  F6B7         	movff	UART1_ParityErrorCallbackRegister@callbackHandler+2,_UART1_ParityErrorHandler+2
 22959   01669C                     l977:
 22960   01669C  0012               	return		;funcret
 22961   01669E                     __end_of_UART1_ParityErrorCallbackRegister:
 22962                           	callstack 0
 22963                           
 22964 ;; *************** function _UART1_OverrunErrorCallbackRegister *****************
 22965 ;; Defined at:
 22966 ;;		line 447 in file "mcc_generated_files/uart/src/uart1.c"
 22967 ;; Parameters:    Size  Location     Type
 22968 ;;  callbackHand    3   16[COMRAM] PTR FTN()void 
 22969 ;;		 -> UART1_DefaultOverrunErrorCallback(1), 
 22970 ;; Auto vars:     Size  Location     Type
 22971 ;;		None
 22972 ;; Return value:  Size  Location     Type
 22973 ;;                  1    wreg      void 
 22974 ;; Registers used:
 22975 ;;		wreg, status,2, status,0
 22976 ;; Tracked objects:
 22977 ;;		On entry : 0/0
 22978 ;;		On exit  : 0/0
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22981 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22985 ;;Total ram usage:        3 bytes
 22986 ;; Hardware stack levels used: 1
 22987 ;; Hardware stack levels required when called: 4
 22988 ;; This function calls:
 22989 ;;		Nothing
 22990 ;; This function is called by:
 22991 ;;		_UART1_Initialize
 22992 ;; This function uses a non-reentrant model
 22993 ;;
 22994                           
 22995                           	psect	text32
 22996   01669E                     __ptext32:
 22997                           	callstack 0
 22998   01669E                     _UART1_OverrunErrorCallbackRegister:
 22999                           	callstack 120
 23000   01669E                     
 23001                           ;mcc_generated_files/uart/src/uart1.c: 447: void UART1_OverrunErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 448: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 449:     if(((void*)0) != callbackHandler)
 23002   01669E  5011               	movf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),w,c
 23003   0166A0  1012               	iorwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 23004   0166A2  1013               	iorwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+2)^(0+1280),w,c
 23005   0166A4  B4D8               	btfsc	status,2,c
 23006   0166A6  EF57  F0B3         	goto	u6121
 23007   0166AA  EF59  F0B3         	goto	u6120
 23008   0166AE                     u6121:
 23009   0166AE  EF5F  F0B3         	goto	l973
 23010   0166B2                     u6120:
 23011   0166B2                     
 23012                           ;mcc_generated_files/uart/src/uart1.c: 450:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          451:         UART1_OverrunErrorHandler = callbackHandler;
 23013   0166B2  C511  F6B8         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler,_UART1_OverrunErrorHandler
 23014   0166B6  C512  F6B9         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler+1,_UART1_OverrunErrorHandler+1
 23015   0166BA  C513  F6BA         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler+2,_UART1_OverrunErrorHandler+2
 23016   0166BE                     l973:
 23017   0166BE  0012               	return		;funcret
 23018   0166C0                     __end_of_UART1_OverrunErrorCallbackRegister:
 23019                           	callstack 0
 23020                           
 23021 ;; *************** function _UART1_FramingErrorCallbackRegister *****************
 23022 ;; Defined at:
 23023 ;;		line 439 in file "mcc_generated_files/uart/src/uart1.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;  callbackHand    3   16[COMRAM] PTR FTN()void 
 23026 ;;		 -> UART1_DefaultFramingErrorCallback(1), 
 23027 ;; Auto vars:     Size  Location     Type
 23028 ;;		None
 23029 ;; Return value:  Size  Location     Type
 23030 ;;                  1    wreg      void 
 23031 ;; Registers used:
 23032 ;;		wreg, status,2, status,0
 23033 ;; Tracked objects:
 23034 ;;		On entry : 0/0
 23035 ;;		On exit  : 0/0
 23036 ;;		Unchanged: 0/0
 23037 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23038 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;Total ram usage:        3 bytes
 23043 ;; Hardware stack levels used: 1
 23044 ;; Hardware stack levels required when called: 4
 23045 ;; This function calls:
 23046 ;;		Nothing
 23047 ;; This function is called by:
 23048 ;;		_UART1_Initialize
 23049 ;; This function uses a non-reentrant model
 23050 ;;
 23051                           
 23052                           	psect	text33
 23053   0166C0                     __ptext33:
 23054                           	callstack 0
 23055   0166C0                     _UART1_FramingErrorCallbackRegister:
 23056                           	callstack 120
 23057   0166C0                     
 23058                           ;mcc_generated_files/uart/src/uart1.c: 439: void UART1_FramingErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 440: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 441:     if(((void*)0) != callbackHandler)
 23059   0166C0  5011               	movf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),w,c
 23060   0166C2  1012               	iorwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 23061   0166C4  1013               	iorwf	(UART1_FramingErrorCallbackRegister@callbackHandler+2)^(0+1280),w,c
 23062   0166C6  B4D8               	btfsc	status,2,c
 23063   0166C8  EF68  F0B3         	goto	u6111
 23064   0166CC  EF6A  F0B3         	goto	u6110
 23065   0166D0                     u6111:
 23066   0166D0  EF70  F0B3         	goto	l969
 23067   0166D4                     u6110:
 23068   0166D4                     
 23069                           ;mcc_generated_files/uart/src/uart1.c: 442:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          443:         UART1_FramingErrorHandler = callbackHandler;
 23070   0166D4  C511  F6BB         	movff	UART1_FramingErrorCallbackRegister@callbackHandler,_UART1_FramingErrorHandler
 23071   0166D8  C512  F6BC         	movff	UART1_FramingErrorCallbackRegister@callbackHandler+1,_UART1_FramingErrorHandler+1
 23072   0166DC  C513  F6BD         	movff	UART1_FramingErrorCallbackRegister@callbackHandler+2,_UART1_FramingErrorHandler+2
 23073   0166E0                     l969:
 23074   0166E0  0012               	return		;funcret
 23075   0166E2                     __end_of_UART1_FramingErrorCallbackRegister:
 23076                           	callstack 0
 23077                           
 23078 ;; *************** function _TMR4_Initialize *****************
 23079 ;; Defined at:
 23080 ;;		line 50 in file "mcc_generated_files/timer/src/tmr4.c"
 23081 ;; Parameters:    Size  Location     Type
 23082 ;;		None
 23083 ;; Auto vars:     Size  Location     Type
 23084 ;;		None
 23085 ;; Return value:  Size  Location     Type
 23086 ;;                  1    wreg      void 
 23087 ;; Registers used:
 23088 ;;		wreg, status,2, status,0
 23089 ;; Tracked objects:
 23090 ;;		On entry : 0/0
 23091 ;;		On exit  : 0/0
 23092 ;;		Unchanged: 0/0
 23093 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23098 ;;Total ram usage:        0 bytes
 23099 ;; Hardware stack levels used: 1
 23100 ;; Hardware stack levels required when called: 4
 23101 ;; This function calls:
 23102 ;;		Nothing
 23103 ;; This function is called by:
 23104 ;;		_SYSTEM_Initialize
 23105 ;; This function uses a non-reentrant model
 23106 ;;
 23107                           
 23108                           	psect	text34
 23109   01659C                     __ptext34:
 23110                           	callstack 0
 23111   01659C                     _TMR4_Initialize:
 23112                           	callstack 121
 23113   01659C                     
 23114                           ;mcc_generated_files/timer/src/tmr4.c: 52:     T4CLKCON = (1 << 0x0);
 23115   01659C  0E01               	movlw	1
 23116   01659E  0103               	movlb	3	; () banked
 23117   0165A0  6F32               	movwf	50,b	;volatile
 23118   0165A2                     
 23119                           ; BSR set to: 3
 23120                           ;mcc_generated_files/timer/src/tmr4.c: 54:     T4HLT = (0 << 0x0)
 23121   0165A2  6B31               	clrf	49,b	;volatile
 23122   0165A4                     
 23123                           ; BSR set to: 3
 23124                           ;mcc_generated_files/timer/src/tmr4.c: 59:     T4RST = (0 << 0x0);
 23125   0165A4  6B33               	clrf	51,b	;volatile
 23126   0165A6                     
 23127                           ; BSR set to: 3
 23128                           ;mcc_generated_files/timer/src/tmr4.c: 61:     T4PR = 0xFF;
 23129   0165A6  692F               	setf	47,b	;volatile
 23130   0165A8                     
 23131                           ; BSR set to: 3
 23132                           ;mcc_generated_files/timer/src/tmr4.c: 63:     T4TMR = 0x0;
 23133   0165A8  6B2E               	clrf	46,b	;volatile
 23134   0165AA                     
 23135                           ; BSR set to: 3
 23136                           ;mcc_generated_files/timer/src/tmr4.c: 65:     TMR4_PeriodMatchCallback = TMR4_DefaultPe
      +                          riodMatchCallback;
 23137   0165AA  0E00               	movlw	0
 23138   0165AC  0106               	movlb	6	; () banked
 23139   0165AE  6FF3               	movwf	_TMR4_PeriodMatchCallback& (0+255),b
 23140   0165B0  0E00               	movlw	0
 23141   0165B2  6FF4               	movwf	(_TMR4_PeriodMatchCallback+1)& (0+255),b
 23142   0165B4  0E00               	movlw	0
 23143   0165B6  6FF5               	movwf	(_TMR4_PeriodMatchCallback+2)& (0+255),b
 23144   0165B8                     
 23145                           ; BSR set to: 6
 23146                           ;mcc_generated_files/timer/src/tmr4.c: 67:     PIR11bits.TMR4IF = 0;
 23147   0165B8  96B9               	bcf	185,3,c	;volatile
 23148   0165BA                     
 23149                           ; BSR set to: 6
 23150                           ;mcc_generated_files/timer/src/tmr4.c: 69:     T4CON = (0 << 0x4)
 23151   0165BA  0E80               	movlw	128
 23152   0165BC  0103               	movlb	3	; () banked
 23153   0165BE  6F30               	movwf	48,b	;volatile
 23154   0165C0                     
 23155                           ; BSR set to: 3
 23156   0165C0  0012               	return		;funcret
 23157   0165C2                     __end_of_TMR4_Initialize:
 23158                           	callstack 0
 23159                           
 23160 ;; *************** function _TMR2_Initialize *****************
 23161 ;; Defined at:
 23162 ;;		line 50 in file "mcc_generated_files/timer/src/tmr2.c"
 23163 ;; Parameters:    Size  Location     Type
 23164 ;;		None
 23165 ;; Auto vars:     Size  Location     Type
 23166 ;;		None
 23167 ;; Return value:  Size  Location     Type
 23168 ;;                  1    wreg      void 
 23169 ;; Registers used:
 23170 ;;		wreg, status,2, status,0
 23171 ;; Tracked objects:
 23172 ;;		On entry : 0/0
 23173 ;;		On exit  : 0/0
 23174 ;;		Unchanged: 0/0
 23175 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23180 ;;Total ram usage:        0 bytes
 23181 ;; Hardware stack levels used: 1
 23182 ;; Hardware stack levels required when called: 4
 23183 ;; This function calls:
 23184 ;;		Nothing
 23185 ;; This function is called by:
 23186 ;;		_SYSTEM_Initialize
 23187 ;; This function uses a non-reentrant model
 23188 ;;
 23189                           
 23190                           	psect	text35
 23191   0165C2                     __ptext35:
 23192                           	callstack 0
 23193   0165C2                     _TMR2_Initialize:
 23194                           	callstack 121
 23195   0165C2                     
 23196                           ;mcc_generated_files/timer/src/tmr2.c: 52:     T2CLKCON = (1 << 0x0);
 23197   0165C2  0E01               	movlw	1
 23198   0165C4  0103               	movlb	3	; () banked
 23199   0165C6  6F26               	movwf	38,b	;volatile
 23200   0165C8                     
 23201                           ; BSR set to: 3
 23202                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2HLT = (0 << 0x0)
 23203   0165C8  6B25               	clrf	37,b	;volatile
 23204   0165CA                     
 23205                           ; BSR set to: 3
 23206                           ;mcc_generated_files/timer/src/tmr2.c: 59:     T2RST = (0 << 0x0);
 23207   0165CA  6B27               	clrf	39,b	;volatile
 23208   0165CC                     
 23209                           ; BSR set to: 3
 23210                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2PR = 0xFF;
 23211   0165CC  6923               	setf	35,b	;volatile
 23212   0165CE                     
 23213                           ; BSR set to: 3
 23214                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2TMR = 0x0;
 23215   0165CE  6B22               	clrf	34,b	;volatile
 23216   0165D0                     
 23217                           ; BSR set to: 3
 23218                           ;mcc_generated_files/timer/src/tmr2.c: 65:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
 23219   0165D0  0E00               	movlw	0
 23220   0165D2  0106               	movlb	6	; () banked
 23221   0165D4  6FF6               	movwf	_TMR2_PeriodMatchCallback& (0+255),b
 23222   0165D6  0E00               	movlw	0
 23223   0165D8  6FF7               	movwf	(_TMR2_PeriodMatchCallback+1)& (0+255),b
 23224   0165DA  0E00               	movlw	0
 23225   0165DC  6FF8               	movwf	(_TMR2_PeriodMatchCallback+2)& (0+255),b
 23226   0165DE                     
 23227                           ; BSR set to: 6
 23228                           ;mcc_generated_files/timer/src/tmr2.c: 67:     PIR3bits.TMR2IF = 0;
 23229   0165DE  96B1               	bcf	177,3,c	;volatile
 23230   0165E0                     
 23231                           ; BSR set to: 6
 23232                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2CON = (0 << 0x4)
 23233   0165E0  0E80               	movlw	128
 23234   0165E2  0103               	movlb	3	; () banked
 23235   0165E4  6F24               	movwf	36,b	;volatile
 23236   0165E6                     
 23237                           ; BSR set to: 3
 23238   0165E6  0012               	return		;funcret
 23239   0165E8                     __end_of_TMR2_Initialize:
 23240                           	callstack 0
 23241                           
 23242 ;; *************** function _TMR0_Initialize *****************
 23243 ;; Defined at:
 23244 ;;		line 46 in file "mcc_generated_files/timer/src/tmr0.c"
 23245 ;; Parameters:    Size  Location     Type
 23246 ;;		None
 23247 ;; Auto vars:     Size  Location     Type
 23248 ;;		None
 23249 ;; Return value:  Size  Location     Type
 23250 ;;                  1    wreg      void 
 23251 ;; Registers used:
 23252 ;;		wreg, status,2, status,0
 23253 ;; Tracked objects:
 23254 ;;		On entry : 0/0
 23255 ;;		On exit  : 0/0
 23256 ;;		Unchanged: 0/0
 23257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23262 ;;Total ram usage:        2 bytes
 23263 ;; Hardware stack levels used: 1
 23264 ;; Hardware stack levels required when called: 4
 23265 ;; This function calls:
 23266 ;;		Nothing
 23267 ;; This function is called by:
 23268 ;;		_SYSTEM_Initialize
 23269 ;;		_main
 23270 ;; This function uses a non-reentrant model
 23271 ;;
 23272                           
 23273                           	psect	text36
 23274   01651A                     __ptext36:
 23275                           	callstack 0
 23276   01651A                     _TMR0_Initialize:
 23277                           	callstack 122
 23278   01651A                     
 23279                           ;mcc_generated_files/timer/src/tmr0.c: 48:     TMR0H = 0x0;
 23280   01651A  0103               	movlb	3	; () banked
 23281   01651C  6B19               	clrf	25,b	;volatile
 23282                           
 23283                           ;mcc_generated_files/timer/src/tmr0.c: 49:     TMR0L = 0x0;
 23284   01651E  6B18               	clrf	24,b	;volatile
 23285   016520                     
 23286                           ; BSR set to: 3
 23287                           ;mcc_generated_files/timer/src/tmr0.c: 51:     T0CON1 = (3 << 0x5)
 23288   016520  0E70               	movlw	112
 23289   016522  6F1B               	movwf	27,b	;volatile
 23290                           
 23291                           ;mcc_generated_files/timer/src/tmr0.c: 55:     tmr0PeriodCount = ((uint16_t)TMR0H << 8) 
      +                          | TMR0L;
 23292   016524  5119               	movf	25,w,b	;volatile
 23293   016526  6E11               	movwf	??_TMR0_Initialize^(0+1280),c
 23294   016528  5118               	movf	24,w,b	;volatile
 23295   01652A  6E45               	movwf	_tmr0PeriodCount^(0+1280),c	;volatile
 23296   01652C  C511  F546         	movff	??_TMR0_Initialize,_tmr0PeriodCount+1	;volatile
 23297   016530                     
 23298                           ; BSR set to: 3
 23299                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0_OverflowCallback = TMR0_DefaultCallb
      +                          ack;
 23300   016530  0E00               	movlw	0
 23301   016532  0106               	movlb	6	; () banked
 23302   016534  6FF0               	movwf	_TMR0_OverflowCallback& (0+255),b
 23303   016536  0E00               	movlw	0
 23304   016538  6FF1               	movwf	(_TMR0_OverflowCallback+1)& (0+255),b
 23305   01653A  0E00               	movlw	0
 23306   01653C  6FF2               	movwf	(_TMR0_OverflowCallback+2)& (0+255),b
 23307   01653E                     
 23308                           ; BSR set to: 6
 23309                           ;mcc_generated_files/timer/src/tmr0.c: 58:     PIR3bits.TMR0IF = 0;
 23310   01653E  9EB1               	bcf	177,7,c	;volatile
 23311   016540                     
 23312                           ; BSR set to: 6
 23313                           ;mcc_generated_files/timer/src/tmr0.c: 60:     T0CON0 = (0 << 0x0)
 23314   016540  0E90               	movlw	144
 23315   016542  0103               	movlb	3	; () banked
 23316   016544  6F1A               	movwf	26,b	;volatile
 23317   016546                     
 23318                           ; BSR set to: 3
 23319   016546  0012               	return		;funcret
 23320   016548                     __end_of_TMR0_Initialize:
 23321                           	callstack 0
 23322                           
 23323 ;; *************** function _PIN_MANAGER_Initialize *****************
 23324 ;; Defined at:
 23325 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 23326 ;; Parameters:    Size  Location     Type
 23327 ;;		None
 23328 ;; Auto vars:     Size  Location     Type
 23329 ;;		None
 23330 ;; Return value:  Size  Location     Type
 23331 ;;                  1    wreg      void 
 23332 ;; Registers used:
 23333 ;;		wreg, status,2
 23334 ;; Tracked objects:
 23335 ;;		On entry : 0/0
 23336 ;;		On exit  : 0/0
 23337 ;;		Unchanged: 0/0
 23338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23343 ;;Total ram usage:        0 bytes
 23344 ;; Hardware stack levels used: 1
 23345 ;; Hardware stack levels required when called: 4
 23346 ;; This function calls:
 23347 ;;		Nothing
 23348 ;; This function is called by:
 23349 ;;		_SYSTEM_Initialize
 23350 ;; This function uses a non-reentrant model
 23351 ;;
 23352                           
 23353                           	psect	text37
 23354   0150D4                     __ptext37:
 23355                           	callstack 0
 23356   0150D4                     _PIN_MANAGER_Initialize:
 23357                           	callstack 121
 23358   0150D4                     
 23359                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 23360   0150D4  6ABE               	clrf	190,c	;volatile
 23361   0150D6                     
 23362                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x6;
 23363   0150D6  0E06               	movlw	6
 23364   0150D8  6EBF               	movwf	191,c	;volatile
 23365   0150DA                     
 23366                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 23367   0150DA  6AC0               	clrf	192,c	;volatile
 23368   0150DC                     
 23369                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 23370   0150DC  6AC1               	clrf	193,c	;volatile
 23371   0150DE                     
 23372                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 23373   0150DE  6AC2               	clrf	194,c	;volatile
 23374   0150E0                     
 23375                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 23376   0150E0  6AC3               	clrf	195,c	;volatile
 23377   0150E2                     
 23378                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 23379   0150E2  0104               	movlb	4	; () banked
 23380   0150E4  6B02               	clrf	2,b	;volatile
 23381                           
 23382                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x6;
 23383   0150E6  0E06               	movlw	6
 23384   0150E8  6F0A               	movwf	10,b	;volatile
 23385   0150EA                     
 23386                           ; BSR set to: 4
 23387                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 23388   0150EA  6B12               	clrf	18,b	;volatile
 23389   0150EC                     
 23390                           ; BSR set to: 4
 23391                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 23392   0150EC  6B1A               	clrf	26,b	;volatile
 23393   0150EE                     
 23394                           ; BSR set to: 4
 23395                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 23396   0150EE  6B22               	clrf	34,b	;volatile
 23397   0150F0                     
 23398                           ; BSR set to: 4
 23399                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 23400   0150F0  6B2A               	clrf	42,b	;volatile
 23401   0150F2                     
 23402                           ; BSR set to: 4
 23403                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFF;
 23404   0150F2  68C6               	setf	198,c	;volatile
 23405                           
 23406                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xF9;
 23407   0150F4  0EF9               	movlw	249
 23408   0150F6  6EC7               	movwf	199,c	;volatile
 23409                           
 23410                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0x3B;
 23411   0150F8  0E3B               	movlw	59
 23412   0150FA  6EC8               	movwf	200,c	;volatile
 23413                           
 23414                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xE0;
 23415   0150FC  0EE0               	movlw	224
 23416   0150FE  6EC9               	movwf	201,c	;volatile
 23417                           
 23418                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 23419   015100  0E0F               	movlw	15
 23420   015102  6ECA               	movwf	202,c	;volatile
 23421   015104                     
 23422                           ; BSR set to: 4
 23423                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xFF;
 23424   015104  68CB               	setf	203,c	;volatile
 23425                           
 23426                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xDF;
 23427   015106  0EDF               	movlw	223
 23428   015108  6F00               	movwf	0,b	;volatile
 23429                           
 23430                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xF9;
 23431   01510A  0EF9               	movlw	249
 23432   01510C  6F08               	movwf	8,b	;volatile
 23433                           
 23434                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0xF3;
 23435   01510E  0EF3               	movlw	243
 23436   015110  6F10               	movwf	16,b	;volatile
 23437                           
 23438                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xC0;
 23439   015112  0EC0               	movlw	192
 23440   015114  6F18               	movwf	24,b	;volatile
 23441                           
 23442                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 23443   015116  0E07               	movlw	7
 23444   015118  6F20               	movwf	32,b	;volatile
 23445   01511A                     
 23446                           ; BSR set to: 4
 23447                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xFF;
 23448   01511A  6928               	setf	40,b	;volatile
 23449   01511C                     
 23450                           ; BSR set to: 4
 23451                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 23452   01511C  6B01               	clrf	1,b	;volatile
 23453   01511E                     
 23454                           ; BSR set to: 4
 23455                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 23456   01511E  6B09               	clrf	9,b	;volatile
 23457   015120                     
 23458                           ; BSR set to: 4
 23459                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 23460   015120  6B11               	clrf	17,b	;volatile
 23461   015122                     
 23462                           ; BSR set to: 4
 23463                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 23464   015122  6B19               	clrf	25,b	;volatile
 23465   015124                     
 23466                           ; BSR set to: 4
 23467                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 23468   015124  6B21               	clrf	33,b	;volatile
 23469   015126                     
 23470                           ; BSR set to: 4
 23471                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 23472   015126  6B29               	clrf	41,b	;volatile
 23473   015128                     
 23474                           ; BSR set to: 4
 23475                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 23476   015128  6903               	setf	3,b	;volatile
 23477   01512A                     
 23478                           ; BSR set to: 4
 23479                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 23480   01512A  690B               	setf	11,b	;volatile
 23481   01512C                     
 23482                           ; BSR set to: 4
 23483                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 23484   01512C  6913               	setf	19,b	;volatile
 23485   01512E                     
 23486                           ; BSR set to: 4
 23487                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 23488   01512E  691B               	setf	27,b	;volatile
 23489                           
 23490                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 23491   015130  0E07               	movlw	7
 23492   015132  6F23               	movwf	35,b	;volatile
 23493   015134                     
 23494                           ; BSR set to: 4
 23495                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 23496   015134  692B               	setf	43,b	;volatile
 23497   015136                     
 23498                           ; BSR set to: 4
 23499                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 23500   015136  6904               	setf	4,b	;volatile
 23501   015138                     
 23502                           ; BSR set to: 4
 23503                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 23504   015138  690C               	setf	12,b	;volatile
 23505   01513A                     
 23506                           ; BSR set to: 4
 23507                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 23508   01513A  6914               	setf	20,b	;volatile
 23509   01513C                     
 23510                           ; BSR set to: 4
 23511                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 23512   01513C  691C               	setf	28,b	;volatile
 23513                           
 23514                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 23515   01513E  0E0F               	movlw	15
 23516   015140  6F24               	movwf	36,b	;volatile
 23517   015142                     
 23518                           ; BSR set to: 4
 23519                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 23520   015142  692C               	setf	44,b	;volatile
 23521                           
 23522                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x1;
 23523   015144  0E01               	movlw	1
 23524   015146  0102               	movlb	2	; () banked
 23525   015148  6F89               	movwf	137,b	;volatile
 23526                           
 23527                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x1;
 23528   01514A  0E01               	movlw	1
 23529   01514C  6F88               	movwf	136,b	;volatile
 23530   01514E                     
 23531                           ; BSR set to: 2
 23532                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 23533   01514E  6B87               	clrf	135,b	;volatile
 23534   015150                     
 23535                           ; BSR set to: 2
 23536                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 23537   015150  6B86               	clrf	134,b	;volatile
 23538                           
 23539                           ;mcc_generated_files/system/src/pins.c: 120:     INT0PPS = 0x5;
 23540   015152  0E05               	movlw	5
 23541   015154  6F3E               	movwf	62,b	;volatile
 23542                           
 23543                           ;mcc_generated_files/system/src/pins.c: 121:     U1RXPPS = 0x13;
 23544   015156  0E13               	movlw	19
 23545   015158  6F72               	movwf	114,b	;volatile
 23546                           
 23547                           ;mcc_generated_files/system/src/pins.c: 122:     RC7PPS = 0x16;
 23548   01515A  0E16               	movlw	22
 23549   01515C  6F18               	movwf	24,b	;volatile
 23550                           
 23551                           ;mcc_generated_files/system/src/pins.c: 123:     RC6PPS = 0x15;
 23552   01515E  0E15               	movlw	21
 23553   015160  6F17               	movwf	23,b	;volatile
 23554                           
 23555                           ;mcc_generated_files/system/src/pins.c: 124:     RC2PPS = 0x20;
 23556   015162  0E20               	movlw	32
 23557   015164  6F13               	movwf	19,b	;volatile
 23558                           
 23559                           ;mcc_generated_files/system/src/pins.c: 125:     I2C1SCLPPS = 0x9;
 23560   015166  0E09               	movlw	9
 23561   015168  6F71               	movwf	113,b	;volatile
 23562                           
 23563                           ;mcc_generated_files/system/src/pins.c: 126:     RB1PPS = 0x37;
 23564   01516A  0E37               	movlw	55
 23565   01516C  6F0A               	movwf	10,b	;volatile
 23566                           
 23567                           ;mcc_generated_files/system/src/pins.c: 127:     I2C1SDAPPS = 0xA;
 23568   01516E  0E0A               	movlw	10
 23569   015170  6F70               	movwf	112,b	;volatile
 23570                           
 23571                           ;mcc_generated_files/system/src/pins.c: 128:     RB2PPS = 0x38;
 23572   015172  0E38               	movlw	56
 23573   015174  6F0B               	movwf	11,b	;volatile
 23574   015176                     
 23575                           ; BSR set to: 2
 23576                           ;mcc_generated_files/system/src/pins.c: 133:     IOCAP = 0x0;
 23577   015176  0104               	movlb	4	; () banked
 23578   015178  6B05               	clrf	5,b	;volatile
 23579   01517A                     
 23580                           ; BSR set to: 4
 23581                           ;mcc_generated_files/system/src/pins.c: 134:     IOCAN = 0x0;
 23582   01517A  6B06               	clrf	6,b	;volatile
 23583   01517C                     
 23584                           ; BSR set to: 4
 23585                           ;mcc_generated_files/system/src/pins.c: 135:     IOCAF = 0x0;
 23586   01517C  6B07               	clrf	7,b	;volatile
 23587   01517E                     
 23588                           ; BSR set to: 4
 23589                           ;mcc_generated_files/system/src/pins.c: 136:     IOCBP = 0x0;
 23590   01517E  6B0D               	clrf	13,b	;volatile
 23591   015180                     
 23592                           ; BSR set to: 4
 23593                           ;mcc_generated_files/system/src/pins.c: 137:     IOCBN = 0x0;
 23594   015180  6B0E               	clrf	14,b	;volatile
 23595   015182                     
 23596                           ; BSR set to: 4
 23597                           ;mcc_generated_files/system/src/pins.c: 138:     IOCBF = 0x0;
 23598   015182  6B0F               	clrf	15,b	;volatile
 23599   015184                     
 23600                           ; BSR set to: 4
 23601                           ;mcc_generated_files/system/src/pins.c: 139:     IOCCP = 0x0;
 23602   015184  6B15               	clrf	21,b	;volatile
 23603   015186                     
 23604                           ; BSR set to: 4
 23605                           ;mcc_generated_files/system/src/pins.c: 140:     IOCCN = 0x0;
 23606   015186  6B16               	clrf	22,b	;volatile
 23607   015188                     
 23608                           ; BSR set to: 4
 23609                           ;mcc_generated_files/system/src/pins.c: 141:     IOCCF = 0x0;
 23610   015188  6B17               	clrf	23,b	;volatile
 23611   01518A                     
 23612                           ; BSR set to: 4
 23613                           ;mcc_generated_files/system/src/pins.c: 142:     IOCEP = 0x0;
 23614   01518A  6B25               	clrf	37,b	;volatile
 23615   01518C                     
 23616                           ; BSR set to: 4
 23617                           ;mcc_generated_files/system/src/pins.c: 143:     IOCEN = 0x0;
 23618   01518C  6B26               	clrf	38,b	;volatile
 23619   01518E                     
 23620                           ; BSR set to: 4
 23621                           ;mcc_generated_files/system/src/pins.c: 144:     IOCEF = 0x0;
 23622   01518E  6B27               	clrf	39,b	;volatile
 23623   015190                     
 23624                           ; BSR set to: 4
 23625   015190  0012               	return		;funcret
 23626   015192                     __end_of_PIN_MANAGER_Initialize:
 23627                           	callstack 0
 23628                           
 23629 ;; *************** function _INTERRUPT_Initialize *****************
 23630 ;; Defined at:
 23631 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 23632 ;; Parameters:    Size  Location     Type
 23633 ;;		None
 23634 ;; Auto vars:     Size  Location     Type
 23635 ;;  state           1   19[COMRAM] _Bool 
 23636 ;; Return value:  Size  Location     Type
 23637 ;;                  1    wreg      void 
 23638 ;; Registers used:
 23639 ;;		wreg, status,2, status,0, cstack
 23640 ;; Tracked objects:
 23641 ;;		On entry : 0/0
 23642 ;;		On exit  : 0/0
 23643 ;;		Unchanged: 0/0
 23644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23649 ;;Total ram usage:        1 bytes
 23650 ;; Hardware stack levels used: 1
 23651 ;; Hardware stack levels required when called: 5
 23652 ;; This function calls:
 23653 ;;		_INT0_SetInterruptHandler
 23654 ;;		_INT1_SetInterruptHandler
 23655 ;;		_INT2_SetInterruptHandler
 23656 ;; This function is called by:
 23657 ;;		_SYSTEM_Initialize
 23658 ;; This function uses a non-reentrant model
 23659 ;;
 23660                           
 23661                           	psect	text38
 23662   015972                     __ptext38:
 23663                           	callstack 0
 23664   015972                     _INTERRUPT_Initialize:
 23665                           	callstack 120
 23666   015972                     
 23667                           ;mcc_generated_files/system/src/interrupt.c: 44:     INTCON0bits.IPEN = 1;
 23668   015972  8AD6               	bsf	214,5,c	;volatile
 23669   015974                     
 23670                           ;mcc_generated_files/system/src/interrupt.c: 46:     _Bool state = (unsigned char)GIE;
 23671   015974  0E00               	movlw	0
 23672   015976  BED6               	btfsc	1238,7,c	;volatile
 23673   015978  0E01               	movlw	1
 23674   01597A  6E14               	movwf	INTERRUPT_Initialize@state^(0+1280),c
 23675   01597C                     
 23676                           ;mcc_generated_files/system/src/interrupt.c: 47:     GIE = 0;
 23677   01597C  9ED6               	bcf	1238,7,c	;volatile
 23678                           
 23679                           ;mcc_generated_files/system/src/interrupt.c: 48:     IVTLOCK = 0x55;
 23680   01597E  0E55               	movlw	85
 23681   015980  0104               	movlb	4	; () banked
 23682   015982  6F59               	movwf	89,b	;volatile
 23683                           
 23684                           ;mcc_generated_files/system/src/interrupt.c: 49:     IVTLOCK = 0xAA;
 23685   015984  0EAA               	movlw	170
 23686   015986  6F59               	movwf	89,b	;volatile
 23687   015988                     
 23688                           ; BSR set to: 4
 23689                           ;mcc_generated_files/system/src/interrupt.c: 50:     IVTLOCKbits.IVTLOCKED = 0x00;
 23690   015988  9159               	bcf	89,0,b	;volatile
 23691   01598A                     
 23692                           ; BSR set to: 4
 23693                           ;mcc_generated_files/system/src/interrupt.c: 52:     IVTBASEU = 0;
 23694   01598A  6B5F               	clrf	95,b	;volatile
 23695   01598C                     
 23696                           ; BSR set to: 4
 23697                           ;mcc_generated_files/system/src/interrupt.c: 53:     IVTBASEH = 0;
 23698   01598C  6B5E               	clrf	94,b	;volatile
 23699                           
 23700                           ;mcc_generated_files/system/src/interrupt.c: 54:     IVTBASEL = 8;
 23701   01598E  0E08               	movlw	8
 23702   015990  6F5D               	movwf	93,b	;volatile
 23703                           
 23704                           ;mcc_generated_files/system/src/interrupt.c: 56:     IVTLOCK = 0x55;
 23705   015992  0E55               	movlw	85
 23706   015994  6F59               	movwf	89,b	;volatile
 23707                           
 23708                           ;mcc_generated_files/system/src/interrupt.c: 57:     IVTLOCK = 0xAA;
 23709   015996  0EAA               	movlw	170
 23710   015998  6F59               	movwf	89,b	;volatile
 23711   01599A                     
 23712                           ; BSR set to: 4
 23713                           ;mcc_generated_files/system/src/interrupt.c: 58:     IVTLOCKbits.IVTLOCKED = 0x01;
 23714   01599A  8159               	bsf	89,0,b	;volatile
 23715   01599C                     
 23716                           ; BSR set to: 4
 23717                           ;mcc_generated_files/system/src/interrupt.c: 60:     GIE = state;
 23718   01599C  B014               	btfsc	INTERRUPT_Initialize@state^(0+1280),0,c
 23719   01599E  D002               	bra	u6565
 23720   0159A0  9ED6               	bcf	1238,7,c	;volatile
 23721   0159A2  D001               	bra	u6566
 23722   0159A4                     u6565:
 23723   0159A4  8ED6               	bsf	1238,7,c	;volatile
 23724   0159A6                     u6566:
 23725   0159A6                     
 23726                           ;mcc_generated_files/system/src/interrupt.c: 62:     IPR1bits.INT0IP = 1;
 23727   0159A6  0103               	movlb	3	; () banked
 23728   0159A8  8163               	bsf	99,0,b	;volatile
 23729   0159AA                     
 23730                           ; BSR set to: 3
 23731                           ;mcc_generated_files/system/src/interrupt.c: 63:     IPR4bits.U1RXIP = 1;
 23732   0159AA  8166               	bsf	102,0,b	;volatile
 23733   0159AC                     
 23734                           ; BSR set to: 3
 23735                           ;mcc_generated_files/system/src/interrupt.c: 64:     IPR4bits.U1TXIP = 1;
 23736   0159AC  8366               	bsf	102,1,b	;volatile
 23737   0159AE                     
 23738                           ; BSR set to: 3
 23739                           ;mcc_generated_files/system/src/interrupt.c: 65:     IPR7bits.I2C1RXIP = 1;
 23740   0159AE  8169               	bsf	105,0,b	;volatile
 23741   0159B0                     
 23742                           ; BSR set to: 3
 23743                           ;mcc_generated_files/system/src/interrupt.c: 66:     IPR7bits.I2C1TXIP = 1;
 23744   0159B0  8369               	bsf	105,1,b	;volatile
 23745   0159B2                     
 23746                           ; BSR set to: 3
 23747                           ;mcc_generated_files/system/src/interrupt.c: 67:     IPR7bits.I2C1IP = 1;
 23748   0159B2  8569               	bsf	105,2,b	;volatile
 23749   0159B4                     
 23750                           ; BSR set to: 3
 23751                           ;mcc_generated_files/system/src/interrupt.c: 68:     IPR7bits.I2C1EIP = 1;
 23752   0159B4  8769               	bsf	105,3,b	;volatile
 23753   0159B6                     
 23754                           ; BSR set to: 3
 23755                           ;mcc_generated_files/system/src/interrupt.c: 72:     (PIR1bits.INT0IF = 0);
 23756   0159B6  90AF               	bcf	175,0,c	;volatile
 23757   0159B8                     
 23758                           ; BSR set to: 3
 23759                           ;mcc_generated_files/system/src/interrupt.c: 73:     (INTCON0bits.INT0EDG = 1);
 23760   0159B8  80D6               	bsf	214,0,c	;volatile
 23761   0159BA                     
 23762                           ; BSR set to: 3
 23763                           ;mcc_generated_files/system/src/interrupt.c: 75:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 23764   0159BA  0E5E               	movlw	low _INT0_DefaultInterruptHandler
 23765   0159BC  6E11               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 23766   0159BE  0E6A               	movlw	high _INT0_DefaultInterruptHandler
 23767   0159C0  6E12               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 23768   0159C2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23769   0159C4  6E13               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 23770   0159C6  ECD1  F0B4         	call	_INT0_SetInterruptHandler	;wreg free
 23771   0159CA                     
 23772                           ;mcc_generated_files/system/src/interrupt.c: 76:     (PIE1bits.INT0IE = 1);
 23773   0159CA  809F               	bsf	159,0,c	;volatile
 23774   0159CC                     
 23775                           ;mcc_generated_files/system/src/interrupt.c: 80:     (PIR6bits.INT1IF = 0);
 23776   0159CC  90B4               	bcf	180,0,c	;volatile
 23777   0159CE                     
 23778                           ;mcc_generated_files/system/src/interrupt.c: 81:     (INTCON0bits.INT1EDG = 1);
 23779   0159CE  82D6               	bsf	214,1,c	;volatile
 23780   0159D0                     
 23781                           ;mcc_generated_files/system/src/interrupt.c: 83:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 23782   0159D0  0E60               	movlw	low _INT1_DefaultInterruptHandler
 23783   0159D2  6E11               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 23784   0159D4  0E6A               	movlw	high _INT1_DefaultInterruptHandler
 23785   0159D6  6E12               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 23786   0159D8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23787   0159DA  6E13               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 23788   0159DC  ECCA  F0B4         	call	_INT1_SetInterruptHandler	;wreg free
 23789   0159E0                     
 23790                           ;mcc_generated_files/system/src/interrupt.c: 88:     (PIR10bits.INT2IF = 0);
 23791   0159E0  90B8               	bcf	184,0,c	;volatile
 23792   0159E2                     
 23793                           ;mcc_generated_files/system/src/interrupt.c: 89:     (INTCON0bits.INT2EDG = 1);
 23794   0159E2  84D6               	bsf	214,2,c	;volatile
 23795   0159E4                     
 23796                           ;mcc_generated_files/system/src/interrupt.c: 91:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 23797   0159E4  0E62               	movlw	low _INT2_DefaultInterruptHandler
 23798   0159E6  6E11               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 23799   0159E8  0E6A               	movlw	high _INT2_DefaultInterruptHandler
 23800   0159EA  6E12               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 23801   0159EC  0E01               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 23802   0159EE  6E13               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 23803   0159F0  ECC3  F0B4         	call	_INT2_SetInterruptHandler	;wreg free
 23804   0159F4  0012               	return		;funcret
 23805   0159F6                     __end_of_INTERRUPT_Initialize:
 23806                           	callstack 0
 23807                           
 23808 ;; *************** function _INT2_SetInterruptHandler *****************
 23809 ;; Defined at:
 23810 ;;		line 195 in file "mcc_generated_files/system/src/interrupt.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;  InterruptHan    3   16[COMRAM] PTR FTN()void 
 23813 ;;		 -> INT2_DefaultInterruptHandler(1), 
 23814 ;; Auto vars:     Size  Location     Type
 23815 ;;		None
 23816 ;; Return value:  Size  Location     Type
 23817 ;;                  1    wreg      void 
 23818 ;; Registers used:
 23819 ;;		wreg, status,2, status,0
 23820 ;; Tracked objects:
 23821 ;;		On entry : 0/0
 23822 ;;		On exit  : 0/0
 23823 ;;		Unchanged: 0/0
 23824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23829 ;;Total ram usage:        3 bytes
 23830 ;; Hardware stack levels used: 1
 23831 ;; Hardware stack levels required when called: 4
 23832 ;; This function calls:
 23833 ;;		Nothing
 23834 ;; This function is called by:
 23835 ;;		_INTERRUPT_Initialize
 23836 ;; This function uses a non-reentrant model
 23837 ;;
 23838                           
 23839                           	psect	text39
 23840   016986                     __ptext39:
 23841                           	callstack 0
 23842   016986                     _INT2_SetInterruptHandler:
 23843                           	callstack 120
 23844   016986                     
 23845                           ;mcc_generated_files/system/src/interrupt.c: 196:     INT2_InterruptHandler = InterruptH
      +                          andler;
 23846   016986  C511  F6BE         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 23847   01698A  C512  F6BF         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 23848   01698E  C513  F6C0         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 23849   016992  0012               	return		;funcret
 23850   016994                     __end_of_INT2_SetInterruptHandler:
 23851                           	callstack 0
 23852                           
 23853 ;; *************** function _INT1_SetInterruptHandler *****************
 23854 ;; Defined at:
 23855 ;;		line 161 in file "mcc_generated_files/system/src/interrupt.c"
 23856 ;; Parameters:    Size  Location     Type
 23857 ;;  InterruptHan    3   16[COMRAM] PTR FTN()void 
 23858 ;;		 -> INT1_DefaultInterruptHandler(1), 
 23859 ;; Auto vars:     Size  Location     Type
 23860 ;;		None
 23861 ;; Return value:  Size  Location     Type
 23862 ;;                  1    wreg      void 
 23863 ;; Registers used:
 23864 ;;		wreg, status,2, status,0
 23865 ;; Tracked objects:
 23866 ;;		On entry : 0/0
 23867 ;;		On exit  : 0/0
 23868 ;;		Unchanged: 0/0
 23869 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23873 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23874 ;;Total ram usage:        3 bytes
 23875 ;; Hardware stack levels used: 1
 23876 ;; Hardware stack levels required when called: 4
 23877 ;; This function calls:
 23878 ;;		Nothing
 23879 ;; This function is called by:
 23880 ;;		_INTERRUPT_Initialize
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	text40
 23885   016994                     __ptext40:
 23886                           	callstack 0
 23887   016994                     _INT1_SetInterruptHandler:
 23888                           	callstack 120
 23889   016994                     
 23890                           ;mcc_generated_files/system/src/interrupt.c: 162:     INT1_InterruptHandler = InterruptH
      +                          andler;
 23891   016994  C511  F6C1         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 23892   016998  C512  F6C2         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 23893   01699C  C513  F6C3         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 23894   0169A0  0012               	return		;funcret
 23895   0169A2                     __end_of_INT1_SetInterruptHandler:
 23896                           	callstack 0
 23897                           
 23898 ;; *************** function _INT0_SetInterruptHandler *****************
 23899 ;; Defined at:
 23900 ;;		line 127 in file "mcc_generated_files/system/src/interrupt.c"
 23901 ;; Parameters:    Size  Location     Type
 23902 ;;  InterruptHan    3   16[COMRAM] PTR FTN()void 
 23903 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23904 ;; Auto vars:     Size  Location     Type
 23905 ;;		None
 23906 ;; Return value:  Size  Location     Type
 23907 ;;                  1    wreg      void 
 23908 ;; Registers used:
 23909 ;;		wreg, status,2, status,0
 23910 ;; Tracked objects:
 23911 ;;		On entry : 0/0
 23912 ;;		On exit  : 0/0
 23913 ;;		Unchanged: 0/0
 23914 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;Total ram usage:        3 bytes
 23920 ;; Hardware stack levels used: 1
 23921 ;; Hardware stack levels required when called: 4
 23922 ;; This function calls:
 23923 ;;		Nothing
 23924 ;; This function is called by:
 23925 ;;		_INTERRUPT_Initialize
 23926 ;; This function uses a non-reentrant model
 23927 ;;
 23928                           
 23929                           	psect	text41
 23930   0169A2                     __ptext41:
 23931                           	callstack 0
 23932   0169A2                     _INT0_SetInterruptHandler:
 23933                           	callstack 120
 23934   0169A2                     
 23935                           ;mcc_generated_files/system/src/interrupt.c: 128:     INT0_InterruptHandler = InterruptH
      +                          andler;
 23936   0169A2  C511  F6C4         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 23937   0169A6  C512  F6C5         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 23938   0169AA  C513  F6C6         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 23939   0169AE  0012               	return		;funcret
 23940   0169B0                     __end_of_INT0_SetInterruptHandler:
 23941                           	callstack 0
 23942                           
 23943 ;; *************** function _I2C1_Initialize *****************
 23944 ;; Defined at:
 23945 ;;		line 100 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 23946 ;; Parameters:    Size  Location     Type
 23947 ;;		None
 23948 ;; Auto vars:     Size  Location     Type
 23949 ;;		None
 23950 ;; Return value:  Size  Location     Type
 23951 ;;                  1    wreg      void 
 23952 ;; Registers used:
 23953 ;;		wreg, status,2, status,0, cstack
 23954 ;; Tracked objects:
 23955 ;;		On entry : 0/0
 23956 ;;		On exit  : 0/0
 23957 ;;		Unchanged: 0/0
 23958 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;Total ram usage:        0 bytes
 23964 ;; Hardware stack levels used: 1
 23965 ;; Hardware stack levels required when called: 5
 23966 ;; This function calls:
 23967 ;;		_I2C1_InterruptsEnable
 23968 ;; This function is called by:
 23969 ;;		_SYSTEM_Initialize
 23970 ;; This function uses a non-reentrant model
 23971 ;;
 23972                           
 23973                           	psect	text42
 23974   015DFA                     __ptext42:
 23975                           	callstack 0
 23976   015DFA                     _I2C1_Initialize:
 23977                           	callstack 120
 23978   015DFA                     
 23979                           ;mcc_generated_files/i2c_host/src/i2c1.c: 103:     I2C1CON0 = 0x4;
 23980   015DFA  0E04               	movlw	4
 23981   015DFC  0102               	movlb	2	; () banked
 23982   015DFE  6F94               	movwf	148,b	;volatile
 23983                           
 23984                           ;mcc_generated_files/i2c_host/src/i2c1.c: 105:     I2C1CON1 = 0x80;
 23985   015E00  0E80               	movlw	128
 23986   015E02  6F95               	movwf	149,b	;volatile
 23987                           
 23988                           ;mcc_generated_files/i2c_host/src/i2c1.c: 107:     I2C1CON2 = 0x8;
 23989   015E04  0E08               	movlw	8
 23990   015E06  6F96               	movwf	150,b	;volatile
 23991                           
 23992                           ;mcc_generated_files/i2c_host/src/i2c1.c: 109:     I2C1CLK = 0x3;
 23993   015E08  0E03               	movlw	3
 23994   015E0A  6F9C               	movwf	156,b	;volatile
 23995   015E0C                     
 23996                           ; BSR set to: 2
 23997                           ;mcc_generated_files/i2c_host/src/i2c1.c: 111:     I2C1PIR = 0x0;
 23998   015E0C  6B9A               	clrf	154,b	;volatile
 23999   015E0E                     
 24000                           ; BSR set to: 2
 24001                           ;mcc_generated_files/i2c_host/src/i2c1.c: 113:     I2C1PIE = 0x0;
 24002   015E0E  6B9B               	clrf	155,b	;volatile
 24003   015E10                     
 24004                           ; BSR set to: 2
 24005                           ;mcc_generated_files/i2c_host/src/i2c1.c: 115:     I2C1ERR = 0x0;
 24006   015E10  6B97               	clrf	151,b	;volatile
 24007   015E12                     
 24008                           ; BSR set to: 2
 24009                           ;mcc_generated_files/i2c_host/src/i2c1.c: 117:     I2C1CNT = 0x0;
 24010   015E12  6B8D               	clrf	141,b	;volatile
 24011                           
 24012                           ;mcc_generated_files/i2c_host/src/i2c1.c: 119:     RB1I2C = 0x51;
 24013   015E14  0E51               	movlw	81
 24014   015E16  6F89               	movwf	137,b	;volatile
 24015                           
 24016                           ;mcc_generated_files/i2c_host/src/i2c1.c: 121:     RB2I2C = 0x51;
 24017   015E18  0E51               	movlw	81
 24018   015E1A  6F88               	movwf	136,b	;volatile
 24019   015E1C                     
 24020                           ; BSR set to: 2
 24021                           ;mcc_generated_files/i2c_host/src/i2c1.c: 122:     I2C1_InterruptsEnable();
 24022   015E1C  EC80  F0B4         	call	_I2C1_InterruptsEnable	;wreg free
 24023   015E20                     
 24024                           ;mcc_generated_files/i2c_host/src/i2c1.c: 126:     I2C1PIEbits.SCIE = 0;
 24025   015E20  0102               	movlb	2	; () banked
 24026   015E22  919B               	bcf	155,0,b	;volatile
 24027   015E24                     
 24028                           ; BSR set to: 2
 24029                           ;mcc_generated_files/i2c_host/src/i2c1.c: 127:     I2C1PIEbits.PCIE = 0;
 24030   015E24  959B               	bcf	155,2,b	;volatile
 24031   015E26                     
 24032                           ; BSR set to: 2
 24033                           ;mcc_generated_files/i2c_host/src/i2c1.c: 128:     I2C1CON0bits.EN = 1;
 24034   015E26  8F94               	bsf	148,7,b	;volatile
 24035   015E28                     
 24036                           ; BSR set to: 2
 24037                           ;mcc_generated_files/i2c_host/src/i2c1.c: 129:     _delay((unsigned long)((1)*(64000000U
      +                          /4000000.0)));
 24038   015E28  0E05               	movlw	5
 24039   015E2A                     u10717:
 24040   015E2A  2EE8               	decfsz	wreg,f,c
 24041   015E2C  D7FE               	bra	u10717
 24042   015E2E  0000               	nop	
 24043   015E30                     
 24044                           ;mcc_generated_files/i2c_host/src/i2c1.c: 130:     __nop();
 24045   015E30  0000               	nop	
 24046   015E32                     
 24047                           ;mcc_generated_files/i2c_host/src/i2c1.c: 131:     __nop();
 24048   015E32  0000               	nop	
 24049   015E34                     
 24050                           ;mcc_generated_files/i2c_host/src/i2c1.c: 132:     __nop();
 24051   015E34  0000               	nop	
 24052   015E36                     
 24053                           ;mcc_generated_files/i2c_host/src/i2c1.c: 133:     __nop();
 24054   015E36  0000               	nop	
 24055   015E38                     
 24056                           ;mcc_generated_files/i2c_host/src/i2c1.c: 134:     __nop();
 24057   015E38  0000               	nop	
 24058   015E3A                     
 24059                           ;mcc_generated_files/i2c_host/src/i2c1.c: 135:     __nop();
 24060   015E3A  0000               	nop	
 24061   015E3C                     
 24062                           ;mcc_generated_files/i2c_host/src/i2c1.c: 136:     I2C1PIRbits.SCIF = 0;
 24063   015E3C  0102               	movlb	2	; () banked
 24064   015E3E  919A               	bcf	154,0,b	;volatile
 24065   015E40                     
 24066                           ; BSR set to: 2
 24067                           ;mcc_generated_files/i2c_host/src/i2c1.c: 137:     I2C1PIRbits.PCIF = 0;
 24068   015E40  959A               	bcf	154,2,b	;volatile
 24069   015E42                     
 24070                           ; BSR set to: 2
 24071                           ;mcc_generated_files/i2c_host/src/i2c1.c: 138:     I2C1PIEbits.PCIE = 1;
 24072   015E42  859B               	bsf	155,2,b	;volatile
 24073   015E44                     
 24074                           ; BSR set to: 2
 24075                           ;mcc_generated_files/i2c_host/src/i2c1.c: 139:     I2C1_Callback = ((void*)0);
 24076   015E44  0E00               	movlw	0
 24077   015E46  0106               	movlb	6	; () banked
 24078   015E48  6FC7               	movwf	_I2C1_Callback& (0+255),b
 24079   015E4A  0E00               	movlw	0
 24080   015E4C  6FC8               	movwf	(_I2C1_Callback+1)& (0+255),b
 24081   015E4E  0E00               	movlw	0
 24082   015E50  6FC9               	movwf	(_I2C1_Callback+2)& (0+255),b
 24083   015E52                     
 24084                           ; BSR set to: 6
 24085   015E52  0012               	return		;funcret
 24086   015E54                     __end_of_I2C1_Initialize:
 24087                           	callstack 0
 24088                           
 24089 ;; *************** function _I2C1_InterruptsEnable *****************
 24090 ;; Defined at:
 24091 ;;		line 456 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 24092 ;; Parameters:    Size  Location     Type
 24093 ;;		None
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;		None
 24096 ;; Return value:  Size  Location     Type
 24097 ;;                  1    wreg      void 
 24098 ;; Registers used:
 24099 ;;		None
 24100 ;; Tracked objects:
 24101 ;;		On entry : 0/0
 24102 ;;		On exit  : 0/0
 24103 ;;		Unchanged: 0/0
 24104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;Total ram usage:        0 bytes
 24110 ;; Hardware stack levels used: 1
 24111 ;; Hardware stack levels required when called: 4
 24112 ;; This function calls:
 24113 ;;		Nothing
 24114 ;; This function is called by:
 24115 ;;		_I2C1_Initialize
 24116 ;; This function uses a non-reentrant model
 24117 ;;
 24118                           
 24119                           	psect	text43
 24120   016900                     __ptext43:
 24121                           	callstack 0
 24122   016900                     _I2C1_InterruptsEnable:
 24123                           	callstack 120
 24124   016900                     
 24125                           ;mcc_generated_files/i2c_host/src/i2c1.c: 458:     PIE7bits.I2C1IE = 1;
 24126   016900  84A5               	bsf	165,2,c	;volatile
 24127                           
 24128                           ;mcc_generated_files/i2c_host/src/i2c1.c: 459:     PIE7bits.I2C1EIE = 1;
 24129   016902  86A5               	bsf	165,3,c	;volatile
 24130                           
 24131                           ;mcc_generated_files/i2c_host/src/i2c1.c: 460:     PIE7bits.I2C1RXIE = 1;
 24132   016904  80A5               	bsf	165,0,c	;volatile
 24133                           
 24134                           ;mcc_generated_files/i2c_host/src/i2c1.c: 461:     PIE7bits.I2C1TXIE = 1;
 24135   016906  82A5               	bsf	165,1,c	;volatile
 24136                           
 24137                           ;mcc_generated_files/i2c_host/src/i2c1.c: 463:     I2C1PIEbits.PCIE = 1;
 24138   016908  0102               	movlb	2	; () banked
 24139   01690A  859B               	bsf	155,2,b	;volatile
 24140                           
 24141                           ;mcc_generated_files/i2c_host/src/i2c1.c: 464:     I2C1PIEbits.RSCIE = 1;
 24142   01690C  839B               	bsf	155,1,b	;volatile
 24143                           
 24144                           ;mcc_generated_files/i2c_host/src/i2c1.c: 465:     I2C1PIEbits.CNTIE = 1;
 24145   01690E  8F9B               	bsf	155,7,b	;volatile
 24146                           
 24147                           ;mcc_generated_files/i2c_host/src/i2c1.c: 466:     I2C1ERRbits.NACKIE = 1;
 24148   016910  8197               	bsf	151,0,b	;volatile
 24149   016912                     
 24150                           ; BSR set to: 2
 24151   016912  0012               	return		;funcret
 24152   016914                     __end_of_I2C1_InterruptsEnable:
 24153                           	callstack 0
 24154                           
 24155 ;; *************** function _CLOCK_Initialize *****************
 24156 ;; Defined at:
 24157 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 24158 ;; Parameters:    Size  Location     Type
 24159 ;;		None
 24160 ;; Auto vars:     Size  Location     Type
 24161 ;;		None
 24162 ;; Return value:  Size  Location     Type
 24163 ;;                  1    wreg      void 
 24164 ;; Registers used:
 24165 ;;		wreg, status,2
 24166 ;; Tracked objects:
 24167 ;;		On entry : 0/0
 24168 ;;		On exit  : 0/0
 24169 ;;		Unchanged: 0/0
 24170 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24175 ;;Total ram usage:        0 bytes
 24176 ;; Hardware stack levels used: 1
 24177 ;; Hardware stack levels required when called: 4
 24178 ;; This function calls:
 24179 ;;		Nothing
 24180 ;; This function is called by:
 24181 ;;		_SYSTEM_Initialize
 24182 ;; This function uses a non-reentrant model
 24183 ;;
 24184                           
 24185                           	psect	text44
 24186   016914                     __ptext44:
 24187                           	callstack 0
 24188   016914                     _CLOCK_Initialize:
 24189                           	callstack 121
 24190   016914                     
 24191                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 24192   016914  0E60               	movlw	96
 24193   016916  0100               	movlb	0	; () banked
 24194   016918  6FAD               	movwf	173,b	;volatile
 24195   01691A                     
 24196                           ; BSR set to: 0
 24197                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 24198   01691A  6BAF               	clrf	175,b	;volatile
 24199   01691C                     
 24200                           ; BSR set to: 0
 24201                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 24202   01691C  6BB3               	clrf	179,b	;volatile
 24203                           
 24204                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 24205   01691E  0E08               	movlw	8
 24206   016920  6FB1               	movwf	177,b	;volatile
 24207   016922                     
 24208                           ; BSR set to: 0
 24209                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 24210   016922  6BB0               	clrf	176,b	;volatile
 24211   016924                     
 24212                           ; BSR set to: 0
 24213                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 24214   016924  6BAC               	clrf	172,b	;volatile
 24215   016926                     
 24216                           ; BSR set to: 0
 24217   016926  0012               	return		;funcret
 24218   016928                     __end_of_CLOCK_Initialize:
 24219                           	callstack 0
 24220                           
 24221 ;; *************** function _CCP2_Initialize *****************
 24222 ;; Defined at:
 24223 ;;		line 51 in file "mcc_generated_files/pwm/src/ccp2.c"
 24224 ;; Parameters:    Size  Location     Type
 24225 ;;		None
 24226 ;; Auto vars:     Size  Location     Type
 24227 ;;		None
 24228 ;; Return value:  Size  Location     Type
 24229 ;;                  1    wreg      void 
 24230 ;; Registers used:
 24231 ;;		wreg, status,2
 24232 ;; Tracked objects:
 24233 ;;		On entry : 0/0
 24234 ;;		On exit  : 0/0
 24235 ;;		Unchanged: 0/0
 24236 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24241 ;;Total ram usage:        0 bytes
 24242 ;; Hardware stack levels used: 1
 24243 ;; Hardware stack levels required when called: 4
 24244 ;; This function calls:
 24245 ;;		Nothing
 24246 ;; This function is called by:
 24247 ;;		_SYSTEM_Initialize
 24248 ;; This function uses a non-reentrant model
 24249 ;;
 24250                           
 24251                           	psect	text45
 24252   0167E2                     __ptext45:
 24253                           	callstack 0
 24254   0167E2                     _CCP2_Initialize:
 24255                           	callstack 121
 24256   0167E2                     
 24257                           ;mcc_generated_files/pwm/src/ccp2.c: 56:     CCP2CON = 0x8C;
 24258   0167E2  0E8C               	movlw	140
 24259   0167E4  0103               	movlb	3	; () banked
 24260   0167E6  6F46               	movwf	70,b	;volatile
 24261                           
 24262                           ;mcc_generated_files/pwm/src/ccp2.c: 59:     CCPR2H = 0x1;
 24263   0167E8  0E01               	movlw	1
 24264   0167EA  6F45               	movwf	69,b	;volatile
 24265   0167EC                     
 24266                           ; BSR set to: 3
 24267                           ;mcc_generated_files/pwm/src/ccp2.c: 62:     CCPR2L = 0xFF;
 24268   0167EC  6944               	setf	68,b	;volatile
 24269                           
 24270                           ;mcc_generated_files/pwm/src/ccp2.c: 65:     CCPTMRS0bits.C2TSEL = 0x2;
 24271   0167EE  514C               	movf	76,w,b	;volatile
 24272   0167F0  0BF3               	andlw	-13
 24273   0167F2  0908               	iorlw	8
 24274   0167F4  6F4C               	movwf	76,b	;volatile
 24275   0167F6                     
 24276                           ; BSR set to: 3
 24277   0167F6  0012               	return		;funcret
 24278   0167F8                     __end_of_CCP2_Initialize:
 24279                           	callstack 0
 24280                           
 24281 ;; *************** function _CCP1_Initialize *****************
 24282 ;; Defined at:
 24283 ;;		line 51 in file "mcc_generated_files/pwm/src/ccp1.c"
 24284 ;; Parameters:    Size  Location     Type
 24285 ;;		None
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;		None
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      void 
 24290 ;; Registers used:
 24291 ;;		wreg, status,2
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used: 1
 24303 ;; Hardware stack levels required when called: 4
 24304 ;; This function calls:
 24305 ;;		Nothing
 24306 ;; This function is called by:
 24307 ;;		_SYSTEM_Initialize
 24308 ;; This function uses a non-reentrant model
 24309 ;;
 24310                           
 24311                           	psect	text46
 24312   0167F8                     __ptext46:
 24313                           	callstack 0
 24314   0167F8                     _CCP1_Initialize:
 24315                           	callstack 121
 24316   0167F8                     
 24317                           ;mcc_generated_files/pwm/src/ccp1.c: 56:     CCP1CON = 0x8C;
 24318   0167F8  0E8C               	movlw	140
 24319   0167FA  0103               	movlb	3	; () banked
 24320   0167FC  6F42               	movwf	66,b	;volatile
 24321                           
 24322                           ;mcc_generated_files/pwm/src/ccp1.c: 59:     CCPR1H = 0x1;
 24323   0167FE  0E01               	movlw	1
 24324   016800  6F41               	movwf	65,b	;volatile
 24325   016802                     
 24326                           ; BSR set to: 3
 24327                           ;mcc_generated_files/pwm/src/ccp1.c: 62:     CCPR1L = 0xFF;
 24328   016802  6940               	setf	64,b	;volatile
 24329                           
 24330                           ;mcc_generated_files/pwm/src/ccp1.c: 65:     CCPTMRS0bits.C1TSEL = 0x1;
 24331   016804  514C               	movf	76,w,b	;volatile
 24332   016806  0BFC               	andlw	-4
 24333   016808  0901               	iorlw	1
 24334   01680A  6F4C               	movwf	76,b	;volatile
 24335   01680C                     
 24336                           ; BSR set to: 3
 24337   01680C  0012               	return		;funcret
 24338   01680E                     __end_of_CCP1_Initialize:
 24339                           	callstack 0
 24340                           
 24341 ;; *************** function _Robot_TurnRight *****************
 24342 ;; Defined at:
 24343 ;;		line 285 in file "MotorControl.c"
 24344 ;; Parameters:    Size  Location     Type
 24345 ;;  speed_pwm_du    2   17[BANK5 ] unsigned short 
 24346 ;; Auto vars:     Size  Location     Type
 24347 ;;		None
 24348 ;; Return value:  Size  Location     Type
 24349 ;;                  1    wreg      void 
 24350 ;; Registers used:
 24351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24352 ;; Tracked objects:
 24353 ;;		On entry : 0/0
 24354 ;;		On exit  : 0/0
 24355 ;;		Unchanged: 0/0
 24356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24360 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24361 ;;Total ram usage:        2 bytes
 24362 ;; Hardware stack levels used: 1
 24363 ;; Hardware stack levels required when called: 9
 24364 ;; This function calls:
 24365 ;;		_Motors_SynchronizedDirection
 24366 ;; This function is called by:
 24367 ;;		_main
 24368 ;; This function uses a non-reentrant model
 24369 ;;
 24370                           
 24371                           	psect	text47
 24372   01680E                     __ptext47:
 24373                           	callstack 0
 24374   01680E                     _Robot_TurnRight:
 24375                           	callstack 117
 24376   01680E                     
 24377                           ;MotorControl.c: 285: void Robot_TurnRight(uint16_t speed_pwm_duty);MotorControl.c: 286:
      +                           {;MotorControl.c: 289:     Motors_SynchronizedDirection(MOTOR_FORWARD, MOTOR_BACKWARD, 
      +                          speed_pwm_duty);
 24378   01680E  0E02               	movlw	2
 24379   016810  0105               	movlb	5	; () banked
 24380   016812  6F69               	movwf	Motors_SynchronizedDirection@dir_b& (0+255),b
 24381   016814  C571  F56A         	movff	Robot_TurnRight@speed_pwm_duty,Motors_SynchronizedDirection@pwm_duty_value
 24382   016818  C572  F56B         	movff	Robot_TurnRight@speed_pwm_duty+1,Motors_SynchronizedDirection@pwm_duty_value+1
 24383   01681C  0E01               	movlw	1
 24384   01681E  EC28  F0A9         	call	_Motors_SynchronizedDirection
 24385   016822  0012               	return		;funcret
 24386   016824                     __end_of_Robot_TurnRight:
 24387                           	callstack 0
 24388                           
 24389 ;; *************** function _Robot_TurnLeft *****************
 24390 ;; Defined at:
 24391 ;;		line 277 in file "MotorControl.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;  speed_pwm_du    2   17[BANK5 ] unsigned short 
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24405 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24408 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24409 ;;Total ram usage:        2 bytes
 24410 ;; Hardware stack levels used: 1
 24411 ;; Hardware stack levels required when called: 9
 24412 ;; This function calls:
 24413 ;;		_Motors_SynchronizedDirection
 24414 ;; This function is called by:
 24415 ;;		_main
 24416 ;; This function uses a non-reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text48
 24420   016824                     __ptext48:
 24421                           	callstack 0
 24422   016824                     _Robot_TurnLeft:
 24423                           	callstack 117
 24424   016824                     
 24425                           ;MotorControl.c: 277: void Robot_TurnLeft(uint16_t speed_pwm_duty);MotorControl.c: 278: 
      +                          {;MotorControl.c: 282:     Motors_SynchronizedDirection(MOTOR_BACKWARD, MOTOR_FORWARD, s
      +                          peed_pwm_duty);
 24426   016824  0E01               	movlw	1
 24427   016826  0105               	movlb	5	; () banked
 24428   016828  6F69               	movwf	Motors_SynchronizedDirection@dir_b& (0+255),b
 24429   01682A  C571  F56A         	movff	Robot_TurnLeft@speed_pwm_duty,Motors_SynchronizedDirection@pwm_duty_value
 24430   01682E  C572  F56B         	movff	Robot_TurnLeft@speed_pwm_duty+1,Motors_SynchronizedDirection@pwm_duty_value+1
 24431   016832  0E02               	movlw	2
 24432   016834  EC28  F0A9         	call	_Motors_SynchronizedDirection
 24433   016838  0012               	return		;funcret
 24434   01683A                     __end_of_Robot_TurnLeft:
 24435                           	callstack 0
 24436                           
 24437 ;; *************** function _Robot_Stop *****************
 24438 ;; Defined at:
 24439 ;;		line 304 in file "MotorControl.c"
 24440 ;; Parameters:    Size  Location     Type
 24441 ;;		None
 24442 ;; Auto vars:     Size  Location     Type
 24443 ;;		None
 24444 ;; Return value:  Size  Location     Type
 24445 ;;                  1    wreg      void 
 24446 ;; Registers used:
 24447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24448 ;; Tracked objects:
 24449 ;;		On entry : 0/0
 24450 ;;		On exit  : 0/0
 24451 ;;		Unchanged: 0/0
 24452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24457 ;;Total ram usage:        0 bytes
 24458 ;; Hardware stack levels used: 1
 24459 ;; Hardware stack levels required when called: 8
 24460 ;; This function calls:
 24461 ;;		_Motors_SynchronizedStop
 24462 ;; This function is called by:
 24463 ;;		_main
 24464 ;; This function uses a non-reentrant model
 24465 ;;
 24466                           
 24467                           	psect	text49
 24468   016A16                     __ptext49:
 24469                           	callstack 0
 24470   016A16                     _Robot_Stop:
 24471                           	callstack 118
 24472   016A16                     
 24473                           ;MotorControl.c: 306:     Motors_SynchronizedStop();
 24474   016A16  EC05  F0B1         	call	_Motors_SynchronizedStop	;wreg free
 24475   016A1A  0012               	return		;funcret
 24476   016A1C                     __end_of_Robot_Stop:
 24477                           	callstack 0
 24478                           
 24479 ;; *************** function _Robot_MoveForward *****************
 24480 ;; Defined at:
 24481 ;;		line 267 in file "MotorControl.c"
 24482 ;; Parameters:    Size  Location     Type
 24483 ;;  speed_pwm_du    2   17[BANK5 ] unsigned short 
 24484 ;; Auto vars:     Size  Location     Type
 24485 ;;		None
 24486 ;; Return value:  Size  Location     Type
 24487 ;;                  1    wreg      void 
 24488 ;; Registers used:
 24489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24490 ;; Tracked objects:
 24491 ;;		On entry : 0/0
 24492 ;;		On exit  : 0/0
 24493 ;;		Unchanged: 0/0
 24494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;Total ram usage:        2 bytes
 24500 ;; Hardware stack levels used: 1
 24501 ;; Hardware stack levels required when called: 9
 24502 ;; This function calls:
 24503 ;;		_Motors_SynchronizedDirection
 24504 ;; This function is called by:
 24505 ;;		_main
 24506 ;; This function uses a non-reentrant model
 24507 ;;
 24508                           
 24509                           	psect	text50
 24510   01683A                     __ptext50:
 24511                           	callstack 0
 24512   01683A                     _Robot_MoveForward:
 24513                           	callstack 117
 24514   01683A                     
 24515                           ;MotorControl.c: 267: void Robot_MoveForward(uint16_t speed_pwm_duty);MotorControl.c: 26
      +                          8: {;MotorControl.c: 269:     Motors_SynchronizedDirection(MOTOR_FORWARD, MOTOR_FORWARD,
      +                           speed_pwm_duty);
 24516   01683A  0E01               	movlw	1
 24517   01683C  0105               	movlb	5	; () banked
 24518   01683E  6F69               	movwf	Motors_SynchronizedDirection@dir_b& (0+255),b
 24519   016840  C571  F56A         	movff	Robot_MoveForward@speed_pwm_duty,Motors_SynchronizedDirection@pwm_duty_value
 24520   016844  C572  F56B         	movff	Robot_MoveForward@speed_pwm_duty+1,Motors_SynchronizedDirection@pwm_duty_value+1
 24521   016848  0E01               	movlw	1
 24522   01684A  EC28  F0A9         	call	_Motors_SynchronizedDirection
 24523   01684E  0012               	return		;funcret
 24524   016850                     __end_of_Robot_MoveForward:
 24525                           	callstack 0
 24526                           
 24527 ;; *************** function _Robot_MoveBackward *****************
 24528 ;; Defined at:
 24529 ;;		line 272 in file "MotorControl.c"
 24530 ;; Parameters:    Size  Location     Type
 24531 ;;  speed_pwm_du    2   17[BANK5 ] unsigned short 
 24532 ;; Auto vars:     Size  Location     Type
 24533 ;;		None
 24534 ;; Return value:  Size  Location     Type
 24535 ;;                  1    wreg      void 
 24536 ;; Registers used:
 24537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24538 ;; Tracked objects:
 24539 ;;		On entry : 0/0
 24540 ;;		On exit  : 0/0
 24541 ;;		Unchanged: 0/0
 24542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24543 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24546 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24547 ;;Total ram usage:        2 bytes
 24548 ;; Hardware stack levels used: 1
 24549 ;; Hardware stack levels required when called: 9
 24550 ;; This function calls:
 24551 ;;		_Motors_SynchronizedDirection
 24552 ;; This function is called by:
 24553 ;;		_main
 24554 ;; This function uses a non-reentrant model
 24555 ;;
 24556                           
 24557                           	psect	text51
 24558   016850                     __ptext51:
 24559                           	callstack 0
 24560   016850                     _Robot_MoveBackward:
 24561                           	callstack 117
 24562   016850                     
 24563                           ;MotorControl.c: 272: void Robot_MoveBackward(uint16_t speed_pwm_duty);MotorControl.c: 2
      +                          73: {;MotorControl.c: 274:     Motors_SynchronizedDirection(MOTOR_BACKWARD, MOTOR_BACKWA
      +                          RD, speed_pwm_duty);
 24564   016850  0E02               	movlw	2
 24565   016852  0105               	movlb	5	; () banked
 24566   016854  6F69               	movwf	Motors_SynchronizedDirection@dir_b& (0+255),b
 24567   016856  C571  F56A         	movff	Robot_MoveBackward@speed_pwm_duty,Motors_SynchronizedDirection@pwm_duty_value
 24568   01685A  C572  F56B         	movff	Robot_MoveBackward@speed_pwm_duty+1,Motors_SynchronizedDirection@pwm_duty_value+1
 24569   01685E  0E02               	movlw	2
 24570   016860  EC28  F0A9         	call	_Motors_SynchronizedDirection
 24571   016864  0012               	return		;funcret
 24572   016866                     __end_of_Robot_MoveBackward:
 24573                           	callstack 0
 24574                           
 24575 ;; *************** function _Motors_SynchronizedDirection *****************
 24576 ;; Defined at:
 24577 ;;		line 248 in file "MotorControl.c"
 24578 ;; Parameters:    Size  Location     Type
 24579 ;;  dir_a           1    wreg     enum E17295
 24580 ;;  dir_b           1    9[BANK5 ] enum E17295
 24581 ;;  pwm_duty_val    2   10[BANK5 ] unsigned short 
 24582 ;; Auto vars:     Size  Location     Type
 24583 ;;  dir_a           1   16[BANK5 ] enum E17295
 24584 ;;  direction_ch    1   14[BANK5 ] _Bool 
 24585 ;; Return value:  Size  Location     Type
 24586 ;;                  1    wreg      void 
 24587 ;; Registers used:
 24588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24589 ;; Tracked objects:
 24590 ;;		On entry : 0/0
 24591 ;;		On exit  : 0/0
 24592 ;;		Unchanged: 0/0
 24593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24594 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24595 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24596 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24598 ;;Total ram usage:        8 bytes
 24599 ;; Hardware stack levels used: 1
 24600 ;; Hardware stack levels required when called: 8
 24601 ;; This function calls:
 24602 ;;		_Motors_SynchronizedStart
 24603 ;;		_Motors_SynchronizedStop
 24604 ;; This function is called by:
 24605 ;;		_Robot_MoveForward
 24606 ;;		_Robot_MoveBackward
 24607 ;;		_Robot_TurnLeft
 24608 ;;		_Robot_TurnRight
 24609 ;;		_Robot_RotateLeft
 24610 ;;		_Robot_RotateRight
 24611 ;; This function uses a non-reentrant model
 24612 ;;
 24613                           
 24614                           	psect	text52
 24615   015250                     __ptext52:
 24616                           	callstack 0
 24617   015250                     _Motors_SynchronizedDirection:
 24618                           	callstack 117
 24619                           
 24620                           ;incstack = 0
 24621                           ;Motors_SynchronizedDirection@dir_a stored from wreg
 24622   015250  0105               	movlb	5	; () banked
 24623   015252  6F70               	movwf	Motors_SynchronizedDirection@dir_a& (0+255),b
 24624   015254                     
 24625                           ;MotorControl.c: 248: void Motors_SynchronizedDirection(motor_direction_t dir_a, motor_d
      +                          irection_t dir_b, uint16_t pwm_duty_value);MotorControl.c: 249: {;MotorControl.c: 251:  
      +                             _Bool direction_change = (current_motor_directions[MOTOR_A] != dir_a && current_motor
      +                          _speeds_pwm[MOTOR_A] > 0) ||
 24626   015254  0E01               	movlw	1
 24627   015256  0105               	movlb	5	; () banked
 24628   015258  6F6F               	movwf	_Motors_SynchronizedDirection$3158& (0+255),b
 24629   01525A                     
 24630                           ; BSR set to: 5
 24631   01525A  5170               	movf	Motors_SynchronizedDirection@dir_a& (0+255),w,b
 24632   01525C  1841               	xorwf	_current_motor_directions^(0+1280),w,c	;volatile
 24633   01525E  B4D8               	btfsc	status,2,c
 24634   015260  EF34  F0A9         	goto	u9831
 24635   015264  EF36  F0A9         	goto	u9830
 24636   015268                     u9831:
 24637   015268  EF40  F0A9         	goto	l10567
 24638   01526C                     u9830:
 24639   01526C                     
 24640                           ; BSR set to: 5
 24641   01526C  0106               	movlb	6	; () banked
 24642   01526E  519D               	movf	_current_motor_speeds_pwm& (0+255),w,b	;volatile
 24643   015270  119E               	iorwf	(_current_motor_speeds_pwm+1)& (0+255),w,b	;volatile
 24644   015272  A4D8               	btfss	status,2,c
 24645   015274  EF3E  F0A9         	goto	u9841
 24646   015278  EF40  F0A9         	goto	u9840
 24647   01527C                     u9841:
 24648   01527C  EF56  F0A9         	goto	l10571
 24649   015280                     u9840:
 24650   015280                     l10567:
 24651   015280  0105               	movlb	5	; () banked
 24652   015282  5169               	movf	Motors_SynchronizedDirection@dir_b& (0+255),w,b
 24653   015284  1842               	xorwf	(_current_motor_directions+1)^(0+1280),w,c	;volatile
 24654   015286  B4D8               	btfsc	status,2,c
 24655   015288  EF48  F0A9         	goto	u9851
 24656   01528C  EF4A  F0A9         	goto	u9850
 24657   015290                     u9851:
 24658   015290  EF54  F0A9         	goto	l9491
 24659   015294                     u9850:
 24660   015294                     
 24661                           ; BSR set to: 5
 24662   015294  0106               	movlb	6	; () banked
 24663   015296  519F               	movf	(_current_motor_speeds_pwm+2)& (0+255),w,b	;volatile
 24664   015298  11A0               	iorwf	(_current_motor_speeds_pwm+3)& (0+255),w,b	;volatile
 24665   01529A  A4D8               	btfss	status,2,c
 24666   01529C  EF52  F0A9         	goto	u9861
 24667   0152A0  EF54  F0A9         	goto	u9860
 24668   0152A4                     u9861:
 24669   0152A4  EF56  F0A9         	goto	l10571
 24670   0152A8                     u9860:
 24671   0152A8                     l9491:
 24672   0152A8  0105               	movlb	5	; () banked
 24673   0152AA  6B6F               	clrf	_Motors_SynchronizedDirection$3158& (0+255),b
 24674   0152AC                     l10571:
 24675   0152AC  0105               	movlb	5	; () banked
 24676   0152AE  516F               	movf	_Motors_SynchronizedDirection$3158& (0+255),w,b
 24677   0152B0  A4D8               	btfss	status,2,c
 24678   0152B2  EF5D  F0A9         	goto	u9871
 24679   0152B6  EF60  F0A9         	goto	u9870
 24680   0152BA                     u9871:
 24681   0152BA  0E01               	movlw	1
 24682   0152BC  EF61  F0A9         	goto	u9880
 24683   0152C0                     u9870:
 24684   0152C0  0E00               	movlw	0
 24685   0152C2                     u9880:
 24686   0152C2  6F6E               	movwf	Motors_SynchronizedDirection@direction_change& (0+255),b
 24687                           
 24688                           ;MotorControl.c: 254:     if (direction_change) {
 24689   0152C4  516E               	movf	Motors_SynchronizedDirection@direction_change& (0+255),w,b
 24690   0152C6  B4D8               	btfsc	status,2,c
 24691   0152C8  EF68  F0A9         	goto	u9891
 24692   0152CC  EF6A  F0A9         	goto	u9890
 24693   0152D0                     u9891:
 24694   0152D0  EF79  F0A9         	goto	l10577
 24695   0152D4                     u9890:
 24696   0152D4                     
 24697                           ; BSR set to: 5
 24698                           ;MotorControl.c: 255:         Motors_SynchronizedStop();
 24699   0152D4  EC05  F0B1         	call	_Motors_SynchronizedStop	;wreg free
 24700   0152D8                     
 24701                           ;MotorControl.c: 256:         _delay((unsigned long)((100)*(64000000U/4000.0)));
 24702   0152D8  0E09               	movlw	9
 24703   0152DA  0105               	movlb	5	; () banked
 24704   0152DC  6F6D               	movwf	(??_Motors_SynchronizedDirection+1)& (0+255),b
 24705   0152DE  0E1E               	movlw	30
 24706   0152E0  6F6C               	movwf	??_Motors_SynchronizedDirection& (0+255),b
 24707   0152E2  0EE4               	movlw	228
 24708   0152E4                     u10727:
 24709   0152E4  2EE8               	decfsz	wreg,f,c
 24710   0152E6  D7FE               	bra	u10727
 24711   0152E8  2F6C               	decfsz	??_Motors_SynchronizedDirection& (0+255),f,b
 24712   0152EA  D7FC               	bra	u10727
 24713   0152EC  2F6D               	decfsz	(??_Motors_SynchronizedDirection+1)& (0+255),f,b
 24714   0152EE  D7FA               	bra	u10727
 24715   0152F0  0000               	nop	
 24716   0152F2                     l10577:
 24717                           
 24718                           ;MotorControl.c: 260:     Motors_SynchronizedStart(dir_a, dir_b, pwm_duty_value);
 24719   0152F2  C569  F530         	movff	Motors_SynchronizedDirection@dir_b,Motors_SynchronizedStart@dir_b
 24720   0152F6  C56A  F531         	movff	Motors_SynchronizedDirection@pwm_duty_value,Motors_SynchronizedStart@final_pwm_du
      +                          ty
 24721   0152FA  C56B  F532         	movff	Motors_SynchronizedDirection@pwm_duty_value+1,Motors_SynchronizedStart@final_pwm_
      +                          duty+1
 24722   0152FE  0105               	movlb	5	; () banked
 24723   015300  5170               	movf	Motors_SynchronizedDirection@dir_a& (0+255),w,b
 24724   015302  ECED  F0A0         	call	_Motors_SynchronizedStart
 24725   015306  0012               	return		;funcret
 24726   015308                     __end_of_Motors_SynchronizedDirection:
 24727                           	callstack 0
 24728                           
 24729 ;; *************** function _Motors_SynchronizedStop *****************
 24730 ;; Defined at:
 24731 ;;		line 228 in file "MotorControl.c"
 24732 ;; Parameters:    Size  Location     Type
 24733 ;;		None
 24734 ;; Auto vars:     Size  Location     Type
 24735 ;;		None
 24736 ;; Return value:  Size  Location     Type
 24737 ;;                  1    wreg      void 
 24738 ;; Registers used:
 24739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24740 ;; Tracked objects:
 24741 ;;		On entry : 0/0
 24742 ;;		On exit  : 0/0
 24743 ;;		Unchanged: 0/0
 24744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24749 ;;Total ram usage:        1 bytes
 24750 ;; Hardware stack levels used: 1
 24751 ;; Hardware stack levels required when called: 7
 24752 ;; This function calls:
 24753 ;;		_Motor_SetDirection
 24754 ;;		_Motor_SetSpeed
 24755 ;; This function is called by:
 24756 ;;		_Motors_SynchronizedDirection
 24757 ;;		_Robot_Stop
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text53
 24762   01620A                     __ptext53:
 24763                           	callstack 0
 24764   01620A                     _Motors_SynchronizedStop:
 24765                           	callstack 117
 24766   01620A                     
 24767                           ;MotorControl.c: 231:     Motor_SetSpeed(MOTOR_A, 0);
 24768   01620A  0E00               	movlw	0
 24769   01620C  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 24770   01620E  0E00               	movlw	0
 24771   016210  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 24772   016212  0E00               	movlw	0
 24773   016214  EC3B  F0AA         	call	_Motor_SetSpeed
 24774                           
 24775                           ;MotorControl.c: 232:     Motor_SetSpeed(MOTOR_B, 0);
 24776   016218  0E00               	movlw	0
 24777   01621A  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 24778   01621C  0E00               	movlw	0
 24779   01621E  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 24780   016220  0E01               	movlw	1
 24781   016222  EC3B  F0AA         	call	_Motor_SetSpeed
 24782   016226                     
 24783                           ;MotorControl.c: 235:     _delay((unsigned long)((5)*(64000000U/4000.0)));
 24784   016226  0E68               	movlw	104
 24785   016228  6E30               	movwf	??_Motors_SynchronizedStop^(0+1280),c
 24786   01622A  0EE4               	movlw	228
 24787   01622C                     u10737:
 24788   01622C  2EE8               	decfsz	wreg,f,c
 24789   01622E  D7FE               	bra	u10737
 24790   016230  2E30               	decfsz	??_Motors_SynchronizedStop^(0+1280),f,c
 24791   016232  D7FC               	bra	u10737
 24792   016234  D000               	nop2	
 24793   016236                     
 24794                           ;MotorControl.c: 238:     Motor_SetDirection(MOTOR_A, MOTOR_STOP);
 24795   016236  0E00               	movlw	0
 24796   016238  6E11               	movwf	Motor_SetDirection@direction^(0+1280),c
 24797   01623A  0E00               	movlw	0
 24798   01623C  EC27  F0A7         	call	_Motor_SetDirection
 24799   016240                     
 24800                           ;MotorControl.c: 239:     Motor_SetDirection(MOTOR_B, MOTOR_STOP);
 24801   016240  0E00               	movlw	0
 24802   016242  6E11               	movwf	Motor_SetDirection@direction^(0+1280),c
 24803   016244  0E01               	movlw	1
 24804   016246  EC27  F0A7         	call	_Motor_SetDirection
 24805   01624A  0012               	return		;funcret
 24806   01624C                     __end_of_Motors_SynchronizedStop:
 24807                           	callstack 0
 24808                           
 24809 ;; *************** function _Motors_SynchronizedStart *****************
 24810 ;; Defined at:
 24811 ;;		line 196 in file "MotorControl.c"
 24812 ;; Parameters:    Size  Location     Type
 24813 ;;  dir_a           1    wreg     enum E17295
 24814 ;;  dir_b           1   47[COMRAM] enum E17295
 24815 ;;  final_pwm_du    2   48[COMRAM] unsigned short 
 24816 ;; Auto vars:     Size  Location     Type
 24817 ;;  dir_a           1    2[BANK5 ] enum E17295
 24818 ;;  current_pwm     2    7[BANK5 ] unsigned short 
 24819 ;; Return value:  Size  Location     Type
 24820 ;;                  1    wreg      void 
 24821 ;; Registers used:
 24822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24823 ;; Tracked objects:
 24824 ;;		On entry : 0/0
 24825 ;;		On exit  : 0/0
 24826 ;;		Unchanged: 0/0
 24827 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 24828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24829 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24830 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24831 ;;      Totals:         3       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24832 ;;Total ram usage:       12 bytes
 24833 ;; Hardware stack levels used: 1
 24834 ;; Hardware stack levels required when called: 7
 24835 ;; This function calls:
 24836 ;;		_Motor_SetDirection
 24837 ;;		_Motor_SetSpeed
 24838 ;;		___lwdiv
 24839 ;; This function is called by:
 24840 ;;		_Motors_SynchronizedDirection
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text54
 24845   0141DA                     __ptext54:
 24846                           	callstack 0
 24847   0141DA                     _Motors_SynchronizedStart:
 24848                           	callstack 117
 24849                           
 24850                           ;incstack = 0
 24851                           ;Motors_SynchronizedStart@dir_a stored from wreg
 24852   0141DA  0105               	movlb	5	; () banked
 24853   0141DC  6F62               	movwf	Motors_SynchronizedStart@dir_a& (0+255),b
 24854   0141DE                     
 24855                           ;MotorControl.c: 196: void Motors_SynchronizedStart(motor_direction_t dir_a, motor_direc
      +                          tion_t dir_b, uint16_t final_pwm_duty);MotorControl.c: 197: {;MotorControl.c: 199:     M
      +                          otor_SetDirection(MOTOR_A, dir_a);
 24856   0141DE  C562  F511         	movff	Motors_SynchronizedStart@dir_a,Motor_SetDirection@direction
 24857   0141E2  0E00               	movlw	0
 24858   0141E4  EC27  F0A7         	call	_Motor_SetDirection
 24859                           
 24860                           ;MotorControl.c: 200:     Motor_SetDirection(MOTOR_B, dir_b);
 24861   0141E8  C530  F511         	movff	Motors_SynchronizedStart@dir_b,Motor_SetDirection@direction
 24862   0141EC  0E01               	movlw	1
 24863   0141EE  EC27  F0A7         	call	_Motor_SetDirection
 24864   0141F2                     
 24865                           ;MotorControl.c: 201:     _delay((unsigned long)((5)*(64000000U/4000.0)));
 24866   0141F2  0E68               	movlw	104
 24867   0141F4  0105               	movlb	5	; () banked
 24868   0141F6  6F60               	movwf	??_Motors_SynchronizedStart& (0+255),b
 24869   0141F8  0EE4               	movlw	228
 24870   0141FA                     u10747:
 24871   0141FA  2EE8               	decfsz	wreg,f,c
 24872   0141FC  D7FE               	bra	u10747
 24873   0141FE  2F60               	decfsz	??_Motors_SynchronizedStart& (0+255),f,b
 24874   014200  D7FC               	bra	u10747
 24875   014202  0000               	nop	
 24876   014204                     
 24877                           ;MotorControl.c: 204:     Motor_SetSpeed(MOTOR_A, (uint16_t)((70UL * 999UL) / 100UL));
 24878   014204  0E02               	movlw	2
 24879   014206  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 24880   014208  0EBB               	movlw	187
 24881   01420A  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 24882   01420C  0E00               	movlw	0
 24883   01420E  EC3B  F0AA         	call	_Motor_SetSpeed
 24884   014212                     
 24885                           ;MotorControl.c: 205:     Motor_SetSpeed(MOTOR_B, (uint16_t)((70UL * 999UL) / 100UL));
 24886   014212  0E02               	movlw	2
 24887   014214  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 24888   014216  0EBB               	movlw	187
 24889   014218  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 24890   01421A  0E01               	movlw	1
 24891   01421C  EC3B  F0AA         	call	_Motor_SetSpeed
 24892   014220                     
 24893                           ;MotorControl.c: 206:     _delay((unsigned long)((300)*(64000000U/4000.0)));
 24894   014220  0E19               	movlw	25
 24895   014222  0105               	movlb	5	; () banked
 24896   014224  6F61               	movwf	(??_Motors_SynchronizedStart+1)& (0+255),b
 24897   014226  0E5A               	movlw	90
 24898   014228  6F60               	movwf	??_Motors_SynchronizedStart& (0+255),b
 24899   01422A  0EB1               	movlw	177
 24900   01422C                     u10757:
 24901   01422C  2EE8               	decfsz	wreg,f,c
 24902   01422E  D7FE               	bra	u10757
 24903   014230  2F60               	decfsz	??_Motors_SynchronizedStart& (0+255),f,b
 24904   014232  D7FC               	bra	u10757
 24905   014234  2F61               	decfsz	(??_Motors_SynchronizedStart+1)& (0+255),f,b
 24906   014236  D7FA               	bra	u10757
 24907   014238  D000               	nop2	
 24908   01423A                     
 24909                           ;MotorControl.c: 209:     uint16_t current_pwm = (uint16_t)((70UL * 999UL) / 100UL);
 24910   01423A  0E02               	movlw	2
 24911   01423C  0105               	movlb	5	; () banked
 24912   01423E  6F68               	movwf	(Motors_SynchronizedStart@current_pwm+1)& (0+255),b
 24913   014240  0EBB               	movlw	187
 24914   014242  6F67               	movwf	Motors_SynchronizedStart@current_pwm& (0+255),b
 24915                           
 24916                           ;MotorControl.c: 210:     while (current_pwm != final_pwm_duty) {
 24917   014244  EFBC  F0A1         	goto	l10181
 24918   014248                     l10151:
 24919                           
 24920                           ; BSR set to: 5
 24921                           ;MotorControl.c: 211:         if (current_pwm > final_pwm_duty) {
 24922   014248  5167               	movf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 24923   01424A  5C31               	subwf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 24924   01424C  5168               	movf	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 24925   01424E  5832               	subwfb	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 24926   014250  B0D8               	btfsc	status,0,c
 24927   014252  EF2D  F0A1         	goto	u9331
 24928   014256  EF2F  F0A1         	goto	u9330
 24929   01425A                     u9331:
 24930   01425A  EF6A  F0A1         	goto	l10165
 24931   01425E                     u9330:
 24932   01425E                     
 24933                           ; BSR set to: 5
 24934                           ;MotorControl.c: 212:             current_pwm -= (current_pwm - final_pwm_duty < 5) ? 1 
      +                          : (current_pwm / 20);
 24935   01425E  5031               	movf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 24936   014260  5D67               	subwf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 24937   014262  6F60               	movwf	??_Motors_SynchronizedStart& (0+255),b
 24938   014264  5032               	movf	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 24939   014266  5968               	subwfb	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 24940   014268  6F61               	movwf	(??_Motors_SynchronizedStart+1)& (0+255),b
 24941   01426A  5161               	movf	(??_Motors_SynchronizedStart+1)& (0+255),w,b
 24942   01426C  E109               	bnz	u9340
 24943   01426E  0E05               	movlw	5
 24944   014270  5D60               	subwf	??_Motors_SynchronizedStart& (0+255),w,b
 24945   014272  A0D8               	btfss	status,0,c
 24946   014274  EF3E  F0A1         	goto	u9341
 24947   014278  EF40  F0A1         	goto	u9340
 24948   01427C                     u9341:
 24949   01427C  EF50  F0A1         	goto	l10157
 24950   014280                     u9340:
 24951   014280                     
 24952                           ; BSR set to: 5
 24953   014280  C567  F511         	movff	Motors_SynchronizedStart@current_pwm,___lwdiv@dividend
 24954   014284  C568  F512         	movff	Motors_SynchronizedStart@current_pwm+1,___lwdiv@dividend+1
 24955   014288  0E00               	movlw	0
 24956   01428A  6E14               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 24957   01428C  0E14               	movlw	20
 24958   01428E  6E13               	movwf	___lwdiv@divisor^(0+1280),c
 24959   014290  ECF5  F0AD         	call	___lwdiv	;wreg free
 24960   014294  C511  F563         	movff	?___lwdiv,_Motors_SynchronizedStart$3150
 24961   014298  C512  F564         	movff	?___lwdiv+1,_Motors_SynchronizedStart$3150+1
 24962   01429C  EF54  F0A1         	goto	l10159
 24963   0142A0                     l10157:
 24964                           
 24965                           ; BSR set to: 5
 24966   0142A0  0E00               	movlw	0
 24967   0142A2  6F64               	movwf	(_Motors_SynchronizedStart$3150+1)& (0+255),b
 24968   0142A4  0E01               	movlw	1
 24969   0142A6  6F63               	movwf	_Motors_SynchronizedStart$3150& (0+255),b
 24970   0142A8                     l10159:
 24971   0142A8  0105               	movlb	5	; () banked
 24972   0142AA  5163               	movf	_Motors_SynchronizedStart$3150& (0+255),w,b
 24973   0142AC  5F67               	subwf	Motors_SynchronizedStart@current_pwm& (0+255),f,b
 24974   0142AE  5164               	movf	(_Motors_SynchronizedStart$3150+1)& (0+255),w,b
 24975   0142B0  5B68               	subwfb	(Motors_SynchronizedStart@current_pwm+1)& (0+255),f,b
 24976   0142B2                     
 24977                           ; BSR set to: 5
 24978                           ;MotorControl.c: 213:             if (current_pwm < final_pwm_duty) current_pwm = final_
      +                          pwm_duty;
 24979   0142B2  5031               	movf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 24980   0142B4  5D67               	subwf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 24981   0142B6  5032               	movf	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 24982   0142B8  5968               	subwfb	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 24983   0142BA  B0D8               	btfsc	status,0,c
 24984   0142BC  EF62  F0A1         	goto	u9351
 24985   0142C0  EF64  F0A1         	goto	u9350
 24986   0142C4                     u9351:
 24987   0142C4  EFA1  F0A1         	goto	l10177
 24988   0142C8                     u9350:
 24989   0142C8                     l10163:
 24990                           
 24991                           ; BSR set to: 5
 24992   0142C8  C531  F567         	movff	Motors_SynchronizedStart@final_pwm_duty,Motors_SynchronizedStart@current_pwm
 24993   0142CC  C532  F568         	movff	Motors_SynchronizedStart@final_pwm_duty+1,Motors_SynchronizedStart@current_pwm+1
 24994   0142D0  EFA1  F0A1         	goto	l10177
 24995   0142D4                     l10165:
 24996                           
 24997                           ; BSR set to: 5
 24998                           ;MotorControl.c: 215:             current_pwm += (final_pwm_duty - current_pwm < 5) ? 1 
      +                          : (current_pwm / 20);
 24999   0142D4  5167               	movf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 25000   0142D6  5C31               	subwf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 25001   0142D8  6F60               	movwf	??_Motors_SynchronizedStart& (0+255),b
 25002   0142DA  5168               	movf	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 25003   0142DC  5832               	subwfb	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 25004   0142DE  6F61               	movwf	(??_Motors_SynchronizedStart+1)& (0+255),b
 25005   0142E0  5161               	movf	(??_Motors_SynchronizedStart+1)& (0+255),w,b
 25006   0142E2  E109               	bnz	u9360
 25007   0142E4  0E05               	movlw	5
 25008   0142E6  5D60               	subwf	??_Motors_SynchronizedStart& (0+255),w,b
 25009   0142E8  A0D8               	btfss	status,0,c
 25010   0142EA  EF79  F0A1         	goto	u9361
 25011   0142EE  EF7B  F0A1         	goto	u9360
 25012   0142F2                     u9361:
 25013   0142F2  EF8B  F0A1         	goto	l10169
 25014   0142F6                     u9360:
 25015   0142F6                     
 25016                           ; BSR set to: 5
 25017   0142F6  C567  F511         	movff	Motors_SynchronizedStart@current_pwm,___lwdiv@dividend
 25018   0142FA  C568  F512         	movff	Motors_SynchronizedStart@current_pwm+1,___lwdiv@dividend+1
 25019   0142FE  0E00               	movlw	0
 25020   014300  6E14               	movwf	(___lwdiv@divisor+1)^(0+1280),c
 25021   014302  0E14               	movlw	20
 25022   014304  6E13               	movwf	___lwdiv@divisor^(0+1280),c
 25023   014306  ECF5  F0AD         	call	___lwdiv	;wreg free
 25024   01430A  C511  F565         	movff	?___lwdiv,_Motors_SynchronizedStart$3151
 25025   01430E  C512  F566         	movff	?___lwdiv+1,_Motors_SynchronizedStart$3151+1
 25026   014312  EF8F  F0A1         	goto	l10171
 25027   014316                     l10169:
 25028                           
 25029                           ; BSR set to: 5
 25030   014316  0E00               	movlw	0
 25031   014318  6F66               	movwf	(_Motors_SynchronizedStart$3151+1)& (0+255),b
 25032   01431A  0E01               	movlw	1
 25033   01431C  6F65               	movwf	_Motors_SynchronizedStart$3151& (0+255),b
 25034   01431E                     l10171:
 25035   01431E  0105               	movlb	5	; () banked
 25036   014320  5165               	movf	_Motors_SynchronizedStart$3151& (0+255),w,b
 25037   014322  2767               	addwf	Motors_SynchronizedStart@current_pwm& (0+255),f,b
 25038   014324  5166               	movf	(_Motors_SynchronizedStart$3151+1)& (0+255),w,b
 25039   014326  2368               	addwfc	(Motors_SynchronizedStart@current_pwm+1)& (0+255),f,b
 25040   014328                     
 25041                           ; BSR set to: 5
 25042                           ;MotorControl.c: 216:             if (current_pwm > final_pwm_duty) current_pwm = final_
      +                          pwm_duty;
 25043   014328  5167               	movf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 25044   01432A  5C31               	subwf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 25045   01432C  5168               	movf	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 25046   01432E  5832               	subwfb	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 25047   014330  B0D8               	btfsc	status,0,c
 25048   014332  EF9D  F0A1         	goto	u9371
 25049   014336  EF9F  F0A1         	goto	u9370
 25050   01433A                     u9371:
 25051   01433A  EFA1  F0A1         	goto	l10177
 25052   01433E                     u9370:
 25053   01433E  EF64  F0A1         	goto	l10163
 25054   014342                     l10177:
 25055                           
 25056                           ; BSR set to: 5
 25057                           ;MotorControl.c: 219:         Motor_SetSpeed(MOTOR_A, current_pwm);
 25058   014342  C567  F52D         	movff	Motors_SynchronizedStart@current_pwm,Motor_SetSpeed@pwm_duty_value
 25059   014346  C568  F52E         	movff	Motors_SynchronizedStart@current_pwm+1,Motor_SetSpeed@pwm_duty_value+1
 25060   01434A  0E00               	movlw	0
 25061   01434C  EC3B  F0AA         	call	_Motor_SetSpeed
 25062                           
 25063                           ;MotorControl.c: 220:         Motor_SetSpeed(MOTOR_B, current_pwm);
 25064   014350  C567  F52D         	movff	Motors_SynchronizedStart@current_pwm,Motor_SetSpeed@pwm_duty_value
 25065   014354  C568  F52E         	movff	Motors_SynchronizedStart@current_pwm+1,Motor_SetSpeed@pwm_duty_value+1
 25066   014358  0E01               	movlw	1
 25067   01435A  EC3B  F0AA         	call	_Motor_SetSpeed
 25068   01435E                     
 25069                           ;MotorControl.c: 221:         _delay((unsigned long)((20)*(64000000U/4000.0)));
 25070   01435E  0E02               	movlw	2
 25071   014360  0105               	movlb	5	; () banked
 25072   014362  6F61               	movwf	(??_Motors_SynchronizedStart+1)& (0+255),b
 25073   014364  0EA0               	movlw	160
 25074   014366  6F60               	movwf	??_Motors_SynchronizedStart& (0+255),b
 25075   014368  0E92               	movlw	146
 25076   01436A                     u10767:
 25077   01436A  2EE8               	decfsz	wreg,f,c
 25078   01436C  D7FE               	bra	u10767
 25079   01436E  2F60               	decfsz	??_Motors_SynchronizedStart& (0+255),f,b
 25080   014370  D7FC               	bra	u10767
 25081   014372  2F61               	decfsz	(??_Motors_SynchronizedStart+1)& (0+255),f,b
 25082   014374  D7FA               	bra	u10767
 25083   014376  0000               	nop	
 25084   014378                     l10181:
 25085                           
 25086                           ;MotorControl.c: 210:     while (current_pwm != final_pwm_duty) {
 25087   014378  5031               	movf	Motors_SynchronizedStart@final_pwm_duty^(0+1280),w,c
 25088   01437A  0105               	movlb	5	; () banked
 25089   01437C  1967               	xorwf	Motors_SynchronizedStart@current_pwm& (0+255),w,b
 25090   01437E  E107               	bnz	u9381
 25091   014380  5032               	movf	(Motors_SynchronizedStart@final_pwm_duty+1)^(0+1280),w,c
 25092   014382  1968               	xorwf	(Motors_SynchronizedStart@current_pwm+1)& (0+255),w,b
 25093   014384  A4D8               	btfss	status,2,c
 25094   014386  EFC7  F0A1         	goto	u9381
 25095   01438A  EFC9  F0A1         	goto	u9380
 25096   01438E                     u9381:
 25097   01438E  EF24  F0A1         	goto	l10151
 25098   014392                     u9380:
 25099   014392                     
 25100                           ; BSR set to: 5
 25101   014392  0012               	return		;funcret
 25102   014394                     __end_of_Motors_SynchronizedStart:
 25103                           	callstack 0
 25104                           
 25105 ;; *************** function ___lwdiv *****************
 25106 ;; Defined at:
 25107 ;;		line 7 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/lwdiv.c"
 25108 ;; Parameters:    Size  Location     Type
 25109 ;;  dividend        2   16[COMRAM] unsigned int 
 25110 ;;  divisor         2   18[COMRAM] unsigned int 
 25111 ;; Auto vars:     Size  Location     Type
 25112 ;;  quotient        2   20[COMRAM] unsigned int 
 25113 ;;  counter         1   22[COMRAM] unsigned char 
 25114 ;; Return value:  Size  Location     Type
 25115 ;;                  2   16[COMRAM] unsigned int 
 25116 ;; Registers used:
 25117 ;;		wreg, status,2, status,0
 25118 ;; Tracked objects:
 25119 ;;		On entry : 0/0
 25120 ;;		On exit  : 0/0
 25121 ;;		Unchanged: 0/0
 25122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25124 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25126 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25127 ;;Total ram usage:        7 bytes
 25128 ;; Hardware stack levels used: 1
 25129 ;; Hardware stack levels required when called: 4
 25130 ;; This function calls:
 25131 ;;		Nothing
 25132 ;; This function is called by:
 25133 ;;		_Motors_SynchronizedStart
 25134 ;; This function uses a non-reentrant model
 25135 ;;
 25136                           
 25137                           	psect	text55
 25138   015BEA                     __ptext55:
 25139                           	callstack 0
 25140   015BEA                     ___lwdiv:
 25141                           	callstack 119
 25142   015BEA  0E00               	movlw	0
 25143   015BEC  6E16               	movwf	(___lwdiv@quotient+1)^(0+1280),c
 25144   015BEE  0E00               	movlw	0
 25145   015BF0  6E15               	movwf	___lwdiv@quotient^(0+1280),c
 25146   015BF2  5013               	movf	___lwdiv@divisor^(0+1280),w,c
 25147   015BF4  1014               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
 25148   015BF6  B4D8               	btfsc	status,2,c
 25149   015BF8  EF00  F0AE         	goto	u5731
 25150   015BFC  EF02  F0AE         	goto	u5730
 25151   015C00                     u5731:
 25152   015C00  EF2A  F0AE         	goto	l2140
 25153   015C04                     u5730:
 25154   015C04  0E01               	movlw	1
 25155   015C06  6E17               	movwf	___lwdiv@counter^(0+1280),c
 25156   015C08  EF0A  F0AE         	goto	l7135
 25157   015C0C                     l7133:
 25158   015C0C  90D8               	bcf	status,0,c
 25159   015C0E  3613               	rlcf	___lwdiv@divisor^(0+1280),f,c
 25160   015C10  3614               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
 25161   015C12  2A17               	incf	___lwdiv@counter^(0+1280),f,c
 25162   015C14                     l7135:
 25163   015C14  AE14               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
 25164   015C16  EF0F  F0AE         	goto	u5741
 25165   015C1A  EF11  F0AE         	goto	u5740
 25166   015C1E                     u5741:
 25167   015C1E  EF06  F0AE         	goto	l7133
 25168   015C22                     u5740:
 25169   015C22                     l7137:
 25170   015C22  90D8               	bcf	status,0,c
 25171   015C24  3615               	rlcf	___lwdiv@quotient^(0+1280),f,c
 25172   015C26  3616               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
 25173   015C28  5013               	movf	___lwdiv@divisor^(0+1280),w,c
 25174   015C2A  5C11               	subwf	___lwdiv@dividend^(0+1280),w,c
 25175   015C2C  5014               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
 25176   015C2E  5812               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
 25177   015C30  A0D8               	btfss	status,0,c
 25178   015C32  EF1D  F0AE         	goto	u5751
 25179   015C36  EF1F  F0AE         	goto	u5750
 25180   015C3A                     u5751:
 25181   015C3A  EF24  F0AE         	goto	l7145
 25182   015C3E                     u5750:
 25183   015C3E  5013               	movf	___lwdiv@divisor^(0+1280),w,c
 25184   015C40  5E11               	subwf	___lwdiv@dividend^(0+1280),f,c
 25185   015C42  5014               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
 25186   015C44  5A12               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
 25187   015C46  8015               	bsf	___lwdiv@quotient^(0+1280),0,c
 25188   015C48                     l7145:
 25189   015C48  90D8               	bcf	status,0,c
 25190   015C4A  3214               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
 25191   015C4C  3213               	rrcf	___lwdiv@divisor^(0+1280),f,c
 25192   015C4E  2E17               	decfsz	___lwdiv@counter^(0+1280),f,c
 25193   015C50  EF11  F0AE         	goto	l7137
 25194   015C54                     l2140:
 25195   015C54  C515  F511         	movff	___lwdiv@quotient,?___lwdiv
 25196   015C58  C516  F512         	movff	___lwdiv@quotient+1,?___lwdiv+1
 25197   015C5C  0012               	return		;funcret
 25198   015C5E                     __end_of___lwdiv:
 25199                           	callstack 0
 25200                           
 25201 ;; *************** function _Motors_Initialize *****************
 25202 ;; Defined at:
 25203 ;;		line 31 in file "MotorControl.c"
 25204 ;; Parameters:    Size  Location     Type
 25205 ;;		None
 25206 ;; Auto vars:     Size  Location     Type
 25207 ;;		None
 25208 ;; Return value:  Size  Location     Type
 25209 ;;                  1    wreg      void 
 25210 ;; Registers used:
 25211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25212 ;; Tracked objects:
 25213 ;;		On entry : 0/0
 25214 ;;		On exit  : 0/0
 25215 ;;		Unchanged: 0/0
 25216 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25221 ;;Total ram usage:        0 bytes
 25222 ;; Hardware stack levels used: 1
 25223 ;; Hardware stack levels required when called: 9
 25224 ;; This function calls:
 25225 ;;		_Motors_StopAll
 25226 ;; This function is called by:
 25227 ;;		_main
 25228 ;; This function uses a non-reentrant model
 25229 ;;
 25230                           
 25231                           	psect	text56
 25232   016A1C                     __ptext56:
 25233                           	callstack 0
 25234   016A1C                     _Motors_Initialize:
 25235                           	callstack 117
 25236   016A1C                     
 25237                           ;MotorControl.c: 38:     Motors_StopAll();
 25238   016A1C  ECD8  F0B4         	call	_Motors_StopAll	;wreg free
 25239   016A20  0012               	return		;funcret
 25240   016A22                     __end_of_Motors_Initialize:
 25241                           	callstack 0
 25242                           
 25243 ;; *************** function _Motors_StopAll *****************
 25244 ;; Defined at:
 25245 ;;		line 156 in file "MotorControl.c"
 25246 ;; Parameters:    Size  Location     Type
 25247 ;;		None
 25248 ;; Auto vars:     Size  Location     Type
 25249 ;;		None
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1    wreg      void 
 25252 ;; Registers used:
 25253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25254 ;; Tracked objects:
 25255 ;;		On entry : 0/0
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25263 ;;Total ram usage:        0 bytes
 25264 ;; Hardware stack levels used: 1
 25265 ;; Hardware stack levels required when called: 8
 25266 ;; This function calls:
 25267 ;;		_Motor_Stop
 25268 ;; This function is called by:
 25269 ;;		_Motors_Initialize
 25270 ;; This function uses a non-reentrant model
 25271 ;;
 25272                           
 25273                           	psect	text57
 25274   0169B0                     __ptext57:
 25275                           	callstack 0
 25276   0169B0                     _Motors_StopAll:
 25277                           	callstack 117
 25278   0169B0                     
 25279                           ;MotorControl.c: 158:     Motor_Stop(MOTOR_A);
 25280   0169B0  0E00               	movlw	0
 25281   0169B2  EC91  F0B3         	call	_Motor_Stop
 25282                           
 25283                           ;MotorControl.c: 159:     Motor_Stop(MOTOR_B);
 25284   0169B6  0E01               	movlw	1
 25285   0169B8  EC91  F0B3         	call	_Motor_Stop
 25286   0169BC  0012               	return		;funcret
 25287   0169BE                     __end_of_Motors_StopAll:
 25288                           	callstack 0
 25289                           
 25290 ;; *************** function _Motor_Stop *****************
 25291 ;; Defined at:
 25292 ;;		line 136 in file "MotorControl.c"
 25293 ;; Parameters:    Size  Location     Type
 25294 ;;  motor_id        1    wreg     enum E17301
 25295 ;; Auto vars:     Size  Location     Type
 25296 ;;  motor_id        1   47[COMRAM] enum E17301
 25297 ;; Return value:  Size  Location     Type
 25298 ;;                  1    wreg      void 
 25299 ;; Registers used:
 25300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25301 ;; Tracked objects:
 25302 ;;		On entry : 0/0
 25303 ;;		On exit  : 0/0
 25304 ;;		Unchanged: 0/0
 25305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25310 ;;Total ram usage:        1 bytes
 25311 ;; Hardware stack levels used: 1
 25312 ;; Hardware stack levels required when called: 7
 25313 ;; This function calls:
 25314 ;;		_Motor_SetDirection
 25315 ;;		_Motor_SetSpeed
 25316 ;; This function is called by:
 25317 ;;		_Motors_StopAll
 25318 ;;		_Motor_Control
 25319 ;;		_Motor_Brake
 25320 ;; This function uses a non-reentrant model
 25321 ;;
 25322                           
 25323                           	psect	text58
 25324   016722                     __ptext58:
 25325                           	callstack 0
 25326   016722                     _Motor_Stop:
 25327                           	callstack 117
 25328                           
 25329                           ;incstack = 0
 25330                           ;Motor_Stop@motor_id stored from wreg
 25331   016722  6E30               	movwf	Motor_Stop@motor_id^(0+1280),c
 25332   016724                     
 25333                           ;MotorControl.c: 136: void Motor_Stop(motor_id_t motor_id);MotorControl.c: 137: {;MotorC
      +                          ontrol.c: 138:     Motor_SetSpeed(motor_id, 0);
 25334   016724  0E00               	movlw	0
 25335   016726  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 25336   016728  0E00               	movlw	0
 25337   01672A  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 25338   01672C  5030               	movf	Motor_Stop@motor_id^(0+1280),w,c
 25339   01672E  EC3B  F0AA         	call	_Motor_SetSpeed
 25340   016732                     
 25341                           ;MotorControl.c: 139:     Motor_SetDirection(motor_id, MOTOR_STOP);
 25342   016732  0E00               	movlw	0
 25343   016734  6E11               	movwf	Motor_SetDirection@direction^(0+1280),c
 25344   016736  5030               	movf	Motor_Stop@motor_id^(0+1280),w,c
 25345   016738  EC27  F0A7         	call	_Motor_SetDirection
 25346   01673C  0012               	return		;funcret
 25347   01673E                     __end_of_Motor_Stop:
 25348                           	callstack 0
 25349                           
 25350 ;; *************** function _Motor_SetSpeed *****************
 25351 ;; Defined at:
 25352 ;;		line 45 in file "MotorControl.c"
 25353 ;; Parameters:    Size  Location     Type
 25354 ;;  motor_id        1    wreg     enum E17301
 25355 ;;  pwm_duty_val    2   44[COMRAM] unsigned short 
 25356 ;; Auto vars:     Size  Location     Type
 25357 ;;  motor_id        1   46[COMRAM] enum E17301
 25358 ;; Return value:  Size  Location     Type
 25359 ;;                  1    wreg      void 
 25360 ;; Registers used:
 25361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25362 ;; Tracked objects:
 25363 ;;		On entry : 0/0
 25364 ;;		On exit  : 0/0
 25365 ;;		Unchanged: 0/0
 25366 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25371 ;;Total ram usage:        3 bytes
 25372 ;; Hardware stack levels used: 1
 25373 ;; Hardware stack levels required when called: 6
 25374 ;; This function calls:
 25375 ;;		_CCP1_LoadDutyValue
 25376 ;;		_CCP2_LoadDutyValue
 25377 ;;		_ConvertPercentToPWM
 25378 ;; This function is called by:
 25379 ;;		_Motor_Stop
 25380 ;;		_Motors_SynchronizedStart
 25381 ;;		_Motors_SynchronizedStop
 25382 ;;		_Motor_Control
 25383 ;;		_Motor_Brake
 25384 ;;		_Motors_FastStart_ThenConstant
 25385 ;; This function uses a non-reentrant model
 25386 ;;
 25387                           
 25388                           	psect	text59
 25389   015476                     __ptext59:
 25390                           	callstack 0
 25391   015476                     _Motor_SetSpeed:
 25392                           	callstack 117
 25393                           
 25394                           ;incstack = 0
 25395                           ;Motor_SetSpeed@motor_id stored from wreg
 25396   015476  6E2F               	movwf	Motor_SetSpeed@motor_id^(0+1280),c
 25397   015478                     
 25398                           ;MotorControl.c: 45: void Motor_SetSpeed(motor_id_t motor_id, uint16_t pwm_duty_value);M
      +                          otorControl.c: 46: {;MotorControl.c: 47:     if (pwm_duty_value > 999UL) pwm_duty_value 
      +                          = 999UL;
 25399   015478  0EE8               	movlw	232
 25400   01547A  5C2D               	subwf	Motor_SetSpeed@pwm_duty_value^(0+1280),w,c
 25401   01547C  0E03               	movlw	3
 25402   01547E  582E               	subwfb	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),w,c
 25403   015480  A0D8               	btfss	status,0,c
 25404   015482  EF45  F0AA         	goto	u8961
 25405   015486  EF47  F0AA         	goto	u8960
 25406   01548A                     u8961:
 25407   01548A  EF4B  F0AA         	goto	l9899
 25408   01548E                     u8960:
 25409   01548E  0E03               	movlw	3
 25410   015490  6E2E               	movwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),c
 25411   015492  0EE7               	movlw	231
 25412   015494  6E2D               	movwf	Motor_SetSpeed@pwm_duty_value^(0+1280),c
 25413   015496                     l9899:
 25414                           
 25415                           ;MotorControl.c: 51:     if (pwm_duty_value > 0 && pwm_duty_value < ConvertPercentToPWM(
      +                          15)) {
 25416   015496  502D               	movf	Motor_SetSpeed@pwm_duty_value^(0+1280),w,c
 25417   015498  102E               	iorwf	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),w,c
 25418   01549A  B4D8               	btfsc	status,2,c
 25419   01549C  EF52  F0AA         	goto	u8971
 25420   0154A0  EF54  F0AA         	goto	u8970
 25421   0154A4                     u8971:
 25422   0154A4  EF69  F0AA         	goto	l9905
 25423   0154A8                     u8970:
 25424   0154A8  0E0F               	movlw	15
 25425   0154AA  ECCC  F0AE         	call	_ConvertPercentToPWM
 25426   0154AE  502A               	movf	?_ConvertPercentToPWM^(0+1280),w,c
 25427   0154B0  5C2D               	subwf	Motor_SetSpeed@pwm_duty_value^(0+1280),w,c
 25428   0154B2  502B               	movf	(?_ConvertPercentToPWM+1)^(0+1280),w,c
 25429   0154B4  582E               	subwfb	(Motor_SetSpeed@pwm_duty_value+1)^(0+1280),w,c
 25430   0154B6  B0D8               	btfsc	status,0,c
 25431   0154B8  EF60  F0AA         	goto	u8981
 25432   0154BC  EF62  F0AA         	goto	u8980
 25433   0154C0                     u8981:
 25434   0154C0  EF69  F0AA         	goto	l9905
 25435   0154C4                     u8980:
 25436   0154C4                     
 25437                           ;MotorControl.c: 52:         pwm_duty_value = ConvertPercentToPWM(15);
 25438   0154C4  0E0F               	movlw	15
 25439   0154C6  ECCC  F0AE         	call	_ConvertPercentToPWM
 25440   0154CA  C52A  F52D         	movff	?_ConvertPercentToPWM,Motor_SetSpeed@pwm_duty_value
 25441   0154CE  C52B  F52E         	movff	?_ConvertPercentToPWM+1,Motor_SetSpeed@pwm_duty_value+1
 25442   0154D2                     l9905:
 25443                           
 25444                           ;MotorControl.c: 55:     if (motor_id == MOTOR_A) {
 25445   0154D2  502F               	movf	Motor_SetSpeed@motor_id^(0+1280),w,c
 25446   0154D4  A4D8               	btfss	status,2,c
 25447   0154D6  EF6F  F0AA         	goto	u8991
 25448   0154DA  EF71  F0AA         	goto	u8990
 25449   0154DE                     u8991:
 25450   0154DE  EF79  F0AA         	goto	l9909
 25451   0154E2                     u8990:
 25452   0154E2                     
 25453                           ;MotorControl.c: 56:         CCP1_LoadDutyValue(pwm_duty_value);
 25454   0154E2  C52D  F511         	movff	Motor_SetSpeed@pwm_duty_value,CCP1_LoadDutyValue@dutycycleValue
 25455   0154E6  C52E  F512         	movff	Motor_SetSpeed@pwm_duty_value+1,CCP1_LoadDutyValue@dutycycleValue+1
 25456   0154EA  ECBA  F0B1         	call	_CCP1_LoadDutyValue	;wreg free
 25457                           
 25458                           ;MotorControl.c: 57:     } else if (motor_id == MOTOR_B) {
 25459   0154EE  EF87  F0AA         	goto	l9913
 25460   0154F2                     l9909:
 25461   0154F2  042F               	decf	Motor_SetSpeed@motor_id^(0+1280),w,c
 25462   0154F4  A4D8               	btfss	status,2,c
 25463   0154F6  EF7F  F0AA         	goto	u9001
 25464   0154FA  EF81  F0AA         	goto	u9000
 25465   0154FE                     u9001:
 25466   0154FE  EF87  F0AA         	goto	l9913
 25467   015502                     u9000:
 25468   015502                     
 25469                           ;MotorControl.c: 58:         CCP2_LoadDutyValue(pwm_duty_value);
 25470   015502  C52D  F511         	movff	Motor_SetSpeed@pwm_duty_value,CCP2_LoadDutyValue@dutycycleValue
 25471   015506  C52E  F512         	movff	Motor_SetSpeed@pwm_duty_value+1,CCP2_LoadDutyValue@dutycycleValue+1
 25472   01550A  EC9E  F0B1         	call	_CCP2_LoadDutyValue	;wreg free
 25473   01550E                     l9913:
 25474                           
 25475                           ;MotorControl.c: 61:     current_motor_speeds_pwm[motor_id] = pwm_duty_value;
 25476   01550E  502F               	movf	Motor_SetSpeed@motor_id^(0+1280),w,c
 25477   015510  0D02               	mullw	2
 25478   015512  0E9D               	movlw	low _current_motor_speeds_pwm
 25479   015514  24F3               	addwf	243,w,c
 25480   015516  6ED9               	movwf	fsr2l,c
 25481   015518  0E06               	movlw	high _current_motor_speeds_pwm
 25482   01551A  20F4               	addwfc	prodh,w,c
 25483   01551C  6EDA               	movwf	fsr2h,c
 25484   01551E  C52D  F4DE         	movff	Motor_SetSpeed@pwm_duty_value,postinc2
 25485   015522  C52E  F4DD         	movff	Motor_SetSpeed@pwm_duty_value+1,postdec2
 25486   015526  0012               	return		;funcret
 25487   015528                     __end_of_Motor_SetSpeed:
 25488                           	callstack 0
 25489                           
 25490 ;; *************** function _ConvertPercentToPWM *****************
 25491 ;; Defined at:
 25492 ;;		line 313 in file "MotorControl.c"
 25493 ;; Parameters:    Size  Location     Type
 25494 ;;  percentage      1    wreg     unsigned char 
 25495 ;; Auto vars:     Size  Location     Type
 25496 ;;  percentage      1   43[COMRAM] unsigned char 
 25497 ;; Return value:  Size  Location     Type
 25498 ;;                  2   41[COMRAM] unsigned short 
 25499 ;; Registers used:
 25500 ;;		wreg, status,2, status,0, cstack
 25501 ;; Tracked objects:
 25502 ;;		On entry : 0/0
 25503 ;;		On exit  : 0/0
 25504 ;;		Unchanged: 0/0
 25505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25510 ;;Total ram usage:        3 bytes
 25511 ;; Hardware stack levels used: 1
 25512 ;; Hardware stack levels required when called: 5
 25513 ;; This function calls:
 25514 ;;		___lldiv
 25515 ;;		___lmul
 25516 ;; This function is called by:
 25517 ;;		_Motor_SetSpeed
 25518 ;; This function uses a non-reentrant model
 25519 ;;
 25520                           
 25521                           	psect	text60
 25522   015D98                     __ptext60:
 25523                           	callstack 0
 25524   015D98                     _ConvertPercentToPWM:
 25525                           	callstack 117
 25526                           
 25527                           ;incstack = 0
 25528                           ;ConvertPercentToPWM@percentage stored from wreg
 25529   015D98  6E2C               	movwf	ConvertPercentToPWM@percentage^(0+1280),c
 25530   015D9A                     
 25531                           ;MotorControl.c: 313: static uint16_t ConvertPercentToPWM(uint8_t percentage);MotorContr
      +                          ol.c: 314: {;MotorControl.c: 315:     if (percentage > 100) percentage = 100;
 25532   015D9A  0E64               	movlw	100
 25533   015D9C  642C               	cpfsgt	ConvertPercentToPWM@percentage^(0+1280),c
 25534   015D9E  EFD3  F0AE         	goto	u8691
 25535   015DA2  EFD5  F0AE         	goto	u8690
 25536   015DA6                     u8691:
 25537   015DA6  EFD7  F0AE         	goto	l9713
 25538   015DAA                     u8690:
 25539   015DAA  0E64               	movlw	100
 25540   015DAC  6E2C               	movwf	ConvertPercentToPWM@percentage^(0+1280),c
 25541   015DAE                     l9713:
 25542                           
 25543                           ;MotorControl.c: 316:     return (uint16_t)((percentage * 1023UL) / 100UL);
 25544   015DAE  502C               	movf	ConvertPercentToPWM@percentage^(0+1280),w,c
 25545   015DB0  6E11               	movwf	___lmul@multiplier^(0+1280),c
 25546   015DB2  6A12               	clrf	(___lmul@multiplier+1)^(0+1280),c
 25547   015DB4  6A13               	clrf	(___lmul@multiplier+2)^(0+1280),c
 25548   015DB6  6A14               	clrf	(___lmul@multiplier+3)^(0+1280),c
 25549   015DB8  0EFF               	movlw	255
 25550   015DBA  6E15               	movwf	___lmul@multiplicand^(0+1280),c
 25551   015DBC  0E03               	movlw	3
 25552   015DBE  6E16               	movwf	(___lmul@multiplicand+1)^(0+1280),c
 25553   015DC0  0E00               	movlw	0
 25554   015DC2  6E17               	movwf	(___lmul@multiplicand+2)^(0+1280),c
 25555   015DC4  0E00               	movlw	0
 25556   015DC6  6E18               	movwf	(___lmul@multiplicand+3)^(0+1280),c
 25557   015DC8  EC66  F0AE         	call	___lmul	;wreg free
 25558   015DCC  C511  F51D         	movff	?___lmul,___lldiv@dividend
 25559   015DD0  C512  F51E         	movff	?___lmul+1,___lldiv@dividend+1
 25560   015DD4  C513  F51F         	movff	?___lmul+2,___lldiv@dividend+2
 25561   015DD8  C514  F520         	movff	?___lmul+3,___lldiv@dividend+3
 25562   015DDC  0E64               	movlw	100
 25563   015DDE  6E21               	movwf	___lldiv@divisor^(0+1280),c
 25564   015DE0  0E00               	movlw	0
 25565   015DE2  6E22               	movwf	(___lldiv@divisor+1)^(0+1280),c
 25566   015DE4  0E00               	movlw	0
 25567   015DE6  6E23               	movwf	(___lldiv@divisor+2)^(0+1280),c
 25568   015DE8  0E00               	movlw	0
 25569   015DEA  6E24               	movwf	(___lldiv@divisor+3)^(0+1280),c
 25570   015DEC  EC40  F0AB         	call	___lldiv	;wreg free
 25571   015DF0  C51D  F52A         	movff	?___lldiv,?_ConvertPercentToPWM
 25572   015DF4  C51E  F52B         	movff	?___lldiv+1,?_ConvertPercentToPWM+1
 25573   015DF8  0012               	return		;funcret
 25574   015DFA                     __end_of_ConvertPercentToPWM:
 25575                           	callstack 0
 25576                           
 25577 ;; *************** function ___lmul *****************
 25578 ;; Defined at:
 25579 ;;		line 15 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
 25580 ;; Parameters:    Size  Location     Type
 25581 ;;  multiplier      4   16[COMRAM] unsigned long 
 25582 ;;  multiplicand    4   20[COMRAM] unsigned long 
 25583 ;; Auto vars:     Size  Location     Type
 25584 ;;  product         4   24[COMRAM] unsigned long 
 25585 ;; Return value:  Size  Location     Type
 25586 ;;                  4   16[COMRAM] unsigned long 
 25587 ;; Registers used:
 25588 ;;		wreg, status,2, status,0
 25589 ;; Tracked objects:
 25590 ;;		On entry : 0/0
 25591 ;;		On exit  : 0/0
 25592 ;;		Unchanged: 0/0
 25593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25594 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25595 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25597 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25598 ;;Total ram usage:       12 bytes
 25599 ;; Hardware stack levels used: 1
 25600 ;; Hardware stack levels required when called: 4
 25601 ;; This function calls:
 25602 ;;		Nothing
 25603 ;; This function is called by:
 25604 ;;		_ConvertPercentToPWM
 25605 ;; This function uses a non-reentrant model
 25606 ;;
 25607                           
 25608                           	psect	text61
 25609   015CCC                     __ptext61:
 25610                           	callstack 0
 25611   015CCC                     ___lmul:
 25612                           	callstack 117
 25613   015CCC  0E00               	movlw	0
 25614   015CCE  6E19               	movwf	___lmul@product^(0+1280),c
 25615   015CD0  0E00               	movlw	0
 25616   015CD2  6E1A               	movwf	(___lmul@product+1)^(0+1280),c
 25617   015CD4  0E00               	movlw	0
 25618   015CD6  6E1B               	movwf	(___lmul@product+2)^(0+1280),c
 25619   015CD8  0E00               	movlw	0
 25620   015CDA  6E1C               	movwf	(___lmul@product+3)^(0+1280),c
 25621   015CDC                     l6303:
 25622   015CDC  A011               	btfss	___lmul@multiplier^(0+1280),0,c
 25623   015CDE  EF73  F0AE         	goto	u4311
 25624   015CE2  EF75  F0AE         	goto	u4310
 25625   015CE6                     u4311:
 25626   015CE6  EF7D  F0AE         	goto	l6307
 25627   015CEA                     u4310:
 25628   015CEA  5015               	movf	___lmul@multiplicand^(0+1280),w,c
 25629   015CEC  2619               	addwf	___lmul@product^(0+1280),f,c
 25630   015CEE  5016               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
 25631   015CF0  221A               	addwfc	(___lmul@product+1)^(0+1280),f,c
 25632   015CF2  5017               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
 25633   015CF4  221B               	addwfc	(___lmul@product+2)^(0+1280),f,c
 25634   015CF6  5018               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
 25635   015CF8  221C               	addwfc	(___lmul@product+3)^(0+1280),f,c
 25636   015CFA                     l6307:
 25637   015CFA  90D8               	bcf	status,0,c
 25638   015CFC  3615               	rlcf	___lmul@multiplicand^(0+1280),f,c
 25639   015CFE  3616               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
 25640   015D00  3617               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
 25641   015D02  3618               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
 25642   015D04  90D8               	bcf	status,0,c
 25643   015D06  3214               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
 25644   015D08  3213               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
 25645   015D0A  3212               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
 25646   015D0C  3211               	rrcf	___lmul@multiplier^(0+1280),f,c
 25647   015D0E  5011               	movf	___lmul@multiplier^(0+1280),w,c
 25648   015D10  1012               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
 25649   015D12  1013               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
 25650   015D14  1014               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
 25651   015D16  A4D8               	btfss	status,2,c
 25652   015D18  EF90  F0AE         	goto	u4321
 25653   015D1C  EF92  F0AE         	goto	u4320
 25654   015D20                     u4321:
 25655   015D20  EF6E  F0AE         	goto	l6303
 25656   015D24                     u4320:
 25657   015D24  C519  F511         	movff	___lmul@product,?___lmul
 25658   015D28  C51A  F512         	movff	___lmul@product+1,?___lmul+1
 25659   015D2C  C51B  F513         	movff	___lmul@product+2,?___lmul+2
 25660   015D30  C51C  F514         	movff	___lmul@product+3,?___lmul+3
 25661   015D34  0012               	return		;funcret
 25662   015D36                     __end_of___lmul:
 25663                           	callstack 0
 25664                           
 25665 ;; *************** function _CCP2_LoadDutyValue *****************
 25666 ;; Defined at:
 25667 ;;		line 68 in file "mcc_generated_files/pwm/src/ccp2.c"
 25668 ;; Parameters:    Size  Location     Type
 25669 ;;  dutycycleVal    2   16[COMRAM] unsigned short 
 25670 ;; Auto vars:     Size  Location     Type
 25671 ;;  dutyValue       2   18[COMRAM] unsigned short 
 25672 ;; Return value:  Size  Location     Type
 25673 ;;                  1    wreg      void 
 25674 ;; Registers used:
 25675 ;;		wreg, status,2, status,0
 25676 ;; Tracked objects:
 25677 ;;		On entry : 0/0
 25678 ;;		On exit  : 0/0
 25679 ;;		Unchanged: 0/0
 25680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25684 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25685 ;;Total ram usage:        4 bytes
 25686 ;; Hardware stack levels used: 1
 25687 ;; Hardware stack levels required when called: 4
 25688 ;; This function calls:
 25689 ;;		Nothing
 25690 ;; This function is called by:
 25691 ;;		_Motor_SetSpeed
 25692 ;; This function uses a non-reentrant model
 25693 ;;
 25694                           
 25695                           	psect	text62
 25696   01633C                     __ptext62:
 25697                           	callstack 0
 25698   01633C                     _CCP2_LoadDutyValue:
 25699                           	callstack 118
 25700   01633C                     
 25701                           ;mcc_generated_files/pwm/src/ccp2.c: 68: void CCP2_LoadDutyValue(uint16_t dutycycleValue
      +                          );mcc_generated_files/pwm/src/ccp2.c: 69: {;mcc_generated_files/pwm/src/ccp2.c: 70:     
      +                          uint16_t dutyValue = dutycycleValue;
 25702   01633C  C511  F513         	movff	CCP2_LoadDutyValue@dutycycleValue,CCP2_LoadDutyValue@dutyValue
 25703   016340  C512  F514         	movff	CCP2_LoadDutyValue@dutycycleValue+1,CCP2_LoadDutyValue@dutyValue+1
 25704   016344                     
 25705                           ;mcc_generated_files/pwm/src/ccp2.c: 71:    dutyValue &= 0x03FF;
 25706   016344  0EFF               	movlw	255
 25707   016346  1613               	andwf	CCP2_LoadDutyValue@dutyValue^(0+1280),f,c
 25708   016348  0E03               	movlw	3
 25709   01634A  1614               	andwf	(CCP2_LoadDutyValue@dutyValue+1)^(0+1280),f,c
 25710   01634C                     
 25711                           ;mcc_generated_files/pwm/src/ccp2.c: 74:     if(1U == CCP2CONbits.FMT)
 25712   01634C  0103               	movlb	3	; () banked
 25713   01634E  A946               	btfss	70,4,b	;volatile
 25714   016350  EFAC  F0B1         	goto	u4781
 25715   016354  EFAE  F0B1         	goto	u4780
 25716   016358                     u4781:
 25717   016358  EFB5  F0B1         	goto	l6559
 25718   01635C                     u4780:
 25719   01635C                     
 25720                           ; BSR set to: 3
 25721                           ;mcc_generated_files/pwm/src/ccp2.c: 75:     {;mcc_generated_files/pwm/src/ccp2.c: 76:  
      +                                 dutyValue <<= 6U;
 25722   01635C  0E06               	movlw	6
 25723   01635E                     u4795:
 25724   01635E  90D8               	bcf	status,0,c
 25725   016360  3613               	rlcf	CCP2_LoadDutyValue@dutyValue^(0+1280),f,c
 25726   016362  3614               	rlcf	(CCP2_LoadDutyValue@dutyValue+1)^(0+1280),f,c
 25727   016364  2EE8               	decfsz	wreg,f,c
 25728   016366  EFAF  F0B1         	goto	u4795
 25729   01636A                     l6559:
 25730                           
 25731                           ; BSR set to: 3
 25732                           ;mcc_generated_files/pwm/src/ccp2.c: 77:         CCPR2H = (uint8_t)(dutyValue >> 8);
 25733   01636A  5014               	movf	(CCP2_LoadDutyValue@dutyValue+1)^(0+1280),w,c
 25734   01636C  6F45               	movwf	69,b	;volatile
 25735   01636E                     
 25736                           ; BSR set to: 3
 25737                           ;mcc_generated_files/pwm/src/ccp2.c: 78:         CCPR2L = (uint8_t)dutyValue;
 25738   01636E  C513  F344         	movff	CCP2_LoadDutyValue@dutyValue,836	;volatile
 25739   016372                     
 25740                           ; BSR set to: 3
 25741   016372  0012               	return		;funcret
 25742   016374                     __end_of_CCP2_LoadDutyValue:
 25743                           	callstack 0
 25744                           
 25745 ;; *************** function _CCP1_LoadDutyValue *****************
 25746 ;; Defined at:
 25747 ;;		line 68 in file "mcc_generated_files/pwm/src/ccp1.c"
 25748 ;; Parameters:    Size  Location     Type
 25749 ;;  dutycycleVal    2   16[COMRAM] unsigned short 
 25750 ;; Auto vars:     Size  Location     Type
 25751 ;;  dutyValue       2   18[COMRAM] unsigned short 
 25752 ;; Return value:  Size  Location     Type
 25753 ;;                  1    wreg      void 
 25754 ;; Registers used:
 25755 ;;		wreg, status,2, status,0
 25756 ;; Tracked objects:
 25757 ;;		On entry : 0/0
 25758 ;;		On exit  : 0/0
 25759 ;;		Unchanged: 0/0
 25760 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;Total ram usage:        4 bytes
 25766 ;; Hardware stack levels used: 1
 25767 ;; Hardware stack levels required when called: 4
 25768 ;; This function calls:
 25769 ;;		Nothing
 25770 ;; This function is called by:
 25771 ;;		_Motor_SetSpeed
 25772 ;; This function uses a non-reentrant model
 25773 ;;
 25774                           
 25775                           	psect	text63
 25776   016374                     __ptext63:
 25777                           	callstack 0
 25778   016374                     _CCP1_LoadDutyValue:
 25779                           	callstack 118
 25780   016374                     
 25781                           ;mcc_generated_files/pwm/src/ccp1.c: 68: void CCP1_LoadDutyValue(uint16_t dutycycleValue
      +                          );mcc_generated_files/pwm/src/ccp1.c: 69: {;mcc_generated_files/pwm/src/ccp1.c: 70:     
      +                          uint16_t dutyValue = dutycycleValue;
 25782   016374  C511  F513         	movff	CCP1_LoadDutyValue@dutycycleValue,CCP1_LoadDutyValue@dutyValue
 25783   016378  C512  F514         	movff	CCP1_LoadDutyValue@dutycycleValue+1,CCP1_LoadDutyValue@dutyValue+1
 25784   01637C                     
 25785                           ;mcc_generated_files/pwm/src/ccp1.c: 71:    dutyValue &= 0x03FF;
 25786   01637C  0EFF               	movlw	255
 25787   01637E  1613               	andwf	CCP1_LoadDutyValue@dutyValue^(0+1280),f,c
 25788   016380  0E03               	movlw	3
 25789   016382  1614               	andwf	(CCP1_LoadDutyValue@dutyValue+1)^(0+1280),f,c
 25790   016384                     
 25791                           ;mcc_generated_files/pwm/src/ccp1.c: 74:     if(1U == CCP1CONbits.FMT)
 25792   016384  0103               	movlb	3	; () banked
 25793   016386  A942               	btfss	66,4,b	;volatile
 25794   016388  EFC8  F0B1         	goto	u4761
 25795   01638C  EFCA  F0B1         	goto	u4760
 25796   016390                     u4761:
 25797   016390  EFD1  F0B1         	goto	l6543
 25798   016394                     u4760:
 25799   016394                     
 25800                           ; BSR set to: 3
 25801                           ;mcc_generated_files/pwm/src/ccp1.c: 75:     {;mcc_generated_files/pwm/src/ccp1.c: 76:  
      +                                 dutyValue <<= 6U;
 25802   016394  0E06               	movlw	6
 25803   016396                     u4775:
 25804   016396  90D8               	bcf	status,0,c
 25805   016398  3613               	rlcf	CCP1_LoadDutyValue@dutyValue^(0+1280),f,c
 25806   01639A  3614               	rlcf	(CCP1_LoadDutyValue@dutyValue+1)^(0+1280),f,c
 25807   01639C  2EE8               	decfsz	wreg,f,c
 25808   01639E  EFCB  F0B1         	goto	u4775
 25809   0163A2                     l6543:
 25810                           
 25811                           ; BSR set to: 3
 25812                           ;mcc_generated_files/pwm/src/ccp1.c: 77:         CCPR1H = (uint8_t)(dutyValue >> 8);
 25813   0163A2  5014               	movf	(CCP1_LoadDutyValue@dutyValue+1)^(0+1280),w,c
 25814   0163A4  6F41               	movwf	65,b	;volatile
 25815   0163A6                     
 25816                           ; BSR set to: 3
 25817                           ;mcc_generated_files/pwm/src/ccp1.c: 78:         CCPR1L = (uint8_t)dutyValue;
 25818   0163A6  C513  F340         	movff	CCP1_LoadDutyValue@dutyValue,832	;volatile
 25819   0163AA                     
 25820                           ; BSR set to: 3
 25821   0163AA  0012               	return		;funcret
 25822   0163AC                     __end_of_CCP1_LoadDutyValue:
 25823                           	callstack 0
 25824                           
 25825 ;; *************** function _Motor_SetDirection *****************
 25826 ;; Defined at:
 25827 ;;		line 67 in file "MotorControl.c"
 25828 ;; Parameters:    Size  Location     Type
 25829 ;;  motor_id        1    wreg     enum E17301
 25830 ;;  direction       1   16[COMRAM] enum E17295
 25831 ;; Auto vars:     Size  Location     Type
 25832 ;;  motor_id        1   19[COMRAM] enum E17301
 25833 ;; Return value:  Size  Location     Type
 25834 ;;                  1    wreg      void 
 25835 ;; Registers used:
 25836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25837 ;; Tracked objects:
 25838 ;;		On entry : 0/0
 25839 ;;		On exit  : 0/0
 25840 ;;		Unchanged: 0/0
 25841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 25842 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25846 ;;Total ram usage:        4 bytes
 25847 ;; Hardware stack levels used: 1
 25848 ;; Hardware stack levels required when called: 4
 25849 ;; This function calls:
 25850 ;;		Nothing
 25851 ;; This function is called by:
 25852 ;;		_Motor_Stop
 25853 ;;		_Motors_SynchronizedStart
 25854 ;;		_Motors_SynchronizedStop
 25855 ;;		_Motor_Control
 25856 ;;		_Motor_Brake
 25857 ;;		_Motors_FastStart_ThenConstant
 25858 ;; This function uses a non-reentrant model
 25859 ;;
 25860                           
 25861                           	psect	text64
 25862   014E4E                     __ptext64:
 25863                           	callstack 0
 25864   014E4E                     _Motor_SetDirection:
 25865                           	callstack 119
 25866                           
 25867                           ; BSR set to: 3
 25868                           ;incstack = 0
 25869                           ;Motor_SetDirection@motor_id stored from wreg
 25870   014E4E  6E14               	movwf	Motor_SetDirection@motor_id^(0+1280),c
 25871   014E50                     
 25872                           ;MotorControl.c: 67: void Motor_SetDirection(motor_id_t motor_id, motor_direction_t dire
      +                          ction);MotorControl.c: 68: {;MotorControl.c: 69:     if (motor_id == MOTOR_A) {
 25873   014E50  5014               	movf	Motor_SetDirection@motor_id^(0+1280),w,c
 25874   014E52  A4D8               	btfss	status,2,c
 25875   014E54  EF2E  F0A7         	goto	u5711
 25876   014E58  EF30  F0A7         	goto	u5710
 25877   014E5C                     u5711:
 25878   014E5C  EF5F  F0A7         	goto	l7109
 25879   014E60                     u5710:
 25880   014E60  EF42  F0A7         	goto	l7107
 25881   014E64                     l1528:
 25882   014E64  80C1               	bsf	193,0,c	;volatile
 25883   014E66  92C1               	bcf	193,1,c	;volatile
 25884   014E68  EF96  F0A7         	goto	l7117
 25885   014E6C                     l1534:
 25886   014E6C  90C1               	bcf	193,0,c	;volatile
 25887   014E6E  82C1               	bsf	193,1,c	;volatile
 25888   014E70  EF96  F0A7         	goto	l7117
 25889   014E74                     l1539:
 25890   014E74  80C1               	bsf	193,0,c	;volatile
 25891   014E76  82C1               	bsf	193,1,c	;volatile
 25892   014E78  EF96  F0A7         	goto	l7117
 25893   014E7C                     l1545:
 25894   014E7C  90C1               	bcf	193,0,c	;volatile
 25895   014E7E  92C1               	bcf	193,1,c	;volatile
 25896   014E80  EF96  F0A7         	goto	l7117
 25897   014E84                     l7107:
 25898   014E84  5011               	movf	Motor_SetDirection@direction^(0+1280),w,c
 25899   014E86  6E12               	movwf	??_Motor_SetDirection^(0+1280),c
 25900   014E88  6A13               	clrf	(??_Motor_SetDirection+1)^(0+1280),c
 25901                           
 25902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25903                           ; Switch size 1, requested type "simple"
 25904                           ; Number of cases is 1, Range of values is 0 to 0
 25905                           ; switch strategies available:
 25906                           ; Name         Instructions Cycles
 25907                           ; simple_byte            4     3 (average)
 25908                           ;	Chosen strategy is simple_byte
 25909   014E8A  5013               	movf	(??_Motor_SetDirection+1)^(0+1280),w,c
 25910   014E8C  0A00               	xorlw	0	; case 0
 25911   014E8E  B4D8               	btfsc	status,2,c
 25912   014E90  EF4C  F0A7         	goto	l11149
 25913   014E94  EF3E  F0A7         	goto	l1545
 25914   014E98                     l11149:
 25915                           
 25916                           ; Switch size 1, requested type "simple"
 25917                           ; Number of cases is 4, Range of values is 0 to 3
 25918                           ; switch strategies available:
 25919                           ; Name         Instructions Cycles
 25920                           ; simple_byte           13     7 (average)
 25921                           ;	Chosen strategy is simple_byte
 25922   014E98  5012               	movf	??_Motor_SetDirection^(0+1280),w,c
 25923   014E9A  0A00               	xorlw	0	; case 0
 25924   014E9C  B4D8               	btfsc	status,2,c
 25925   014E9E  EF3E  F0A7         	goto	l1545
 25926   014EA2  0A01               	xorlw	1	; case 1
 25927   014EA4  B4D8               	btfsc	status,2,c
 25928   014EA6  EF32  F0A7         	goto	l1528
 25929   014EAA  0A03               	xorlw	3	; case 2
 25930   014EAC  B4D8               	btfsc	status,2,c
 25931   014EAE  EF36  F0A7         	goto	l1534
 25932   014EB2  0A01               	xorlw	1	; case 3
 25933   014EB4  B4D8               	btfsc	status,2,c
 25934   014EB6  EF3A  F0A7         	goto	l1539
 25935   014EBA  EF3E  F0A7         	goto	l1545
 25936   014EBE                     l7109:
 25937   014EBE  0414               	decf	Motor_SetDirection@motor_id^(0+1280),w,c
 25938   014EC0  A4D8               	btfss	status,2,c
 25939   014EC2  EF65  F0A7         	goto	u5721
 25940   014EC6  EF67  F0A7         	goto	u5720
 25941   014ECA                     u5721:
 25942   014ECA  EF96  F0A7         	goto	l7117
 25943   014ECE                     u5720:
 25944   014ECE  EF79  F0A7         	goto	l7115
 25945   014ED2                     l1553:
 25946   014ED2  84C1               	bsf	193,2,c	;volatile
 25947   014ED4  96C1               	bcf	193,3,c	;volatile
 25948   014ED6  EF96  F0A7         	goto	l7117
 25949   014EDA                     l1559:
 25950   014EDA  94C1               	bcf	193,2,c	;volatile
 25951   014EDC  86C1               	bsf	193,3,c	;volatile
 25952   014EDE  EF96  F0A7         	goto	l7117
 25953   014EE2                     l1564:
 25954   014EE2  84C1               	bsf	193,2,c	;volatile
 25955   014EE4  86C1               	bsf	193,3,c	;volatile
 25956   014EE6  EF96  F0A7         	goto	l7117
 25957   014EEA                     l1570:
 25958   014EEA  94C1               	bcf	193,2,c	;volatile
 25959   014EEC  96C1               	bcf	193,3,c	;volatile
 25960   014EEE  EF96  F0A7         	goto	l7117
 25961   014EF2                     l7115:
 25962   014EF2  5011               	movf	Motor_SetDirection@direction^(0+1280),w,c
 25963   014EF4  6E12               	movwf	??_Motor_SetDirection^(0+1280),c
 25964   014EF6  6A13               	clrf	(??_Motor_SetDirection+1)^(0+1280),c
 25965                           
 25966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25967                           ; Switch size 1, requested type "simple"
 25968                           ; Number of cases is 1, Range of values is 0 to 0
 25969                           ; switch strategies available:
 25970                           ; Name         Instructions Cycles
 25971                           ; simple_byte            4     3 (average)
 25972                           ;	Chosen strategy is simple_byte
 25973   014EF8  5013               	movf	(??_Motor_SetDirection+1)^(0+1280),w,c
 25974   014EFA  0A00               	xorlw	0	; case 0
 25975   014EFC  B4D8               	btfsc	status,2,c
 25976   014EFE  EF83  F0A7         	goto	l11151
 25977   014F02  EF75  F0A7         	goto	l1570
 25978   014F06                     l11151:
 25979                           
 25980                           ; Switch size 1, requested type "simple"
 25981                           ; Number of cases is 4, Range of values is 0 to 3
 25982                           ; switch strategies available:
 25983                           ; Name         Instructions Cycles
 25984                           ; simple_byte           13     7 (average)
 25985                           ;	Chosen strategy is simple_byte
 25986   014F06  5012               	movf	??_Motor_SetDirection^(0+1280),w,c
 25987   014F08  0A00               	xorlw	0	; case 0
 25988   014F0A  B4D8               	btfsc	status,2,c
 25989   014F0C  EF75  F0A7         	goto	l1570
 25990   014F10  0A01               	xorlw	1	; case 1
 25991   014F12  B4D8               	btfsc	status,2,c
 25992   014F14  EF69  F0A7         	goto	l1553
 25993   014F18  0A03               	xorlw	3	; case 2
 25994   014F1A  B4D8               	btfsc	status,2,c
 25995   014F1C  EF6D  F0A7         	goto	l1559
 25996   014F20  0A01               	xorlw	1	; case 3
 25997   014F22  B4D8               	btfsc	status,2,c
 25998   014F24  EF71  F0A7         	goto	l1564
 25999   014F28  EF75  F0A7         	goto	l1570
 26000   014F2C                     l7117:
 26001                           
 26002                           ;MotorControl.c: 110:     current_motor_directions[motor_id] = direction;
 26003   014F2C  0E41               	movlw	low _current_motor_directions
 26004   014F2E  2414               	addwf	Motor_SetDirection@motor_id^(0+1280),w,c
 26005   014F30  6ED9               	movwf	fsr2l,c
 26006   014F32  6ADA               	clrf	fsr2h,c
 26007   014F34  0E05               	movlw	high _current_motor_directions
 26008   014F36  22DA               	addwfc	fsr2h,f,c
 26009   014F38  C511  F4DF         	movff	Motor_SetDirection@direction,indf2
 26010   014F3C  0012               	return		;funcret
 26011   014F3E                     __end_of_Motor_SetDirection:
 26012                           	callstack 0
 26013                           
 26014 ;; *************** function _MPU6050_ReadSensorData *****************
 26015 ;; Defined at:
 26016 ;;		line 362 in file "I2C_MPU6050.c"
 26017 ;; Parameters:    Size  Location     Type
 26018 ;;  data            2   83[BANK5 ] PTR struct .
 26019 ;;		 -> mpu_data(28), 
 26020 ;; Auto vars:     Size  Location     Type
 26021 ;;  temp_raw        2   97[BANK5 ] short 
 26022 ;;  gz_raw          2   95[BANK5 ] short 
 26023 ;;  gy_raw          2   93[BANK5 ] short 
 26024 ;;  gx_raw          2   91[BANK5 ] short 
 26025 ;;  az_raw          2   89[BANK5 ] short 
 26026 ;;  ay_raw          2   87[BANK5 ] short 
 26027 ;;  ax_raw          2   85[BANK5 ] short 
 26028 ;; Return value:  Size  Location     Type
 26029 ;;                  1    wreg      void 
 26030 ;; Registers used:
 26031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26032 ;; Tracked objects:
 26033 ;;		On entry : 0/0
 26034 ;;		On exit  : 0/0
 26035 ;;		Unchanged: 0/0
 26036 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26038 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26041 ;;Total ram usage:       16 bytes
 26042 ;; Hardware stack levels used: 1
 26043 ;; Hardware stack levels required when called: 8
 26044 ;; This function calls:
 26045 ;;		_MPU6050_ReadSensorRaw
 26046 ;;		___fladd
 26047 ;;		___fldiv
 26048 ;;		___flsub
 26049 ;;		___xxtofl
 26050 ;; This function is called by:
 26051 ;;		_main
 26052 ;; This function uses a non-reentrant model
 26053 ;;
 26054                           
 26055                           	psect	text65
 26056   012710                     __ptext65:
 26057                           	callstack 0
 26058   012710                     _MPU6050_ReadSensorData:
 26059                           	callstack 118
 26060   012710                     
 26061                           ;I2C_MPU6050.c: 362: void MPU6050_ReadSensorData(MPU6050_Data_t *data);I2C_MPU6050.c: 36
      +                          3: {;I2C_MPU6050.c: 364:     if (!mpu6050_initialized) return;
 26062   012710  0105               	movlb	5	; () banked
 26063   012712  51FE               	movf	_mpu6050_initialized& (0+255),w,b
 26064   012714  A4D8               	btfss	status,2,c
 26065   012716  EF8F  F093         	goto	u9931
 26066   01271A  EF91  F093         	goto	u9930
 26067   01271E                     u9931:
 26068   01271E  EF93  F093         	goto	l10637
 26069   012722                     u9930:
 26070   012722  EF8F  F095         	goto	l1309
 26071   012726                     l10637:
 26072                           
 26073                           ; BSR set to: 5
 26074                           ;I2C_MPU6050.c: 366:     int16_t ax_raw, ay_raw, az_raw, gx_raw, gy_raw, gz_raw, temp_ra
      +                          w;;I2C_MPU6050.c: 368:     MPU6050_ReadSensorRaw(&ax_raw, &ay_raw, &az_raw, &temp_raw, &
      +                          gx_raw, &gy_raw, &gz_raw);
 26075   012726  0EB5               	movlw	low MPU6050_ReadSensorData@ax_raw
 26076   012728  6E1D               	movwf	MPU6050_ReadSensorRaw@accelX^(0+1280),c
 26077   01272A  0E05               	movlw	high MPU6050_ReadSensorData@ax_raw
 26078   01272C  6E1E               	movwf	(MPU6050_ReadSensorRaw@accelX+1)^(0+1280),c
 26079   01272E  0EB7               	movlw	low MPU6050_ReadSensorData@ay_raw
 26080   012730  6E1F               	movwf	MPU6050_ReadSensorRaw@accelY^(0+1280),c
 26081   012732  0E05               	movlw	high MPU6050_ReadSensorData@ay_raw
 26082   012734  6E20               	movwf	(MPU6050_ReadSensorRaw@accelY+1)^(0+1280),c
 26083   012736  0EB9               	movlw	low MPU6050_ReadSensorData@az_raw
 26084   012738  6E21               	movwf	MPU6050_ReadSensorRaw@accelZ^(0+1280),c
 26085   01273A  0E05               	movlw	high MPU6050_ReadSensorData@az_raw
 26086   01273C  6E22               	movwf	(MPU6050_ReadSensorRaw@accelZ+1)^(0+1280),c
 26087   01273E  0EC1               	movlw	low MPU6050_ReadSensorData@temp_raw
 26088   012740  6E23               	movwf	MPU6050_ReadSensorRaw@temp^(0+1280),c
 26089   012742  0E05               	movlw	high MPU6050_ReadSensorData@temp_raw
 26090   012744  6E24               	movwf	(MPU6050_ReadSensorRaw@temp+1)^(0+1280),c
 26091   012746  0EBB               	movlw	low MPU6050_ReadSensorData@gx_raw
 26092   012748  6E25               	movwf	MPU6050_ReadSensorRaw@gyroX^(0+1280),c
 26093   01274A  0E05               	movlw	high MPU6050_ReadSensorData@gx_raw
 26094   01274C  6E26               	movwf	(MPU6050_ReadSensorRaw@gyroX+1)^(0+1280),c
 26095   01274E  0EBD               	movlw	low MPU6050_ReadSensorData@gy_raw
 26096   012750  6E27               	movwf	MPU6050_ReadSensorRaw@gyroY^(0+1280),c
 26097   012752  0E05               	movlw	high MPU6050_ReadSensorData@gy_raw
 26098   012754  6E28               	movwf	(MPU6050_ReadSensorRaw@gyroY+1)^(0+1280),c
 26099   012756  0EBF               	movlw	low MPU6050_ReadSensorData@gz_raw
 26100   012758  6E29               	movwf	MPU6050_ReadSensorRaw@gyroZ^(0+1280),c
 26101   01275A  0E05               	movlw	high MPU6050_ReadSensorData@gz_raw
 26102   01275C  6E2A               	movwf	(MPU6050_ReadSensorRaw@gyroZ+1)^(0+1280),c
 26103   01275E  ECA4  F0A2         	call	_MPU6050_ReadSensorRaw	;wreg free
 26104                           
 26105                           ;I2C_MPU6050.c: 372:     data->accel.x = ((float)ax_raw - accel_offset.x) / accel_lsb_pe
      +                          r_g;
 26106   012762  C685  F579         	movff	_accel_offset,___flsub@a
 26107   012766  C686  F57A         	movff	_accel_offset+1,___flsub@a+1
 26108   01276A  C687  F57B         	movff	_accel_offset+2,___flsub@a+2
 26109   01276E  C688  F57C         	movff	_accel_offset+3,___flsub@a+3
 26110   012772  C5B5  F511         	movff	MPU6050_ReadSensorData@ax_raw,___xxtofl@val
 26111   012776  C5B6  F512         	movff	MPU6050_ReadSensorData@ax_raw+1,___xxtofl@val+1
 26112   01277A  0E00               	movlw	0
 26113   01277C  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26114   01277E  0EFF               	movlw	-1
 26115   012780  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26116   012782  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26117   012784  0E01               	movlw	1
 26118   012786  ECCA  F0A1         	call	___xxtofl
 26119   01278A  C511  F575         	movff	?___xxtofl,___flsub@b
 26120   01278E  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26121   012792  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26122   012796  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26123   01279A  ECBF  F0B0         	call	___flsub	;wreg free
 26124   01279E  C575  F59A         	movff	?___flsub,___fldiv@b
 26125   0127A2  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26126   0127A6  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26127   0127AA  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26128   0127AE  C6E2  F59E         	movff	_accel_lsb_per_g,___fldiv@a
 26129   0127B2  C6E3  F59F         	movff	_accel_lsb_per_g+1,___fldiv@a+1
 26130   0127B6  C6E4  F5A0         	movff	_accel_lsb_per_g+2,___fldiv@a+2
 26131   0127BA  C6E5  F5A1         	movff	_accel_lsb_per_g+3,___fldiv@a+3
 26132   0127BE  EC5C  F099         	call	___fldiv	;wreg free
 26133   0127C2  C5B3  F4D9         	movff	MPU6050_ReadSensorData@data,fsr2l
 26134   0127C6  C5B4  F4DA         	movff	MPU6050_ReadSensorData@data+1,fsr2h
 26135   0127CA  0105               	movlb	5	; () banked
 26136   0127CC  C59A  F4DE         	movff	?___fldiv,postinc2
 26137   0127D0  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26138   0127D4  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26139   0127D8  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26140                           
 26141                           ;I2C_MPU6050.c: 373:     data->accel.y = ((float)ay_raw - accel_offset.y) / accel_lsb_pe
      +                          r_g;
 26142   0127DC  C689  F579         	movff	_accel_offset+4,___flsub@a
 26143   0127E0  C68A  F57A         	movff	_accel_offset+5,___flsub@a+1
 26144   0127E4  C68B  F57B         	movff	_accel_offset+6,___flsub@a+2
 26145   0127E8  C68C  F57C         	movff	_accel_offset+7,___flsub@a+3
 26146   0127EC  C5B7  F511         	movff	MPU6050_ReadSensorData@ay_raw,___xxtofl@val
 26147   0127F0  C5B8  F512         	movff	MPU6050_ReadSensorData@ay_raw+1,___xxtofl@val+1
 26148   0127F4  0E00               	movlw	0
 26149   0127F6  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26150   0127F8  0EFF               	movlw	-1
 26151   0127FA  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26152   0127FC  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26153   0127FE  0E01               	movlw	1
 26154   012800  ECCA  F0A1         	call	___xxtofl
 26155   012804  C511  F575         	movff	?___xxtofl,___flsub@b
 26156   012808  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26157   01280C  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26158   012810  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26159   012814  ECBF  F0B0         	call	___flsub	;wreg free
 26160   012818  C575  F59A         	movff	?___flsub,___fldiv@b
 26161   01281C  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26162   012820  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26163   012824  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26164   012828  C6E2  F59E         	movff	_accel_lsb_per_g,___fldiv@a
 26165   01282C  C6E3  F59F         	movff	_accel_lsb_per_g+1,___fldiv@a+1
 26166   012830  C6E4  F5A0         	movff	_accel_lsb_per_g+2,___fldiv@a+2
 26167   012834  C6E5  F5A1         	movff	_accel_lsb_per_g+3,___fldiv@a+3
 26168   012838  EC5C  F099         	call	___fldiv	;wreg free
 26169   01283C  0105               	movlb	5	; () banked
 26170   01283E  EE20 F004          	lfsr	2,4
 26171   012842  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26172   012844  26D9               	addwf	fsr2l,f,c
 26173   012846  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26174   012848  22DA               	addwfc	fsr2h,f,c
 26175   01284A  C59A  F4DE         	movff	?___fldiv,postinc2
 26176   01284E  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26177   012852  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26178   012856  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26179                           
 26180                           ;I2C_MPU6050.c: 374:     data->accel.z = ((float)az_raw - accel_offset.z) / accel_lsb_pe
      +                          r_g;
 26181   01285A  C68D  F579         	movff	_accel_offset+8,___flsub@a
 26182   01285E  C68E  F57A         	movff	_accel_offset+9,___flsub@a+1
 26183   012862  C68F  F57B         	movff	_accel_offset+10,___flsub@a+2
 26184   012866  C690  F57C         	movff	_accel_offset+11,___flsub@a+3
 26185   01286A  C5B9  F511         	movff	MPU6050_ReadSensorData@az_raw,___xxtofl@val
 26186   01286E  C5BA  F512         	movff	MPU6050_ReadSensorData@az_raw+1,___xxtofl@val+1
 26187   012872  0E00               	movlw	0
 26188   012874  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26189   012876  0EFF               	movlw	-1
 26190   012878  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26191   01287A  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26192   01287C  0E01               	movlw	1
 26193   01287E  ECCA  F0A1         	call	___xxtofl
 26194   012882  C511  F575         	movff	?___xxtofl,___flsub@b
 26195   012886  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26196   01288A  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26197   01288E  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26198   012892  ECBF  F0B0         	call	___flsub	;wreg free
 26199   012896  C575  F59A         	movff	?___flsub,___fldiv@b
 26200   01289A  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26201   01289E  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26202   0128A2  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26203   0128A6  C6E2  F59E         	movff	_accel_lsb_per_g,___fldiv@a
 26204   0128AA  C6E3  F59F         	movff	_accel_lsb_per_g+1,___fldiv@a+1
 26205   0128AE  C6E4  F5A0         	movff	_accel_lsb_per_g+2,___fldiv@a+2
 26206   0128B2  C6E5  F5A1         	movff	_accel_lsb_per_g+3,___fldiv@a+3
 26207   0128B6  EC5C  F099         	call	___fldiv	;wreg free
 26208   0128BA  0105               	movlb	5	; () banked
 26209   0128BC  EE20 F008          	lfsr	2,8
 26210   0128C0  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26211   0128C2  26D9               	addwf	fsr2l,f,c
 26212   0128C4  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26213   0128C6  22DA               	addwfc	fsr2h,f,c
 26214   0128C8  C59A  F4DE         	movff	?___fldiv,postinc2
 26215   0128CC  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26216   0128D0  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26217   0128D4  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26218                           
 26219                           ;I2C_MPU6050.c: 376:     data->gyro.x = ((float)gx_raw - gyro_offset.x) / gyro_lsb_per_d
      +                          ps;
 26220   0128D8  C679  F579         	movff	_gyro_offset,___flsub@a
 26221   0128DC  C67A  F57A         	movff	_gyro_offset+1,___flsub@a+1
 26222   0128E0  C67B  F57B         	movff	_gyro_offset+2,___flsub@a+2
 26223   0128E4  C67C  F57C         	movff	_gyro_offset+3,___flsub@a+3
 26224   0128E8  C5BB  F511         	movff	MPU6050_ReadSensorData@gx_raw,___xxtofl@val
 26225   0128EC  C5BC  F512         	movff	MPU6050_ReadSensorData@gx_raw+1,___xxtofl@val+1
 26226   0128F0  0E00               	movlw	0
 26227   0128F2  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26228   0128F4  0EFF               	movlw	-1
 26229   0128F6  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26230   0128F8  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26231   0128FA  0E01               	movlw	1
 26232   0128FC  ECCA  F0A1         	call	___xxtofl
 26233   012900  C511  F575         	movff	?___xxtofl,___flsub@b
 26234   012904  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26235   012908  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26236   01290C  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26237   012910  ECBF  F0B0         	call	___flsub	;wreg free
 26238   012914  C575  F59A         	movff	?___flsub,___fldiv@b
 26239   012918  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26240   01291C  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26241   012920  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26242   012924  C6DE  F59E         	movff	_gyro_lsb_per_dps,___fldiv@a
 26243   012928  C6DF  F59F         	movff	_gyro_lsb_per_dps+1,___fldiv@a+1
 26244   01292C  C6E0  F5A0         	movff	_gyro_lsb_per_dps+2,___fldiv@a+2
 26245   012930  C6E1  F5A1         	movff	_gyro_lsb_per_dps+3,___fldiv@a+3
 26246   012934  EC5C  F099         	call	___fldiv	;wreg free
 26247   012938  0105               	movlb	5	; () banked
 26248   01293A  EE20 F00C          	lfsr	2,12
 26249   01293E  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26250   012940  26D9               	addwf	fsr2l,f,c
 26251   012942  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26252   012944  22DA               	addwfc	fsr2h,f,c
 26253   012946  C59A  F4DE         	movff	?___fldiv,postinc2
 26254   01294A  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26255   01294E  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26256   012952  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26257                           
 26258                           ;I2C_MPU6050.c: 377:     data->gyro.y = ((float)gy_raw - gyro_offset.y) / gyro_lsb_per_d
      +                          ps;
 26259   012956  C67D  F579         	movff	_gyro_offset+4,___flsub@a
 26260   01295A  C67E  F57A         	movff	_gyro_offset+5,___flsub@a+1
 26261   01295E  C67F  F57B         	movff	_gyro_offset+6,___flsub@a+2
 26262   012962  C680  F57C         	movff	_gyro_offset+7,___flsub@a+3
 26263   012966  C5BD  F511         	movff	MPU6050_ReadSensorData@gy_raw,___xxtofl@val
 26264   01296A  C5BE  F512         	movff	MPU6050_ReadSensorData@gy_raw+1,___xxtofl@val+1
 26265   01296E  0E00               	movlw	0
 26266   012970  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26267   012972  0EFF               	movlw	-1
 26268   012974  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26269   012976  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26270   012978  0E01               	movlw	1
 26271   01297A  ECCA  F0A1         	call	___xxtofl
 26272   01297E  C511  F575         	movff	?___xxtofl,___flsub@b
 26273   012982  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26274   012986  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26275   01298A  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26276   01298E  ECBF  F0B0         	call	___flsub	;wreg free
 26277   012992  C575  F59A         	movff	?___flsub,___fldiv@b
 26278   012996  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26279   01299A  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26280   01299E  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26281   0129A2  C6DE  F59E         	movff	_gyro_lsb_per_dps,___fldiv@a
 26282   0129A6  C6DF  F59F         	movff	_gyro_lsb_per_dps+1,___fldiv@a+1
 26283   0129AA  C6E0  F5A0         	movff	_gyro_lsb_per_dps+2,___fldiv@a+2
 26284   0129AE  C6E1  F5A1         	movff	_gyro_lsb_per_dps+3,___fldiv@a+3
 26285   0129B2  EC5C  F099         	call	___fldiv	;wreg free
 26286   0129B6  0105               	movlb	5	; () banked
 26287   0129B8  EE20 F010          	lfsr	2,16
 26288   0129BC  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26289   0129BE  26D9               	addwf	fsr2l,f,c
 26290   0129C0  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26291   0129C2  22DA               	addwfc	fsr2h,f,c
 26292   0129C4  C59A  F4DE         	movff	?___fldiv,postinc2
 26293   0129C8  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26294   0129CC  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26295   0129D0  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26296                           
 26297                           ;I2C_MPU6050.c: 378:     data->gyro.z = ((float)gz_raw - gyro_offset.z) / gyro_lsb_per_d
      +                          ps;
 26298   0129D4  C681  F579         	movff	_gyro_offset+8,___flsub@a
 26299   0129D8  C682  F57A         	movff	_gyro_offset+9,___flsub@a+1
 26300   0129DC  C683  F57B         	movff	_gyro_offset+10,___flsub@a+2
 26301   0129E0  C684  F57C         	movff	_gyro_offset+11,___flsub@a+3
 26302   0129E4  C5BF  F511         	movff	MPU6050_ReadSensorData@gz_raw,___xxtofl@val
 26303   0129E8  C5C0  F512         	movff	MPU6050_ReadSensorData@gz_raw+1,___xxtofl@val+1
 26304   0129EC  0E00               	movlw	0
 26305   0129EE  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26306   0129F0  0EFF               	movlw	-1
 26307   0129F2  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26308   0129F4  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26309   0129F6  0E01               	movlw	1
 26310   0129F8  ECCA  F0A1         	call	___xxtofl
 26311   0129FC  C511  F575         	movff	?___xxtofl,___flsub@b
 26312   012A00  C512  F576         	movff	?___xxtofl+1,___flsub@b+1
 26313   012A04  C513  F577         	movff	?___xxtofl+2,___flsub@b+2
 26314   012A08  C514  F578         	movff	?___xxtofl+3,___flsub@b+3
 26315   012A0C  ECBF  F0B0         	call	___flsub	;wreg free
 26316   012A10  C575  F59A         	movff	?___flsub,___fldiv@b
 26317   012A14  C576  F59B         	movff	?___flsub+1,___fldiv@b+1
 26318   012A18  C577  F59C         	movff	?___flsub+2,___fldiv@b+2
 26319   012A1C  C578  F59D         	movff	?___flsub+3,___fldiv@b+3
 26320   012A20  C6DE  F59E         	movff	_gyro_lsb_per_dps,___fldiv@a
 26321   012A24  C6DF  F59F         	movff	_gyro_lsb_per_dps+1,___fldiv@a+1
 26322   012A28  C6E0  F5A0         	movff	_gyro_lsb_per_dps+2,___fldiv@a+2
 26323   012A2C  C6E1  F5A1         	movff	_gyro_lsb_per_dps+3,___fldiv@a+3
 26324   012A30  EC5C  F099         	call	___fldiv	;wreg free
 26325   012A34  0105               	movlb	5	; () banked
 26326   012A36  EE20 F014          	lfsr	2,20
 26327   012A3A  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26328   012A3C  26D9               	addwf	fsr2l,f,c
 26329   012A3E  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26330   012A40  22DA               	addwfc	fsr2h,f,c
 26331   012A42  C59A  F4DE         	movff	?___fldiv,postinc2
 26332   012A46  C59B  F4DE         	movff	?___fldiv+1,postinc2
 26333   012A4A  C59C  F4DE         	movff	?___fldiv+2,postinc2
 26334   012A4E  C59D  F4DE         	movff	?___fldiv+3,postinc2
 26335                           
 26336                           ;I2C_MPU6050.c: 381:     data->temp = (temp_raw / 340.0f) + 36.53f;
 26337   012A52  0E00               	movlw	0
 26338   012A54  6F9E               	movwf	___fldiv@a& (0+255),b
 26339   012A56  0E00               	movlw	0
 26340   012A58  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 26341   012A5A  0EAA               	movlw	170
 26342   012A5C  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 26343   012A5E  0E43               	movlw	67
 26344   012A60  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 26345   012A62  C5C1  F511         	movff	MPU6050_ReadSensorData@temp_raw,___xxtofl@val
 26346   012A66  C5C2  F512         	movff	MPU6050_ReadSensorData@temp_raw+1,___xxtofl@val+1
 26347   012A6A  0E00               	movlw	0
 26348   012A6C  BE12               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 26349   012A6E  0EFF               	movlw	-1
 26350   012A70  6E13               	movwf	(___xxtofl@val+2)^(0+1280),c
 26351   012A72  6E14               	movwf	(___xxtofl@val+3)^(0+1280),c
 26352   012A74  0E01               	movlw	1
 26353   012A76  ECCA  F0A1         	call	___xxtofl
 26354   012A7A  C511  F59A         	movff	?___xxtofl,___fldiv@b
 26355   012A7E  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 26356   012A82  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 26357   012A86  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 26358   012A8A  EC5C  F099         	call	___fldiv	;wreg free
 26359   012A8E  C59A  F56D         	movff	?___fldiv,___fladd@b
 26360   012A92  C59B  F56E         	movff	?___fldiv+1,___fladd@b+1
 26361   012A96  C59C  F56F         	movff	?___fldiv+2,___fladd@b+2
 26362   012A9A  C59D  F570         	movff	?___fldiv+3,___fladd@b+3
 26363   012A9E  0EB8               	movlw	184
 26364   012AA0  0105               	movlb	5	; () banked
 26365   012AA2  6F71               	movwf	___fladd@a& (0+255),b
 26366   012AA4  0E1E               	movlw	30
 26367   012AA6  6F72               	movwf	(___fladd@a+1)& (0+255),b
 26368   012AA8  0E12               	movlw	18
 26369   012AAA  6F73               	movwf	(___fladd@a+2)& (0+255),b
 26370   012AAC  0E42               	movlw	66
 26371   012AAE  6F74               	movwf	(___fladd@a+3)& (0+255),b
 26372   012AB0  EC18  F08F         	call	___fladd	;wreg free
 26373   012AB4  0105               	movlb	5	; () banked
 26374   012AB6  EE20 F018          	lfsr	2,24
 26375   012ABA  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26376   012ABC  26D9               	addwf	fsr2l,f,c
 26377   012ABE  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26378   012AC0  22DA               	addwfc	fsr2h,f,c
 26379   012AC2  C56D  F4DE         	movff	?___fladd,postinc2
 26380   012AC6  C56E  F4DE         	movff	?___fladd+1,postinc2
 26381   012ACA  C56F  F4DE         	movff	?___fladd+2,postinc2
 26382   012ACE  C570  F4DE         	movff	?___fladd+3,postinc2
 26383   012AD2                     
 26384                           ; BSR set to: 5
 26385                           ;I2C_MPU6050.c: 389:     movement_detector.current_accel = data->accel;
 26386   012AD2  C5B3  F4D9         	movff	MPU6050_ReadSensorData@data,fsr2l
 26387   012AD6  C5B4  F4DA         	movff	MPU6050_ReadSensorData@data+1,fsr2h
 26388   012ADA  EE11  F300         	lfsr	1,_movement_detector
 26389   012ADE  0E0B               	movlw	11
 26390   012AE0                     u9941:
 26391   012AE0  C4DB F4E3          	movff	plusw2,plusw1
 26392   012AE4  06E8               	decf	wreg,f,c
 26393   012AE6  E2FC               	bc	u9941
 26394   012AE8                     
 26395                           ; BSR set to: 5
 26396                           ;I2C_MPU6050.c: 390:     movement_detector.current_gyro = data->gyro;
 26397   012AE8  EE20 F00C          	lfsr	2,12
 26398   012AEC  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26399   012AEE  26D9               	addwf	fsr2l,f,c
 26400   012AF0  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26401   012AF2  22DA               	addwfc	fsr2h,f,c
 26402   012AF4  EE11  F30C         	lfsr	1,_movement_detector+12
 26403   012AF8  0E0B               	movlw	11
 26404   012AFA                     u9951:
 26405   012AFA  C4DB F4E3          	movff	plusw2,plusw1
 26406   012AFE  06E8               	decf	wreg,f,c
 26407   012B00  E2FC               	bc	u9951
 26408   012B02                     
 26409                           ; BSR set to: 5
 26410                           ;I2C_MPU6050.c: 391:     movement_detector.current_temp = data->temp;
 26411   012B02  EE20 F018          	lfsr	2,24
 26412   012B06  51B3               	movf	MPU6050_ReadSensorData@data& (0+255),w,b
 26413   012B08  26D9               	addwf	fsr2l,f,c
 26414   012B0A  51B4               	movf	(MPU6050_ReadSensorData@data+1)& (0+255),w,b
 26415   012B0C  22DA               	addwfc	fsr2h,f,c
 26416   012B0E  C4DE F718          	movff	postinc2,_movement_detector+24
 26417   012B12  C4DE F719          	movff	postinc2,_movement_detector+25
 26418   012B16  C4DE F71A          	movff	postinc2,_movement_detector+26
 26419   012B1A  C4DE F71B          	movff	postinc2,_movement_detector+27
 26420   012B1E                     l1309:
 26421                           
 26422                           ; BSR set to: 5
 26423   012B1E  0012               	return		;funcret
 26424   012B20                     __end_of_MPU6050_ReadSensorData:
 26425                           	callstack 0
 26426                           
 26427 ;; *************** function _MPU6050_Init *****************
 26428 ;; Defined at:
 26429 ;;		line 262 in file "I2C_MPU6050.c"
 26430 ;; Parameters:    Size  Location     Type
 26431 ;;		None
 26432 ;; Auto vars:     Size  Location     Type
 26433 ;;		None
 26434 ;; Return value:  Size  Location     Type
 26435 ;;                  1    wreg      _Bool 
 26436 ;; Registers used:
 26437 ;;		wreg, status,2, status,0, cstack
 26438 ;; Tracked objects:
 26439 ;;		On entry : 0/0
 26440 ;;		On exit  : 0/0
 26441 ;;		Unchanged: 0/0
 26442 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26447 ;;Total ram usage:        2 bytes
 26448 ;; Hardware stack levels used: 1
 26449 ;; Hardware stack levels required when called: 8
 26450 ;; This function calls:
 26451 ;;		_MPU6050_ReadRegister
 26452 ;;		_MPU6050_WriteRegister
 26453 ;; This function is called by:
 26454 ;;		_main
 26455 ;; This function uses a non-reentrant model
 26456 ;;
 26457                           
 26458                           	psect	text66
 26459   0153C0                     __ptext66:
 26460                           	callstack 0
 26461   0153C0                     _MPU6050_Init:
 26462                           	callstack 118
 26463   0153C0                     
 26464                           ;I2C_MPU6050.c: 265:     if (MPU6050_ReadRegister(0x75) != 0x68) {
 26465   0153C0  0E75               	movlw	117
 26466   0153C2  ECE0  F0AB         	call	_MPU6050_ReadRegister
 26467   0153C6  0A68               	xorlw	104
 26468   0153C8  B4D8               	btfsc	status,2,c
 26469   0153CA  EFE9  F0A9         	goto	u7551
 26470   0153CE  EFEB  F0A9         	goto	u7550
 26471   0153D2                     u7551:
 26472   0153D2  EFEE  F0A9         	goto	l8731
 26473   0153D6                     u7550:
 26474   0153D6                     
 26475                           ;I2C_MPU6050.c: 273:         return 0;
 26476   0153D6  0E00               	movlw	0
 26477   0153D8  EF3A  F0AA         	goto	l1299
 26478   0153DC                     l8731:
 26479                           
 26480                           ;I2C_MPU6050.c: 277:     MPU6050_WriteRegister(0x6B, 0x80);
 26481   0153DC  0E80               	movlw	128
 26482   0153DE  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26483   0153E0  0E6B               	movlw	107
 26484   0153E2  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26485   0153E6                     
 26486                           ;I2C_MPU6050.c: 278:     _delay((unsigned long)((100)*(64000000U/4000.0)));
 26487   0153E6  0E09               	movlw	9
 26488   0153E8  6E22               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 26489   0153EA  0E1E               	movlw	30
 26490   0153EC  6E21               	movwf	??_MPU6050_Init^(0+1280),c
 26491   0153EE  0EE4               	movlw	228
 26492   0153F0                     u10777:
 26493   0153F0  2EE8               	decfsz	wreg,f,c
 26494   0153F2  D7FE               	bra	u10777
 26495   0153F4  2E21               	decfsz	??_MPU6050_Init^(0+1280),f,c
 26496   0153F6  D7FC               	bra	u10777
 26497   0153F8  2E22               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 26498   0153FA  D7FA               	bra	u10777
 26499   0153FC  D000               	nop2	
 26500   0153FE                     
 26501                           ;I2C_MPU6050.c: 281:     MPU6050_WriteRegister(0x6B, 0x00);
 26502   0153FE  0E00               	movlw	0
 26503   015400  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26504   015402  0E6B               	movlw	107
 26505   015404  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26506                           
 26507                           ;I2C_MPU6050.c: 282:     _delay((unsigned long)((100)*(64000000U/4000.0)));
 26508   015408  0E09               	movlw	9
 26509   01540A  6E22               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 26510   01540C  0E1E               	movlw	30
 26511   01540E  6E21               	movwf	??_MPU6050_Init^(0+1280),c
 26512   015410  0EE4               	movlw	228
 26513   015412                     u10787:
 26514   015412  2EE8               	decfsz	wreg,f,c
 26515   015414  D7FE               	bra	u10787
 26516   015416  2E21               	decfsz	??_MPU6050_Init^(0+1280),f,c
 26517   015418  D7FC               	bra	u10787
 26518   01541A  2E22               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 26519   01541C  D7FA               	bra	u10787
 26520   01541E  D000               	nop2	
 26521   015420                     
 26522                           ;I2C_MPU6050.c: 285:     MPU6050_WriteRegister(0x19, 0x07);
 26523   015420  0E07               	movlw	7
 26524   015422  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26525   015424  0E19               	movlw	25
 26526   015426  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26527   01542A                     
 26528                           ;I2C_MPU6050.c: 288:     MPU6050_WriteRegister(0x1A, 0x03);
 26529   01542A  0E03               	movlw	3
 26530   01542C  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26531   01542E  0E1A               	movlw	26
 26532   015430  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26533   015434                     
 26534                           ;I2C_MPU6050.c: 291:     MPU6050_WriteRegister(0x1B, 0x00);
 26535   015434  0E00               	movlw	0
 26536   015436  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26537   015438  0E1B               	movlw	27
 26538   01543A  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26539   01543E                     
 26540                           ;I2C_MPU6050.c: 292:     gyro_lsb_per_dps = 131.0f;
 26541   01543E  0E00               	movlw	0
 26542   015440  0106               	movlb	6	; () banked
 26543   015442  6FDE               	movwf	_gyro_lsb_per_dps& (0+255),b
 26544   015444  0E00               	movlw	0
 26545   015446  6FDF               	movwf	(_gyro_lsb_per_dps+1)& (0+255),b
 26546   015448  0E03               	movlw	3
 26547   01544A  6FE0               	movwf	(_gyro_lsb_per_dps+2)& (0+255),b
 26548   01544C  0E43               	movlw	67
 26549   01544E  6FE1               	movwf	(_gyro_lsb_per_dps+3)& (0+255),b
 26550   015450                     
 26551                           ; BSR set to: 6
 26552                           ;I2C_MPU6050.c: 295:     MPU6050_WriteRegister(0x1C, 0x00);
 26553   015450  0E00               	movlw	0
 26554   015452  6E19               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 26555   015454  0E1C               	movlw	28
 26556   015456  ECFB  F0AC         	call	_MPU6050_WriteRegister
 26557   01545A                     
 26558                           ;I2C_MPU6050.c: 296:     accel_lsb_per_g = 16384.0f;
 26559   01545A  0E00               	movlw	0
 26560   01545C  0106               	movlb	6	; () banked
 26561   01545E  6FE2               	movwf	_accel_lsb_per_g& (0+255),b
 26562   015460  0E00               	movlw	0
 26563   015462  6FE3               	movwf	(_accel_lsb_per_g+1)& (0+255),b
 26564   015464  0E80               	movlw	128
 26565   015466  6FE4               	movwf	(_accel_lsb_per_g+2)& (0+255),b
 26566   015468  0E46               	movlw	70
 26567   01546A  6FE5               	movwf	(_accel_lsb_per_g+3)& (0+255),b
 26568   01546C                     
 26569                           ; BSR set to: 6
 26570                           ;I2C_MPU6050.c: 298:     mpu6050_initialized = 1;
 26571   01546C  0E01               	movlw	1
 26572   01546E  0105               	movlb	5	; () banked
 26573   015470  6FFE               	movwf	_mpu6050_initialized& (0+255),b
 26574   015472                     
 26575                           ; BSR set to: 5
 26576                           ;I2C_MPU6050.c: 299:     return 1;
 26577   015472  0E01               	movlw	1
 26578   015474                     l1299:
 26579   015474  0012               	return		;funcret
 26580   015476                     __end_of_MPU6050_Init:
 26581                           	callstack 0
 26582                           
 26583 ;; *************** function _MPU6050_WriteRegister *****************
 26584 ;; Defined at:
 26585 ;;		line 81 in file "I2C_MPU6050.c"
 26586 ;; Parameters:    Size  Location     Type
 26587 ;;  reg             1    wreg     unsigned char 
 26588 ;;  data            1   24[COMRAM] unsigned char 
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;  reg             1   25[COMRAM] unsigned char 
 26591 ;;  tx_buffer       2   26[COMRAM] unsigned char [2]
 26592 ;;  result          1   28[COMRAM] _Bool 
 26593 ;; Return value:  Size  Location     Type
 26594 ;;                  1    wreg      _Bool 
 26595 ;; Registers used:
 26596 ;;		wreg, status,2, status,0, cstack
 26597 ;; Tracked objects:
 26598 ;;		On entry : 0/0
 26599 ;;		On exit  : 0/0
 26600 ;;		Unchanged: 0/0
 26601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26603 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26605 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26606 ;;Total ram usage:        5 bytes
 26607 ;; Hardware stack levels used: 1
 26608 ;; Hardware stack levels required when called: 7
 26609 ;; This function calls:
 26610 ;;		_I2C1_IsBusy
 26611 ;;		_I2C1_Write
 26612 ;; This function is called by:
 26613 ;;		_MPU6050_Init
 26614 ;; This function uses a non-reentrant model
 26615 ;;
 26616                           
 26617                           	psect	text67
 26618   0159F6                     __ptext67:
 26619                           	callstack 0
 26620   0159F6                     _MPU6050_WriteRegister:
 26621                           	callstack 118
 26622                           
 26623                           ;incstack = 0
 26624                           ;MPU6050_WriteRegister@reg stored from wreg
 26625   0159F6  6E1A               	movwf	MPU6050_WriteRegister@reg^(0+1280),c
 26626   0159F8                     
 26627                           ;I2C_MPU6050.c: 81: static _Bool MPU6050_WriteRegister(uint8_t reg, uint8_t data);I2C_MP
      +                          U6050.c: 82: {;I2C_MPU6050.c: 83:     uint8_t tx_buffer[2];;I2C_MPU6050.c: 84:     tx_bu
      +                          ffer[0] = reg;
 26628   0159F8  C51A  F51B         	movff	MPU6050_WriteRegister@reg,MPU6050_WriteRegister@tx_buffer
 26629   0159FC                     
 26630                           ;I2C_MPU6050.c: 85:     tx_buffer[1] = data;
 26631   0159FC  C519  F51C         	movff	MPU6050_WriteRegister@data,MPU6050_WriteRegister@tx_buffer+1
 26632                           
 26633                           ;I2C_MPU6050.c: 89:     while(I2C1_IsBusy()) {
 26634   015A00  EF06  F0AD         	goto	l8093
 26635   015A04                     l8091:
 26636                           
 26637                           ;I2C_MPU6050.c: 90:         _delay((unsigned long)((10)*(64000000U/4000000.0)));
 26638   015A04  0E35               	movlw	53
 26639   015A06                     u10797:
 26640   015A06  2EE8               	decfsz	wreg,f,c
 26641   015A08  D7FE               	bra	u10797
 26642   015A0A  0000               	nop	
 26643   015A0C                     l8093:
 26644                           
 26645                           ;I2C_MPU6050.c: 89:     while(I2C1_IsBusy()) {
 26646   015A0C  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 26647   015A10  0900               	iorlw	0
 26648   015A12  A4D8               	btfss	status,2,c
 26649   015A14  EF0E  F0AD         	goto	u6621
 26650   015A18  EF10  F0AD         	goto	u6620
 26651   015A1C                     u6621:
 26652   015A1C  EF02  F0AD         	goto	l8091
 26653   015A20                     u6620:
 26654   015A20                     
 26655                           ;I2C_MPU6050.c: 92:     _Bool result = I2C1_Write(0x68, tx_buffer, 2);
 26656   015A20  0E00               	movlw	0
 26657   015A22  6E13               	movwf	(I2C1_Write@address+1)^(0+1280),c
 26658   015A24  0E68               	movlw	104
 26659   015A26  6E12               	movwf	I2C1_Write@address^(0+1280),c
 26660   015A28  0E1B               	movlw	low MPU6050_WriteRegister@tx_buffer
 26661   015A2A  6E14               	movwf	I2C1_Write@data^(0+1280),c
 26662   015A2C  0E05               	movlw	high MPU6050_WriteRegister@tx_buffer
 26663   015A2E  6E15               	movwf	(I2C1_Write@data+1)^(0+1280),c
 26664   015A30  0E00               	movlw	0
 26665   015A32  6E17               	movwf	(I2C1_Write@dataLength+1)^(0+1280),c
 26666   015A34  0E02               	movlw	2
 26667   015A36  6E16               	movwf	I2C1_Write@dataLength^(0+1280),c
 26668   015A38  ECD7  F0AF         	call	_I2C1_Write	;wreg free
 26669   015A3C  6E1D               	movwf	MPU6050_WriteRegister@result^(0+1280),c
 26670   015A3E                     
 26671                           ;I2C_MPU6050.c: 93:     if(result) {
 26672   015A3E  501D               	movf	MPU6050_WriteRegister@result^(0+1280),w,c
 26673   015A40  B4D8               	btfsc	status,2,c
 26674   015A42  EF25  F0AD         	goto	u6631
 26675   015A46  EF27  F0AD         	goto	u6630
 26676   015A4A                     u6631:
 26677   015A4A  EF37  F0AD         	goto	l8105
 26678   015A4E                     u6630:
 26679   015A4E  EF2D  F0AD         	goto	l8103
 26680   015A52                     l8101:
 26681                           
 26682                           ;I2C_MPU6050.c: 95:             _delay((unsigned long)((10)*(64000000U/4000000.0)));
 26683   015A52  0E35               	movlw	53
 26684   015A54                     u10807:
 26685   015A54  2EE8               	decfsz	wreg,f,c
 26686   015A56  D7FE               	bra	u10807
 26687   015A58  0000               	nop	
 26688   015A5A                     l8103:
 26689                           
 26690                           ;I2C_MPU6050.c: 94:         while(I2C1_IsBusy()) {
 26691   015A5A  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 26692   015A5E  0900               	iorlw	0
 26693   015A60  A4D8               	btfss	status,2,c
 26694   015A62  EF35  F0AD         	goto	u6641
 26695   015A66  EF37  F0AD         	goto	u6640
 26696   015A6A                     u6641:
 26697   015A6A  EF29  F0AD         	goto	l8101
 26698   015A6E                     u6640:
 26699   015A6E                     l8105:
 26700                           
 26701                           ;I2C_MPU6050.c: 99:     _delay((unsigned long)((50)*(64000000U/4000000.0)));
 26702   015A6E  0EA0               	movlw	160
 26703   015A70                     u10817:
 26704   015A70  D000               	nop2	
 26705   015A72  2EE8               	decfsz	wreg,f,c
 26706   015A74  D7FD               	bra	u10817
 26707   015A76  0012               	return		;funcret
 26708   015A78                     __end_of_MPU6050_WriteRegister:
 26709                           	callstack 0
 26710                           
 26711 ;; *************** function _I2C1_Write *****************
 26712 ;; Defined at:
 26713 ;;		line 155 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 26714 ;; Parameters:    Size  Location     Type
 26715 ;;  address         2   17[COMRAM] unsigned short 
 26716 ;;  data            2   19[COMRAM] PTR unsigned char 
 26717 ;;		 -> MPU6050_WriteRegister@tx_buffer(2), PCF_Wr@tmp(1), 
 26718 ;;  dataLength      2   21[COMRAM] unsigned int 
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;  retStatus       1   23[COMRAM] _Bool 
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      _Bool 
 26723 ;; Registers used:
 26724 ;;		wreg, status,2, status,0, cstack
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26730 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26734 ;;Total ram usage:        7 bytes
 26735 ;; Hardware stack levels used: 1
 26736 ;; Hardware stack levels required when called: 6
 26737 ;; This function calls:
 26738 ;;		_I2C1_IsBusy
 26739 ;;		_I2C1_WriteStart
 26740 ;; This function is called by:
 26741 ;;		_PCF_Wr
 26742 ;;		_MPU6050_WriteRegister
 26743 ;; This function uses a non-reentrant model
 26744 ;;
 26745                           
 26746                           	psect	text68
 26747   015FAE                     __ptext68:
 26748                           	callstack 0
 26749   015FAE                     _I2C1_Write:
 26750                           	callstack 115
 26751   015FAE                     
 26752                           ;mcc_generated_files/i2c_host/src/i2c1.c: 155: _Bool I2C1_Write(uint16_t address, uint8_
      +                          t *data, size_t dataLength);mcc_generated_files/i2c_host/src/i2c1.c: 156: {;mcc_generate
      +                          d_files/i2c_host/src/i2c1.c: 157:     _Bool retStatus = 0;
 26753   015FAE  6A18               	clrf	I2C1_Write@retStatus^(0+1280),c
 26754   015FB0                     
 26755                           ;mcc_generated_files/i2c_host/src/i2c1.c: 158:     if (!I2C1_IsBusy())
 26756   015FB0  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 26757   015FB4  0900               	iorlw	0
 26758   015FB6  A4D8               	btfss	status,2,c
 26759   015FB8  EFE0  F0AF         	goto	u4231
 26760   015FBC  EFE2  F0AF         	goto	u4230
 26761   015FC0                     u4231:
 26762   015FC0  EFFE  F0AF         	goto	l6263
 26763   015FC4                     u4230:
 26764   015FC4                     
 26765                           ;mcc_generated_files/i2c_host/src/i2c1.c: 159:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 160:         i2c1Status.busy = 1;
 26766   015FC4  0E01               	movlw	1
 26767   015FC6  6E34               	movwf	_i2c1Status^(0+1280),c	;volatile
 26768   015FC8                     
 26769                           ;mcc_generated_files/i2c_host/src/i2c1.c: 161:         i2c1Status.address = address;
 26770   015FC8  C512  F535         	movff	I2C1_Write@address,_i2c1Status+1	;volatile
 26771   015FCC  C513  F536         	movff	I2C1_Write@address+1,_i2c1Status+2	;volatile
 26772   015FD0                     
 26773                           ;mcc_generated_files/i2c_host/src/i2c1.c: 162:         i2c1Status.switchToRead = 0;
 26774   015FD0  6A3F               	clrf	(_i2c1Status+11)^(0+1280),c	;volatile
 26775   015FD2                     
 26776                           ;mcc_generated_files/i2c_host/src/i2c1.c: 163:         i2c1Status.writePtr = data;
 26777   015FD2  C514  F537         	movff	I2C1_Write@data,_i2c1Status+3	;volatile
 26778   015FD6  C515  F538         	movff	I2C1_Write@data+1,_i2c1Status+4	;volatile
 26779   015FDA                     
 26780                           ;mcc_generated_files/i2c_host/src/i2c1.c: 164:         i2c1Status.writeLength = dataLeng
      +                          th;
 26781   015FDA  C516  F539         	movff	I2C1_Write@dataLength,_i2c1Status+5	;volatile
 26782   015FDE  C517  F53A         	movff	I2C1_Write@dataLength+1,_i2c1Status+6	;volatile
 26783   015FE2                     
 26784                           ;mcc_generated_files/i2c_host/src/i2c1.c: 165:         i2c1Status.readPtr = ((void*)0);
 26785   015FE2  0E00               	movlw	0
 26786   015FE4  6E3B               	movwf	(_i2c1Status+7)^(0+1280),c	;volatile
 26787   015FE6  0E00               	movlw	0
 26788   015FE8  6E3C               	movwf	(_i2c1Status+8)^(0+1280),c	;volatile
 26789                           
 26790                           ;mcc_generated_files/i2c_host/src/i2c1.c: 166:         i2c1Status.readLength = 0;
 26791   015FEA  0E00               	movlw	0
 26792   015FEC  6E3E               	movwf	(_i2c1Status+10)^(0+1280),c	;volatile
 26793   015FEE  0E00               	movlw	0
 26794   015FF0  6E3D               	movwf	(_i2c1Status+9)^(0+1280),c	;volatile
 26795   015FF2                     
 26796                           ;mcc_generated_files/i2c_host/src/i2c1.c: 167:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 26797   015FF2  6A40               	clrf	(_i2c1Status+12)^(0+1280),c	;volatile
 26798   015FF4                     
 26799                           ;mcc_generated_files/i2c_host/src/i2c1.c: 168:         I2C1_WriteStart();
 26800   015FF4  EC81  F0B1         	call	_I2C1_WriteStart	;wreg free
 26801   015FF8                     
 26802                           ;mcc_generated_files/i2c_host/src/i2c1.c: 169:         retStatus = 1;
 26803   015FF8  0E01               	movlw	1
 26804   015FFA  6E18               	movwf	I2C1_Write@retStatus^(0+1280),c
 26805   015FFC                     l6263:
 26806                           
 26807                           ;mcc_generated_files/i2c_host/src/i2c1.c: 171:     return retStatus;
 26808   015FFC  5018               	movf	I2C1_Write@retStatus^(0+1280),w,c
 26809   015FFE  0012               	return		;funcret
 26810   016000                     __end_of_I2C1_Write:
 26811                           	callstack 0
 26812                           
 26813 ;; *************** function _MPU6050_ReadRegister *****************
 26814 ;; Defined at:
 26815 ;;		line 109 in file "I2C_MPU6050.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;  reg             1    wreg     unsigned char 
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;  reg             1   28[COMRAM] unsigned char 
 26820 ;;  data_read       1   31[COMRAM] unsigned char 
 26821 ;;  reg_addr        1   30[COMRAM] unsigned char 
 26822 ;;  result          1   29[COMRAM] _Bool 
 26823 ;; Return value:  Size  Location     Type
 26824 ;;                  1    wreg      unsigned char 
 26825 ;; Registers used:
 26826 ;;		wreg, status,2, status,0, cstack
 26827 ;; Tracked objects:
 26828 ;;		On entry : 0/0
 26829 ;;		On exit  : 0/0
 26830 ;;		Unchanged: 0/0
 26831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26836 ;;Total ram usage:        4 bytes
 26837 ;; Hardware stack levels used: 1
 26838 ;; Hardware stack levels required when called: 7
 26839 ;; This function calls:
 26840 ;;		_I2C1_IsBusy
 26841 ;;		_I2C1_WriteRead
 26842 ;; This function is called by:
 26843 ;;		_MPU6050_Init
 26844 ;; This function uses a non-reentrant model
 26845 ;;
 26846                           
 26847                           	psect	text69
 26848   0157C0                     __ptext69:
 26849                           	callstack 0
 26850   0157C0                     _MPU6050_ReadRegister:
 26851                           	callstack 118
 26852                           
 26853                           ;incstack = 0
 26854                           ;MPU6050_ReadRegister@reg stored from wreg
 26855   0157C0  6E1D               	movwf	MPU6050_ReadRegister@reg^(0+1280),c
 26856   0157C2                     
 26857                           ;I2C_MPU6050.c: 109: static uint8_t MPU6050_ReadRegister(uint8_t reg);I2C_MPU6050.c: 110
      +                          : {;I2C_MPU6050.c: 111:     uint8_t data_read = 0;
 26858   0157C2  6A20               	clrf	MPU6050_ReadRegister@data_read^(0+1280),c
 26859   0157C4                     
 26860                           ;I2C_MPU6050.c: 112:     uint8_t reg_addr = reg;
 26861   0157C4  C51D  F51F         	movff	MPU6050_ReadRegister@reg,MPU6050_ReadRegister@reg_addr
 26862                           
 26863                           ;I2C_MPU6050.c: 116:     while(I2C1_IsBusy()) {
 26864   0157C8  EFEA  F0AB         	goto	l8115
 26865   0157CC                     l8113:
 26866                           
 26867                           ;I2C_MPU6050.c: 117:         _delay((unsigned long)((10)*(64000000U/4000000.0)));
 26868   0157CC  0E35               	movlw	53
 26869   0157CE                     u10827:
 26870   0157CE  2EE8               	decfsz	wreg,f,c
 26871   0157D0  D7FE               	bra	u10827
 26872   0157D2  0000               	nop	
 26873   0157D4                     l8115:
 26874                           
 26875                           ;I2C_MPU6050.c: 116:     while(I2C1_IsBusy()) {
 26876   0157D4  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 26877   0157D8  0900               	iorlw	0
 26878   0157DA  A4D8               	btfss	status,2,c
 26879   0157DC  EFF2  F0AB         	goto	u6651
 26880   0157E0  EFF4  F0AB         	goto	u6650
 26881   0157E4                     u6651:
 26882   0157E4  EFE6  F0AB         	goto	l8113
 26883   0157E8                     u6650:
 26884   0157E8                     
 26885                           ;I2C_MPU6050.c: 120:     _Bool result = I2C1_WriteRead(0x68, &reg_addr, 1, &data_read, 1
      +                          );
 26886   0157E8  0E00               	movlw	0
 26887   0157EA  6E13               	movwf	(I2C1_WriteRead@address+1)^(0+1280),c
 26888   0157EC  0E68               	movlw	104
 26889   0157EE  6E12               	movwf	I2C1_WriteRead@address^(0+1280),c
 26890   0157F0  0E1F               	movlw	low MPU6050_ReadRegister@reg_addr
 26891   0157F2  6E14               	movwf	I2C1_WriteRead@writeData^(0+1280),c
 26892   0157F4  0E05               	movlw	high MPU6050_ReadRegister@reg_addr
 26893   0157F6  6E15               	movwf	(I2C1_WriteRead@writeData+1)^(0+1280),c
 26894   0157F8  0E00               	movlw	0
 26895   0157FA  6E17               	movwf	(I2C1_WriteRead@writeLength+1)^(0+1280),c
 26896   0157FC  0E01               	movlw	1
 26897   0157FE  6E16               	movwf	I2C1_WriteRead@writeLength^(0+1280),c
 26898   015800  0E20               	movlw	low MPU6050_ReadRegister@data_read
 26899   015802  6E18               	movwf	I2C1_WriteRead@readData^(0+1280),c
 26900   015804  0E05               	movlw	high MPU6050_ReadRegister@data_read
 26901   015806  6E19               	movwf	(I2C1_WriteRead@readData+1)^(0+1280),c
 26902   015808  0E00               	movlw	0
 26903   01580A  6E1B               	movwf	(I2C1_WriteRead@readLength+1)^(0+1280),c
 26904   01580C  0E01               	movlw	1
 26905   01580E  6E1A               	movwf	I2C1_WriteRead@readLength^(0+1280),c
 26906   015810  ECAD  F0AF         	call	_I2C1_WriteRead	;wreg free
 26907   015814  6E1E               	movwf	MPU6050_ReadRegister@result^(0+1280),c
 26908   015816                     
 26909                           ;I2C_MPU6050.c: 121:     if(result) {
 26910   015816  501E               	movf	MPU6050_ReadRegister@result^(0+1280),w,c
 26911   015818  B4D8               	btfsc	status,2,c
 26912   01581A  EF11  F0AC         	goto	u6661
 26913   01581E  EF13  F0AC         	goto	u6660
 26914   015822                     u6661:
 26915   015822  EF23  F0AC         	goto	l8127
 26916   015826                     u6660:
 26917   015826  EF19  F0AC         	goto	l8125
 26918   01582A                     l8123:
 26919                           
 26920                           ;I2C_MPU6050.c: 123:             _delay((unsigned long)((10)*(64000000U/4000000.0)));
 26921   01582A  0E35               	movlw	53
 26922   01582C                     u10837:
 26923   01582C  2EE8               	decfsz	wreg,f,c
 26924   01582E  D7FE               	bra	u10837
 26925   015830  0000               	nop	
 26926   015832                     l8125:
 26927                           
 26928                           ;I2C_MPU6050.c: 122:         while(I2C1_IsBusy()) {
 26929   015832  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 26930   015836  0900               	iorlw	0
 26931   015838  A4D8               	btfss	status,2,c
 26932   01583A  EF21  F0AC         	goto	u6671
 26933   01583E  EF23  F0AC         	goto	u6670
 26934   015842                     u6671:
 26935   015842  EF15  F0AC         	goto	l8123
 26936   015846                     u6670:
 26937   015846                     l8127:
 26938                           
 26939                           ;I2C_MPU6050.c: 127:     _delay((unsigned long)((50)*(64000000U/4000000.0)));
 26940   015846  0EA0               	movlw	160
 26941   015848                     u10847:
 26942   015848  D000               	nop2	
 26943   01584A  2EE8               	decfsz	wreg,f,c
 26944   01584C  D7FD               	bra	u10847
 26945   01584E                     
 26946                           ;I2C_MPU6050.c: 128:     return data_read;
 26947   01584E  5020               	movf	MPU6050_ReadRegister@data_read^(0+1280),w,c
 26948   015850  0012               	return		;funcret
 26949   015852                     __end_of_MPU6050_ReadRegister:
 26950                           	callstack 0
 26951                           
 26952 ;; *************** function _MPU6050_GetMovement *****************
 26953 ;; Defined at:
 26954 ;;		line 399 in file "I2C_MPU6050.c"
 26955 ;; Parameters:    Size  Location     Type
 26956 ;;  data            2  153[BANK5 ] PTR struct .
 26957 ;;		 -> mpu_data(28), 
 26958 ;; Auto vars:     Size  Location     Type
 26959 ;;  pitch_accel     4   45[BANK6 ] float 
 26960 ;;  roll_accel      4   41[BANK6 ] float 
 26961 ;;  advanced_mov    1   49[BANK6 ] enum E17804
 26962 ;; Return value:  Size  Location     Type
 26963 ;;                  1    wreg      enum E18101
 26964 ;; Registers used:
 26965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26966 ;; Tracked objects:
 26967 ;;		On entry : 0/0
 26968 ;;		On exit  : 0/0
 26969 ;;		Unchanged: 0/0
 26970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 26971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26972 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26974 ;;      Totals:         0       2      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26975 ;;Total ram usage:       27 bytes
 26976 ;; Hardware stack levels used: 1
 26977 ;; Hardware stack levels required when called: 8
 26978 ;; This function calls:
 26979 ;;		_DetectAdvancedGestures
 26980 ;;		___fladd
 26981 ;;		___fldiv
 26982 ;;		___flge
 26983 ;;		___flmul
 26984 ;;		___flneg
 26985 ;;		_atan2f
 26986 ;;		_sqrtf
 26987 ;; This function is called by:
 26988 ;;		_main
 26989 ;; This function uses a non-reentrant model
 26990 ;;
 26991                           
 26992                           	psect	text70
 26993   01364A                     __ptext70:
 26994                           	callstack 0
 26995   01364A                     _MPU6050_GetMovement:
 26996                           	callstack 118
 26997   01364A                     
 26998                           ;I2C_MPU6050.c: 399: MPU6050_Movement_t MPU6050_GetMovement(MPU6050_Data_t *data);I2C_MP
      +                          U6050.c: 400: {;I2C_MPU6050.c: 403:     float roll_accel = (atan2f(data->accel.y, data->
      +                          accel.z) * 180.0f / (float)3.14159265358979323846);
 26999   01364A  0105               	movlb	5	; () banked
 27000   01364C  EE20 F008          	lfsr	2,8
 27001   013650  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27002   013652  26D9               	addwf	fsr2l,f,c
 27003   013654  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27004   013656  22DA               	addwfc	fsr2h,f,c
 27005   013658  C4DE F5ED          	movff	postinc2,atan2f@x
 27006   01365C  C4DE F5EE          	movff	postinc2,atan2f@x+1
 27007   013660  C4DE F5EF          	movff	postinc2,atan2f@x+2
 27008   013664  C4DE F5F0          	movff	postinc2,atan2f@x+3
 27009   013668  EE20 F004          	lfsr	2,4
 27010   01366C  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27011   01366E  26D9               	addwf	fsr2l,f,c
 27012   013670  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27013   013672  22DA               	addwfc	fsr2h,f,c
 27014   013674  C4DE F5E9          	movff	postinc2,atan2f@y
 27015   013678  C4DE F5EA          	movff	postinc2,atan2f@y+1
 27016   01367C  C4DE F5EB          	movff	postinc2,atan2f@y+2
 27017   013680  C4DE F5EC          	movff	postinc2,atan2f@y+3
 27018   013684  EC05  F08C         	call	_atan2f	;wreg free
 27019   013688  C5E9  F619         	movff	?_atan2f,_MPU6050_GetMovement$4444
 27020   01368C  C5EA  F61A         	movff	?_atan2f+1,_MPU6050_GetMovement$4444+1
 27021   013690  C5EB  F61B         	movff	?_atan2f+2,_MPU6050_GetMovement$4444+2
 27022   013694  C5EC  F61C         	movff	?_atan2f+3,_MPU6050_GetMovement$4444+3
 27023   013698                     
 27024                           ;I2C_MPU6050.c: 399: MPU6050_Movement_t MPU6050_GetMovement(MPU6050_Data_t *data);I2C_MP
      +                          U6050.c: 400: {;I2C_MPU6050.c: 403:     float roll_accel = (atan2f(data->accel.y, data->
      +                          accel.z) * 180.0f / (float)3.14159265358979323846);
 27025   013698  0E00               	movlw	0
 27026   01369A  6E23               	movwf	___flmul@a^(0+1280),c
 27027   01369C  0E00               	movlw	0
 27028   01369E  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 27029   0136A0  0E34               	movlw	52
 27030   0136A2  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 27031   0136A4  0E43               	movlw	67
 27032   0136A6  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 27033   0136A8  C619  F51F         	movff	_MPU6050_GetMovement$4444,___flmul@b
 27034   0136AC  C61A  F520         	movff	_MPU6050_GetMovement$4444+1,___flmul@b+1
 27035   0136B0  C61B  F521         	movff	_MPU6050_GetMovement$4444+2,___flmul@b+2
 27036   0136B4  C61C  F522         	movff	_MPU6050_GetMovement$4444+3,___flmul@b+3
 27037   0136B8  EC74  F091         	call	___flmul	;wreg free
 27038   0136BC  C51F  F59A         	movff	?___flmul,___fldiv@b
 27039   0136C0  C520  F59B         	movff	?___flmul+1,___fldiv@b+1
 27040   0136C4  C521  F59C         	movff	?___flmul+2,___fldiv@b+2
 27041   0136C8  C522  F59D         	movff	?___flmul+3,___fldiv@b+3
 27042   0136CC  0EDB               	movlw	219
 27043   0136CE  0105               	movlb	5	; () banked
 27044   0136D0  6F9E               	movwf	___fldiv@a& (0+255),b
 27045   0136D2  0E0F               	movlw	15
 27046   0136D4  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 27047   0136D6  0E49               	movlw	73
 27048   0136D8  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 27049   0136DA  0E40               	movlw	64
 27050   0136DC  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 27051   0136DE  EC5C  F099         	call	___fldiv	;wreg free
 27052   0136E2  C59A  F629         	movff	?___fldiv,MPU6050_GetMovement@roll_accel
 27053   0136E6  C59B  F62A         	movff	?___fldiv+1,MPU6050_GetMovement@roll_accel+1
 27054   0136EA  C59C  F62B         	movff	?___fldiv+2,MPU6050_GetMovement@roll_accel+2
 27055   0136EE  C59D  F62C         	movff	?___fldiv+3,MPU6050_GetMovement@roll_accel+3
 27056   0136F2                     
 27057                           ;I2C_MPU6050.c: 404:     float pitch_accel = (atan2f(-data->accel.x, sqrtf(data->accel.y
      +                          *data->accel.y + data->accel.z*data->accel.z)) * 180.0f / (float)3.14159265358979323846)
      +                          ;
 27058   0136F2  0105               	movlb	5	; () banked
 27059   0136F4  EE20 F008          	lfsr	2,8
 27060   0136F8  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27061   0136FA  26D9               	addwf	fsr2l,f,c
 27062   0136FC  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27063   0136FE  22DA               	addwfc	fsr2h,f,c
 27064   013700  C4DE F523          	movff	postinc2,___flmul@a
 27065   013704  C4DE F524          	movff	postinc2,___flmul@a+1
 27066   013708  C4DE F525          	movff	postinc2,___flmul@a+2
 27067   01370C  C4DE F526          	movff	postinc2,___flmul@a+3
 27068   013710  EE20 F008          	lfsr	2,8
 27069   013714  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27070   013716  26D9               	addwf	fsr2l,f,c
 27071   013718  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27072   01371A  22DA               	addwfc	fsr2h,f,c
 27073   01371C  C4DE F51F          	movff	postinc2,___flmul@b
 27074   013720  C4DE F520          	movff	postinc2,___flmul@b+1
 27075   013724  C4DE F521          	movff	postinc2,___flmul@b+2
 27076   013728  C4DE F522          	movff	postinc2,___flmul@b+3
 27077   01372C  EC74  F091         	call	___flmul	;wreg free
 27078   013730  C51F  F571         	movff	?___flmul,___fladd@a
 27079   013734  C520  F572         	movff	?___flmul+1,___fladd@a+1
 27080   013738  C521  F573         	movff	?___flmul+2,___fladd@a+2
 27081   01373C  C522  F574         	movff	?___flmul+3,___fladd@a+3
 27082   013740  0105               	movlb	5	; () banked
 27083   013742  EE20 F004          	lfsr	2,4
 27084   013746  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27085   013748  26D9               	addwf	fsr2l,f,c
 27086   01374A  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27087   01374C  22DA               	addwfc	fsr2h,f,c
 27088   01374E  C4DE F523          	movff	postinc2,___flmul@a
 27089   013752  C4DE F524          	movff	postinc2,___flmul@a+1
 27090   013756  C4DE F525          	movff	postinc2,___flmul@a+2
 27091   01375A  C4DE F526          	movff	postinc2,___flmul@a+3
 27092   01375E  EE20 F004          	lfsr	2,4
 27093   013762  51F9               	movf	MPU6050_GetMovement@data& (0+255),w,b
 27094   013764  26D9               	addwf	fsr2l,f,c
 27095   013766  51FA               	movf	(MPU6050_GetMovement@data+1)& (0+255),w,b
 27096   013768  22DA               	addwfc	fsr2h,f,c
 27097   01376A  C4DE F51F          	movff	postinc2,___flmul@b
 27098   01376E  C4DE F520          	movff	postinc2,___flmul@b+1
 27099   013772  C4DE F521          	movff	postinc2,___flmul@b+2
 27100   013776  C4DE F522          	movff	postinc2,___flmul@b+3
 27101   01377A  EC74  F091         	call	___flmul	;wreg free
 27102   01377E  C51F  F56D         	movff	?___flmul,___fladd@b
 27103   013782  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 27104   013786  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 27105   01378A  C522  F570         	movff	?___flmul+3,___fladd@b+3
 27106   01378E  EC18  F08F         	call	___fladd	;wreg free
 27107   013792  C56D  F575         	movff	?___fladd,sqrtf@x
 27108   013796  C56E  F576         	movff	?___fladd+1,sqrtf@x+1
 27109   01379A  C56F  F577         	movff	?___fladd+2,sqrtf@x+2
 27110   01379E  C570  F578         	movff	?___fladd+3,sqrtf@x+3
 27111   0137A2  EC90  F095         	call	_sqrtf	;wreg free
 27112   0137A6  C575  F61D         	movff	?_sqrtf,_MPU6050_GetMovement$4445
 27113   0137AA  C576  F61E         	movff	?_sqrtf+1,_MPU6050_GetMovement$4445+1
 27114   0137AE  C577  F61F         	movff	?_sqrtf+2,_MPU6050_GetMovement$4445+2
 27115   0137B2  C578  F620         	movff	?_sqrtf+3,_MPU6050_GetMovement$4445+3
 27116   0137B6                     
 27117                           ;I2C_MPU6050.c: 404:     float pitch_accel = (atan2f(-data->accel.x, sqrtf(data->accel.y
      +                          *data->accel.y + data->accel.z*data->accel.z)) * 180.0f / (float)3.14159265358979323846)
      +                          ;
 27118   0137B6  C5F9  F4D9         	movff	MPU6050_GetMovement@data,fsr2l
 27119   0137BA  C5FA  F4DA         	movff	MPU6050_GetMovement@data+1,fsr2h
 27120   0137BE  C4DE F511          	movff	postinc2,___flneg@f1
 27121   0137C2  C4DE F512          	movff	postinc2,___flneg@f1+1
 27122   0137C6  C4DE F513          	movff	postinc2,___flneg@f1+2
 27123   0137CA  C4DE F514          	movff	postinc2,___flneg@f1+3
 27124   0137CE  ECD6  F0B1         	call	___flneg	;wreg free
 27125   0137D2  C511  F621         	movff	?___flneg,_MPU6050_GetMovement$4446
 27126   0137D6  C512  F622         	movff	?___flneg+1,_MPU6050_GetMovement$4446+1
 27127   0137DA  C513  F623         	movff	?___flneg+2,_MPU6050_GetMovement$4446+2
 27128   0137DE  C514  F624         	movff	?___flneg+3,_MPU6050_GetMovement$4446+3
 27129   0137E2                     
 27130                           ;I2C_MPU6050.c: 404:     float pitch_accel = (atan2f(-data->accel.x, sqrtf(data->accel.y
      +                          *data->accel.y + data->accel.z*data->accel.z)) * 180.0f / (float)3.14159265358979323846)
      +                          ;
 27131   0137E2  C61D  F5ED         	movff	_MPU6050_GetMovement$4445,atan2f@x
 27132   0137E6  C61E  F5EE         	movff	_MPU6050_GetMovement$4445+1,atan2f@x+1
 27133   0137EA  C61F  F5EF         	movff	_MPU6050_GetMovement$4445+2,atan2f@x+2
 27134   0137EE  C620  F5F0         	movff	_MPU6050_GetMovement$4445+3,atan2f@x+3
 27135   0137F2  C621  F5E9         	movff	_MPU6050_GetMovement$4446,atan2f@y
 27136   0137F6  C622  F5EA         	movff	_MPU6050_GetMovement$4446+1,atan2f@y+1
 27137   0137FA  C623  F5EB         	movff	_MPU6050_GetMovement$4446+2,atan2f@y+2
 27138   0137FE  C624  F5EC         	movff	_MPU6050_GetMovement$4446+3,atan2f@y+3
 27139   013802  EC05  F08C         	call	_atan2f	;wreg free
 27140   013806  C5E9  F625         	movff	?_atan2f,_MPU6050_GetMovement$4447
 27141   01380A  C5EA  F626         	movff	?_atan2f+1,_MPU6050_GetMovement$4447+1
 27142   01380E  C5EB  F627         	movff	?_atan2f+2,_MPU6050_GetMovement$4447+2
 27143   013812  C5EC  F628         	movff	?_atan2f+3,_MPU6050_GetMovement$4447+3
 27144   013816                     
 27145                           ;I2C_MPU6050.c: 404:     float pitch_accel = (atan2f(-data->accel.x, sqrtf(data->accel.y
      +                          *data->accel.y + data->accel.z*data->accel.z)) * 180.0f / (float)3.14159265358979323846)
      +                          ;
 27146   013816  0E00               	movlw	0
 27147   013818  6E23               	movwf	___flmul@a^(0+1280),c
 27148   01381A  0E00               	movlw	0
 27149   01381C  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 27150   01381E  0E34               	movlw	52
 27151   013820  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 27152   013822  0E43               	movlw	67
 27153   013824  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 27154   013826  C625  F51F         	movff	_MPU6050_GetMovement$4447,___flmul@b
 27155   01382A  C626  F520         	movff	_MPU6050_GetMovement$4447+1,___flmul@b+1
 27156   01382E  C627  F521         	movff	_MPU6050_GetMovement$4447+2,___flmul@b+2
 27157   013832  C628  F522         	movff	_MPU6050_GetMovement$4447+3,___flmul@b+3
 27158   013836  EC74  F091         	call	___flmul	;wreg free
 27159   01383A  C51F  F59A         	movff	?___flmul,___fldiv@b
 27160   01383E  C520  F59B         	movff	?___flmul+1,___fldiv@b+1
 27161   013842  C521  F59C         	movff	?___flmul+2,___fldiv@b+2
 27162   013846  C522  F59D         	movff	?___flmul+3,___fldiv@b+3
 27163   01384A  0EDB               	movlw	219
 27164   01384C  0105               	movlb	5	; () banked
 27165   01384E  6F9E               	movwf	___fldiv@a& (0+255),b
 27166   013850  0E0F               	movlw	15
 27167   013852  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 27168   013854  0E49               	movlw	73
 27169   013856  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 27170   013858  0E40               	movlw	64
 27171   01385A  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 27172   01385C  EC5C  F099         	call	___fldiv	;wreg free
 27173   013860  C59A  F62D         	movff	?___fldiv,MPU6050_GetMovement@pitch_accel
 27174   013864  C59B  F62E         	movff	?___fldiv+1,MPU6050_GetMovement@pitch_accel+1
 27175   013868  C59C  F62F         	movff	?___fldiv+2,MPU6050_GetMovement@pitch_accel+2
 27176   01386C  C59D  F630         	movff	?___fldiv+3,MPU6050_GetMovement@pitch_accel+3
 27177   013870                     
 27178                           ;I2C_MPU6050.c: 413:     if (roll_accel > 15.0f) {
 27179   013870  0E00               	movlw	0
 27180   013872  0105               	movlb	5	; () banked
 27181   013874  6F75               	movwf	___flge@ff1& (0+255),b
 27182   013876  0E00               	movlw	0
 27183   013878  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 27184   01387A  0E70               	movlw	112
 27185   01387C  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 27186   01387E  0E41               	movlw	65
 27187   013880  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 27188   013882  C629  F579         	movff	MPU6050_GetMovement@roll_accel,___flge@ff2
 27189   013886  C62A  F57A         	movff	MPU6050_GetMovement@roll_accel+1,___flge@ff2+1
 27190   01388A  C62B  F57B         	movff	MPU6050_GetMovement@roll_accel+2,___flge@ff2+2
 27191   01388E  C62C  F57C         	movff	MPU6050_GetMovement@roll_accel+3,___flge@ff2+3
 27192   013892  EC25  F0A6         	call	___flge	;wreg free
 27193   013896  0105               	movlb	5	; () banked
 27194   013898  B0D8               	btfsc	status,0,c
 27195   01389A  EF51  F09C         	goto	u9961
 27196   01389E  EF53  F09C         	goto	u9960
 27197   0138A2                     u9961:
 27198   0138A2  EF56  F09C         	goto	l10665
 27199   0138A6                     u9960:
 27200   0138A6                     
 27201                           ; BSR set to: 5
 27202                           ;I2C_MPU6050.c: 414:         return MOVEMENT_RIGHT;
 27203   0138A6  0E04               	movlw	4
 27204   0138A8  EFC1  F09C         	goto	l1313
 27205   0138AC                     l10665:
 27206                           
 27207                           ; BSR set to: 5
 27208   0138AC  C629  F575         	movff	MPU6050_GetMovement@roll_accel,___flge@ff1
 27209   0138B0  C62A  F576         	movff	MPU6050_GetMovement@roll_accel+1,___flge@ff1+1
 27210   0138B4  C62B  F577         	movff	MPU6050_GetMovement@roll_accel+2,___flge@ff1+2
 27211   0138B8  C62C  F578         	movff	MPU6050_GetMovement@roll_accel+3,___flge@ff1+3
 27212   0138BC  0E00               	movlw	0
 27213   0138BE  6F79               	movwf	___flge@ff2& (0+255),b
 27214   0138C0  0E00               	movlw	0
 27215   0138C2  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 27216   0138C4  0E70               	movlw	112
 27217   0138C6  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 27218   0138C8  0EC1               	movlw	193
 27219   0138CA  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 27220   0138CC  EC25  F0A6         	call	___flge	;wreg free
 27221   0138D0  0105               	movlb	5	; () banked
 27222   0138D2  B0D8               	btfsc	status,0,c
 27223   0138D4  EF6E  F09C         	goto	u9971
 27224   0138D8  EF70  F09C         	goto	u9970
 27225   0138DC                     u9971:
 27226   0138DC  EF73  F09C         	goto	l10673
 27227   0138E0                     u9970:
 27228   0138E0                     
 27229                           ; BSR set to: 5
 27230                           ;I2C_MPU6050.c: 416:         return MOVEMENT_LEFT;
 27231   0138E0  0E03               	movlw	3
 27232   0138E2  EFC1  F09C         	goto	l1313
 27233   0138E6                     l10673:
 27234                           
 27235                           ; BSR set to: 5
 27236   0138E6  0E00               	movlw	0
 27237   0138E8  6F75               	movwf	___flge@ff1& (0+255),b
 27238   0138EA  0E00               	movlw	0
 27239   0138EC  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 27240   0138EE  0E70               	movlw	112
 27241   0138F0  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 27242   0138F2  0E41               	movlw	65
 27243   0138F4  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 27244   0138F6  C62D  F579         	movff	MPU6050_GetMovement@pitch_accel,___flge@ff2
 27245   0138FA  C62E  F57A         	movff	MPU6050_GetMovement@pitch_accel+1,___flge@ff2+1
 27246   0138FE  C62F  F57B         	movff	MPU6050_GetMovement@pitch_accel+2,___flge@ff2+2
 27247   013902  C630  F57C         	movff	MPU6050_GetMovement@pitch_accel+3,___flge@ff2+3
 27248   013906  EC25  F0A6         	call	___flge	;wreg free
 27249   01390A  0105               	movlb	5	; () banked
 27250   01390C  B0D8               	btfsc	status,0,c
 27251   01390E  EF8B  F09C         	goto	u9981
 27252   013912  EF8D  F09C         	goto	u9980
 27253   013916                     u9981:
 27254   013916  EF90  F09C         	goto	l10681
 27255   01391A                     u9980:
 27256   01391A                     
 27257                           ; BSR set to: 5
 27258                           ;I2C_MPU6050.c: 418:         return MOVEMENT_FORWARD;
 27259   01391A  0E01               	movlw	1
 27260   01391C  EFC1  F09C         	goto	l1313
 27261   013920                     l10681:
 27262                           
 27263                           ; BSR set to: 5
 27264   013920  C62D  F575         	movff	MPU6050_GetMovement@pitch_accel,___flge@ff1
 27265   013924  C62E  F576         	movff	MPU6050_GetMovement@pitch_accel+1,___flge@ff1+1
 27266   013928  C62F  F577         	movff	MPU6050_GetMovement@pitch_accel+2,___flge@ff1+2
 27267   01392C  C630  F578         	movff	MPU6050_GetMovement@pitch_accel+3,___flge@ff1+3
 27268   013930  0E00               	movlw	0
 27269   013932  6F79               	movwf	___flge@ff2& (0+255),b
 27270   013934  0E00               	movlw	0
 27271   013936  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 27272   013938  0E70               	movlw	112
 27273   01393A  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 27274   01393C  0EC1               	movlw	193
 27275   01393E  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 27276   013940  EC25  F0A6         	call	___flge	;wreg free
 27277   013944  0105               	movlb	5	; () banked
 27278   013946  B0D8               	btfsc	status,0,c
 27279   013948  EFA8  F09C         	goto	u9991
 27280   01394C  EFAA  F09C         	goto	u9990
 27281   013950                     u9991:
 27282   013950  EFAD  F09C         	goto	l1316
 27283   013954                     u9990:
 27284   013954                     
 27285                           ; BSR set to: 5
 27286                           ;I2C_MPU6050.c: 420:         return MOVEMENT_BACKWARD;
 27287   013954  0E02               	movlw	2
 27288   013956  EFC1  F09C         	goto	l1313
 27289   01395A                     l1316:
 27290   01395A                     
 27291                           ; BSR set to: 5
 27292                           ;I2C_MPU6050.c: 424:     MPU6050_Movement_t advanced_movement = DetectAdvancedGestures(d
      +                          ata);
 27293   01395A  C5F9  F5BB         	movff	MPU6050_GetMovement@data,DetectAdvancedGestures@data
 27294   01395E  C5FA  F5BC         	movff	MPU6050_GetMovement@data+1,DetectAdvancedGestures@data+1
 27295   013962  EC07  F0A0         	call	_DetectAdvancedGestures	;wreg free
 27296   013966  0106               	movlb	6	; () banked
 27297   013968  6F31               	movwf	MPU6050_GetMovement@advanced_movement& (0+255),b
 27298   01396A                     
 27299                           ; BSR set to: 6
 27300                           ;I2C_MPU6050.c: 425:     if (advanced_movement != MOVEMENT_NONE) {
 27301   01396A  5131               	movf	MPU6050_GetMovement@advanced_movement& (0+255),w,b
 27302   01396C  B4D8               	btfsc	status,2,c
 27303   01396E  EFBB  F09C         	goto	u10001
 27304   013972  EFBD  F09C         	goto	u10000
 27305   013976                     u10001:
 27306   013976  EFC0  F09C         	goto	l10695
 27307   01397A                     u10000:
 27308   01397A                     
 27309                           ; BSR set to: 6
 27310                           ;I2C_MPU6050.c: 426:         return advanced_movement;
 27311   01397A  5131               	movf	MPU6050_GetMovement@advanced_movement& (0+255),w,b
 27312   01397C  EFC1  F09C         	goto	l1313
 27313   013980                     l10695:
 27314                           
 27315                           ; BSR set to: 6
 27316                           ;I2C_MPU6050.c: 430:     return MOVEMENT_NONE;
 27317   013980  0E00               	movlw	0
 27318   013982                     l1313:
 27319   013982  0012               	return		;funcret
 27320   013984                     __end_of_MPU6050_GetMovement:
 27321                           	callstack 0
 27322                           
 27323 ;; *************** function _sqrtf *****************
 27324 ;; Defined at:
 27325 ;;		line 24 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/sqrtf.c"
 27326 ;; Parameters:    Size  Location     Type
 27327 ;;  x               4   21[BANK5 ] float 
 27328 ;; Auto vars:     Size  Location     Type
 27329 ;;  ix              4   54[BANK5 ] struct .
 27330 ;;  r               4   50[BANK5 ] unsigned long 
 27331 ;;  m               4   46[BANK5 ] long 
 27332 ;;  t               4   42[BANK5 ] long 
 27333 ;;  q               4   38[BANK5 ] long 
 27334 ;;  i               4   34[BANK5 ] long 
 27335 ;;  s               4   30[BANK5 ] long 
 27336 ;;  z               4    0        float 
 27337 ;; Return value:  Size  Location     Type
 27338 ;;                  4   21[BANK5 ] float 
 27339 ;; Registers used:
 27340 ;;		wreg, status,2, status,0
 27341 ;; Tracked objects:
 27342 ;;		On entry : 0/0
 27343 ;;		On exit  : 0/0
 27344 ;;		Unchanged: 0/0
 27345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27347 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27348 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27349 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27350 ;;Total ram usage:       37 bytes
 27351 ;; Hardware stack levels used: 1
 27352 ;; Hardware stack levels required when called: 4
 27353 ;; This function calls:
 27354 ;;		Nothing
 27355 ;; This function is called by:
 27356 ;;		_MPU6050_GetMovement
 27357 ;; This function uses a non-reentrant model
 27358 ;;
 27359                           
 27360                           	psect	text71
 27361   012B20                     __ptext71:
 27362                           	callstack 0
 27363   012B20                     _sqrtf:
 27364                           	callstack 121
 27365   012B20  C575  F596         	movff	sqrtf@x,sqrtf@ix
 27366   012B24  C576  F597         	movff	sqrtf@x+1,sqrtf@ix+1
 27367   012B28  C577  F598         	movff	sqrtf@x+2,sqrtf@ix+2
 27368   012B2C  C578  F599         	movff	sqrtf@x+3,sqrtf@ix+3
 27369   012B30  0E00               	movlw	0
 27370   012B32  0105               	movlb	5	; () banked
 27371   012B34  1596               	andwf	sqrtf@ix& (0+255),w,b
 27372   012B36  6F79               	movwf	??_sqrtf& (0+255),b
 27373   012B38  0E00               	movlw	0
 27374   012B3A  1597               	andwf	(sqrtf@ix+1)& (0+255),w,b
 27375   012B3C  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27376   012B3E  0E80               	movlw	128
 27377   012B40  1598               	andwf	(sqrtf@ix+2)& (0+255),w,b
 27378   012B42  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27379   012B44  0E7F               	movlw	127
 27380   012B46  1599               	andwf	(sqrtf@ix+3)& (0+255),w,b
 27381   012B48  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27382   012B4A  0E80               	movlw	128
 27383   012B4C  197B               	xorwf	(??_sqrtf+2)& (0+255),w,b
 27384   012B4E  E109               	bnz	u6901
 27385   012B50  0E7F               	movlw	127
 27386   012B52  197C               	xorwf	(??_sqrtf+3)& (0+255),w,b
 27387   012B54  1179               	iorwf	??_sqrtf& (0+255),w,b
 27388   012B56  117A               	iorwf	(??_sqrtf+1)& (0+255),w,b
 27389   012B58  A4D8               	btfss	status,2,c
 27390   012B5A  EFB1  F095         	goto	u6901
 27391   012B5E  EFB3  F095         	goto	u6900
 27392   012B62                     u6901:
 27393   012B62  EFE3  F095         	goto	l8329
 27394   012B66                     u6900:
 27395   012B66                     
 27396                           ; BSR set to: 5
 27397   012B66  0EFF               	movlw	255
 27398   012B68  1596               	andwf	sqrtf@ix& (0+255),w,b
 27399   012B6A  6F79               	movwf	??_sqrtf& (0+255),b
 27400   012B6C  0EFF               	movlw	255
 27401   012B6E  1597               	andwf	(sqrtf@ix+1)& (0+255),w,b
 27402   012B70  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27403   012B72  0E7F               	movlw	127
 27404   012B74  1598               	andwf	(sqrtf@ix+2)& (0+255),w,b
 27405   012B76  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27406   012B78  0E00               	movlw	0
 27407   012B7A  1599               	andwf	(sqrtf@ix+3)& (0+255),w,b
 27408   012B7C  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27409   012B7E  5179               	movf	??_sqrtf& (0+255),w,b
 27410   012B80  117A               	iorwf	(??_sqrtf+1)& (0+255),w,b
 27411   012B82  117B               	iorwf	(??_sqrtf+2)& (0+255),w,b
 27412   012B84  117C               	iorwf	(??_sqrtf+3)& (0+255),w,b
 27413   012B86  A4D8               	btfss	status,2,c
 27414   012B88  EFC8  F095         	goto	u6911
 27415   012B8C  EFCA  F095         	goto	u6910
 27416   012B90                     u6911:
 27417   012B90  EFD1  F095         	goto	l8323
 27418   012B94                     u6910:
 27419   012B94                     
 27420                           ; BSR set to: 5
 27421   012B94  BF99               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 27422   012B96  EFD1  F095         	goto	u6920
 27423   012B9A  EFCF  F095         	goto	u6921
 27424   012B9E                     u6921:
 27425   012B9E  EFD9  F095         	goto	l8325
 27426   012BA2                     u6920:
 27427   012BA2                     l8323:
 27428                           
 27429                           ; BSR set to: 5
 27430   012BA2  0EFF               	movlw	255
 27431   012BA4  1396               	iorwf	sqrtf@ix& (0+255),f,b
 27432   012BA6  0EFF               	movlw	255
 27433   012BA8  1397               	iorwf	(sqrtf@ix+1)& (0+255),f,b
 27434   012BAA  0E7F               	movlw	127
 27435   012BAC  1398               	iorwf	(sqrtf@ix+2)& (0+255),f,b
 27436   012BAE  0E00               	movlw	0
 27437   012BB0  1399               	iorwf	(sqrtf@ix+3)& (0+255),f,b
 27438   012BB2                     l8325:
 27439                           
 27440                           ; BSR set to: 5
 27441   012BB2  C596  F575         	movff	sqrtf@ix,?_sqrtf
 27442   012BB6  C597  F576         	movff	sqrtf@ix+1,?_sqrtf+1
 27443   012BBA  C598  F577         	movff	sqrtf@ix+2,?_sqrtf+2
 27444   012BBE  C599  F578         	movff	sqrtf@ix+3,?_sqrtf+3
 27445   012BC2  EF81  F097         	goto	l2620
 27446   012BC6                     l8329:
 27447                           
 27448                           ; BSR set to: 5
 27449   012BC6  BF99               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 27450   012BC8  EFF2  F095         	goto	u6930
 27451   012BCC  5199               	movf	(sqrtf@ix+3)& (0+255),w,b
 27452   012BCE  1198               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 27453   012BD0  1197               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 27454   012BD2  E106               	bnz	u6931
 27455   012BD4  0596               	decf	sqrtf@ix& (0+255),w,b
 27456   012BD6  B0D8               	btfsc	status,0,c
 27457   012BD8  EFF0  F095         	goto	u6931
 27458   012BDC  EFF2  F095         	goto	u6930
 27459   012BE0                     u6931:
 27460   012BE0  EF2A  F096         	goto	l8345
 27461   012BE4                     u6930:
 27462   012BE4                     
 27463                           ; BSR set to: 5
 27464   012BE4  0EFF               	movlw	255
 27465   012BE6  1596               	andwf	sqrtf@ix& (0+255),w,b
 27466   012BE8  6F79               	movwf	??_sqrtf& (0+255),b
 27467   012BEA  0EFF               	movlw	255
 27468   012BEC  1597               	andwf	(sqrtf@ix+1)& (0+255),w,b
 27469   012BEE  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27470   012BF0  0EFF               	movlw	255
 27471   012BF2  1598               	andwf	(sqrtf@ix+2)& (0+255),w,b
 27472   012BF4  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27473   012BF6  0E7F               	movlw	127
 27474   012BF8  1599               	andwf	(sqrtf@ix+3)& (0+255),w,b
 27475   012BFA  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27476   012BFC  5179               	movf	??_sqrtf& (0+255),w,b
 27477   012BFE  117A               	iorwf	(??_sqrtf+1)& (0+255),w,b
 27478   012C00  117B               	iorwf	(??_sqrtf+2)& (0+255),w,b
 27479   012C02  117C               	iorwf	(??_sqrtf+3)& (0+255),w,b
 27480   012C04  A4D8               	btfss	status,2,c
 27481   012C06  EF07  F096         	goto	u6941
 27482   012C0A  EF09  F096         	goto	u6940
 27483   012C0E                     u6941:
 27484   012C0E  EF13  F096         	goto	l8337
 27485   012C12                     u6940:
 27486   012C12                     
 27487                           ; BSR set to: 5
 27488   012C12  0E00               	movlw	0
 27489   012C14  6F75               	movwf	?_sqrtf& (0+255),b
 27490   012C16  0E00               	movlw	0
 27491   012C18  6F76               	movwf	(?_sqrtf+1)& (0+255),b
 27492   012C1A  0E00               	movlw	0
 27493   012C1C  6F77               	movwf	(?_sqrtf+2)& (0+255),b
 27494   012C1E  0E00               	movlw	0
 27495   012C20  6F78               	movwf	(?_sqrtf+3)& (0+255),b
 27496   012C22  EF81  F097         	goto	l2620
 27497   012C26                     l8337:
 27498                           
 27499                           ; BSR set to: 5
 27500   012C26  BF99               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 27501   012C28  EF1A  F096         	goto	u6950
 27502   012C2C  EF18  F096         	goto	u6951
 27503   012C30                     u6951:
 27504   012C30  EF2A  F096         	goto	l8345
 27505   012C34                     u6950:
 27506   012C34                     
 27507                           ; BSR set to: 5
 27508   012C34  0E00               	movlw	0
 27509   012C36  0106               	movlb	6	; () banked
 27510   012C38  6FCB               	movwf	(_errno+1)& (0+255),b
 27511   012C3A  0E21               	movlw	33
 27512   012C3C  6FCA               	movwf	_errno& (0+255),b
 27513   012C3E  0EFF               	movlw	255
 27514   012C40  0105               	movlb	5	; () banked
 27515   012C42  6F96               	movwf	sqrtf@ix& (0+255),b
 27516   012C44  0EFF               	movlw	255
 27517   012C46  6F97               	movwf	(sqrtf@ix+1)& (0+255),b
 27518   012C48  0EFF               	movlw	255
 27519   012C4A  6F98               	movwf	(sqrtf@ix+2)& (0+255),b
 27520   012C4C  0E7F               	movlw	127
 27521   012C4E  6F99               	movwf	(sqrtf@ix+3)& (0+255),b
 27522   012C50  EFD9  F095         	goto	l8325
 27523   012C54                     l8345:
 27524                           
 27525                           ; BSR set to: 5
 27526   012C54  0E17               	movlw	23
 27527   012C56  6F79               	movwf	??_sqrtf& (0+255),b
 27528   012C58  C596  F57A         	movff	sqrtf@ix,??_sqrtf+1
 27529   012C5C  C597  F57B         	movff	sqrtf@ix+1,??_sqrtf+2
 27530   012C60  C598  F57C         	movff	sqrtf@ix+2,??_sqrtf+3
 27531   012C64  C599  F57D         	movff	sqrtf@ix+3,??_sqrtf+4
 27532   012C68                     u6965:
 27533   012C68  6779               	tstfsz	??_sqrtf& (0+255),b
 27534   012C6A  EF39  F096         	goto	u6966
 27535   012C6E  EF41  F096         	goto	u6967
 27536   012C72                     u6966:
 27537   012C72  357D               	rlcf	(??_sqrtf+4)& (0+255),w,b
 27538   012C74  337D               	rrcf	(??_sqrtf+4)& (0+255),f,b
 27539   012C76  337C               	rrcf	(??_sqrtf+3)& (0+255),f,b
 27540   012C78  337B               	rrcf	(??_sqrtf+2)& (0+255),f,b
 27541   012C7A  337A               	rrcf	(??_sqrtf+1)& (0+255),f,b
 27542   012C7C  2F79               	decfsz	??_sqrtf& (0+255),f,b
 27543   012C7E  EF34  F096         	goto	u6965
 27544   012C82                     u6967:
 27545   012C82  C57A  F58E         	movff	??_sqrtf+1,sqrtf@m
 27546   012C86  C57B  F58F         	movff	??_sqrtf+2,sqrtf@m+1
 27547   012C8A  C57C  F590         	movff	??_sqrtf+3,sqrtf@m+2
 27548   012C8E  C57D  F591         	movff	??_sqrtf+4,sqrtf@m+3
 27549   012C92  0105               	movlb	5	; () banked
 27550   012C94  518E               	movf	sqrtf@m& (0+255),w,b
 27551   012C96  118F               	iorwf	(sqrtf@m+1)& (0+255),w,b
 27552   012C98  1190               	iorwf	(sqrtf@m+2)& (0+255),w,b
 27553   012C9A  1191               	iorwf	(sqrtf@m+3)& (0+255),w,b
 27554   012C9C  A4D8               	btfss	status,2,c
 27555   012C9E  EF53  F096         	goto	u6971
 27556   012CA2  EF55  F096         	goto	u6970
 27557   012CA6                     u6971:
 27558   012CA6  EF85  F096         	goto	l2624
 27559   012CAA                     u6970:
 27560   012CAA                     
 27561                           ; BSR set to: 5
 27562   012CAA  0E00               	movlw	0
 27563   012CAC  6F82               	movwf	sqrtf@i& (0+255),b
 27564   012CAE  0E00               	movlw	0
 27565   012CB0  6F83               	movwf	(sqrtf@i+1)& (0+255),b
 27566   012CB2  0E00               	movlw	0
 27567   012CB4  6F84               	movwf	(sqrtf@i+2)& (0+255),b
 27568   012CB6  0E00               	movlw	0
 27569   012CB8  6F85               	movwf	(sqrtf@i+3)& (0+255),b
 27570   012CBA  EF6A  F096         	goto	l8353
 27571   012CBE                     l8349:
 27572                           
 27573                           ; BSR set to: 5
 27574   012CBE  90D8               	bcf	status,0,c
 27575   012CC0  3796               	rlcf	sqrtf@ix& (0+255),f,b
 27576   012CC2  3797               	rlcf	(sqrtf@ix+1)& (0+255),f,b
 27577   012CC4  3798               	rlcf	(sqrtf@ix+2)& (0+255),f,b
 27578   012CC6  3799               	rlcf	(sqrtf@ix+3)& (0+255),f,b
 27579   012CC8                     
 27580                           ; BSR set to: 5
 27581   012CC8  0E01               	movlw	1
 27582   012CCA  2782               	addwf	sqrtf@i& (0+255),f,b
 27583   012CCC  0E00               	movlw	0
 27584   012CCE  2383               	addwfc	(sqrtf@i+1)& (0+255),f,b
 27585   012CD0  2384               	addwfc	(sqrtf@i+2)& (0+255),f,b
 27586   012CD2  2385               	addwfc	(sqrtf@i+3)& (0+255),f,b
 27587   012CD4                     l8353:
 27588                           
 27589                           ; BSR set to: 5
 27590   012CD4  AF98               	btfss	(sqrtf@ix+2)& (0+255),7,b
 27591   012CD6  EF6F  F096         	goto	u6981
 27592   012CDA  EF71  F096         	goto	u6980
 27593   012CDE                     u6981:
 27594   012CDE  EF5F  F096         	goto	l8349
 27595   012CE2                     u6980:
 27596   012CE2                     
 27597                           ; BSR set to: 5
 27598   012CE2  0EFF               	movlw	255
 27599   012CE4  2582               	addwf	sqrtf@i& (0+255),w,b
 27600   012CE6  6F79               	movwf	??_sqrtf& (0+255),b
 27601   012CE8  0EFF               	movlw	255
 27602   012CEA  2183               	addwfc	(sqrtf@i+1)& (0+255),w,b
 27603   012CEC  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27604   012CEE  0EFF               	movlw	255
 27605   012CF0  2184               	addwfc	(sqrtf@i+2)& (0+255),w,b
 27606   012CF2  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27607   012CF4  0EFF               	movlw	255
 27608   012CF6  2185               	addwfc	(sqrtf@i+3)& (0+255),w,b
 27609   012CF8  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27610   012CFA  5179               	movf	??_sqrtf& (0+255),w,b
 27611   012CFC  5F8E               	subwf	sqrtf@m& (0+255),f,b
 27612   012CFE  517A               	movf	(??_sqrtf+1)& (0+255),w,b
 27613   012D00  5B8F               	subwfb	(sqrtf@m+1)& (0+255),f,b
 27614   012D02  517B               	movf	(??_sqrtf+2)& (0+255),w,b
 27615   012D04  5B90               	subwfb	(sqrtf@m+2)& (0+255),f,b
 27616   012D06  517C               	movf	(??_sqrtf+3)& (0+255),w,b
 27617   012D08  5B91               	subwfb	(sqrtf@m+3)& (0+255),f,b
 27618   012D0A                     l2624:
 27619                           
 27620                           ; BSR set to: 5
 27621   012D0A  0E81               	movlw	129
 27622   012D0C  278E               	addwf	sqrtf@m& (0+255),f,b
 27623   012D0E  0EFF               	movlw	255
 27624   012D10  238F               	addwfc	(sqrtf@m+1)& (0+255),f,b
 27625   012D12  0EFF               	movlw	255
 27626   012D14  2390               	addwfc	(sqrtf@m+2)& (0+255),f,b
 27627   012D16  0EFF               	movlw	255
 27628   012D18  2391               	addwfc	(sqrtf@m+3)& (0+255),f,b
 27629   012D1A  0EFF               	movlw	255
 27630   012D1C  1596               	andwf	sqrtf@ix& (0+255),w,b
 27631   012D1E  6F79               	movwf	??_sqrtf& (0+255),b
 27632   012D20  0EFF               	movlw	255
 27633   012D22  1597               	andwf	(sqrtf@ix+1)& (0+255),w,b
 27634   012D24  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27635   012D26  0E7F               	movlw	127
 27636   012D28  1598               	andwf	(sqrtf@ix+2)& (0+255),w,b
 27637   012D2A  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27638   012D2C  0E00               	movlw	0
 27639   012D2E  1599               	andwf	(sqrtf@ix+3)& (0+255),w,b
 27640   012D30  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27641   012D32  0E00               	movlw	0
 27642   012D34  1179               	iorwf	??_sqrtf& (0+255),w,b
 27643   012D36  6F96               	movwf	sqrtf@ix& (0+255),b
 27644   012D38  0E00               	movlw	0
 27645   012D3A  117A               	iorwf	(??_sqrtf+1)& (0+255),w,b
 27646   012D3C  6F97               	movwf	(sqrtf@ix+1)& (0+255),b
 27647   012D3E  0E80               	movlw	128
 27648   012D40  117B               	iorwf	(??_sqrtf+2)& (0+255),w,b
 27649   012D42  6F98               	movwf	(sqrtf@ix+2)& (0+255),b
 27650   012D44  0E00               	movlw	0
 27651   012D46  117C               	iorwf	(??_sqrtf+3)& (0+255),w,b
 27652   012D48  6F99               	movwf	(sqrtf@ix+3)& (0+255),b
 27653   012D4A                     
 27654                           ; BSR set to: 5
 27655   012D4A  A18E               	btfss	sqrtf@m& (0+255),0,b
 27656   012D4C  EFAA  F096         	goto	u6991
 27657   012D50  EFAC  F096         	goto	u6990
 27658   012D54                     u6991:
 27659   012D54  EFB4  F096         	goto	l2628
 27660   012D58                     u6990:
 27661   012D58                     
 27662                           ; BSR set to: 5
 27663   012D58  5196               	movf	sqrtf@ix& (0+255),w,b
 27664   012D5A  2796               	addwf	sqrtf@ix& (0+255),f,b
 27665   012D5C  5197               	movf	(sqrtf@ix+1)& (0+255),w,b
 27666   012D5E  2397               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 27667   012D60  5198               	movf	(sqrtf@ix+2)& (0+255),w,b
 27668   012D62  2398               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 27669   012D64  5199               	movf	(sqrtf@ix+3)& (0+255),w,b
 27670   012D66  2399               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 27671   012D68                     l2628:
 27672                           
 27673                           ; BSR set to: 5
 27674   012D68  3591               	rlcf	(sqrtf@m+3)& (0+255),w,b
 27675   012D6A  3391               	rrcf	(sqrtf@m+3)& (0+255),f,b
 27676   012D6C  3390               	rrcf	(sqrtf@m+2)& (0+255),f,b
 27677   012D6E  338F               	rrcf	(sqrtf@m+1)& (0+255),f,b
 27678   012D70  338E               	rrcf	sqrtf@m& (0+255),f,b
 27679   012D72  5196               	movf	sqrtf@ix& (0+255),w,b
 27680   012D74  2796               	addwf	sqrtf@ix& (0+255),f,b
 27681   012D76  5197               	movf	(sqrtf@ix+1)& (0+255),w,b
 27682   012D78  2397               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 27683   012D7A  5198               	movf	(sqrtf@ix+2)& (0+255),w,b
 27684   012D7C  2398               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 27685   012D7E  5199               	movf	(sqrtf@ix+3)& (0+255),w,b
 27686   012D80  2399               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 27687   012D82                     
 27688                           ; BSR set to: 5
 27689   012D82  0E00               	movlw	0
 27690   012D84  6F7E               	movwf	sqrtf@s& (0+255),b
 27691   012D86  0E00               	movlw	0
 27692   012D88  6F7F               	movwf	(sqrtf@s+1)& (0+255),b
 27693   012D8A  0E00               	movlw	0
 27694   012D8C  6F80               	movwf	(sqrtf@s+2)& (0+255),b
 27695   012D8E  0E00               	movlw	0
 27696   012D90  6F81               	movwf	(sqrtf@s+3)& (0+255),b
 27697   012D92  C57E  F586         	movff	sqrtf@s,sqrtf@q
 27698   012D96  C57F  F587         	movff	sqrtf@s+1,sqrtf@q+1
 27699   012D9A  C580  F588         	movff	sqrtf@s+2,sqrtf@q+2
 27700   012D9E  C581  F589         	movff	sqrtf@s+3,sqrtf@q+3
 27701   012DA2                     
 27702                           ; BSR set to: 5
 27703   012DA2  0E00               	movlw	0
 27704   012DA4  6F92               	movwf	sqrtf@r& (0+255),b
 27705   012DA6  0E00               	movlw	0
 27706   012DA8  6F93               	movwf	(sqrtf@r+1)& (0+255),b
 27707   012DAA  0E00               	movlw	0
 27708   012DAC  6F94               	movwf	(sqrtf@r+2)& (0+255),b
 27709   012DAE  0E01               	movlw	1
 27710   012DB0  6F95               	movwf	(sqrtf@r+3)& (0+255),b
 27711   012DB2  EF23  F097         	goto	l8371
 27712   012DB6                     l8365:
 27713                           
 27714                           ; BSR set to: 5
 27715   012DB6  517E               	movf	sqrtf@s& (0+255),w,b
 27716   012DB8  2592               	addwf	sqrtf@r& (0+255),w,b
 27717   012DBA  6F8A               	movwf	sqrtf@t& (0+255),b
 27718   012DBC  517F               	movf	(sqrtf@s+1)& (0+255),w,b
 27719   012DBE  2193               	addwfc	(sqrtf@r+1)& (0+255),w,b
 27720   012DC0  6F8B               	movwf	(sqrtf@t+1)& (0+255),b
 27721   012DC2  5180               	movf	(sqrtf@s+2)& (0+255),w,b
 27722   012DC4  2194               	addwfc	(sqrtf@r+2)& (0+255),w,b
 27723   012DC6  6F8C               	movwf	(sqrtf@t+2)& (0+255),b
 27724   012DC8  5181               	movf	(sqrtf@s+3)& (0+255),w,b
 27725   012DCA  2195               	addwfc	(sqrtf@r+3)& (0+255),w,b
 27726   012DCC  6F8D               	movwf	(sqrtf@t+3)& (0+255),b
 27727   012DCE  518A               	movf	sqrtf@t& (0+255),w,b
 27728   012DD0  5D96               	subwf	sqrtf@ix& (0+255),w,b
 27729   012DD2  518B               	movf	(sqrtf@t+1)& (0+255),w,b
 27730   012DD4  5997               	subwfb	(sqrtf@ix+1)& (0+255),w,b
 27731   012DD6  518C               	movf	(sqrtf@t+2)& (0+255),w,b
 27732   012DD8  5998               	subwfb	(sqrtf@ix+2)& (0+255),w,b
 27733   012DDA  5199               	movf	(sqrtf@ix+3)& (0+255),w,b
 27734   012DDC  0A80               	xorlw	128
 27735   012DDE  6F79               	movwf	??_sqrtf& (0+255),b
 27736   012DE0  518D               	movf	(sqrtf@t+3)& (0+255),w,b
 27737   012DE2  0A80               	xorlw	128
 27738   012DE4  5979               	subwfb	??_sqrtf& (0+255),w,b
 27739   012DE6  A0D8               	btfss	status,0,c
 27740   012DE8  EFF8  F096         	goto	u7001
 27741   012DEC  EFFA  F096         	goto	u7000
 27742   012DF0                     u7001:
 27743   012DF0  EF16  F097         	goto	l2631
 27744   012DF4                     u7000:
 27745   012DF4                     
 27746                           ; BSR set to: 5
 27747   012DF4  518A               	movf	sqrtf@t& (0+255),w,b
 27748   012DF6  2592               	addwf	sqrtf@r& (0+255),w,b
 27749   012DF8  6F7E               	movwf	sqrtf@s& (0+255),b
 27750   012DFA  518B               	movf	(sqrtf@t+1)& (0+255),w,b
 27751   012DFC  2193               	addwfc	(sqrtf@r+1)& (0+255),w,b
 27752   012DFE  6F7F               	movwf	(sqrtf@s+1)& (0+255),b
 27753   012E00  518C               	movf	(sqrtf@t+2)& (0+255),w,b
 27754   012E02  2194               	addwfc	(sqrtf@r+2)& (0+255),w,b
 27755   012E04  6F80               	movwf	(sqrtf@s+2)& (0+255),b
 27756   012E06  518D               	movf	(sqrtf@t+3)& (0+255),w,b
 27757   012E08  2195               	addwfc	(sqrtf@r+3)& (0+255),w,b
 27758   012E0A  6F81               	movwf	(sqrtf@s+3)& (0+255),b
 27759   012E0C  518A               	movf	sqrtf@t& (0+255),w,b
 27760   012E0E  5F96               	subwf	sqrtf@ix& (0+255),f,b
 27761   012E10  518B               	movf	(sqrtf@t+1)& (0+255),w,b
 27762   012E12  5B97               	subwfb	(sqrtf@ix+1)& (0+255),f,b
 27763   012E14  518C               	movf	(sqrtf@t+2)& (0+255),w,b
 27764   012E16  5B98               	subwfb	(sqrtf@ix+2)& (0+255),f,b
 27765   012E18  518D               	movf	(sqrtf@t+3)& (0+255),w,b
 27766   012E1A  5B99               	subwfb	(sqrtf@ix+3)& (0+255),f,b
 27767   012E1C  5192               	movf	sqrtf@r& (0+255),w,b
 27768   012E1E  2786               	addwf	sqrtf@q& (0+255),f,b
 27769   012E20  5193               	movf	(sqrtf@r+1)& (0+255),w,b
 27770   012E22  2387               	addwfc	(sqrtf@q+1)& (0+255),f,b
 27771   012E24  5194               	movf	(sqrtf@r+2)& (0+255),w,b
 27772   012E26  2388               	addwfc	(sqrtf@q+2)& (0+255),f,b
 27773   012E28  5195               	movf	(sqrtf@r+3)& (0+255),w,b
 27774   012E2A  2389               	addwfc	(sqrtf@q+3)& (0+255),f,b
 27775   012E2C                     l2631:
 27776                           
 27777                           ; BSR set to: 5
 27778   012E2C  5196               	movf	sqrtf@ix& (0+255),w,b
 27779   012E2E  2796               	addwf	sqrtf@ix& (0+255),f,b
 27780   012E30  5197               	movf	(sqrtf@ix+1)& (0+255),w,b
 27781   012E32  2397               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 27782   012E34  5198               	movf	(sqrtf@ix+2)& (0+255),w,b
 27783   012E36  2398               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 27784   012E38  5199               	movf	(sqrtf@ix+3)& (0+255),w,b
 27785   012E3A  2399               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 27786   012E3C                     
 27787                           ; BSR set to: 5
 27788   012E3C  90D8               	bcf	status,0,c
 27789   012E3E  3395               	rrcf	(sqrtf@r+3)& (0+255),f,b
 27790   012E40  3394               	rrcf	(sqrtf@r+2)& (0+255),f,b
 27791   012E42  3393               	rrcf	(sqrtf@r+1)& (0+255),f,b
 27792   012E44  3392               	rrcf	sqrtf@r& (0+255),f,b
 27793   012E46                     l8371:
 27794                           
 27795                           ; BSR set to: 5
 27796   012E46  5192               	movf	sqrtf@r& (0+255),w,b
 27797   012E48  1193               	iorwf	(sqrtf@r+1)& (0+255),w,b
 27798   012E4A  1194               	iorwf	(sqrtf@r+2)& (0+255),w,b
 27799   012E4C  1195               	iorwf	(sqrtf@r+3)& (0+255),w,b
 27800   012E4E  A4D8               	btfss	status,2,c
 27801   012E50  EF2C  F097         	goto	u7011
 27802   012E54  EF2E  F097         	goto	u7010
 27803   012E58                     u7011:
 27804   012E58  EFDB  F096         	goto	l8365
 27805   012E5C                     u7010:
 27806   012E5C                     
 27807                           ; BSR set to: 5
 27808   012E5C  5196               	movf	sqrtf@ix& (0+255),w,b
 27809   012E5E  1197               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 27810   012E60  1198               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 27811   012E62  1199               	iorwf	(sqrtf@ix+3)& (0+255),w,b
 27812   012E64  B4D8               	btfsc	status,2,c
 27813   012E66  EF37  F097         	goto	u7021
 27814   012E6A  EF39  F097         	goto	u7020
 27815   012E6E                     u7021:
 27816   012E6E  EF4D  F097         	goto	l2633
 27817   012E72                     u7020:
 27818   012E72                     
 27819                           ; BSR set to: 5
 27820   012E72  0E01               	movlw	1
 27821   012E74  1586               	andwf	sqrtf@q& (0+255),w,b
 27822   012E76  6F79               	movwf	??_sqrtf& (0+255),b
 27823   012E78  0E00               	movlw	0
 27824   012E7A  1587               	andwf	(sqrtf@q+1)& (0+255),w,b
 27825   012E7C  6F7A               	movwf	(??_sqrtf+1)& (0+255),b
 27826   012E7E  0E00               	movlw	0
 27827   012E80  1588               	andwf	(sqrtf@q+2)& (0+255),w,b
 27828   012E82  6F7B               	movwf	(??_sqrtf+2)& (0+255),b
 27829   012E84  0E00               	movlw	0
 27830   012E86  1589               	andwf	(sqrtf@q+3)& (0+255),w,b
 27831   012E88  6F7C               	movwf	(??_sqrtf+3)& (0+255),b
 27832   012E8A  5179               	movf	??_sqrtf& (0+255),w,b
 27833   012E8C  2786               	addwf	sqrtf@q& (0+255),f,b
 27834   012E8E  517A               	movf	(??_sqrtf+1)& (0+255),w,b
 27835   012E90  2387               	addwfc	(sqrtf@q+1)& (0+255),f,b
 27836   012E92  517B               	movf	(??_sqrtf+2)& (0+255),w,b
 27837   012E94  2388               	addwfc	(sqrtf@q+2)& (0+255),f,b
 27838   012E96  517C               	movf	(??_sqrtf+3)& (0+255),w,b
 27839   012E98  2389               	addwfc	(sqrtf@q+3)& (0+255),f,b
 27840   012E9A                     l2633:
 27841                           
 27842                           ; BSR set to: 5
 27843   012E9A  C586  F579         	movff	sqrtf@q,??_sqrtf
 27844   012E9E  C587  F57A         	movff	sqrtf@q+1,??_sqrtf+1
 27845   012EA2  C588  F57B         	movff	sqrtf@q+2,??_sqrtf+2
 27846   012EA6  C589  F57C         	movff	sqrtf@q+3,??_sqrtf+3
 27847   012EAA  357C               	rlcf	(??_sqrtf+3)& (0+255),w,b
 27848   012EAC  337C               	rrcf	(??_sqrtf+3)& (0+255),f,b
 27849   012EAE  337B               	rrcf	(??_sqrtf+2)& (0+255),f,b
 27850   012EB0  337A               	rrcf	(??_sqrtf+1)& (0+255),f,b
 27851   012EB2  3379               	rrcf	??_sqrtf& (0+255),f,b
 27852   012EB4  0E00               	movlw	0
 27853   012EB6  2579               	addwf	??_sqrtf& (0+255),w,b
 27854   012EB8  6F96               	movwf	sqrtf@ix& (0+255),b
 27855   012EBA  0E00               	movlw	0
 27856   012EBC  217A               	addwfc	(??_sqrtf+1)& (0+255),w,b
 27857   012EBE  6F97               	movwf	(sqrtf@ix+1)& (0+255),b
 27858   012EC0  0E00               	movlw	0
 27859   012EC2  217B               	addwfc	(??_sqrtf+2)& (0+255),w,b
 27860   012EC4  6F98               	movwf	(sqrtf@ix+2)& (0+255),b
 27861   012EC6  0E3F               	movlw	63
 27862   012EC8  217C               	addwfc	(??_sqrtf+3)& (0+255),w,b
 27863   012ECA  6F99               	movwf	(sqrtf@ix+3)& (0+255),b
 27864   012ECC  C58E  F579         	movff	sqrtf@m,??_sqrtf
 27865   012ED0  C58F  F57A         	movff	sqrtf@m+1,??_sqrtf+1
 27866   012ED4  C590  F57B         	movff	sqrtf@m+2,??_sqrtf+2
 27867   012ED8  C591  F57C         	movff	sqrtf@m+3,??_sqrtf+3
 27868   012EDC  0E17               	movlw	23
 27869   012EDE                     u7035:
 27870   012EDE  90D8               	bcf	status,0,c
 27871   012EE0  3779               	rlcf	??_sqrtf& (0+255),f,b
 27872   012EE2  377A               	rlcf	(??_sqrtf+1)& (0+255),f,b
 27873   012EE4  377B               	rlcf	(??_sqrtf+2)& (0+255),f,b
 27874   012EE6  377C               	rlcf	(??_sqrtf+3)& (0+255),f,b
 27875   012EE8  2EE8               	decfsz	wreg,f,c
 27876   012EEA  EF6F  F097         	goto	u7035
 27877   012EEE  5179               	movf	??_sqrtf& (0+255),w,b
 27878   012EF0  2796               	addwf	sqrtf@ix& (0+255),f,b
 27879   012EF2  517A               	movf	(??_sqrtf+1)& (0+255),w,b
 27880   012EF4  2397               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 27881   012EF6  517B               	movf	(??_sqrtf+2)& (0+255),w,b
 27882   012EF8  2398               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 27883   012EFA  517C               	movf	(??_sqrtf+3)& (0+255),w,b
 27884   012EFC  2399               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 27885   012EFE  EFD9  F095         	goto	l8325
 27886   012F02                     l2620:
 27887                           
 27888                           ; BSR set to: 5
 27889   012F02  0012               	return		;funcret
 27890   012F04                     __end_of_sqrtf:
 27891                           	callstack 0
 27892                           
 27893 ;; *************** function _atan2f *****************
 27894 ;; Defined at:
 27895 ;;		line 22 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/atan2f.c"
 27896 ;; Parameters:    Size  Location     Type
 27897 ;;  y               4  137[BANK5 ] float 
 27898 ;;  x               4  141[BANK5 ] float 
 27899 ;; Auto vars:     Size  Location     Type
 27900 ;;  iy              4   20[BANK6 ] struct .
 27901 ;;  ix              4   16[BANK6 ] struct .
 27902 ;;  z               4   12[BANK6 ] float 
 27903 ;;  m               1   24[BANK6 ] unsigned char 
 27904 ;; Return value:  Size  Location     Type
 27905 ;;                  4  137[BANK5 ] float 
 27906 ;; Registers used:
 27907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27908 ;; Tracked objects:
 27909 ;;		On entry : 0/0
 27910 ;;		On exit  : 0/0
 27911 ;;		Unchanged: 0/0
 27912 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 27913 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27914 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27915 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27916 ;;      Totals:         0      16      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27917 ;;Total ram usage:       41 bytes
 27918 ;; Hardware stack levels used: 1
 27919 ;; Hardware stack levels required when called: 7
 27920 ;; This function calls:
 27921 ;;		___fladd
 27922 ;;		___fldiv
 27923 ;;		___flneg
 27924 ;;		___flsub
 27925 ;;		___fpclassifyf
 27926 ;;		_atanf
 27927 ;;		_fabsf
 27928 ;; This function is called by:
 27929 ;;		_MPU6050_GetMovement
 27930 ;; This function uses a non-reentrant model
 27931 ;;
 27932                           
 27933                           	psect	text72
 27934   01180A                     __ptext72:
 27935                           	callstack 0
 27936   01180A                     _atan2f:
 27937                           	callstack 118
 27938   01180A  C5ED  F511         	movff	atan2f@x,___fpclassifyf@x
 27939   01180E  C5EE  F512         	movff	atan2f@x+1,___fpclassifyf@x+1
 27940   011812  C5EF  F513         	movff	atan2f@x+2,___fpclassifyf@x+2
 27941   011816  C5F0  F514         	movff	atan2f@x+3,___fpclassifyf@x+3
 27942   01181A  ECA8  F0A6         	call	___fpclassifyf	;wreg free
 27943   01181E  5011               	movf	?___fpclassifyf^(0+1280),w,c
 27944   011820  1012               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 27945   011822  B4D8               	btfsc	status,2,c
 27946   011824  EF16  F08C         	goto	u9581
 27947   011828  EF18  F08C         	goto	u9580
 27948   01182C                     u9581:
 27949   01182C  EF2B  F08C         	goto	l10367
 27950   011830                     u9580:
 27951   011830  C5E9  F511         	movff	atan2f@y,___fpclassifyf@x
 27952   011834  C5EA  F512         	movff	atan2f@y+1,___fpclassifyf@x+1
 27953   011838  C5EB  F513         	movff	atan2f@y+2,___fpclassifyf@x+2
 27954   01183C  C5EC  F514         	movff	atan2f@y+3,___fpclassifyf@x+3
 27955   011840  ECA8  F0A6         	call	___fpclassifyf	;wreg free
 27956   011844  5011               	movf	?___fpclassifyf^(0+1280),w,c
 27957   011846  1012               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 27958   011848  A4D8               	btfss	status,2,c
 27959   01184A  EF29  F08C         	goto	u9591
 27960   01184E  EF2B  F08C         	goto	u9590
 27961   011852                     u9591:
 27962   011852  EF47  F08C         	goto	l2333
 27963   011856                     u9590:
 27964   011856                     l10367:
 27965   011856  C5ED  F56D         	movff	atan2f@x,___fladd@b
 27966   01185A  C5EE  F56E         	movff	atan2f@x+1,___fladd@b+1
 27967   01185E  C5EF  F56F         	movff	atan2f@x+2,___fladd@b+2
 27968   011862  C5F0  F570         	movff	atan2f@x+3,___fladd@b+3
 27969   011866  C5E9  F571         	movff	atan2f@y,___fladd@a
 27970   01186A  C5EA  F572         	movff	atan2f@y+1,___fladd@a+1
 27971   01186E  C5EB  F573         	movff	atan2f@y+2,___fladd@a+2
 27972   011872  C5EC  F574         	movff	atan2f@y+3,___fladd@a+3
 27973   011876  EC18  F08F         	call	___fladd	;wreg free
 27974   01187A  C56D  F5E9         	movff	?___fladd,?_atan2f
 27975   01187E  C56E  F5EA         	movff	?___fladd+1,?_atan2f+1
 27976   011882  C56F  F5EB         	movff	?___fladd+2,?_atan2f+2
 27977   011886  C570  F5EC         	movff	?___fladd+3,?_atan2f+3
 27978   01188A  EF17  F08F         	goto	l2336
 27979   01188E                     l2333:
 27980   01188E  C5ED  F610         	movff	atan2f@x,atan2f@ix
 27981   011892  C5EE  F611         	movff	atan2f@x+1,atan2f@ix+1
 27982   011896  C5EF  F612         	movff	atan2f@x+2,atan2f@ix+2
 27983   01189A  C5F0  F613         	movff	atan2f@x+3,atan2f@ix+3
 27984   01189E  C5E9  F614         	movff	atan2f@y,atan2f@iy
 27985   0118A2  C5EA  F615         	movff	atan2f@y+1,atan2f@iy+1
 27986   0118A6  C5EB  F616         	movff	atan2f@y+2,atan2f@iy+2
 27987   0118AA  C5EC  F617         	movff	atan2f@y+3,atan2f@iy+3
 27988   0118AE  0E80               	movlw	128
 27989   0118B0  0106               	movlb	6	; () banked
 27990   0118B2  1912               	xorwf	(atan2f@ix+2)& (0+255),w,b
 27991   0118B4  E109               	bnz	u9601
 27992   0118B6  0E3F               	movlw	63
 27993   0118B8  1913               	xorwf	(atan2f@ix+3)& (0+255),w,b
 27994   0118BA  1110               	iorwf	atan2f@ix& (0+255),w,b
 27995   0118BC  1111               	iorwf	(atan2f@ix+1)& (0+255),w,b
 27996   0118BE  A4D8               	btfss	status,2,c
 27997   0118C0  EF64  F08C         	goto	u9601
 27998   0118C4  EF66  F08C         	goto	u9600
 27999   0118C8                     u9601:
 28000   0118C8  EF7A  F08C         	goto	l10377
 28001   0118CC                     u9600:
 28002   0118CC                     
 28003                           ; BSR set to: 6
 28004   0118CC  C5E9  F5BB         	movff	atan2f@y,atanf@x
 28005   0118D0  C5EA  F5BC         	movff	atan2f@y+1,atanf@x+1
 28006   0118D4  C5EB  F5BD         	movff	atan2f@y+2,atanf@x+2
 28007   0118D8  C5EC  F5BE         	movff	atan2f@y+3,atanf@x+3
 28008   0118DC  ECFE  F084         	call	_atanf	;wreg free
 28009   0118E0  C5BB  F5E9         	movff	?_atanf,?_atan2f
 28010   0118E4  C5BC  F5EA         	movff	?_atanf+1,?_atan2f+1
 28011   0118E8  C5BD  F5EB         	movff	?_atanf+2,?_atan2f+2
 28012   0118EC  C5BE  F5EC         	movff	?_atanf+3,?_atan2f+3
 28013   0118F0  EF17  F08F         	goto	l2336
 28014   0118F4                     l10377:
 28015                           
 28016                           ; BSR set to: 6
 28017   0118F4  C610  F5F1         	movff	atan2f@ix,??_atan2f
 28018   0118F8  C611  F5F2         	movff	atan2f@ix+1,??_atan2f+1
 28019   0118FC  C612  F5F3         	movff	atan2f@ix+2,??_atan2f+2
 28020   011900  C613  F5F4         	movff	atan2f@ix+3,??_atan2f+3
 28021   011904  0E1F               	movlw	31
 28022   011906  EF8B  F08C         	goto	u9610
 28023   01190A                     u9615:
 28024   01190A  0105               	movlb	5	; () banked
 28025   01190C  90D8               	bcf	status,0,c
 28026   01190E  33F4               	rrcf	(??_atan2f+3)& (0+255),f,b
 28027   011910  33F3               	rrcf	(??_atan2f+2)& (0+255),f,b
 28028   011912  33F2               	rrcf	(??_atan2f+1)& (0+255),f,b
 28029   011914  33F1               	rrcf	??_atan2f& (0+255),f,b
 28030   011916                     u9610:
 28031   011916  2EE8               	decfsz	wreg,f,c
 28032   011918  EF85  F08C         	goto	u9615
 28033   01191C  0E02               	movlw	2
 28034   01191E  17F1               	andwf	??_atan2f& (0+255),f,b
 28035   011920  C614  F5F5         	movff	atan2f@iy,??_atan2f+4
 28036   011924  C615  F5F6         	movff	atan2f@iy+1,??_atan2f+5
 28037   011928  C616  F5F7         	movff	atan2f@iy+2,??_atan2f+6
 28038   01192C  C617  F5F8         	movff	atan2f@iy+3,??_atan2f+7
 28039   011930  0E20               	movlw	32
 28040   011932  EFA0  F08C         	goto	u9620
 28041   011936                     u9625:
 28042   011936  90D8               	bcf	status,0,c
 28043   011938  33F8               	rrcf	(??_atan2f+7)& (0+255),f,b
 28044   01193A  33F7               	rrcf	(??_atan2f+6)& (0+255),f,b
 28045   01193C  33F6               	rrcf	(??_atan2f+5)& (0+255),f,b
 28046   01193E  33F5               	rrcf	(??_atan2f+4)& (0+255),f,b
 28047   011940                     u9620:
 28048   011940  2EE8               	decfsz	wreg,f,c
 28049   011942  EF9B  F08C         	goto	u9625
 28050   011946  51F5               	movf	(??_atan2f+4)& (0+255),w,b
 28051   011948  0B01               	andlw	1
 28052   01194A  11F1               	iorwf	??_atan2f& (0+255),w,b
 28053   01194C  0106               	movlb	6	; () banked
 28054   01194E  6F18               	movwf	atan2f@m& (0+255),b
 28055   011950                     
 28056                           ; BSR set to: 6
 28057   011950  9F13               	bcf	(atan2f@ix+3)& (0+255),7,b
 28058   011952                     
 28059                           ; BSR set to: 6
 28060   011952  9F17               	bcf	(atan2f@iy+3)& (0+255),7,b
 28061   011954  5114               	movf	atan2f@iy& (0+255),w,b
 28062   011956  1115               	iorwf	(atan2f@iy+1)& (0+255),w,b
 28063   011958  1116               	iorwf	(atan2f@iy+2)& (0+255),w,b
 28064   01195A  1117               	iorwf	(atan2f@iy+3)& (0+255),w,b
 28065   01195C  A4D8               	btfss	status,2,c
 28066   01195E  EFB3  F08C         	goto	u9631
 28067   011962  EFB5  F08C         	goto	u9630
 28068   011966                     u9631:
 28069   011966  EFEA  F08C         	goto	l10397
 28070   01196A                     u9630:
 28071   01196A  EFD7  F08C         	goto	l10395
 28072   01196E                     l2341:
 28073                           
 28074                           ; BSR set to: 6
 28075   01196E  C5E9  F5E9         	movff	atan2f@y,?_atan2f
 28076   011972  C5EA  F5EA         	movff	atan2f@y+1,?_atan2f+1
 28077   011976  C5EB  F5EB         	movff	atan2f@y+2,?_atan2f+2
 28078   01197A  C5EC  F5EC         	movff	atan2f@y+3,?_atan2f+3
 28079   01197E  EF17  F08F         	goto	l2336
 28080   011982                     l10385:
 28081                           
 28082                           ; BSR set to: 6
 28083   011982  0EDB               	movlw	219
 28084   011984  0105               	movlb	5	; () banked
 28085   011986  6FE9               	movwf	?_atan2f& (0+255),b
 28086   011988  0E0F               	movlw	15
 28087   01198A  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28088   01198C  0E49               	movlw	73
 28089   01198E  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28090   011990  0E40               	movlw	64
 28091   011992  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28092   011994  EF17  F08F         	goto	l2336
 28093   011998                     l10389:
 28094                           
 28095                           ; BSR set to: 6
 28096   011998  0EDB               	movlw	219
 28097   01199A  0105               	movlb	5	; () banked
 28098   01199C  6FE9               	movwf	?_atan2f& (0+255),b
 28099   01199E  0E0F               	movlw	15
 28100   0119A0  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28101   0119A2  0E49               	movlw	73
 28102   0119A4  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28103   0119A6  0EC0               	movlw	192
 28104   0119A8  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28105   0119AA  EF17  F08F         	goto	l2336
 28106   0119AE                     l10395:
 28107                           
 28108                           ; BSR set to: 6
 28109   0119AE  5118               	movf	atan2f@m& (0+255),w,b
 28110                           
 28111                           ; Switch size 1, requested type "simple"
 28112                           ; Number of cases is 4, Range of values is 0 to 3
 28113                           ; switch strategies available:
 28114                           ; Name         Instructions Cycles
 28115                           ; simple_byte           13     7 (average)
 28116                           ;	Chosen strategy is simple_byte
 28117   0119B0  0A00               	xorlw	0	; case 0
 28118   0119B2  B4D8               	btfsc	status,2,c
 28119   0119B4  EFB7  F08C         	goto	l2341
 28120   0119B8  0A01               	xorlw	1	; case 1
 28121   0119BA  B4D8               	btfsc	status,2,c
 28122   0119BC  EFB7  F08C         	goto	l2341
 28123   0119C0  0A03               	xorlw	3	; case 2
 28124   0119C2  B4D8               	btfsc	status,2,c
 28125   0119C4  EFC1  F08C         	goto	l10385
 28126   0119C8  0A01               	xorlw	1	; case 3
 28127   0119CA  B4D8               	btfsc	status,2,c
 28128   0119CC  EFCC  F08C         	goto	l10389
 28129   0119D0  EFEA  F08C         	goto	l10397
 28130   0119D4                     l10397:
 28131                           
 28132                           ; BSR set to: 6
 28133   0119D4  5110               	movf	atan2f@ix& (0+255),w,b
 28134   0119D6  1111               	iorwf	(atan2f@ix+1)& (0+255),w,b
 28135   0119D8  1112               	iorwf	(atan2f@ix+2)& (0+255),w,b
 28136   0119DA  1113               	iorwf	(atan2f@ix+3)& (0+255),w,b
 28137   0119DC  A4D8               	btfss	status,2,c
 28138   0119DE  EFF3  F08C         	goto	u9641
 28139   0119E2  EFF5  F08C         	goto	u9640
 28140   0119E6                     u9641:
 28141   0119E6  EF12  F08D         	goto	l10407
 28142   0119EA                     u9640:
 28143   0119EA                     
 28144                           ; BSR set to: 6
 28145   0119EA  B118               	btfsc	atan2f@m& (0+255),0,b
 28146   0119EC  EFFA  F08C         	goto	u9651
 28147   0119F0  EFFC  F08C         	goto	u9650
 28148   0119F4                     u9651:
 28149   0119F4  EF07  F08D         	goto	l10403
 28150   0119F8                     u9650:
 28151   0119F8                     
 28152                           ; BSR set to: 6
 28153   0119F8  0EDB               	movlw	219
 28154   0119FA  0105               	movlb	5	; () banked
 28155   0119FC  6FE9               	movwf	?_atan2f& (0+255),b
 28156   0119FE  0E0F               	movlw	15
 28157   011A00  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28158   011A02  0EC9               	movlw	201
 28159   011A04  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28160   011A06  0E3F               	movlw	63
 28161   011A08  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28162   011A0A  EF17  F08F         	goto	l2336
 28163   011A0E                     l10403:
 28164                           
 28165                           ; BSR set to: 6
 28166   011A0E  0EDB               	movlw	219
 28167   011A10  0105               	movlb	5	; () banked
 28168   011A12  6FE9               	movwf	?_atan2f& (0+255),b
 28169   011A14  0E0F               	movlw	15
 28170   011A16  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28171   011A18  0EC9               	movlw	201
 28172   011A1A  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28173   011A1C  0EBF               	movlw	191
 28174   011A1E  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28175   011A20  EF17  F08F         	goto	l2336
 28176   011A24                     l10407:
 28177                           
 28178                           ; BSR set to: 6
 28179   011A24  0E80               	movlw	128
 28180   011A26  1912               	xorwf	(atan2f@ix+2)& (0+255),w,b
 28181   011A28  E109               	bnz	u9661
 28182   011A2A  0E7F               	movlw	127
 28183   011A2C  1913               	xorwf	(atan2f@ix+3)& (0+255),w,b
 28184   011A2E  1110               	iorwf	atan2f@ix& (0+255),w,b
 28185   011A30  1111               	iorwf	(atan2f@ix+1)& (0+255),w,b
 28186   011A32  A4D8               	btfss	status,2,c
 28187   011A34  EF1E  F08D         	goto	u9661
 28188   011A38  EF20  F08D         	goto	u9660
 28189   011A3C                     u9661:
 28190   011A3C  EFAE  F08D         	goto	l10453
 28191   011A40                     u9660:
 28192   011A40                     
 28193                           ; BSR set to: 6
 28194   011A40  0E80               	movlw	128
 28195   011A42  1916               	xorwf	(atan2f@iy+2)& (0+255),w,b
 28196   011A44  E109               	bnz	u9671
 28197   011A46  0E7F               	movlw	127
 28198   011A48  1917               	xorwf	(atan2f@iy+3)& (0+255),w,b
 28199   011A4A  1114               	iorwf	atan2f@iy& (0+255),w,b
 28200   011A4C  1115               	iorwf	(atan2f@iy+1)& (0+255),w,b
 28201   011A4E  A4D8               	btfss	status,2,c
 28202   011A50  EF2C  F08D         	goto	u9671
 28203   011A54  EF2E  F08D         	goto	u9670
 28204   011A58                     u9671:
 28205   011A58  EF9B  F08D         	goto	l10451
 28206   011A5C                     u9670:
 28207   011A5C  EF5C  F08D         	goto	l10431
 28208   011A60                     l10413:
 28209                           
 28210                           ; BSR set to: 6
 28211   011A60  0EDB               	movlw	219
 28212   011A62  0105               	movlb	5	; () banked
 28213   011A64  6FE9               	movwf	?_atan2f& (0+255),b
 28214   011A66  0E0F               	movlw	15
 28215   011A68  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28216   011A6A  0E49               	movlw	73
 28217   011A6C  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28218   011A6E  0E3F               	movlw	63
 28219   011A70  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28220   011A72  EF17  F08F         	goto	l2336
 28221   011A76                     l10417:
 28222                           
 28223                           ; BSR set to: 6
 28224   011A76  0EDB               	movlw	219
 28225   011A78  0105               	movlb	5	; () banked
 28226   011A7A  6FE9               	movwf	?_atan2f& (0+255),b
 28227   011A7C  0E0F               	movlw	15
 28228   011A7E  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28229   011A80  0E49               	movlw	73
 28230   011A82  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28231   011A84  0EBF               	movlw	191
 28232   011A86  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28233   011A88  EF17  F08F         	goto	l2336
 28234   011A8C                     l10421:
 28235                           
 28236                           ; BSR set to: 6
 28237   011A8C  0EE4               	movlw	228
 28238   011A8E  0105               	movlb	5	; () banked
 28239   011A90  6FE9               	movwf	?_atan2f& (0+255),b
 28240   011A92  0ECB               	movlw	203
 28241   011A94  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28242   011A96  0E16               	movlw	22
 28243   011A98  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28244   011A9A  0E40               	movlw	64
 28245   011A9C  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28246   011A9E  EF17  F08F         	goto	l2336
 28247   011AA2                     l10425:
 28248                           
 28249                           ; BSR set to: 6
 28250   011AA2  0EE4               	movlw	228
 28251   011AA4  0105               	movlb	5	; () banked
 28252   011AA6  6FE9               	movwf	?_atan2f& (0+255),b
 28253   011AA8  0ECB               	movlw	203
 28254   011AAA  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28255   011AAC  0E16               	movlw	22
 28256   011AAE  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28257   011AB0  0EC0               	movlw	192
 28258   011AB2  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28259   011AB4  EF17  F08F         	goto	l2336
 28260   011AB8                     l10431:
 28261                           
 28262                           ; BSR set to: 6
 28263   011AB8  5118               	movf	atan2f@m& (0+255),w,b
 28264                           
 28265                           ; Switch size 1, requested type "simple"
 28266                           ; Number of cases is 4, Range of values is 0 to 3
 28267                           ; switch strategies available:
 28268                           ; Name         Instructions Cycles
 28269                           ; simple_byte           13     7 (average)
 28270                           ;	Chosen strategy is simple_byte
 28271   011ABA  0A00               	xorlw	0	; case 0
 28272   011ABC  B4D8               	btfsc	status,2,c
 28273   011ABE  EF30  F08D         	goto	l10413
 28274   011AC2  0A01               	xorlw	1	; case 1
 28275   011AC4  B4D8               	btfsc	status,2,c
 28276   011AC6  EF3B  F08D         	goto	l10417
 28277   011ACA  0A03               	xorlw	3	; case 2
 28278   011ACC  B4D8               	btfsc	status,2,c
 28279   011ACE  EF46  F08D         	goto	l10421
 28280   011AD2  0A01               	xorlw	1	; case 3
 28281   011AD4  B4D8               	btfsc	status,2,c
 28282   011AD6  EF51  F08D         	goto	l10425
 28283   011ADA  EFAE  F08D         	goto	l10453
 28284   011ADE                     l10433:
 28285                           
 28286                           ; BSR set to: 6
 28287   011ADE  0E00               	movlw	0
 28288   011AE0  0105               	movlb	5	; () banked
 28289   011AE2  6FE9               	movwf	?_atan2f& (0+255),b
 28290   011AE4  0E00               	movlw	0
 28291   011AE6  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28292   011AE8  0E00               	movlw	0
 28293   011AEA  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28294   011AEC  0E00               	movlw	0
 28295   011AEE  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28296   011AF0  EF17  F08F         	goto	l2336
 28297   011AF4                     l10437:
 28298                           
 28299                           ; BSR set to: 6
 28300   011AF4  0E00               	movlw	0
 28301   011AF6  0105               	movlb	5	; () banked
 28302   011AF8  6FE9               	movwf	?_atan2f& (0+255),b
 28303   011AFA  0E00               	movlw	0
 28304   011AFC  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28305   011AFE  0E00               	movlw	0
 28306   011B00  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28307   011B02  0E80               	movlw	128
 28308   011B04  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28309   011B06  EF17  F08F         	goto	l2336
 28310   011B0A                     l10441:
 28311                           
 28312                           ; BSR set to: 6
 28313   011B0A  0EDB               	movlw	219
 28314   011B0C  0105               	movlb	5	; () banked
 28315   011B0E  6FE9               	movwf	?_atan2f& (0+255),b
 28316   011B10  0E0F               	movlw	15
 28317   011B12  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28318   011B14  0E49               	movlw	73
 28319   011B16  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28320   011B18  0E40               	movlw	64
 28321   011B1A  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28322   011B1C  EF17  F08F         	goto	l2336
 28323   011B20                     l10445:
 28324                           
 28325                           ; BSR set to: 6
 28326   011B20  0EDB               	movlw	219
 28327   011B22  0105               	movlb	5	; () banked
 28328   011B24  6FE9               	movwf	?_atan2f& (0+255),b
 28329   011B26  0E0F               	movlw	15
 28330   011B28  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28331   011B2A  0E49               	movlw	73
 28332   011B2C  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28333   011B2E  0EC0               	movlw	192
 28334   011B30  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28335   011B32  EF17  F08F         	goto	l2336
 28336   011B36                     l10451:
 28337                           
 28338                           ; BSR set to: 6
 28339   011B36  5118               	movf	atan2f@m& (0+255),w,b
 28340                           
 28341                           ; Switch size 1, requested type "simple"
 28342                           ; Number of cases is 4, Range of values is 0 to 3
 28343                           ; switch strategies available:
 28344                           ; Name         Instructions Cycles
 28345                           ; simple_byte           13     7 (average)
 28346                           ;	Chosen strategy is simple_byte
 28347   011B38  0A00               	xorlw	0	; case 0
 28348   011B3A  B4D8               	btfsc	status,2,c
 28349   011B3C  EF6F  F08D         	goto	l10433
 28350   011B40  0A01               	xorlw	1	; case 1
 28351   011B42  B4D8               	btfsc	status,2,c
 28352   011B44  EF7A  F08D         	goto	l10437
 28353   011B48  0A03               	xorlw	3	; case 2
 28354   011B4A  B4D8               	btfsc	status,2,c
 28355   011B4C  EF85  F08D         	goto	l10441
 28356   011B50  0A01               	xorlw	1	; case 3
 28357   011B52  B4D8               	btfsc	status,2,c
 28358   011B54  EF90  F08D         	goto	l10445
 28359   011B58  EFAE  F08D         	goto	l10453
 28360   011B5C                     l10453:
 28361                           
 28362                           ; BSR set to: 6
 28363   011B5C  0E00               	movlw	0
 28364   011B5E  2510               	addwf	atan2f@ix& (0+255),w,b
 28365   011B60  0105               	movlb	5	; () banked
 28366   011B62  6FF1               	movwf	??_atan2f& (0+255),b
 28367   011B64  0E00               	movlw	0
 28368   011B66  0106               	movlb	6	; () banked
 28369   011B68  2111               	addwfc	(atan2f@ix+1)& (0+255),w,b
 28370   011B6A  0105               	movlb	5	; () banked
 28371   011B6C  6FF2               	movwf	(??_atan2f+1)& (0+255),b
 28372   011B6E  0E00               	movlw	0
 28373   011B70  0106               	movlb	6	; () banked
 28374   011B72  2112               	addwfc	(atan2f@ix+2)& (0+255),w,b
 28375   011B74  0105               	movlb	5	; () banked
 28376   011B76  6FF3               	movwf	(??_atan2f+2)& (0+255),b
 28377   011B78  0E0D               	movlw	13
 28378   011B7A  0106               	movlb	6	; () banked
 28379   011B7C  2113               	addwfc	(atan2f@ix+3)& (0+255),w,b
 28380   011B7E  0105               	movlb	5	; () banked
 28381   011B80  6FF4               	movwf	(??_atan2f+3)& (0+255),b
 28382   011B82  0106               	movlb	6	; () banked
 28383   011B84  5114               	movf	atan2f@iy& (0+255),w,b
 28384   011B86  0105               	movlb	5	; () banked
 28385   011B88  5DF1               	subwf	??_atan2f& (0+255),w,b
 28386   011B8A  0106               	movlb	6	; () banked
 28387   011B8C  5115               	movf	(atan2f@iy+1)& (0+255),w,b
 28388   011B8E  0105               	movlb	5	; () banked
 28389   011B90  59F2               	subwfb	(??_atan2f+1)& (0+255),w,b
 28390   011B92  0106               	movlb	6	; () banked
 28391   011B94  5116               	movf	(atan2f@iy+2)& (0+255),w,b
 28392   011B96  0105               	movlb	5	; () banked
 28393   011B98  59F3               	subwfb	(??_atan2f+2)& (0+255),w,b
 28394   011B9A  0106               	movlb	6	; () banked
 28395   011B9C  5117               	movf	(atan2f@iy+3)& (0+255),w,b
 28396   011B9E  0105               	movlb	5	; () banked
 28397   011BA0  59F4               	subwfb	(??_atan2f+3)& (0+255),w,b
 28398   011BA2  A0D8               	btfss	status,0,c
 28399   011BA4  EFD6  F08D         	goto	u9681
 28400   011BA8  EFD8  F08D         	goto	u9680
 28401   011BAC                     u9681:
 28402   011BAC  EFE7  F08D         	goto	l2367
 28403   011BB0                     u9680:
 28404   011BB0                     
 28405                           ; BSR set to: 5
 28406   011BB0  0E80               	movlw	128
 28407   011BB2  0106               	movlb	6	; () banked
 28408   011BB4  1916               	xorwf	(atan2f@iy+2)& (0+255),w,b
 28409   011BB6  E109               	bnz	u9691
 28410   011BB8  0E7F               	movlw	127
 28411   011BBA  1917               	xorwf	(atan2f@iy+3)& (0+255),w,b
 28412   011BBC  1114               	iorwf	atan2f@iy& (0+255),w,b
 28413   011BBE  1115               	iorwf	(atan2f@iy+1)& (0+255),w,b
 28414   011BC0  A4D8               	btfss	status,2,c
 28415   011BC2  EFE5  F08D         	goto	u9691
 28416   011BC6  EFE7  F08D         	goto	u9690
 28417   011BCA                     u9691:
 28418   011BCA  EF05  F08E         	goto	l2365
 28419   011BCE                     u9690:
 28420   011BCE                     l2367:
 28421   011BCE  0106               	movlb	6	; () banked
 28422   011BD0  B118               	btfsc	atan2f@m& (0+255),0,b
 28423   011BD2  EFED  F08D         	goto	u9701
 28424   011BD6  EFEF  F08D         	goto	u9700
 28425   011BDA                     u9701:
 28426   011BDA  EFFA  F08D         	goto	l10459
 28427   011BDE                     u9700:
 28428   011BDE                     
 28429                           ; BSR set to: 6
 28430   011BDE  0EDB               	movlw	219
 28431   011BE0  0105               	movlb	5	; () banked
 28432   011BE2  6FE9               	movwf	?_atan2f& (0+255),b
 28433   011BE4  0E0F               	movlw	15
 28434   011BE6  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28435   011BE8  0EC9               	movlw	201
 28436   011BEA  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28437   011BEC  0E3F               	movlw	63
 28438   011BEE  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28439   011BF0  EF17  F08F         	goto	l2336
 28440   011BF4                     l10459:
 28441                           
 28442                           ; BSR set to: 6
 28443   011BF4  0EDB               	movlw	219
 28444   011BF6  0105               	movlb	5	; () banked
 28445   011BF8  6FE9               	movwf	?_atan2f& (0+255),b
 28446   011BFA  0E0F               	movlw	15
 28447   011BFC  6FEA               	movwf	(?_atan2f+1)& (0+255),b
 28448   011BFE  0EC9               	movlw	201
 28449   011C00  6FEB               	movwf	(?_atan2f+2)& (0+255),b
 28450   011C02  0EBF               	movlw	191
 28451   011C04  6FEC               	movwf	(?_atan2f+3)& (0+255),b
 28452   011C06  EF17  F08F         	goto	l2336
 28453   011C0A                     l2365:
 28454                           
 28455                           ; BSR set to: 6
 28456   011C0A  A318               	btfss	atan2f@m& (0+255),1,b
 28457   011C0C  EF0A  F08E         	goto	u9711
 28458   011C10  EF0C  F08E         	goto	u9710
 28459   011C14                     u9711:
 28460   011C14  EF41  F08E         	goto	l10467
 28461   011C18                     u9710:
 28462   011C18                     
 28463                           ; BSR set to: 6
 28464   011C18  0E00               	movlw	0
 28465   011C1A  2514               	addwf	atan2f@iy& (0+255),w,b
 28466   011C1C  0105               	movlb	5	; () banked
 28467   011C1E  6FF1               	movwf	??_atan2f& (0+255),b
 28468   011C20  0E00               	movlw	0
 28469   011C22  0106               	movlb	6	; () banked
 28470   011C24  2115               	addwfc	(atan2f@iy+1)& (0+255),w,b
 28471   011C26  0105               	movlb	5	; () banked
 28472   011C28  6FF2               	movwf	(??_atan2f+1)& (0+255),b
 28473   011C2A  0E00               	movlw	0
 28474   011C2C  0106               	movlb	6	; () banked
 28475   011C2E  2116               	addwfc	(atan2f@iy+2)& (0+255),w,b
 28476   011C30  0105               	movlb	5	; () banked
 28477   011C32  6FF3               	movwf	(??_atan2f+2)& (0+255),b
 28478   011C34  0E0D               	movlw	13
 28479   011C36  0106               	movlb	6	; () banked
 28480   011C38  2117               	addwfc	(atan2f@iy+3)& (0+255),w,b
 28481   011C3A  0105               	movlb	5	; () banked
 28482   011C3C  6FF4               	movwf	(??_atan2f+3)& (0+255),b
 28483   011C3E  0106               	movlb	6	; () banked
 28484   011C40  5110               	movf	atan2f@ix& (0+255),w,b
 28485   011C42  0105               	movlb	5	; () banked
 28486   011C44  5DF1               	subwf	??_atan2f& (0+255),w,b
 28487   011C46  0106               	movlb	6	; () banked
 28488   011C48  5111               	movf	(atan2f@ix+1)& (0+255),w,b
 28489   011C4A  0105               	movlb	5	; () banked
 28490   011C4C  59F2               	subwfb	(??_atan2f+1)& (0+255),w,b
 28491   011C4E  0106               	movlb	6	; () banked
 28492   011C50  5112               	movf	(atan2f@ix+2)& (0+255),w,b
 28493   011C52  0105               	movlb	5	; () banked
 28494   011C54  59F3               	subwfb	(??_atan2f+2)& (0+255),w,b
 28495   011C56  0106               	movlb	6	; () banked
 28496   011C58  5113               	movf	(atan2f@ix+3)& (0+255),w,b
 28497   011C5A  0105               	movlb	5	; () banked
 28498   011C5C  59F4               	subwfb	(??_atan2f+3)& (0+255),w,b
 28499   011C5E  B0D8               	btfsc	status,0,c
 28500   011C60  EF34  F08E         	goto	u9721
 28501   011C64  EF36  F08E         	goto	u9720
 28502   011C68                     u9721:
 28503   011C68  EF41  F08E         	goto	l10467
 28504   011C6C                     u9720:
 28505   011C6C                     
 28506                           ; BSR set to: 5
 28507   011C6C  0E00               	movlw	0
 28508   011C6E  0106               	movlb	6	; () banked
 28509   011C70  6F0C               	movwf	atan2f@z& (0+255),b
 28510   011C72  0E00               	movlw	0
 28511   011C74  6F0D               	movwf	(atan2f@z+1)& (0+255),b
 28512   011C76  0E00               	movlw	0
 28513   011C78  6F0E               	movwf	(atan2f@z+2)& (0+255),b
 28514   011C7A  0E00               	movlw	0
 28515   011C7C  6F0F               	movwf	(atan2f@z+3)& (0+255),b
 28516   011C7E  EF07  F08F         	goto	l10485
 28517   011C82                     l10467:
 28518   011C82  C5E9  F59A         	movff	atan2f@y,___fldiv@b
 28519   011C86  C5EA  F59B         	movff	atan2f@y+1,___fldiv@b+1
 28520   011C8A  C5EB  F59C         	movff	atan2f@y+2,___fldiv@b+2
 28521   011C8E  C5EC  F59D         	movff	atan2f@y+3,___fldiv@b+3
 28522   011C92  C5ED  F59E         	movff	atan2f@x,___fldiv@a
 28523   011C96  C5EE  F59F         	movff	atan2f@x+1,___fldiv@a+1
 28524   011C9A  C5EF  F5A0         	movff	atan2f@x+2,___fldiv@a+2
 28525   011C9E  C5F0  F5A1         	movff	atan2f@x+3,___fldiv@a+3
 28526   011CA2  EC5C  F099         	call	___fldiv	;wreg free
 28527   011CA6  C59A  F5B3         	movff	?___fldiv,fabsf@x
 28528   011CAA  C59B  F5B4         	movff	?___fldiv+1,fabsf@x+1
 28529   011CAE  C59C  F5B5         	movff	?___fldiv+2,fabsf@x+2
 28530   011CB2  C59D  F5B6         	movff	?___fldiv+3,fabsf@x+3
 28531   011CB6  ECF2  F0B1         	call	_fabsf	;wreg free
 28532   011CBA  C5B3  F600         	movff	?_fabsf,_atan2f$4448
 28533   011CBE  C5B4  F601         	movff	?_fabsf+1,_atan2f$4448+1
 28534   011CC2  C5B5  F602         	movff	?_fabsf+2,_atan2f$4448+2
 28535   011CC6  C5B6  F603         	movff	?_fabsf+3,_atan2f$4448+3
 28536   011CCA  C600  F5BB         	movff	_atan2f$4448,atanf@x
 28537   011CCE  C601  F5BC         	movff	_atan2f$4448+1,atanf@x+1
 28538   011CD2  C602  F5BD         	movff	_atan2f$4448+2,atanf@x+2
 28539   011CD6  C603  F5BE         	movff	_atan2f$4448+3,atanf@x+3
 28540   011CDA  ECFE  F084         	call	_atanf	;wreg free
 28541   011CDE  C5BB  F60C         	movff	?_atanf,atan2f@z
 28542   011CE2  C5BC  F60D         	movff	?_atanf+1,atan2f@z+1
 28543   011CE6  C5BD  F60E         	movff	?_atanf+2,atan2f@z+2
 28544   011CEA  C5BE  F60F         	movff	?_atanf+3,atan2f@z+3
 28545   011CEE  EF07  F08F         	goto	l10485
 28546   011CF2                     l2375:
 28547                           
 28548                           ; BSR set to: 6
 28549   011CF2  C60C  F5E9         	movff	atan2f@z,?_atan2f
 28550   011CF6  C60D  F5EA         	movff	atan2f@z+1,?_atan2f+1
 28551   011CFA  C60E  F5EB         	movff	atan2f@z+2,?_atan2f+2
 28552   011CFE  C60F  F5EC         	movff	atan2f@z+3,?_atan2f+3
 28553   011D02  EF17  F08F         	goto	l2336
 28554   011D06                     l10471:
 28555                           
 28556                           ; BSR set to: 6
 28557   011D06  C60C  F511         	movff	atan2f@z,___flneg@f1
 28558   011D0A  C60D  F512         	movff	atan2f@z+1,___flneg@f1+1
 28559   011D0E  C60E  F513         	movff	atan2f@z+2,___flneg@f1+2
 28560   011D12  C60F  F514         	movff	atan2f@z+3,___flneg@f1+3
 28561   011D16  ECD6  F0B1         	call	___flneg	;wreg free
 28562   011D1A  C511  F5E9         	movff	?___flneg,?_atan2f
 28563   011D1E  C512  F5EA         	movff	?___flneg+1,?_atan2f+1
 28564   011D22  C513  F5EB         	movff	?___flneg+2,?_atan2f+2
 28565   011D26  C514  F5EC         	movff	?___flneg+3,?_atan2f+3
 28566   011D2A  EF17  F08F         	goto	l2336
 28567   011D2E                     l10475:
 28568                           
 28569                           ; BSR set to: 6
 28570   011D2E  0E2E               	movlw	46
 28571   011D30  0105               	movlb	5	; () banked
 28572   011D32  6F71               	movwf	___fladd@a& (0+255),b
 28573   011D34  0EBD               	movlw	189
 28574   011D36  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28575   011D38  0EBB               	movlw	187
 28576   011D3A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28577   011D3C  0E33               	movlw	51
 28578   011D3E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28579   011D40  C60C  F56D         	movff	atan2f@z,___fladd@b
 28580   011D44  C60D  F56E         	movff	atan2f@z+1,___fladd@b+1
 28581   011D48  C60E  F56F         	movff	atan2f@z+2,___fladd@b+2
 28582   011D4C  C60F  F570         	movff	atan2f@z+3,___fladd@b+3
 28583   011D50  EC18  F08F         	call	___fladd	;wreg free
 28584   011D54  C56D  F604         	movff	?___fladd,_atan2f$4449
 28585   011D58  C56E  F605         	movff	?___fladd+1,_atan2f$4449+1
 28586   011D5C  C56F  F606         	movff	?___fladd+2,_atan2f$4449+2
 28587   011D60  C570  F607         	movff	?___fladd+3,_atan2f$4449+3
 28588   011D64  0EDB               	movlw	219
 28589   011D66  0105               	movlb	5	; () banked
 28590   011D68  6F75               	movwf	___flsub@b& (0+255),b
 28591   011D6A  0E0F               	movlw	15
 28592   011D6C  6F76               	movwf	(___flsub@b+1)& (0+255),b
 28593   011D6E  0E49               	movlw	73
 28594   011D70  6F77               	movwf	(___flsub@b+2)& (0+255),b
 28595   011D72  0E40               	movlw	64
 28596   011D74  6F78               	movwf	(___flsub@b+3)& (0+255),b
 28597   011D76  C604  F579         	movff	_atan2f$4449,___flsub@a
 28598   011D7A  C605  F57A         	movff	_atan2f$4449+1,___flsub@a+1
 28599   011D7E  C606  F57B         	movff	_atan2f$4449+2,___flsub@a+2
 28600   011D82  C607  F57C         	movff	_atan2f$4449+3,___flsub@a+3
 28601   011D86  ECBF  F0B0         	call	___flsub	;wreg free
 28602   011D8A  C575  F5E9         	movff	?___flsub,?_atan2f
 28603   011D8E  C576  F5EA         	movff	?___flsub+1,?_atan2f+1
 28604   011D92  C577  F5EB         	movff	?___flsub+2,?_atan2f+2
 28605   011D96  C578  F5EC         	movff	?___flsub+3,?_atan2f+3
 28606   011D9A  EF17  F08F         	goto	l2336
 28607   011D9E                     l10479:
 28608                           
 28609                           ; BSR set to: 6
 28610   011D9E  0E2E               	movlw	46
 28611   011DA0  0105               	movlb	5	; () banked
 28612   011DA2  6F71               	movwf	___fladd@a& (0+255),b
 28613   011DA4  0EBD               	movlw	189
 28614   011DA6  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28615   011DA8  0EBB               	movlw	187
 28616   011DAA  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28617   011DAC  0E33               	movlw	51
 28618   011DAE  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28619   011DB0  C60C  F56D         	movff	atan2f@z,___fladd@b
 28620   011DB4  C60D  F56E         	movff	atan2f@z+1,___fladd@b+1
 28621   011DB8  C60E  F56F         	movff	atan2f@z+2,___fladd@b+2
 28622   011DBC  C60F  F570         	movff	atan2f@z+3,___fladd@b+3
 28623   011DC0  EC18  F08F         	call	___fladd	;wreg free
 28624   011DC4  C56D  F608         	movff	?___fladd,_atan2f$4450
 28625   011DC8  C56E  F609         	movff	?___fladd+1,_atan2f$4450+1
 28626   011DCC  C56F  F60A         	movff	?___fladd+2,_atan2f$4450+2
 28627   011DD0  C570  F60B         	movff	?___fladd+3,_atan2f$4450+3
 28628   011DD4  C608  F56D         	movff	_atan2f$4450,___fladd@b
 28629   011DD8  C609  F56E         	movff	_atan2f$4450+1,___fladd@b+1
 28630   011DDC  C60A  F56F         	movff	_atan2f$4450+2,___fladd@b+2
 28631   011DE0  C60B  F570         	movff	_atan2f$4450+3,___fladd@b+3
 28632   011DE4  0EDB               	movlw	219
 28633   011DE6  0105               	movlb	5	; () banked
 28634   011DE8  6F71               	movwf	___fladd@a& (0+255),b
 28635   011DEA  0E0F               	movlw	15
 28636   011DEC  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28637   011DEE  0E49               	movlw	73
 28638   011DF0  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28639   011DF2  0EC0               	movlw	192
 28640   011DF4  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28641   011DF6  EC18  F08F         	call	___fladd	;wreg free
 28642   011DFA  C56D  F5E9         	movff	?___fladd,?_atan2f
 28643   011DFE  C56E  F5EA         	movff	?___fladd+1,?_atan2f+1
 28644   011E02  C56F  F5EB         	movff	?___fladd+2,?_atan2f+2
 28645   011E06  C570  F5EC         	movff	?___fladd+3,?_atan2f+3
 28646   011E0A  EF17  F08F         	goto	l2336
 28647   011E0E                     l10485:
 28648   011E0E  0106               	movlb	6	; () banked
 28649   011E10  5118               	movf	atan2f@m& (0+255),w,b
 28650                           
 28651                           ; Switch size 1, requested type "simple"
 28652                           ; Number of cases is 3, Range of values is 0 to 2
 28653                           ; switch strategies available:
 28654                           ; Name         Instructions Cycles
 28655                           ; simple_byte           10     6 (average)
 28656                           ;	Chosen strategy is simple_byte
 28657   011E12  0A00               	xorlw	0	; case 0
 28658   011E14  B4D8               	btfsc	status,2,c
 28659   011E16  EF79  F08E         	goto	l2375
 28660   011E1A  0A01               	xorlw	1	; case 1
 28661   011E1C  B4D8               	btfsc	status,2,c
 28662   011E1E  EF83  F08E         	goto	l10471
 28663   011E22  0A03               	xorlw	3	; case 2
 28664   011E24  B4D8               	btfsc	status,2,c
 28665   011E26  EF97  F08E         	goto	l10475
 28666   011E2A  EFCF  F08E         	goto	l10479
 28667   011E2E                     l2336:
 28668   011E2E  0012               	return		;funcret
 28669   011E30                     __end_of_atan2f:
 28670                           	callstack 0
 28671                           
 28672 ;; *************** function _atanf *****************
 28673 ;; Defined at:
 28674 ;;		line 40 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/atanf.c"
 28675 ;; Parameters:    Size  Location     Type
 28676 ;;  x               4   91[BANK5 ] float 
 28677 ;; Auto vars:     Size  Location     Type
 28678 ;;  ix              4  133[BANK5 ] struct .
 28679 ;;  z               4  129[BANK5 ] float 
 28680 ;;  w               4  124[BANK5 ] float 
 28681 ;;  s2              4  111[BANK5 ] float 
 28682 ;;  s1              4  107[BANK5 ] float 
 28683 ;;  id              1  128[BANK5 ] char 
 28684 ;;  sign            1  123[BANK5 ] _Bool 
 28685 ;; Return value:  Size  Location     Type
 28686 ;;                  4   91[BANK5 ] float 
 28687 ;; Registers used:
 28688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28689 ;; Tracked objects:
 28690 ;;		On entry : 0/0
 28691 ;;		On exit  : 0/0
 28692 ;;		Unchanged: 0/0
 28693 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 28694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28695 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28697 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28698 ;;Total ram usage:       46 bytes
 28699 ;; Hardware stack levels used: 1
 28700 ;; Hardware stack levels required when called: 6
 28701 ;; This function calls:
 28702 ;;		___fladd
 28703 ;;		___fldiv
 28704 ;;		___flmul
 28705 ;;		___flneg
 28706 ;;		___flsub
 28707 ;;		___fpclassifyf
 28708 ;;		_fabsf
 28709 ;; This function is called by:
 28710 ;;		_atan2f
 28711 ;; This function uses a non-reentrant model
 28712 ;;
 28713                           
 28714                           	psect	text73
 28715   0109FC                     __ptext73:
 28716                           	callstack 0
 28717   0109FC                     _atanf:
 28718                           	callstack 118
 28719   0109FC  C5BB  F5E5         	movff	atanf@x,atanf@ix
 28720   010A00  C5BC  F5E6         	movff	atanf@x+1,atanf@ix+1
 28721   010A04  C5BD  F5E7         	movff	atanf@x+2,atanf@ix+2
 28722   010A08  C5BE  F5E8         	movff	atanf@x+3,atanf@ix+3
 28723   010A0C  0105               	movlb	5	; () banked
 28724   010A0E  BFE8               	btfsc	(atanf@ix+3)& (0+255),7,b
 28725   010A10  EF0C  F085         	goto	u9391
 28726   010A14  EF0F  F085         	goto	u9390
 28727   010A18                     u9391:
 28728   010A18  0E01               	movlw	1
 28729   010A1A  EF10  F085         	goto	u9400
 28730   010A1E                     u9390:
 28731   010A1E  0E00               	movlw	0
 28732   010A20                     u9400:
 28733   010A20  6FDB               	movwf	atanf@sign& (0+255),b
 28734   010A22                     
 28735                           ; BSR set to: 5
 28736   010A22  9FE8               	bcf	(atanf@ix+3)& (0+255),7,b
 28737   010A24                     
 28738                           ; BSR set to: 5
 28739   010A24  0E80               	movlw	128
 28740   010A26  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 28741   010A28  0E4C               	movlw	76
 28742   010A2A  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 28743   010A2C  A0D8               	btfss	status,0,c
 28744   010A2E  EF1B  F085         	goto	u9411
 28745   010A32  EF1D  F085         	goto	u9410
 28746   010A36                     u9411:
 28747   010A36  EF86  F085         	goto	l10213
 28748   010A3A                     u9410:
 28749   010A3A                     
 28750                           ; BSR set to: 5
 28751   010A3A  C5BB  F511         	movff	atanf@x,___fpclassifyf@x
 28752   010A3E  C5BC  F512         	movff	atanf@x+1,___fpclassifyf@x+1
 28753   010A42  C5BD  F513         	movff	atanf@x+2,___fpclassifyf@x+2
 28754   010A46  C5BE  F514         	movff	atanf@x+3,___fpclassifyf@x+3
 28755   010A4A  ECA8  F0A6         	call	___fpclassifyf	;wreg free
 28756   010A4E  5011               	movf	?___fpclassifyf^(0+1280),w,c
 28757   010A50  1012               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 28758   010A52  A4D8               	btfss	status,2,c
 28759   010A54  EF2E  F085         	goto	u9421
 28760   010A58  EF30  F085         	goto	u9420
 28761   010A5C                     u9421:
 28762   010A5C  EF3A  F085         	goto	l10203
 28763   010A60                     u9420:
 28764   010A60                     l10201:
 28765   010A60  C5BB  F5BB         	movff	atanf@x,?_atanf
 28766   010A64  C5BC  F5BC         	movff	atanf@x+1,?_atanf+1
 28767   010A68  C5BD  F5BD         	movff	atanf@x+2,?_atanf+2
 28768   010A6C  C5BE  F5BE         	movff	atanf@x+3,?_atanf+3
 28769   010A70  EFC1  F088         	goto	l2413
 28770   010A74                     l10203:
 28771   010A74  0EB9               	movlw	low (_atanhi+12)
 28772   010A76  6EF6               	movwf	tblptrl,c
 28773   010A78  0EFD               	movlw	high (_atanhi+12)
 28774   010A7A  6EF7               	movwf	tblptrh,c
 28775   010A7C                     	if	0	;tblptru may be non-zero
 28776   010A7C                     	endif
 28777   010A7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28778   010A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 28779   010A7E  6EF8               	movwf	tblptru,c
 28780   010A80                     	endif
 28781   010A80  0009               	tblrd		*+
 28782   010A82  C4F5 F56D          	movff	tablat,___fladd@b
 28783   010A86  0009               	tblrd		*+
 28784   010A88  C4F5 F56E          	movff	tablat,___fladd@b+1
 28785   010A8C  0009               	tblrd		*+
 28786   010A8E  C4F5 F56F          	movff	tablat,___fladd@b+2
 28787   010A92  000A               	tblrd		*-
 28788   010A94  C4F5 F570          	movff	tablat,___fladd@b+3
 28789   010A98  0E00               	movlw	0
 28790   010A9A  0105               	movlb	5	; () banked
 28791   010A9C  6F71               	movwf	___fladd@a& (0+255),b
 28792   010A9E  0E00               	movlw	0
 28793   010AA0  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28794   010AA2  0E80               	movlw	128
 28795   010AA4  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28796   010AA6  0E03               	movlw	3
 28797   010AA8  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28798   010AAA  EC18  F08F         	call	___fladd	;wreg free
 28799   010AAE  C56D  F5E1         	movff	?___fladd,atanf@z
 28800   010AB2  C56E  F5E2         	movff	?___fladd+1,atanf@z+1
 28801   010AB6  C56F  F5E3         	movff	?___fladd+2,atanf@z+2
 28802   010ABA  C570  F5E4         	movff	?___fladd+3,atanf@z+3
 28803   010ABE  0105               	movlb	5	; () banked
 28804   010AC0  51DB               	movf	atanf@sign& (0+255),w,b
 28805   010AC2  A4D8               	btfss	status,2,c
 28806   010AC4  EF66  F085         	goto	u9431
 28807   010AC8  EF68  F085         	goto	u9430
 28808   010ACC                     u9431:
 28809   010ACC  EF72  F085         	goto	l10209
 28810   010AD0                     u9430:
 28811   010AD0                     l10207:
 28812                           
 28813                           ; BSR set to: 5
 28814   010AD0  C5E1  F5BB         	movff	atanf@z,?_atanf
 28815   010AD4  C5E2  F5BC         	movff	atanf@z+1,?_atanf+1
 28816   010AD8  C5E3  F5BD         	movff	atanf@z+2,?_atanf+2
 28817   010ADC  C5E4  F5BE         	movff	atanf@z+3,?_atanf+3
 28818   010AE0  EFC1  F088         	goto	l2413
 28819   010AE4                     l10209:
 28820                           
 28821                           ; BSR set to: 5
 28822   010AE4  C5E1  F511         	movff	atanf@z,___flneg@f1
 28823   010AE8  C5E2  F512         	movff	atanf@z+1,___flneg@f1+1
 28824   010AEC  C5E3  F513         	movff	atanf@z+2,___flneg@f1+2
 28825   010AF0  C5E4  F514         	movff	atanf@z+3,___flneg@f1+3
 28826   010AF4  ECD6  F0B1         	call	___flneg	;wreg free
 28827   010AF8  C511  F5BB         	movff	?___flneg,?_atanf
 28828   010AFC  C512  F5BC         	movff	?___flneg+1,?_atanf+1
 28829   010B00  C513  F5BD         	movff	?___flneg+2,?_atanf+2
 28830   010B04  C514  F5BE         	movff	?___flneg+3,?_atanf+3
 28831   010B08  EFC1  F088         	goto	l2413
 28832   010B0C                     l10213:
 28833                           
 28834                           ; BSR set to: 5
 28835   010B0C  0EE0               	movlw	224
 28836   010B0E  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 28837   010B10  0E3E               	movlw	62
 28838   010B12  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 28839   010B14  B0D8               	btfsc	status,0,c
 28840   010B16  EF8F  F085         	goto	u9441
 28841   010B1A  EF91  F085         	goto	u9440
 28842   010B1E                     u9441:
 28843   010B1E  EFA1  F085         	goto	l10219
 28844   010B22                     u9440:
 28845   010B22                     
 28846                           ; BSR set to: 5
 28847   010B22  0E80               	movlw	128
 28848   010B24  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 28849   010B26  0E39               	movlw	57
 28850   010B28  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 28851   010B2A  B0D8               	btfsc	status,0,c
 28852   010B2C  EF9A  F085         	goto	u9451
 28853   010B30  EF9C  F085         	goto	u9450
 28854   010B34                     u9451:
 28855   010B34  EF9E  F085         	goto	l2419
 28856   010B38                     u9450:
 28857   010B38  EF30  F085         	goto	l10201
 28858   010B3C                     l2419:
 28859                           
 28860                           ; BSR set to: 5
 28861   010B3C  69E0               	setf	atanf@id& (0+255),b
 28862   010B3E  EFDD  F086         	goto	l10243
 28863   010B42                     l10219:
 28864                           
 28865                           ; BSR set to: 5
 28866   010B42  C5BB  F5B3         	movff	atanf@x,fabsf@x
 28867   010B46  C5BC  F5B4         	movff	atanf@x+1,fabsf@x+1
 28868   010B4A  C5BD  F5B5         	movff	atanf@x+2,fabsf@x+2
 28869   010B4E  C5BE  F5B6         	movff	atanf@x+3,fabsf@x+3
 28870   010B52  ECF2  F0B1         	call	_fabsf	;wreg free
 28871   010B56  C5B3  F5BB         	movff	?_fabsf,atanf@x
 28872   010B5A  C5B4  F5BC         	movff	?_fabsf+1,atanf@x+1
 28873   010B5E  C5B5  F5BD         	movff	?_fabsf+2,atanf@x+2
 28874   010B62  C5B6  F5BE         	movff	?_fabsf+3,atanf@x+3
 28875   010B66  0E98               	movlw	152
 28876   010B68  0105               	movlb	5	; () banked
 28877   010B6A  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 28878   010B6C  0E3F               	movlw	63
 28879   010B6E  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 28880   010B70  B0D8               	btfsc	status,0,c
 28881   010B72  EFBD  F085         	goto	u9461
 28882   010B76  EFBF  F085         	goto	u9460
 28883   010B7A                     u9461:
 28884   010B7A  EF61  F086         	goto	l10233
 28885   010B7E                     u9460:
 28886   010B7E                     
 28887                           ; BSR set to: 5
 28888   010B7E  0E30               	movlw	48
 28889   010B80  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 28890   010B82  0E3F               	movlw	63
 28891   010B84  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 28892   010B86  B0D8               	btfsc	status,0,c
 28893   010B88  EFC8  F085         	goto	u9471
 28894   010B8C  EFCA  F085         	goto	u9470
 28895   010B90                     u9471:
 28896   010B90  EF1E  F086         	goto	l10229
 28897   010B94                     u9470:
 28898   010B94                     
 28899                           ; BSR set to: 5
 28900   010B94  6BE0               	clrf	atanf@id& (0+255),b
 28901   010B96                     
 28902                           ; BSR set to: 5
 28903   010B96  0E00               	movlw	0
 28904   010B98  6F71               	movwf	___fladd@a& (0+255),b
 28905   010B9A  0E00               	movlw	0
 28906   010B9C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28907   010B9E  0E80               	movlw	128
 28908   010BA0  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28909   010BA2  0EBF               	movlw	191
 28910   010BA4  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28911   010BA6  0E00               	movlw	0
 28912   010BA8  6E23               	movwf	___flmul@a^(0+1280),c
 28913   010BAA  0E00               	movlw	0
 28914   010BAC  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 28915   010BAE  0E00               	movlw	0
 28916   010BB0  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 28917   010BB2  0E40               	movlw	64
 28918   010BB4  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 28919   010BB6  C5BB  F51F         	movff	atanf@x,___flmul@b
 28920   010BBA  C5BC  F520         	movff	atanf@x+1,___flmul@b+1
 28921   010BBE  C5BD  F521         	movff	atanf@x+2,___flmul@b+2
 28922   010BC2  C5BE  F522         	movff	atanf@x+3,___flmul@b+3
 28923   010BC6  EC74  F091         	call	___flmul	;wreg free
 28924   010BCA  C51F  F56D         	movff	?___flmul,___fladd@b
 28925   010BCE  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 28926   010BD2  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 28927   010BD6  C522  F570         	movff	?___flmul+3,___fladd@b+3
 28928   010BDA  EC18  F08F         	call	___fladd	;wreg free
 28929   010BDE  C56D  F59A         	movff	?___fladd,___fldiv@b
 28930   010BE2  C56E  F59B         	movff	?___fladd+1,___fldiv@b+1
 28931   010BE6  C56F  F59C         	movff	?___fladd+2,___fldiv@b+2
 28932   010BEA  C570  F59D         	movff	?___fladd+3,___fldiv@b+3
 28933   010BEE  0E00               	movlw	0
 28934   010BF0  0105               	movlb	5	; () banked
 28935   010BF2  6F71               	movwf	___fladd@a& (0+255),b
 28936   010BF4  0E00               	movlw	0
 28937   010BF6  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28938   010BF8  0E00               	movlw	0
 28939   010BFA  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28940   010BFC  0E40               	movlw	64
 28941   010BFE  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28942   010C00  C5BB  F56D         	movff	atanf@x,___fladd@b
 28943   010C04  C5BC  F56E         	movff	atanf@x+1,___fladd@b+1
 28944   010C08  C5BD  F56F         	movff	atanf@x+2,___fladd@b+2
 28945   010C0C  C5BE  F570         	movff	atanf@x+3,___fladd@b+3
 28946   010C10  EC18  F08F         	call	___fladd	;wreg free
 28947   010C14  C56D  F59E         	movff	?___fladd,___fldiv@a
 28948   010C18  C56E  F59F         	movff	?___fladd+1,___fldiv@a+1
 28949   010C1C  C56F  F5A0         	movff	?___fladd+2,___fldiv@a+2
 28950   010C20  C570  F5A1         	movff	?___fladd+3,___fldiv@a+3
 28951   010C24  EC5C  F099         	call	___fldiv	;wreg free
 28952   010C28  C59A  F5BB         	movff	?___fldiv,atanf@x
 28953   010C2C  C59B  F5BC         	movff	?___fldiv+1,atanf@x+1
 28954   010C30  C59C  F5BD         	movff	?___fldiv+2,atanf@x+2
 28955   010C34  C59D  F5BE         	movff	?___fldiv+3,atanf@x+3
 28956   010C38  EFDD  F086         	goto	l10243
 28957   010C3C                     l10229:
 28958                           
 28959                           ; BSR set to: 5
 28960   010C3C  0E01               	movlw	1
 28961   010C3E  6FE0               	movwf	atanf@id& (0+255),b
 28962   010C40                     
 28963                           ; BSR set to: 5
 28964   010C40  0E00               	movlw	0
 28965   010C42  6F71               	movwf	___fladd@a& (0+255),b
 28966   010C44  0E00               	movlw	0
 28967   010C46  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28968   010C48  0E80               	movlw	128
 28969   010C4A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28970   010C4C  0EBF               	movlw	191
 28971   010C4E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28972   010C50  C5BB  F56D         	movff	atanf@x,___fladd@b
 28973   010C54  C5BC  F56E         	movff	atanf@x+1,___fladd@b+1
 28974   010C58  C5BD  F56F         	movff	atanf@x+2,___fladd@b+2
 28975   010C5C  C5BE  F570         	movff	atanf@x+3,___fladd@b+3
 28976   010C60  EC18  F08F         	call	___fladd	;wreg free
 28977   010C64  C56D  F59A         	movff	?___fladd,___fldiv@b
 28978   010C68  C56E  F59B         	movff	?___fladd+1,___fldiv@b+1
 28979   010C6C  C56F  F59C         	movff	?___fladd+2,___fldiv@b+2
 28980   010C70  C570  F59D         	movff	?___fladd+3,___fldiv@b+3
 28981   010C74  0E00               	movlw	0
 28982   010C76  0105               	movlb	5	; () banked
 28983   010C78  6F71               	movwf	___fladd@a& (0+255),b
 28984   010C7A  0E00               	movlw	0
 28985   010C7C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 28986   010C7E  0E80               	movlw	128
 28987   010C80  6F73               	movwf	(___fladd@a+2)& (0+255),b
 28988   010C82  0E3F               	movlw	63
 28989   010C84  6F74               	movwf	(___fladd@a+3)& (0+255),b
 28990   010C86  C5BB  F56D         	movff	atanf@x,___fladd@b
 28991   010C8A  C5BC  F56E         	movff	atanf@x+1,___fladd@b+1
 28992   010C8E  C5BD  F56F         	movff	atanf@x+2,___fladd@b+2
 28993   010C92  C5BE  F570         	movff	atanf@x+3,___fladd@b+3
 28994   010C96  EC18  F08F         	call	___fladd	;wreg free
 28995   010C9A  C56D  F59E         	movff	?___fladd,___fldiv@a
 28996   010C9E  C56E  F59F         	movff	?___fladd+1,___fldiv@a+1
 28997   010CA2  C56F  F5A0         	movff	?___fladd+2,___fldiv@a+2
 28998   010CA6  C570  F5A1         	movff	?___fladd+3,___fldiv@a+3
 28999   010CAA  EC5C  F099         	call	___fldiv	;wreg free
 29000   010CAE  C59A  F5BB         	movff	?___fldiv,atanf@x
 29001   010CB2  C59B  F5BC         	movff	?___fldiv+1,atanf@x+1
 29002   010CB6  C59C  F5BD         	movff	?___fldiv+2,atanf@x+2
 29003   010CBA  C59D  F5BE         	movff	?___fldiv+3,atanf@x+3
 29004   010CBE  EFDD  F086         	goto	l10243
 29005   010CC2                     l10233:
 29006                           
 29007                           ; BSR set to: 5
 29008   010CC2  0E1C               	movlw	28
 29009   010CC4  5DE7               	subwf	(atanf@ix+2)& (0+255),w,b
 29010   010CC6  0E40               	movlw	64
 29011   010CC8  59E8               	subwfb	(atanf@ix+3)& (0+255),w,b
 29012   010CCA  B0D8               	btfsc	status,0,c
 29013   010CCC  EF6A  F086         	goto	u9481
 29014   010CD0  EF6C  F086         	goto	u9480
 29015   010CD4                     u9481:
 29016   010CD4  EFC1  F086         	goto	l10239
 29017   010CD8                     u9480:
 29018   010CD8                     
 29019                           ; BSR set to: 5
 29020   010CD8  0E02               	movlw	2
 29021   010CDA  6FE0               	movwf	atanf@id& (0+255),b
 29022   010CDC                     
 29023                           ; BSR set to: 5
 29024   010CDC  0E00               	movlw	0
 29025   010CDE  6F71               	movwf	___fladd@a& (0+255),b
 29026   010CE0  0E00               	movlw	0
 29027   010CE2  6F72               	movwf	(___fladd@a+1)& (0+255),b
 29028   010CE4  0EC0               	movlw	192
 29029   010CE6  6F73               	movwf	(___fladd@a+2)& (0+255),b
 29030   010CE8  0EBF               	movlw	191
 29031   010CEA  6F74               	movwf	(___fladd@a+3)& (0+255),b
 29032   010CEC  C5BB  F56D         	movff	atanf@x,___fladd@b
 29033   010CF0  C5BC  F56E         	movff	atanf@x+1,___fladd@b+1
 29034   010CF4  C5BD  F56F         	movff	atanf@x+2,___fladd@b+2
 29035   010CF8  C5BE  F570         	movff	atanf@x+3,___fladd@b+3
 29036   010CFC  EC18  F08F         	call	___fladd	;wreg free
 29037   010D00  C56D  F59A         	movff	?___fladd,___fldiv@b
 29038   010D04  C56E  F59B         	movff	?___fladd+1,___fldiv@b+1
 29039   010D08  C56F  F59C         	movff	?___fladd+2,___fldiv@b+2
 29040   010D0C  C570  F59D         	movff	?___fladd+3,___fldiv@b+3
 29041   010D10  0E00               	movlw	0
 29042   010D12  0105               	movlb	5	; () banked
 29043   010D14  6F71               	movwf	___fladd@a& (0+255),b
 29044   010D16  0E00               	movlw	0
 29045   010D18  6F72               	movwf	(___fladd@a+1)& (0+255),b
 29046   010D1A  0E80               	movlw	128
 29047   010D1C  6F73               	movwf	(___fladd@a+2)& (0+255),b
 29048   010D1E  0E3F               	movlw	63
 29049   010D20  6F74               	movwf	(___fladd@a+3)& (0+255),b
 29050   010D22  0E00               	movlw	0
 29051   010D24  6E23               	movwf	___flmul@a^(0+1280),c
 29052   010D26  0E00               	movlw	0
 29053   010D28  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 29054   010D2A  0EC0               	movlw	192
 29055   010D2C  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 29056   010D2E  0E3F               	movlw	63
 29057   010D30  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 29058   010D32  C5BB  F51F         	movff	atanf@x,___flmul@b
 29059   010D36  C5BC  F520         	movff	atanf@x+1,___flmul@b+1
 29060   010D3A  C5BD  F521         	movff	atanf@x+2,___flmul@b+2
 29061   010D3E  C5BE  F522         	movff	atanf@x+3,___flmul@b+3
 29062   010D42  EC74  F091         	call	___flmul	;wreg free
 29063   010D46  C51F  F56D         	movff	?___flmul,___fladd@b
 29064   010D4A  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 29065   010D4E  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 29066   010D52  C522  F570         	movff	?___flmul+3,___fladd@b+3
 29067   010D56  EC18  F08F         	call	___fladd	;wreg free
 29068   010D5A  C56D  F59E         	movff	?___fladd,___fldiv@a
 29069   010D5E  C56E  F59F         	movff	?___fladd+1,___fldiv@a+1
 29070   010D62  C56F  F5A0         	movff	?___fladd+2,___fldiv@a+2
 29071   010D66  C570  F5A1         	movff	?___fladd+3,___fldiv@a+3
 29072   010D6A  EC5C  F099         	call	___fldiv	;wreg free
 29073   010D6E  C59A  F5BB         	movff	?___fldiv,atanf@x
 29074   010D72  C59B  F5BC         	movff	?___fldiv+1,atanf@x+1
 29075   010D76  C59C  F5BD         	movff	?___fldiv+2,atanf@x+2
 29076   010D7A  C59D  F5BE         	movff	?___fldiv+3,atanf@x+3
 29077   010D7E  EFDD  F086         	goto	l10243
 29078   010D82                     l10239:
 29079                           
 29080                           ; BSR set to: 5
 29081   010D82  0E03               	movlw	3
 29082   010D84  6FE0               	movwf	atanf@id& (0+255),b
 29083   010D86                     
 29084                           ; BSR set to: 5
 29085   010D86  0E00               	movlw	0
 29086   010D88  6F9A               	movwf	___fldiv@b& (0+255),b
 29087   010D8A  0E00               	movlw	0
 29088   010D8C  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 29089   010D8E  0E80               	movlw	128
 29090   010D90  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 29091   010D92  0EBF               	movlw	191
 29092   010D94  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 29093   010D96  C5BB  F59E         	movff	atanf@x,___fldiv@a
 29094   010D9A  C5BC  F59F         	movff	atanf@x+1,___fldiv@a+1
 29095   010D9E  C5BD  F5A0         	movff	atanf@x+2,___fldiv@a+2
 29096   010DA2  C5BE  F5A1         	movff	atanf@x+3,___fldiv@a+3
 29097   010DA6  EC5C  F099         	call	___fldiv	;wreg free
 29098   010DAA  C59A  F5BB         	movff	?___fldiv,atanf@x
 29099   010DAE  C59B  F5BC         	movff	?___fldiv+1,atanf@x+1
 29100   010DB2  C59C  F5BD         	movff	?___fldiv+2,atanf@x+2
 29101   010DB6  C59D  F5BE         	movff	?___fldiv+3,atanf@x+3
 29102   010DBA                     l10243:
 29103   010DBA  C5BB  F51F         	movff	atanf@x,___flmul@b
 29104   010DBE  C5BC  F520         	movff	atanf@x+1,___flmul@b+1
 29105   010DC2  C5BD  F521         	movff	atanf@x+2,___flmul@b+2
 29106   010DC6  C5BE  F522         	movff	atanf@x+3,___flmul@b+3
 29107   010DCA  C5BB  F523         	movff	atanf@x,___flmul@a
 29108   010DCE  C5BC  F524         	movff	atanf@x+1,___flmul@a+1
 29109   010DD2  C5BD  F525         	movff	atanf@x+2,___flmul@a+2
 29110   010DD6  C5BE  F526         	movff	atanf@x+3,___flmul@a+3
 29111   010DDA  EC74  F091         	call	___flmul	;wreg free
 29112   010DDE  C51F  F5E1         	movff	?___flmul,atanf@z
 29113   010DE2  C520  F5E2         	movff	?___flmul+1,atanf@z+1
 29114   010DE6  C521  F5E3         	movff	?___flmul+2,atanf@z+2
 29115   010DEA  C522  F5E4         	movff	?___flmul+3,atanf@z+3
 29116   010DEE  C5E1  F51F         	movff	atanf@z,___flmul@b
 29117   010DF2  C5E2  F520         	movff	atanf@z+1,___flmul@b+1
 29118   010DF6  C5E3  F521         	movff	atanf@z+2,___flmul@b+2
 29119   010DFA  C5E4  F522         	movff	atanf@z+3,___flmul@b+3
 29120   010DFE  C5E1  F523         	movff	atanf@z,___flmul@a
 29121   010E02  C5E2  F524         	movff	atanf@z+1,___flmul@a+1
 29122   010E06  C5E3  F525         	movff	atanf@z+2,___flmul@a+2
 29123   010E0A  C5E4  F526         	movff	atanf@z+3,___flmul@a+3
 29124   010E0E  EC74  F091         	call	___flmul	;wreg free
 29125   010E12  C51F  F5DC         	movff	?___flmul,atanf@w
 29126   010E16  C520  F5DD         	movff	?___flmul+1,atanf@w+1
 29127   010E1A  C521  F5DE         	movff	?___flmul+2,atanf@w+2
 29128   010E1E  C522  F5DF         	movff	?___flmul+3,atanf@w+3
 29129   010E22  0E0D               	movlw	13
 29130   010E24  0105               	movlb	5	; () banked
 29131   010E26  6F71               	movwf	___fladd@a& (0+255),b
 29132   010E28  0EF5               	movlw	245
 29133   010E2A  6F72               	movwf	(___fladd@a+1)& (0+255),b
 29134   010E2C  0E11               	movlw	17
 29135   010E2E  6F73               	movwf	(___fladd@a+2)& (0+255),b
 29136   010E30  0E3E               	movlw	62
 29137   010E32  6F74               	movwf	(___fladd@a+3)& (0+255),b
 29138   010E34  0E25               	movlw	37
 29139   010E36  6E23               	movwf	___flmul@a^(0+1280),c
 29140   010E38  0EAC               	movlw	172
 29141   010E3A  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 29142   010E3C  0E7C               	movlw	124
 29143   010E3E  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 29144   010E40  0E3D               	movlw	61
 29145   010E42  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 29146   010E44  C5DC  F51F         	movff	atanf@w,___flmul@b
 29147   010E48  C5DD  F520         	movff	atanf@w+1,___flmul@b+1
 29148   010E4C  C5DE  F521         	movff	atanf@w+2,___flmul@b+2
 29149   010E50  C5DF  F522         	movff	atanf@w+3,___flmul@b+3
 29150   010E54  EC74  F091         	call	___flmul	;wreg free
 29151   010E58  C51F  F56D         	movff	?___flmul,___fladd@b
 29152   010E5C  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 29153   010E60  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 29154   010E64  C522  F570         	movff	?___flmul+3,___fladd@b+3
 29155   010E68  EC18  F08F         	call	___fladd	;wreg free
 29156   010E6C  C56D  F5D3         	movff	?___fladd,_atanf$4451
 29157   010E70  C56E  F5D4         	movff	?___fladd+1,_atanf$4451+1
 29158   010E74  C56F  F5D5         	movff	?___fladd+2,_atanf$4451+2
 29159   010E78  C570  F5D6         	movff	?___fladd+3,_atanf$4451+3
 29160   010E7C  0EA9               	movlw	169
 29161   010E7E  0105               	movlb	5	; () banked
 29162   010E80  6F71               	movwf	___fladd@a& (0+255),b
 29163   010E82  0EAA               	movlw	170
 29164   010E84  6F72               	movwf	(___fladd@a+1)& (0+255),b
 29165   010E86  0EAA               	movlw	170
 29166   010E88  6F73               	movwf	(___fladd@a+2)& (0+255),b
 29167   010E8A  0E3E               	movlw	62
 29168   010E8C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 29169   010E8E  C5DC  F523         	movff	atanf@w,___flmul@a
 29170   010E92  C5DD  F524         	movff	atanf@w+1,___flmul@a+1
 29171   010E96  C5DE  F525         	movff	atanf@w+2,___flmul@a+2
 29172   010E9A  C5DF  F526         	movff	atanf@w+3,___flmul@a+3
 29173   010E9E  C5D3  F51F         	movff	_atanf$4451,___flmul@b
 29174   010EA2  C5D4  F520         	movff	_atanf$4451+1,___flmul@b+1
 29175   010EA6  C5D5  F521         	movff	_atanf$4451+2,___flmul@b+2
 29176   010EAA  C5D6  F522         	movff	_atanf$4451+3,___flmul@b+3
 29177   010EAE  EC74  F091         	call	___flmul	;wreg free
 29178   010EB2  C51F  F56D         	movff	?___flmul,___fladd@b
 29179   010EB6  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 29180   010EBA  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 29181   010EBE  C522  F570         	movff	?___flmul+3,___fladd@b+3
 29182   010EC2  EC18  F08F         	call	___fladd	;wreg free
 29183   010EC6  C56D  F5BF         	movff	?___fladd,_atanf$4452
 29184   010ECA  C56E  F5C0         	movff	?___fladd+1,_atanf$4452+1
 29185   010ECE  C56F  F5C1         	movff	?___fladd+2,_atanf$4452+2
 29186   010ED2  C570  F5C2         	movff	?___fladd+3,_atanf$4452+3
 29187   010ED6  C5BF  F51F         	movff	_atanf$4452,___flmul@b
 29188   010EDA  C5C0  F520         	movff	_atanf$4452+1,___flmul@b+1
 29189   010EDE  C5C1  F521         	movff	_atanf$4452+2,___flmul@b+2
 29190   010EE2  C5C2  F522         	movff	_atanf$4452+3,___flmul@b+3
 29191   010EE6  C5E1  F523         	movff	atanf@z,___flmul@a
 29192   010EEA  C5E2  F524         	movff	atanf@z+1,___flmul@a+1
 29193   010EEE  C5E3  F525         	movff	atanf@z+2,___flmul@a+2
 29194   010EF2  C5E4  F526         	movff	atanf@z+3,___flmul@a+3
 29195   010EF6  EC74  F091         	call	___flmul	;wreg free
 29196   010EFA  C51F  F5CB         	movff	?___flmul,atanf@s1
 29197   010EFE  C520  F5CC         	movff	?___flmul+1,atanf@s1+1
 29198   010F02  C521  F5CD         	movff	?___flmul+2,atanf@s1+2
 29199   010F06  C522  F5CE         	movff	?___flmul+3,atanf@s1+3
 29200   010F0A  0E98               	movlw	152
 29201   010F0C  0105               	movlb	5	; () banked
 29202   010F0E  6F71               	movwf	___fladd@a& (0+255),b
 29203   010F10  0ECA               	movlw	202
 29204   010F12  6F72               	movwf	(___fladd@a+1)& (0+255),b
 29205   010F14  0E4C               	movlw	76
 29206   010F16  6F73               	movwf	(___fladd@a+2)& (0+255),b
 29207   010F18  0EBE               	movlw	190
 29208   010F1A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 29209   010F1C  0E47               	movlw	71
 29210   010F1E  6E23               	movwf	___flmul@a^(0+1280),c
 29211   010F20  0E12               	movlw	18
 29212   010F22  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 29213   010F24  0EDA               	movlw	218
 29214   010F26  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 29215   010F28  0EBD               	movlw	189
 29216   010F2A  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 29217   010F2C  C5DC  F51F         	movff	atanf@w,___flmul@b
 29218   010F30  C5DD  F520         	movff	atanf@w+1,___flmul@b+1
 29219   010F34  C5DE  F521         	movff	atanf@w+2,___flmul@b+2
 29220   010F38  C5DF  F522         	movff	atanf@w+3,___flmul@b+3
 29221   010F3C  EC74  F091         	call	___flmul	;wreg free
 29222   010F40  C51F  F56D         	movff	?___flmul,___fladd@b
 29223   010F44  C520  F56E         	movff	?___flmul+1,___fladd@b+1
 29224   010F48  C521  F56F         	movff	?___flmul+2,___fladd@b+2
 29225   010F4C  C522  F570         	movff	?___flmul+3,___fladd@b+3
 29226   010F50  EC18  F08F         	call	___fladd	;wreg free
 29227   010F54  C56D  F5D3         	movff	?___fladd,_atanf$4451
 29228   010F58  C56E  F5D4         	movff	?___fladd+1,_atanf$4451+1
 29229   010F5C  C56F  F5D5         	movff	?___fladd+2,_atanf$4451+2
 29230   010F60  C570  F5D6         	movff	?___fladd+3,_atanf$4451+3
 29231   010F64  C5D3  F51F         	movff	_atanf$4451,___flmul@b
 29232   010F68  C5D4  F520         	movff	_atanf$4451+1,___flmul@b+1
 29233   010F6C  C5D5  F521         	movff	_atanf$4451+2,___flmul@b+2
 29234   010F70  C5D6  F522         	movff	_atanf$4451+3,___flmul@b+3
 29235   010F74  C5DC  F523         	movff	atanf@w,___flmul@a
 29236   010F78  C5DD  F524         	movff	atanf@w+1,___flmul@a+1
 29237   010F7C  C5DE  F525         	movff	atanf@w+2,___flmul@a+2
 29238   010F80  C5DF  F526         	movff	atanf@w+3,___flmul@a+3
 29239   010F84  EC74  F091         	call	___flmul	;wreg free
 29240   010F88  C51F  F5CF         	movff	?___flmul,atanf@s2
 29241   010F8C  C520  F5D0         	movff	?___flmul+1,atanf@s2+1
 29242   010F90  C521  F5D1         	movff	?___flmul+2,atanf@s2+2
 29243   010F94  C522  F5D2         	movff	?___flmul+3,atanf@s2+3
 29244   010F98  0105               	movlb	5	; () banked
 29245   010F9A  BFE0               	btfsc	atanf@id& (0+255),7,b
 29246   010F9C  EFD4  F087         	goto	u9490
 29247   010FA0  EFD2  F087         	goto	u9491
 29248   010FA4                     u9491:
 29249   010FA4  EF1C  F088         	goto	l10265
 29250   010FA8                     u9490:
 29251   010FA8                     
 29252                           ; BSR set to: 5
 29253   010FA8  C5BB  F523         	movff	atanf@x,___flmul@a
 29254   010FAC  C5BC  F524         	movff	atanf@x+1,___flmul@a+1
 29255   010FB0  C5BD  F525         	movff	atanf@x+2,___flmul@a+2
 29256   010FB4  C5BE  F526         	movff	atanf@x+3,___flmul@a+3
 29257   010FB8  C5CF  F571         	movff	atanf@s2,___fladd@a
 29258   010FBC  C5D0  F572         	movff	atanf@s2+1,___fladd@a+1
 29259   010FC0  C5D1  F573         	movff	atanf@s2+2,___fladd@a+2
 29260   010FC4  C5D2  F574         	movff	atanf@s2+3,___fladd@a+3
 29261   010FC8  C5CB  F56D         	movff	atanf@s1,___fladd@b
 29262   010FCC  C5CC  F56E         	movff	atanf@s1+1,___fladd@b+1
 29263   010FD0  C5CD  F56F         	movff	atanf@s1+2,___fladd@b+2
 29264   010FD4  C5CE  F570         	movff	atanf@s1+3,___fladd@b+3
 29265   010FD8  EC18  F08F         	call	___fladd	;wreg free
 29266   010FDC  C56D  F51F         	movff	?___fladd,___flmul@b
 29267   010FE0  C56E  F520         	movff	?___fladd+1,___flmul@b+1
 29268   010FE4  C56F  F521         	movff	?___fladd+2,___flmul@b+2
 29269   010FE8  C570  F522         	movff	?___fladd+3,___flmul@b+3
 29270   010FEC  EC74  F091         	call	___flmul	;wreg free
 29271   010FF0  C51F  F5D7         	movff	?___flmul,_atanf$4453
 29272   010FF4  C520  F5D8         	movff	?___flmul+1,_atanf$4453+1
 29273   010FF8  C521  F5D9         	movff	?___flmul+2,_atanf$4453+2
 29274   010FFC  C522  F5DA         	movff	?___flmul+3,_atanf$4453+3
 29275   011000  C5BB  F575         	movff	atanf@x,___flsub@b
 29276   011004  C5BC  F576         	movff	atanf@x+1,___flsub@b+1
 29277   011008  C5BD  F577         	movff	atanf@x+2,___flsub@b+2
 29278   01100C  C5BE  F578         	movff	atanf@x+3,___flsub@b+3
 29279   011010  C5D7  F579         	movff	_atanf$4453,___flsub@a
 29280   011014  C5D8  F57A         	movff	_atanf$4453+1,___flsub@a+1
 29281   011018  C5D9  F57B         	movff	_atanf$4453+2,___flsub@a+2
 29282   01101C  C5DA  F57C         	movff	_atanf$4453+3,___flsub@a+3
 29283   011020  ECBF  F0B0         	call	___flsub	;wreg free
 29284   011024  C575  F5BB         	movff	?___flsub,?_atanf
 29285   011028  C576  F5BC         	movff	?___flsub+1,?_atanf+1
 29286   01102C  C577  F5BD         	movff	?___flsub+2,?_atanf+2
 29287   011030  C578  F5BE         	movff	?___flsub+3,?_atanf+3
 29288   011034  EFC1  F088         	goto	l2413
 29289   011038                     l10265:
 29290                           
 29291                           ; BSR set to: 5
 29292   011038  C5BB  F523         	movff	atanf@x,___flmul@a
 29293   01103C  C5BC  F524         	movff	atanf@x+1,___flmul@a+1
 29294   011040  C5BD  F525         	movff	atanf@x+2,___flmul@a+2
 29295   011044  C5BE  F526         	movff	atanf@x+3,___flmul@a+3
 29296   011048  C5CF  F571         	movff	atanf@s2,___fladd@a
 29297   01104C  C5D0  F572         	movff	atanf@s2+1,___fladd@a+1
 29298   011050  C5D1  F573         	movff	atanf@s2+2,___fladd@a+2
 29299   011054  C5D2  F574         	movff	atanf@s2+3,___fladd@a+3
 29300   011058  C5CB  F56D         	movff	atanf@s1,___fladd@b
 29301   01105C  C5CC  F56E         	movff	atanf@s1+1,___fladd@b+1
 29302   011060  C5CD  F56F         	movff	atanf@s1+2,___fladd@b+2
 29303   011064  C5CE  F570         	movff	atanf@s1+3,___fladd@b+3
 29304   011068  EC18  F08F         	call	___fladd	;wreg free
 29305   01106C  C56D  F51F         	movff	?___fladd,___flmul@b
 29306   011070  C56E  F520         	movff	?___fladd+1,___flmul@b+1
 29307   011074  C56F  F521         	movff	?___fladd+2,___flmul@b+2
 29308   011078  C570  F522         	movff	?___fladd+3,___flmul@b+3
 29309   01107C  EC74  F091         	call	___flmul	;wreg free
 29310   011080  C51F  F5D7         	movff	?___flmul,_atanf$4453
 29311   011084  C520  F5D8         	movff	?___flmul+1,_atanf$4453+1
 29312   011088  C521  F5D9         	movff	?___flmul+2,_atanf$4453+2
 29313   01108C  C522  F5DA         	movff	?___flmul+3,_atanf$4453+3
 29314   011090  0105               	movlb	5	; () banked
 29315   011092  51E0               	movf	atanf@id& (0+255),w,b
 29316   011094  0D04               	mullw	4
 29317   011096  0E9D               	movlw	low _atanlo
 29318   011098  24F3               	addwf	243,w,c
 29319   01109A  6EF6               	movwf	tblptrl,c
 29320   01109C  0EFD               	movlw	high _atanlo
 29321   01109E  20F4               	addwfc	244,w,c
 29322   0110A0  6EF7               	movwf	tblptrh,c
 29323   0110A2                     	if	1	;There are 3 active tblptr bytes
 29324   0110A2  6AF8               	clrf	tblptru,c
 29325   0110A4  0E00               	movlw	low (__mediumconst shr (0+16))
 29326   0110A6  22F8               	addwfc	tblptru,f,c
 29327   0110A8                     	endif
 29328   0110A8  0009               	tblrd		*+
 29329   0110AA  C4F5 F579          	movff	tablat,___flsub@a
 29330   0110AE  0009               	tblrd		*+
 29331   0110B0  C4F5 F57A          	movff	tablat,___flsub@a+1
 29332   0110B4  0009               	tblrd		*+
 29333   0110B6  C4F5 F57B          	movff	tablat,___flsub@a+2
 29334   0110BA  000A               	tblrd		*-
 29335   0110BC  C4F5 F57C          	movff	tablat,___flsub@a+3
 29336   0110C0  C5D7  F575         	movff	_atanf$4453,___flsub@b
 29337   0110C4  C5D8  F576         	movff	_atanf$4453+1,___flsub@b+1
 29338   0110C8  C5D9  F577         	movff	_atanf$4453+2,___flsub@b+2
 29339   0110CC  C5DA  F578         	movff	_atanf$4453+3,___flsub@b+3
 29340   0110D0  ECBF  F0B0         	call	___flsub	;wreg free
 29341   0110D4  C575  F5C3         	movff	?___flsub,_atanf$4454
 29342   0110D8  C576  F5C4         	movff	?___flsub+1,_atanf$4454+1
 29343   0110DC  C577  F5C5         	movff	?___flsub+2,_atanf$4454+2
 29344   0110E0  C578  F5C6         	movff	?___flsub+3,_atanf$4454+3
 29345   0110E4  C5BB  F579         	movff	atanf@x,___flsub@a
 29346   0110E8  C5BC  F57A         	movff	atanf@x+1,___flsub@a+1
 29347   0110EC  C5BD  F57B         	movff	atanf@x+2,___flsub@a+2
 29348   0110F0  C5BE  F57C         	movff	atanf@x+3,___flsub@a+3
 29349   0110F4  C5C3  F575         	movff	_atanf$4454,___flsub@b
 29350   0110F8  C5C4  F576         	movff	_atanf$4454+1,___flsub@b+1
 29351   0110FC  C5C5  F577         	movff	_atanf$4454+2,___flsub@b+2
 29352   011100  C5C6  F578         	movff	_atanf$4454+3,___flsub@b+3
 29353   011104  ECBF  F0B0         	call	___flsub	;wreg free
 29354   011108  C575  F5C7         	movff	?___flsub,_atanf$4455
 29355   01110C  C576  F5C8         	movff	?___flsub+1,_atanf$4455+1
 29356   011110  C577  F5C9         	movff	?___flsub+2,_atanf$4455+2
 29357   011114  C578  F5CA         	movff	?___flsub+3,_atanf$4455+3
 29358   011118  0105               	movlb	5	; () banked
 29359   01111A  51E0               	movf	atanf@id& (0+255),w,b
 29360   01111C  0D04               	mullw	4
 29361   01111E  0EAD               	movlw	low _atanhi
 29362   011120  24F3               	addwf	243,w,c
 29363   011122  6EF6               	movwf	tblptrl,c
 29364   011124  0EFD               	movlw	high _atanhi
 29365   011126  20F4               	addwfc	244,w,c
 29366   011128  6EF7               	movwf	tblptrh,c
 29367   01112A                     	if	1	;There are 3 active tblptr bytes
 29368   01112A  6AF8               	clrf	tblptru,c
 29369   01112C  0E00               	movlw	low (__mediumconst shr (0+16))
 29370   01112E  22F8               	addwfc	tblptru,f,c
 29371   011130                     	endif
 29372   011130  0009               	tblrd		*+
 29373   011132  C4F5 F575          	movff	tablat,___flsub@b
 29374   011136  0009               	tblrd		*+
 29375   011138  C4F5 F576          	movff	tablat,___flsub@b+1
 29376   01113C  0009               	tblrd		*+
 29377   01113E  C4F5 F577          	movff	tablat,___flsub@b+2
 29378   011142  000A               	tblrd		*-
 29379   011144  C4F5 F578          	movff	tablat,___flsub@b+3
 29380   011148  C5C7  F579         	movff	_atanf$4455,___flsub@a
 29381   01114C  C5C8  F57A         	movff	_atanf$4455+1,___flsub@a+1
 29382   011150  C5C9  F57B         	movff	_atanf$4455+2,___flsub@a+2
 29383   011154  C5CA  F57C         	movff	_atanf$4455+3,___flsub@a+3
 29384   011158  ECBF  F0B0         	call	___flsub	;wreg free
 29385   01115C  C575  F5E1         	movff	?___flsub,atanf@z
 29386   011160  C576  F5E2         	movff	?___flsub+1,atanf@z+1
 29387   011164  C577  F5E3         	movff	?___flsub+2,atanf@z+2
 29388   011168  C578  F5E4         	movff	?___flsub+3,atanf@z+3
 29389   01116C  0105               	movlb	5	; () banked
 29390   01116E  51DB               	movf	atanf@sign& (0+255),w,b
 29391   011170  A4D8               	btfss	status,2,c
 29392   011172  EFBD  F088         	goto	u9501
 29393   011176  EFBF  F088         	goto	u9500
 29394   01117A                     u9501:
 29395   01117A  EF72  F085         	goto	l10209
 29396   01117E                     u9500:
 29397   01117E  EF68  F085         	goto	l10207
 29398   011182                     l2413:
 29399   011182  0012               	return		;funcret
 29400   011184                     __end_of_atanf:
 29401                           	callstack 0
 29402                           
 29403 ;; *************** function ___fpclassifyf *****************
 29404 ;; Defined at:
 29405 ;;		line 4 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/__fpclassifyf.c"
 29406 ;; Parameters:    Size  Location     Type
 29407 ;;  x               4   16[COMRAM] float 
 29408 ;; Auto vars:     Size  Location     Type
 29409 ;;  u               4   26[COMRAM] struct .
 29410 ;;  e               2   24[COMRAM] int 
 29411 ;; Return value:  Size  Location     Type
 29412 ;;                  2   16[COMRAM] int 
 29413 ;; Registers used:
 29414 ;;		wreg, status,2, status,0
 29415 ;; Tracked objects:
 29416 ;;		On entry : 0/0
 29417 ;;		On exit  : 0/0
 29418 ;;		Unchanged: 0/0
 29419 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29421 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29423 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29424 ;;Total ram usage:       14 bytes
 29425 ;; Hardware stack levels used: 1
 29426 ;; Hardware stack levels required when called: 4
 29427 ;; This function calls:
 29428 ;;		Nothing
 29429 ;; This function is called by:
 29430 ;;		_atan2f
 29431 ;;		_atanf
 29432 ;;		_efgtoa
 29433 ;; This function uses a non-reentrant model
 29434 ;;
 29435                           
 29436                           	psect	text74
 29437   014D50                     __ptext74:
 29438                           	callstack 0
 29439   014D50                     ___fpclassifyf:
 29440                           	callstack 118
 29441   014D50  C699  F51B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 29442   014D54  C69A  F51C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 29443   014D58  C69B  F51D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 29444   014D5C  C69C  F51E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 29445   014D60  C511  F51B         	movff	___fpclassifyf@x,___fpclassifyf@u
 29446   014D64  C512  F51C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 29447   014D68  C513  F51D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 29448   014D6C  C514  F51E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 29449   014D70  C51B  F515         	movff	___fpclassifyf@u,??___fpclassifyf
 29450   014D74  C51C  F516         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 29451   014D78  C51D  F517         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 29452   014D7C  C51E  F518         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 29453   014D80  0E18               	movlw	24
 29454   014D82  EFC8  F0A6         	goto	u5430
 29455   014D86                     u5435:
 29456   014D86  90D8               	bcf	status,0,c
 29457   014D88  3218               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 29458   014D8A  3217               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 29459   014D8C  3216               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 29460   014D8E  3215               	rrcf	??___fpclassifyf^(0+1280),f,c
 29461   014D90                     u5430:
 29462   014D90  2EE8               	decfsz	wreg,f,c
 29463   014D92  EFC3  F0A6         	goto	u5435
 29464   014D96  5015               	movf	??___fpclassifyf^(0+1280),w,c
 29465   014D98  6E19               	movwf	___fpclassifyf@e^(0+1280),c
 29466   014D9A  6A1A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 29467   014D9C  5019               	movf	___fpclassifyf@e^(0+1280),w,c
 29468   014D9E  101A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 29469   014DA0  A4D8               	btfss	status,2,c
 29470   014DA2  EFD5  F0A6         	goto	u5441
 29471   014DA6  EFD7  F0A6         	goto	u5440
 29472   014DAA                     u5441:
 29473   014DAA  EFF7  F0A6         	goto	l6985
 29474   014DAE                     u5440:
 29475   014DAE  90D8               	bcf	status,0,c
 29476   014DB0  341B               	rlcf	___fpclassifyf@u^(0+1280),w,c
 29477   014DB2  6E15               	movwf	??___fpclassifyf^(0+1280),c
 29478   014DB4  341C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 29479   014DB6  6E16               	movwf	(??___fpclassifyf+1)^(0+1280),c
 29480   014DB8  341D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 29481   014DBA  6E17               	movwf	(??___fpclassifyf+2)^(0+1280),c
 29482   014DBC  341E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 29483   014DBE  6E18               	movwf	(??___fpclassifyf+3)^(0+1280),c
 29484   014DC0  5015               	movf	??___fpclassifyf^(0+1280),w,c
 29485   014DC2  1016               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 29486   014DC4  1017               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 29487   014DC6  1018               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 29488   014DC8  A4D8               	btfss	status,2,c
 29489   014DCA  EFE9  F0A6         	goto	u5451
 29490   014DCE  EFEB  F0A6         	goto	u5450
 29491   014DD2                     u5451:
 29492   014DD2  EFF1  F0A6         	goto	l6981
 29493   014DD6                     u5450:
 29494   014DD6  0E00               	movlw	0
 29495   014DD8  6E12               	movwf	(?___fpclassifyf+1)^(0+1280),c
 29496   014DDA  0E02               	movlw	2
 29497   014DDC  6E11               	movwf	?___fpclassifyf^(0+1280),c
 29498   014DDE  EF26  F0A7         	goto	l2389
 29499   014DE2                     l6981:
 29500   014DE2  0E00               	movlw	0
 29501   014DE4  6E12               	movwf	(?___fpclassifyf+1)^(0+1280),c
 29502   014DE6  0E03               	movlw	3
 29503   014DE8  6E11               	movwf	?___fpclassifyf^(0+1280),c
 29504   014DEA  EF26  F0A7         	goto	l2389
 29505   014DEE                     l6985:
 29506   014DEE  2819               	incf	___fpclassifyf@e^(0+1280),w,c
 29507   014DF0  101A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 29508   014DF2  A4D8               	btfss	status,2,c
 29509   014DF4  EFFE  F0A6         	goto	u5461
 29510   014DF8  EF00  F0A7         	goto	u5460
 29511   014DFC                     u5461:
 29512   014DFC  EF22  F0A7         	goto	l6991
 29513   014E00                     u5460:
 29514   014E00  C51B  F515         	movff	___fpclassifyf@u,??___fpclassifyf
 29515   014E04  C51C  F516         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 29516   014E08  C51D  F517         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 29517   014E0C  C51E  F518         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 29518   014E10  0E09               	movlw	9
 29519   014E12                     u5475:
 29520   014E12  90D8               	bcf	status,0,c
 29521   014E14  3615               	rlcf	??___fpclassifyf^(0+1280),f,c
 29522   014E16  3616               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 29523   014E18  3617               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 29524   014E1A  3618               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 29525   014E1C  2EE8               	decfsz	wreg,f,c
 29526   014E1E  EF09  F0A7         	goto	u5475
 29527   014E22  5015               	movf	??___fpclassifyf^(0+1280),w,c
 29528   014E24  1016               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 29529   014E26  1017               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 29530   014E28  1018               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 29531   014E2A  B4D8               	btfsc	status,2,c
 29532   014E2C  EF1A  F0A7         	goto	u5481
 29533   014E30  EF1D  F0A7         	goto	u5480
 29534   014E34                     u5481:
 29535   014E34  0E01               	movlw	1
 29536   014E36  EF1E  F0A7         	goto	u5490
 29537   014E3A                     u5480:
 29538   014E3A  0E00               	movlw	0
 29539   014E3C                     u5490:
 29540   014E3C  6E11               	movwf	?___fpclassifyf^(0+1280),c
 29541   014E3E  6A12               	clrf	(?___fpclassifyf+1)^(0+1280),c
 29542   014E40  EF26  F0A7         	goto	l2389
 29543   014E44                     l6991:
 29544   014E44  0E00               	movlw	0
 29545   014E46  6E12               	movwf	(?___fpclassifyf+1)^(0+1280),c
 29546   014E48  0E04               	movlw	4
 29547   014E4A  6E11               	movwf	?___fpclassifyf^(0+1280),c
 29548   014E4C                     l2389:
 29549   014E4C  0012               	return		;funcret
 29550   014E4E                     __end_of___fpclassifyf:
 29551                           	callstack 0
 29552                           
 29553 ;; *************** function ___flneg *****************
 29554 ;; Defined at:
 29555 ;;		line 15 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/flneg.c"
 29556 ;; Parameters:    Size  Location     Type
 29557 ;;  f1              4   16[COMRAM] int 
 29558 ;; Auto vars:     Size  Location     Type
 29559 ;;		None
 29560 ;; Return value:  Size  Location     Type
 29561 ;;                  4   16[COMRAM] int 
 29562 ;; Registers used:
 29563 ;;		wreg, status,2, status,0
 29564 ;; Tracked objects:
 29565 ;;		On entry : 0/0
 29566 ;;		On exit  : 0/0
 29567 ;;		Unchanged: 0/0
 29568 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29573 ;;Total ram usage:        4 bytes
 29574 ;; Hardware stack levels used: 1
 29575 ;; Hardware stack levels required when called: 4
 29576 ;; This function calls:
 29577 ;;		Nothing
 29578 ;; This function is called by:
 29579 ;;		_MPU6050_GetMovement
 29580 ;;		_atan2f
 29581 ;;		_atanf
 29582 ;;		_efgtoa
 29583 ;; This function uses a non-reentrant model
 29584 ;;
 29585                           
 29586                           	psect	text75
 29587   0163AC                     __ptext75:
 29588                           	callstack 0
 29589   0163AC                     ___flneg:
 29590                           	callstack 118
 29591   0163AC  5011               	movf	___flneg@f1^(0+1280),w,c
 29592   0163AE  1012               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 29593   0163B0  1013               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 29594   0163B2  1014               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 29595   0163B4  B4D8               	btfsc	status,2,c
 29596   0163B6  EFDF  F0B1         	goto	u5351
 29597   0163BA  EFE1  F0B1         	goto	u5350
 29598   0163BE                     u5351:
 29599   0163BE  EFE9  F0B1         	goto	l6925
 29600   0163C2                     u5350:
 29601   0163C2  0E00               	movlw	0
 29602   0163C4  1A11               	xorwf	___flneg@f1^(0+1280),f,c
 29603   0163C6  0E00               	movlw	0
 29604   0163C8  1A12               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 29605   0163CA  0E00               	movlw	0
 29606   0163CC  1A13               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 29607   0163CE  0E80               	movlw	128
 29608   0163D0  1A14               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 29609   0163D2                     l6925:
 29610   0163D2  C511  F511         	movff	___flneg@f1,?___flneg
 29611   0163D6  C512  F512         	movff	___flneg@f1+1,?___flneg+1
 29612   0163DA  C513  F513         	movff	___flneg@f1+2,?___flneg+2
 29613   0163DE  C514  F514         	movff	___flneg@f1+3,?___flneg+3
 29614   0163E2  0012               	return		;funcret
 29615   0163E4                     __end_of___flneg:
 29616                           	callstack 0
 29617                           
 29618 ;; *************** function _DetectAdvancedGestures *****************
 29619 ;; Defined at:
 29620 ;;		line 181 in file "I2C_MPU6050.c"
 29621 ;; Parameters:    Size  Location     Type
 29622 ;;  data            2   91[BANK5 ] PTR struct .
 29623 ;;		 -> mpu_data(28), 
 29624 ;; Auto vars:     Size  Location     Type
 29625 ;;  abs_az          4  105[BANK5 ] float 
 29626 ;;  abs_ay          4  101[BANK5 ] float 
 29627 ;;  abs_ax          4   97[BANK5 ] float 
 29628 ;; Return value:  Size  Location     Type
 29629 ;;                  1    wreg      enum E17804
 29630 ;; Registers used:
 29631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29632 ;; Tracked objects:
 29633 ;;		On entry : 0/0
 29634 ;;		On exit  : 0/0
 29635 ;;		Unchanged: 0/0
 29636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29638 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29640 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29641 ;;Total ram usage:       18 bytes
 29642 ;; Hardware stack levels used: 1
 29643 ;; Hardware stack levels required when called: 5
 29644 ;; This function calls:
 29645 ;;		___fladd
 29646 ;;		___flge
 29647 ;;		_fabsf
 29648 ;; This function is called by:
 29649 ;;		_MPU6050_GetMovement
 29650 ;; This function uses a non-reentrant model
 29651 ;;
 29652                           
 29653                           	psect	text76
 29654   01400E                     __ptext76:
 29655                           	callstack 0
 29656   01400E                     _DetectAdvancedGestures:
 29657                           	callstack 120
 29658   01400E                     
 29659                           ;I2C_MPU6050.c: 182:     float abs_ax = fabsf(data->accel.x);
 29660   01400E  C5BB  F4D9         	movff	DetectAdvancedGestures@data,fsr2l
 29661   014012  C5BC  F4DA         	movff	DetectAdvancedGestures@data+1,fsr2h
 29662   014016  C4DE F5B3          	movff	postinc2,fabsf@x
 29663   01401A  C4DE F5B4          	movff	postinc2,fabsf@x+1
 29664   01401E  C4DE F5B5          	movff	postinc2,fabsf@x+2
 29665   014022  C4DE F5B6          	movff	postinc2,fabsf@x+3
 29666   014026  ECF2  F0B1         	call	_fabsf	;wreg free
 29667   01402A  C5B3  F5C1         	movff	?_fabsf,DetectAdvancedGestures@abs_ax
 29668   01402E  C5B4  F5C2         	movff	?_fabsf+1,DetectAdvancedGestures@abs_ax+1
 29669   014032  C5B5  F5C3         	movff	?_fabsf+2,DetectAdvancedGestures@abs_ax+2
 29670   014036  C5B6  F5C4         	movff	?_fabsf+3,DetectAdvancedGestures@abs_ax+3
 29671   01403A                     
 29672                           ;I2C_MPU6050.c: 183:     float abs_ay = fabsf(data->accel.y);
 29673   01403A  0105               	movlb	5	; () banked
 29674   01403C  EE20 F004          	lfsr	2,4
 29675   014040  51BB               	movf	DetectAdvancedGestures@data& (0+255),w,b
 29676   014042  26D9               	addwf	fsr2l,f,c
 29677   014044  51BC               	movf	(DetectAdvancedGestures@data+1)& (0+255),w,b
 29678   014046  22DA               	addwfc	fsr2h,f,c
 29679   014048  C4DE F5B3          	movff	postinc2,fabsf@x
 29680   01404C  C4DE F5B4          	movff	postinc2,fabsf@x+1
 29681   014050  C4DE F5B5          	movff	postinc2,fabsf@x+2
 29682   014054  C4DE F5B6          	movff	postinc2,fabsf@x+3
 29683   014058  ECF2  F0B1         	call	_fabsf	;wreg free
 29684   01405C  C5B3  F5C5         	movff	?_fabsf,DetectAdvancedGestures@abs_ay
 29685   014060  C5B4  F5C6         	movff	?_fabsf+1,DetectAdvancedGestures@abs_ay+1
 29686   014064  C5B5  F5C7         	movff	?_fabsf+2,DetectAdvancedGestures@abs_ay+2
 29687   014068  C5B6  F5C8         	movff	?_fabsf+3,DetectAdvancedGestures@abs_ay+3
 29688   01406C                     
 29689                           ;I2C_MPU6050.c: 184:     float abs_az = fabsf(data->accel.z);
 29690   01406C  0105               	movlb	5	; () banked
 29691   01406E  EE20 F008          	lfsr	2,8
 29692   014072  51BB               	movf	DetectAdvancedGestures@data& (0+255),w,b
 29693   014074  26D9               	addwf	fsr2l,f,c
 29694   014076  51BC               	movf	(DetectAdvancedGestures@data+1)& (0+255),w,b
 29695   014078  22DA               	addwfc	fsr2h,f,c
 29696   01407A  C4DE F5B3          	movff	postinc2,fabsf@x
 29697   01407E  C4DE F5B4          	movff	postinc2,fabsf@x+1
 29698   014082  C4DE F5B5          	movff	postinc2,fabsf@x+2
 29699   014086  C4DE F5B6          	movff	postinc2,fabsf@x+3
 29700   01408A  ECF2  F0B1         	call	_fabsf	;wreg free
 29701   01408E  C5B3  F5C9         	movff	?_fabsf,DetectAdvancedGestures@abs_az
 29702   014092  C5B4  F5CA         	movff	?_fabsf+1,DetectAdvancedGestures@abs_az+1
 29703   014096  C5B5  F5CB         	movff	?_fabsf+2,DetectAdvancedGestures@abs_az+2
 29704   01409A  C5B6  F5CC         	movff	?_fabsf+3,DetectAdvancedGestures@abs_az+3
 29705   01409E                     
 29706                           ;I2C_MPU6050.c: 188:     if ((abs_ax > 1.5f) ||
 29707   01409E  0E00               	movlw	0
 29708   0140A0  0105               	movlb	5	; () banked
 29709   0140A2  6F75               	movwf	___flge@ff1& (0+255),b
 29710   0140A4  0E00               	movlw	0
 29711   0140A6  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 29712   0140A8  0EC0               	movlw	192
 29713   0140AA  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 29714   0140AC  0E3F               	movlw	63
 29715   0140AE  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 29716   0140B0  C5C1  F579         	movff	DetectAdvancedGestures@abs_ax,___flge@ff2
 29717   0140B4  C5C2  F57A         	movff	DetectAdvancedGestures@abs_ax+1,___flge@ff2+1
 29718   0140B8  C5C3  F57B         	movff	DetectAdvancedGestures@abs_ax+2,___flge@ff2+2
 29719   0140BC  C5C4  F57C         	movff	DetectAdvancedGestures@abs_ax+3,___flge@ff2+3
 29720   0140C0  EC25  F0A6         	call	___flge	;wreg free
 29721   0140C4  0105               	movlb	5	; () banked
 29722   0140C6  A0D8               	btfss	status,0,c
 29723   0140C8  EF68  F0A0         	goto	u9541
 29724   0140CC  EF6A  F0A0         	goto	u9540
 29725   0140D0                     u9541:
 29726   0140D0  EF9E  F0A0         	goto	l10349
 29727   0140D4                     u9540:
 29728   0140D4                     
 29729                           ; BSR set to: 5
 29730   0140D4  0E00               	movlw	0
 29731   0140D6  6F75               	movwf	___flge@ff1& (0+255),b
 29732   0140D8  0E00               	movlw	0
 29733   0140DA  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 29734   0140DC  0EC0               	movlw	192
 29735   0140DE  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 29736   0140E0  0E3F               	movlw	63
 29737   0140E2  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 29738   0140E4  C5C5  F579         	movff	DetectAdvancedGestures@abs_ay,___flge@ff2
 29739   0140E8  C5C6  F57A         	movff	DetectAdvancedGestures@abs_ay+1,___flge@ff2+1
 29740   0140EC  C5C7  F57B         	movff	DetectAdvancedGestures@abs_ay+2,___flge@ff2+2
 29741   0140F0  C5C8  F57C         	movff	DetectAdvancedGestures@abs_ay+3,___flge@ff2+3
 29742   0140F4  EC25  F0A6         	call	___flge	;wreg free
 29743   0140F8  0105               	movlb	5	; () banked
 29744   0140FA  A0D8               	btfss	status,0,c
 29745   0140FC  EF82  F0A0         	goto	u9551
 29746   014100  EF84  F0A0         	goto	u9550
 29747   014104                     u9551:
 29748   014104  EF9E  F0A0         	goto	l10349
 29749   014108                     u9550:
 29750   014108                     
 29751                           ; BSR set to: 5
 29752   014108  0E00               	movlw	0
 29753   01410A  6F75               	movwf	___flge@ff1& (0+255),b
 29754   01410C  0E00               	movlw	0
 29755   01410E  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 29756   014110  0EC0               	movlw	192
 29757   014112  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 29758   014114  0E3F               	movlw	63
 29759   014116  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 29760   014118  C5C9  F579         	movff	DetectAdvancedGestures@abs_az,___flge@ff2
 29761   01411C  C5CA  F57A         	movff	DetectAdvancedGestures@abs_az+1,___flge@ff2+1
 29762   014120  C5CB  F57B         	movff	DetectAdvancedGestures@abs_az+2,___flge@ff2+2
 29763   014124  C5CC  F57C         	movff	DetectAdvancedGestures@abs_az+3,___flge@ff2+3
 29764   014128  EC25  F0A6         	call	___flge	;wreg free
 29765   01412C  0105               	movlb	5	; () banked
 29766   01412E  B0D8               	btfsc	status,0,c
 29767   014130  EF9C  F0A0         	goto	u9561
 29768   014134  EF9E  F0A0         	goto	u9560
 29769   014138                     u9561:
 29770   014138  EFA1  F0A0         	goto	l10353
 29771   01413C                     u9560:
 29772   01413C                     l10349:
 29773                           
 29774                           ; BSR set to: 5
 29775                           ;I2C_MPU6050.c: 190:         (abs_az > 1.5f)) {;I2C_MPU6050.c: 191:         return MOVEM
      +                          ENT_SHAKE;
 29776   01413C  0E09               	movlw	9
 29777   01413E  EFEC  F0A0         	goto	l1275
 29778   014142                     l10353:
 29779                           
 29780                           ; BSR set to: 5
 29781                           ;I2C_MPU6050.c: 197:     if ((abs_ax + abs_ay + abs_az) > 3.0f) {
 29782   014142  C5C5  F571         	movff	DetectAdvancedGestures@abs_ay,___fladd@a
 29783   014146  C5C6  F572         	movff	DetectAdvancedGestures@abs_ay+1,___fladd@a+1
 29784   01414A  C5C7  F573         	movff	DetectAdvancedGestures@abs_ay+2,___fladd@a+2
 29785   01414E  C5C8  F574         	movff	DetectAdvancedGestures@abs_ay+3,___fladd@a+3
 29786   014152  C5C1  F56D         	movff	DetectAdvancedGestures@abs_ax,___fladd@b
 29787   014156  C5C2  F56E         	movff	DetectAdvancedGestures@abs_ax+1,___fladd@b+1
 29788   01415A  C5C3  F56F         	movff	DetectAdvancedGestures@abs_ax+2,___fladd@b+2
 29789   01415E  C5C4  F570         	movff	DetectAdvancedGestures@abs_ax+3,___fladd@b+3
 29790   014162  EC18  F08F         	call	___fladd	;wreg free
 29791   014166  C56D  F5BD         	movff	?___fladd,_DetectAdvancedGestures$4443
 29792   01416A  C56E  F5BE         	movff	?___fladd+1,_DetectAdvancedGestures$4443+1
 29793   01416E  C56F  F5BF         	movff	?___fladd+2,_DetectAdvancedGestures$4443+2
 29794   014172  C570  F5C0         	movff	?___fladd+3,_DetectAdvancedGestures$4443+3
 29795                           
 29796                           ;I2C_MPU6050.c: 197:     if ((abs_ax + abs_ay + abs_az) > 3.0f) {
 29797   014176  0E00               	movlw	0
 29798   014178  0105               	movlb	5	; () banked
 29799   01417A  6F75               	movwf	___flge@ff1& (0+255),b
 29800   01417C  0E00               	movlw	0
 29801   01417E  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 29802   014180  0E40               	movlw	64
 29803   014182  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 29804   014184  0E40               	movlw	64
 29805   014186  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 29806   014188  C5C9  F571         	movff	DetectAdvancedGestures@abs_az,___fladd@a
 29807   01418C  C5CA  F572         	movff	DetectAdvancedGestures@abs_az+1,___fladd@a+1
 29808   014190  C5CB  F573         	movff	DetectAdvancedGestures@abs_az+2,___fladd@a+2
 29809   014194  C5CC  F574         	movff	DetectAdvancedGestures@abs_az+3,___fladd@a+3
 29810   014198  C5BD  F56D         	movff	_DetectAdvancedGestures$4443,___fladd@b
 29811   01419C  C5BE  F56E         	movff	_DetectAdvancedGestures$4443+1,___fladd@b+1
 29812   0141A0  C5BF  F56F         	movff	_DetectAdvancedGestures$4443+2,___fladd@b+2
 29813   0141A4  C5C0  F570         	movff	_DetectAdvancedGestures$4443+3,___fladd@b+3
 29814   0141A8  EC18  F08F         	call	___fladd	;wreg free
 29815   0141AC  C56D  F579         	movff	?___fladd,___flge@ff2
 29816   0141B0  C56E  F57A         	movff	?___fladd+1,___flge@ff2+1
 29817   0141B4  C56F  F57B         	movff	?___fladd+2,___flge@ff2+2
 29818   0141B8  C570  F57C         	movff	?___fladd+3,___flge@ff2+3
 29819   0141BC  EC25  F0A6         	call	___flge	;wreg free
 29820   0141C0  0105               	movlb	5	; () banked
 29821   0141C2  B0D8               	btfsc	status,0,c
 29822   0141C4  EFE6  F0A0         	goto	u9571
 29823   0141C8  EFE8  F0A0         	goto	u9570
 29824   0141CC                     u9571:
 29825   0141CC  EFEB  F0A0         	goto	l10359
 29826   0141D0                     u9570:
 29827   0141D0                     
 29828                           ; BSR set to: 5
 29829                           ;I2C_MPU6050.c: 198:         return MOVEMENT_TAP;
 29830   0141D0  0E0A               	movlw	10
 29831   0141D2  EFEC  F0A0         	goto	l1275
 29832   0141D6                     l10359:
 29833                           
 29834                           ; BSR set to: 5
 29835                           ;I2C_MPU6050.c: 202:     return MOVEMENT_NONE;
 29836   0141D6  0E00               	movlw	0
 29837   0141D8                     l1275:
 29838                           
 29839                           ; BSR set to: 5
 29840   0141D8  0012               	return		;funcret
 29841   0141DA                     __end_of_DetectAdvancedGestures:
 29842                           	callstack 0
 29843                           
 29844 ;; *************** function _fabsf *****************
 29845 ;; Defined at:
 29846 ;;		line 4 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/fabsf.c"
 29847 ;; Parameters:    Size  Location     Type
 29848 ;;  x               4   83[BANK5 ] float 
 29849 ;; Auto vars:     Size  Location     Type
 29850 ;;  u               4   87[BANK5 ] struct .
 29851 ;; Return value:  Size  Location     Type
 29852 ;;                  4   83[BANK5 ] float 
 29853 ;; Registers used:
 29854 ;;		status,2, status,0
 29855 ;; Tracked objects:
 29856 ;;		On entry : 0/0
 29857 ;;		On exit  : 0/0
 29858 ;;		Unchanged: 0/0
 29859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29864 ;;Total ram usage:        8 bytes
 29865 ;; Hardware stack levels used: 1
 29866 ;; Hardware stack levels required when called: 4
 29867 ;; This function calls:
 29868 ;;		Nothing
 29869 ;; This function is called by:
 29870 ;;		_DetectAdvancedGestures
 29871 ;;		_atan2f
 29872 ;;		_atanf
 29873 ;;		_CalculateConfidence
 29874 ;; This function uses a non-reentrant model
 29875 ;;
 29876                           
 29877                           	psect	text77
 29878   0163E4                     __ptext77:
 29879                           	callstack 0
 29880   0163E4                     _fabsf:
 29881                           	callstack 120
 29882   0163E4  C695  F5B7         	movff	fabsf@F465,fabsf@u
 29883   0163E8  C696  F5B8         	movff	fabsf@F465+1,fabsf@u+1
 29884   0163EC  C697  F5B9         	movff	fabsf@F465+2,fabsf@u+2
 29885   0163F0  C698  F5BA         	movff	fabsf@F465+3,fabsf@u+3
 29886   0163F4  C5B3  F5B7         	movff	fabsf@x,fabsf@u
 29887   0163F8  C5B4  F5B8         	movff	fabsf@x+1,fabsf@u+1
 29888   0163FC  C5B5  F5B9         	movff	fabsf@x+2,fabsf@u+2
 29889   016400  C5B6  F5BA         	movff	fabsf@x+3,fabsf@u+3
 29890   016404  0105               	movlb	5	; () banked
 29891   016406  9FBA               	bcf	(fabsf@u+3)& (0+255),7,b
 29892   016408                     
 29893                           ; BSR set to: 5
 29894   016408  C5B7  F5B3         	movff	fabsf@u,?_fabsf
 29895   01640C  C5B8  F5B4         	movff	fabsf@u+1,?_fabsf+1
 29896   016410  C5B9  F5B5         	movff	fabsf@u+2,?_fabsf+2
 29897   016414  C5BA  F5B6         	movff	fabsf@u+3,?_fabsf+3
 29898   016418                     
 29899                           ; BSR set to: 5
 29900   016418  0012               	return		;funcret
 29901   01641A                     __end_of_fabsf:
 29902                           	callstack 0
 29903                           
 29904 ;; *************** function ___flge *****************
 29905 ;; Defined at:
 29906 ;;		line 4 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/flge.c"
 29907 ;; Parameters:    Size  Location     Type
 29908 ;;  ff1             4   21[BANK5 ] float 
 29909 ;;  ff2             4   25[BANK5 ] float 
 29910 ;; Auto vars:     Size  Location     Type
 29911 ;;		None
 29912 ;; Return value:  Size  Location     Type
 29913 ;;		None               void
 29914 ;; Registers used:
 29915 ;;		wreg, status,2, status,0
 29916 ;; Tracked objects:
 29917 ;;		On entry : 0/0
 29918 ;;		On exit  : 0/0
 29919 ;;		Unchanged: 0/0
 29920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 29921 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29923 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29924 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29925 ;;Total ram usage:       12 bytes
 29926 ;; Hardware stack levels used: 1
 29927 ;; Hardware stack levels required when called: 4
 29928 ;; This function calls:
 29929 ;;		Nothing
 29930 ;; This function is called by:
 29931 ;;		_main
 29932 ;;		_DetectAdvancedGestures
 29933 ;;		_MPU6050_GetMovement
 29934 ;;		_efgtoa
 29935 ;;		_CalculateConfidence
 29936 ;; This function uses a non-reentrant model
 29937 ;;
 29938                           
 29939                           	psect	text78
 29940   014C4A                     __ptext78:
 29941                           	callstack 0
 29942   014C4A                     ___flge:
 29943                           	callstack 118
 29944   014C4A  0E00               	movlw	0
 29945   014C4C  0105               	movlb	5	; () banked
 29946   014C4E  1575               	andwf	___flge@ff1& (0+255),w,b
 29947   014C50  6F7D               	movwf	??___flge& (0+255),b
 29948   014C52  0E00               	movlw	0
 29949   014C54  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
 29950   014C56  6F7E               	movwf	(??___flge+1)& (0+255),b
 29951   014C58  0E80               	movlw	128
 29952   014C5A  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
 29953   014C5C  6F7F               	movwf	(??___flge+2)& (0+255),b
 29954   014C5E  0E7F               	movlw	127
 29955   014C60  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
 29956   014C62  6F80               	movwf	(??___flge+3)& (0+255),b
 29957   014C64  517D               	movf	??___flge& (0+255),w,b
 29958   014C66  117E               	iorwf	(??___flge+1)& (0+255),w,b
 29959   014C68  117F               	iorwf	(??___flge+2)& (0+255),w,b
 29960   014C6A  1180               	iorwf	(??___flge+3)& (0+255),w,b
 29961   014C6C  A4D8               	btfss	status,2,c
 29962   014C6E  EF3B  F0A6         	goto	u5301
 29963   014C72  EF3D  F0A6         	goto	u5300
 29964   014C76                     u5301:
 29965   014C76  EF45  F0A6         	goto	l6903
 29966   014C7A                     u5300:
 29967   014C7A                     
 29968                           ; BSR set to: 5
 29969   014C7A  0E00               	movlw	0
 29970   014C7C  6F75               	movwf	___flge@ff1& (0+255),b
 29971   014C7E  0E00               	movlw	0
 29972   014C80  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 29973   014C82  0E00               	movlw	0
 29974   014C84  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 29975   014C86  0E00               	movlw	0
 29976   014C88  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 29977   014C8A                     l6903:
 29978                           
 29979                           ; BSR set to: 5
 29980   014C8A  0E00               	movlw	0
 29981   014C8C  1579               	andwf	___flge@ff2& (0+255),w,b
 29982   014C8E  6F7D               	movwf	??___flge& (0+255),b
 29983   014C90  0E00               	movlw	0
 29984   014C92  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
 29985   014C94  6F7E               	movwf	(??___flge+1)& (0+255),b
 29986   014C96  0E80               	movlw	128
 29987   014C98  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
 29988   014C9A  6F7F               	movwf	(??___flge+2)& (0+255),b
 29989   014C9C  0E7F               	movlw	127
 29990   014C9E  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
 29991   014CA0  6F80               	movwf	(??___flge+3)& (0+255),b
 29992   014CA2  517D               	movf	??___flge& (0+255),w,b
 29993   014CA4  117E               	iorwf	(??___flge+1)& (0+255),w,b
 29994   014CA6  117F               	iorwf	(??___flge+2)& (0+255),w,b
 29995   014CA8  1180               	iorwf	(??___flge+3)& (0+255),w,b
 29996   014CAA  A4D8               	btfss	status,2,c
 29997   014CAC  EF5A  F0A6         	goto	u5311
 29998   014CB0  EF5C  F0A6         	goto	u5310
 29999   014CB4                     u5311:
 30000   014CB4  EF64  F0A6         	goto	l6907
 30001   014CB8                     u5310:
 30002   014CB8                     
 30003                           ; BSR set to: 5
 30004   014CB8  0E00               	movlw	0
 30005   014CBA  6F79               	movwf	___flge@ff2& (0+255),b
 30006   014CBC  0E00               	movlw	0
 30007   014CBE  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 30008   014CC0  0E00               	movlw	0
 30009   014CC2  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 30010   014CC4  0E00               	movlw	0
 30011   014CC6  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 30012   014CC8                     l6907:
 30013                           
 30014                           ; BSR set to: 5
 30015   014CC8  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
 30016   014CCA  EF69  F0A6         	goto	u5321
 30017   014CCE  EF6B  F0A6         	goto	u5320
 30018   014CD2                     u5321:
 30019   014CD2  EF74  F0A6         	goto	l6911
 30020   014CD6                     u5320:
 30021   014CD6                     
 30022                           ; BSR set to: 5
 30023   014CD6  6D75               	negf	___flge@ff1& (0+255),b
 30024   014CD8  1F76               	comf	(___flge@ff1+1)& (0+255),f,b
 30025   014CDA  B0D8               	btfsc	status,0,c
 30026   014CDC  2B76               	incf	(___flge@ff1+1)& (0+255),f,b
 30027   014CDE  1F77               	comf	(___flge@ff1+2)& (0+255),f,b
 30028   014CE0  B0D8               	btfsc	status,0,c
 30029   014CE2  2B77               	incf	(___flge@ff1+2)& (0+255),f,b
 30030   014CE4  0E80               	movlw	128
 30031   014CE6  5778               	subfwb	(___flge@ff1+3)& (0+255),f,b
 30032   014CE8                     l6911:
 30033                           
 30034                           ; BSR set to: 5
 30035   014CE8  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
 30036   014CEA  EF79  F0A6         	goto	u5331
 30037   014CEE  EF7B  F0A6         	goto	u5330
 30038   014CF2                     u5331:
 30039   014CF2  EF84  F0A6         	goto	l1914
 30040   014CF6                     u5330:
 30041   014CF6                     
 30042                           ; BSR set to: 5
 30043   014CF6  6D79               	negf	___flge@ff2& (0+255),b
 30044   014CF8  1F7A               	comf	(___flge@ff2+1)& (0+255),f,b
 30045   014CFA  B0D8               	btfsc	status,0,c
 30046   014CFC  2B7A               	incf	(___flge@ff2+1)& (0+255),f,b
 30047   014CFE  1F7B               	comf	(___flge@ff2+2)& (0+255),f,b
 30048   014D00  B0D8               	btfsc	status,0,c
 30049   014D02  2B7B               	incf	(___flge@ff2+2)& (0+255),f,b
 30050   014D04  0E80               	movlw	128
 30051   014D06  577C               	subfwb	(___flge@ff2+3)& (0+255),f,b
 30052   014D08                     l1914:
 30053                           
 30054                           ; BSR set to: 5
 30055   014D08  0E00               	movlw	0
 30056   014D0A  1B75               	xorwf	___flge@ff1& (0+255),f,b
 30057   014D0C  0E00               	movlw	0
 30058   014D0E  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
 30059   014D10  0E00               	movlw	0
 30060   014D12  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
 30061   014D14  0E80               	movlw	128
 30062   014D16  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
 30063   014D18  0E00               	movlw	0
 30064   014D1A  1B79               	xorwf	___flge@ff2& (0+255),f,b
 30065   014D1C  0E00               	movlw	0
 30066   014D1E  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
 30067   014D20  0E00               	movlw	0
 30068   014D22  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
 30069   014D24  0E80               	movlw	128
 30070   014D26  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
 30071   014D28  5179               	movf	___flge@ff2& (0+255),w,b
 30072   014D2A  5D75               	subwf	___flge@ff1& (0+255),w,b
 30073   014D2C  517A               	movf	(___flge@ff2+1)& (0+255),w,b
 30074   014D2E  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
 30075   014D30  517B               	movf	(___flge@ff2+2)& (0+255),w,b
 30076   014D32  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
 30077   014D34  517C               	movf	(___flge@ff2+3)& (0+255),w,b
 30078   014D36  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
 30079   014D38  B0D8               	btfsc	status,0,c
 30080   014D3A  EFA1  F0A6         	goto	u5341
 30081   014D3E  EFA3  F0A6         	goto	u5340
 30082   014D42                     u5341:
 30083   014D42  EFA6  F0A6         	goto	l6917
 30084   014D46                     u5340:
 30085   014D46                     
 30086                           ; BSR set to: 5
 30087   014D46  90D8               	bcf	status,0,c
 30088   014D48  EFA7  F0A6         	goto	l1919
 30089   014D4C                     l6917:
 30090                           
 30091                           ; BSR set to: 5
 30092   014D4C  80D8               	bsf	status,0,c
 30093   014D4E                     l1919:
 30094                           
 30095                           ; BSR set to: 5
 30096   014D4E  0012               	return		;funcret
 30097   014D50                     __end_of___flge:
 30098                           	callstack 0
 30099                           
 30100 ;; *************** function _MPU6050_Calibrate *****************
 30101 ;; Defined at:
 30102 ;;		line 305 in file "I2C_MPU6050.c"
 30103 ;; Parameters:    Size  Location     Type
 30104 ;;		None
 30105 ;; Auto vars:     Size  Location     Type
 30106 ;;  i               2  125[BANK5 ] unsigned short 
 30107 ;;  temp_gyroZ      4  109[BANK5 ] long 
 30108 ;;  temp_gyroY      4  105[BANK5 ] long 
 30109 ;;  temp_gyroX      4  101[BANK5 ] long 
 30110 ;;  temp_accelZ     4   97[BANK5 ] long 
 30111 ;;  temp_accelY     4   93[BANK5 ] long 
 30112 ;;  temp_accelX     4   89[BANK5 ] long 
 30113 ;;  gz              2  123[BANK5 ] short 
 30114 ;;  gy              2  121[BANK5 ] short 
 30115 ;;  gx              2  119[BANK5 ] short 
 30116 ;;  az              2  117[BANK5 ] short 
 30117 ;;  ay              2  115[BANK5 ] short 
 30118 ;;  ax              2  113[BANK5 ] short 
 30119 ;;  temp            2   87[BANK5 ] short 
 30120 ;; Return value:  Size  Location     Type
 30121 ;;                  1    wreg      void 
 30122 ;; Registers used:
 30123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30124 ;; Tracked objects:
 30125 ;;		On entry : 0/0
 30126 ;;		On exit  : 0/0
 30127 ;;		Unchanged: 0/0
 30128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30130 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30131 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30132 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30133 ;;Total ram usage:       44 bytes
 30134 ;; Hardware stack levels used: 1
 30135 ;; Hardware stack levels required when called: 8
 30136 ;; This function calls:
 30137 ;;		_MPU6050_ReadSensorRaw
 30138 ;;		___fldiv
 30139 ;;		___flsub
 30140 ;;		___xxtofl
 30141 ;; This function is called by:
 30142 ;;		_main
 30143 ;; This function uses a non-reentrant model
 30144 ;;
 30145                           
 30146                           	psect	text79
 30147   012F04                     __ptext79:
 30148                           	callstack 0
 30149   012F04                     _MPU6050_Calibrate:
 30150                           	callstack 118
 30151   012F04                     
 30152                           ;I2C_MPU6050.c: 308:     if (!mpu6050_initialized) return;
 30153   012F04  0105               	movlb	5	; () banked
 30154   012F06  51FE               	movf	_mpu6050_initialized& (0+255),w,b
 30155   012F08  A4D8               	btfss	status,2,c
 30156   012F0A  EF89  F097         	goto	u9911
 30157   012F0E  EF8B  F097         	goto	u9910
 30158   012F12                     u9911:
 30159   012F12  EF8D  F097         	goto	l10595
 30160   012F16                     u9910:
 30161   012F16  EF5B  F099         	goto	l1303
 30162   012F1A                     l10595:
 30163                           
 30164                           ; BSR set to: 5
 30165                           ;I2C_MPU6050.c: 310:     int32_t temp_accelX = 0, temp_accelY = 0, temp_accelZ = 0;
 30166   012F1A  0E00               	movlw	0
 30167   012F1C  6FB9               	movwf	MPU6050_Calibrate@temp_accelX& (0+255),b
 30168   012F1E  0E00               	movlw	0
 30169   012F20  6FBA               	movwf	(MPU6050_Calibrate@temp_accelX+1)& (0+255),b
 30170   012F22  0E00               	movlw	0
 30171   012F24  6FBB               	movwf	(MPU6050_Calibrate@temp_accelX+2)& (0+255),b
 30172   012F26  0E00               	movlw	0
 30173   012F28  6FBC               	movwf	(MPU6050_Calibrate@temp_accelX+3)& (0+255),b
 30174   012F2A  0E00               	movlw	0
 30175   012F2C  6FBD               	movwf	MPU6050_Calibrate@temp_accelY& (0+255),b
 30176   012F2E  0E00               	movlw	0
 30177   012F30  6FBE               	movwf	(MPU6050_Calibrate@temp_accelY+1)& (0+255),b
 30178   012F32  0E00               	movlw	0
 30179   012F34  6FBF               	movwf	(MPU6050_Calibrate@temp_accelY+2)& (0+255),b
 30180   012F36  0E00               	movlw	0
 30181   012F38  6FC0               	movwf	(MPU6050_Calibrate@temp_accelY+3)& (0+255),b
 30182   012F3A  0E00               	movlw	0
 30183   012F3C  6FC1               	movwf	MPU6050_Calibrate@temp_accelZ& (0+255),b
 30184   012F3E  0E00               	movlw	0
 30185   012F40  6FC2               	movwf	(MPU6050_Calibrate@temp_accelZ+1)& (0+255),b
 30186   012F42  0E00               	movlw	0
 30187   012F44  6FC3               	movwf	(MPU6050_Calibrate@temp_accelZ+2)& (0+255),b
 30188   012F46  0E00               	movlw	0
 30189   012F48  6FC4               	movwf	(MPU6050_Calibrate@temp_accelZ+3)& (0+255),b
 30190                           
 30191                           ;I2C_MPU6050.c: 311:     int32_t temp_gyroX = 0, temp_gyroY = 0, temp_gyroZ = 0;
 30192   012F4A  0E00               	movlw	0
 30193   012F4C  6FC5               	movwf	MPU6050_Calibrate@temp_gyroX& (0+255),b
 30194   012F4E  0E00               	movlw	0
 30195   012F50  6FC6               	movwf	(MPU6050_Calibrate@temp_gyroX+1)& (0+255),b
 30196   012F52  0E00               	movlw	0
 30197   012F54  6FC7               	movwf	(MPU6050_Calibrate@temp_gyroX+2)& (0+255),b
 30198   012F56  0E00               	movlw	0
 30199   012F58  6FC8               	movwf	(MPU6050_Calibrate@temp_gyroX+3)& (0+255),b
 30200   012F5A  0E00               	movlw	0
 30201   012F5C  6FC9               	movwf	MPU6050_Calibrate@temp_gyroY& (0+255),b
 30202   012F5E  0E00               	movlw	0
 30203   012F60  6FCA               	movwf	(MPU6050_Calibrate@temp_gyroY+1)& (0+255),b
 30204   012F62  0E00               	movlw	0
 30205   012F64  6FCB               	movwf	(MPU6050_Calibrate@temp_gyroY+2)& (0+255),b
 30206   012F66  0E00               	movlw	0
 30207   012F68  6FCC               	movwf	(MPU6050_Calibrate@temp_gyroY+3)& (0+255),b
 30208   012F6A  0E00               	movlw	0
 30209   012F6C  6FCD               	movwf	MPU6050_Calibrate@temp_gyroZ& (0+255),b
 30210   012F6E  0E00               	movlw	0
 30211   012F70  6FCE               	movwf	(MPU6050_Calibrate@temp_gyroZ+1)& (0+255),b
 30212   012F72  0E00               	movlw	0
 30213   012F74  6FCF               	movwf	(MPU6050_Calibrate@temp_gyroZ+2)& (0+255),b
 30214   012F76  0E00               	movlw	0
 30215   012F78  6FD0               	movwf	(MPU6050_Calibrate@temp_gyroZ+3)& (0+255),b
 30216                           
 30217                           ;I2C_MPU6050.c: 312:     int16_t ax, ay, az, gx, gy, gz, temp;;I2C_MPU6050.c: 321:     f
      +                          or (uint16_t i = 0; i < 100; i++) {
 30218   012F7A  0E00               	movlw	0
 30219   012F7C  6FDE               	movwf	(MPU6050_Calibrate@i+1)& (0+255),b
 30220   012F7E  0E00               	movlw	0
 30221   012F80  6FDD               	movwf	MPU6050_Calibrate@i& (0+255),b
 30222   012F82                     l10601:
 30223                           
 30224                           ; BSR set to: 5
 30225                           ;I2C_MPU6050.c: 322:         MPU6050_ReadSensorRaw(&ax, &ay, &az, &temp, &gx, &gy, &gz);
 30226   012F82  0ED1               	movlw	low MPU6050_Calibrate@ax
 30227   012F84  6E1D               	movwf	MPU6050_ReadSensorRaw@accelX^(0+1280),c
 30228   012F86  0E05               	movlw	high MPU6050_Calibrate@ax
 30229   012F88  6E1E               	movwf	(MPU6050_ReadSensorRaw@accelX+1)^(0+1280),c
 30230   012F8A  0ED3               	movlw	low MPU6050_Calibrate@ay
 30231   012F8C  6E1F               	movwf	MPU6050_ReadSensorRaw@accelY^(0+1280),c
 30232   012F8E  0E05               	movlw	high MPU6050_Calibrate@ay
 30233   012F90  6E20               	movwf	(MPU6050_ReadSensorRaw@accelY+1)^(0+1280),c
 30234   012F92  0ED5               	movlw	low MPU6050_Calibrate@az
 30235   012F94  6E21               	movwf	MPU6050_ReadSensorRaw@accelZ^(0+1280),c
 30236   012F96  0E05               	movlw	high MPU6050_Calibrate@az
 30237   012F98  6E22               	movwf	(MPU6050_ReadSensorRaw@accelZ+1)^(0+1280),c
 30238   012F9A  0EB7               	movlw	low MPU6050_Calibrate@temp
 30239   012F9C  6E23               	movwf	MPU6050_ReadSensorRaw@temp^(0+1280),c
 30240   012F9E  0E05               	movlw	high MPU6050_Calibrate@temp
 30241   012FA0  6E24               	movwf	(MPU6050_ReadSensorRaw@temp+1)^(0+1280),c
 30242   012FA2  0ED7               	movlw	low MPU6050_Calibrate@gx
 30243   012FA4  6E25               	movwf	MPU6050_ReadSensorRaw@gyroX^(0+1280),c
 30244   012FA6  0E05               	movlw	high MPU6050_Calibrate@gx
 30245   012FA8  6E26               	movwf	(MPU6050_ReadSensorRaw@gyroX+1)^(0+1280),c
 30246   012FAA  0ED9               	movlw	low MPU6050_Calibrate@gy
 30247   012FAC  6E27               	movwf	MPU6050_ReadSensorRaw@gyroY^(0+1280),c
 30248   012FAE  0E05               	movlw	high MPU6050_Calibrate@gy
 30249   012FB0  6E28               	movwf	(MPU6050_ReadSensorRaw@gyroY+1)^(0+1280),c
 30250   012FB2  0EDB               	movlw	low MPU6050_Calibrate@gz
 30251   012FB4  6E29               	movwf	MPU6050_ReadSensorRaw@gyroZ^(0+1280),c
 30252   012FB6  0E05               	movlw	high MPU6050_Calibrate@gz
 30253   012FB8  6E2A               	movwf	(MPU6050_ReadSensorRaw@gyroZ+1)^(0+1280),c
 30254   012FBA  ECA4  F0A2         	call	_MPU6050_ReadSensorRaw	;wreg free
 30255   012FBE                     
 30256                           ;I2C_MPU6050.c: 323:         temp_accelX += ax;
 30257   012FBE  C5D1  F5B3         	movff	MPU6050_Calibrate@ax,??_MPU6050_Calibrate
 30258   012FC2  C5D2  F5B4         	movff	MPU6050_Calibrate@ax+1,??_MPU6050_Calibrate+1
 30259   012FC6  0E00               	movlw	0
 30260   012FC8  0105               	movlb	5	; () banked
 30261   012FCA  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30262   012FCC  0EFF               	movlw	255
 30263   012FCE  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30264   012FD0  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30265   012FD2  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30266   012FD4  27B9               	addwf	MPU6050_Calibrate@temp_accelX& (0+255),f,b
 30267   012FD6  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30268   012FD8  23BA               	addwfc	(MPU6050_Calibrate@temp_accelX+1)& (0+255),f,b
 30269   012FDA  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30270   012FDC  23BB               	addwfc	(MPU6050_Calibrate@temp_accelX+2)& (0+255),f,b
 30271   012FDE  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30272   012FE0  23BC               	addwfc	(MPU6050_Calibrate@temp_accelX+3)& (0+255),f,b
 30273   012FE2                     
 30274                           ; BSR set to: 5
 30275                           ;I2C_MPU6050.c: 324:         temp_accelY += ay;
 30276   012FE2  C5D3  F5B3         	movff	MPU6050_Calibrate@ay,??_MPU6050_Calibrate
 30277   012FE6  C5D4  F5B4         	movff	MPU6050_Calibrate@ay+1,??_MPU6050_Calibrate+1
 30278   012FEA  0E00               	movlw	0
 30279   012FEC  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30280   012FEE  0EFF               	movlw	255
 30281   012FF0  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30282   012FF2  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30283   012FF4  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30284   012FF6  27BD               	addwf	MPU6050_Calibrate@temp_accelY& (0+255),f,b
 30285   012FF8  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30286   012FFA  23BE               	addwfc	(MPU6050_Calibrate@temp_accelY+1)& (0+255),f,b
 30287   012FFC  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30288   012FFE  23BF               	addwfc	(MPU6050_Calibrate@temp_accelY+2)& (0+255),f,b
 30289   013000  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30290   013002  23C0               	addwfc	(MPU6050_Calibrate@temp_accelY+3)& (0+255),f,b
 30291   013004                     
 30292                           ; BSR set to: 5
 30293                           ;I2C_MPU6050.c: 325:         temp_accelZ += az;
 30294   013004  C5D5  F5B3         	movff	MPU6050_Calibrate@az,??_MPU6050_Calibrate
 30295   013008  C5D6  F5B4         	movff	MPU6050_Calibrate@az+1,??_MPU6050_Calibrate+1
 30296   01300C  0E00               	movlw	0
 30297   01300E  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30298   013010  0EFF               	movlw	255
 30299   013012  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30300   013014  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30301   013016  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30302   013018  27C1               	addwf	MPU6050_Calibrate@temp_accelZ& (0+255),f,b
 30303   01301A  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30304   01301C  23C2               	addwfc	(MPU6050_Calibrate@temp_accelZ+1)& (0+255),f,b
 30305   01301E  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30306   013020  23C3               	addwfc	(MPU6050_Calibrate@temp_accelZ+2)& (0+255),f,b
 30307   013022  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30308   013024  23C4               	addwfc	(MPU6050_Calibrate@temp_accelZ+3)& (0+255),f,b
 30309   013026                     
 30310                           ; BSR set to: 5
 30311                           ;I2C_MPU6050.c: 326:         temp_gyroX += gx;
 30312   013026  C5D7  F5B3         	movff	MPU6050_Calibrate@gx,??_MPU6050_Calibrate
 30313   01302A  C5D8  F5B4         	movff	MPU6050_Calibrate@gx+1,??_MPU6050_Calibrate+1
 30314   01302E  0E00               	movlw	0
 30315   013030  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30316   013032  0EFF               	movlw	255
 30317   013034  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30318   013036  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30319   013038  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30320   01303A  27C5               	addwf	MPU6050_Calibrate@temp_gyroX& (0+255),f,b
 30321   01303C  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30322   01303E  23C6               	addwfc	(MPU6050_Calibrate@temp_gyroX+1)& (0+255),f,b
 30323   013040  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30324   013042  23C7               	addwfc	(MPU6050_Calibrate@temp_gyroX+2)& (0+255),f,b
 30325   013044  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30326   013046  23C8               	addwfc	(MPU6050_Calibrate@temp_gyroX+3)& (0+255),f,b
 30327   013048                     
 30328                           ; BSR set to: 5
 30329                           ;I2C_MPU6050.c: 327:         temp_gyroY += gy;
 30330   013048  C5D9  F5B3         	movff	MPU6050_Calibrate@gy,??_MPU6050_Calibrate
 30331   01304C  C5DA  F5B4         	movff	MPU6050_Calibrate@gy+1,??_MPU6050_Calibrate+1
 30332   013050  0E00               	movlw	0
 30333   013052  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30334   013054  0EFF               	movlw	255
 30335   013056  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30336   013058  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30337   01305A  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30338   01305C  27C9               	addwf	MPU6050_Calibrate@temp_gyroY& (0+255),f,b
 30339   01305E  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30340   013060  23CA               	addwfc	(MPU6050_Calibrate@temp_gyroY+1)& (0+255),f,b
 30341   013062  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30342   013064  23CB               	addwfc	(MPU6050_Calibrate@temp_gyroY+2)& (0+255),f,b
 30343   013066  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30344   013068  23CC               	addwfc	(MPU6050_Calibrate@temp_gyroY+3)& (0+255),f,b
 30345   01306A                     
 30346                           ; BSR set to: 5
 30347                           ;I2C_MPU6050.c: 328:         temp_gyroZ += gz;
 30348   01306A  C5DB  F5B3         	movff	MPU6050_Calibrate@gz,??_MPU6050_Calibrate
 30349   01306E  C5DC  F5B4         	movff	MPU6050_Calibrate@gz+1,??_MPU6050_Calibrate+1
 30350   013072  0E00               	movlw	0
 30351   013074  BFB4               	btfsc	(??_MPU6050_Calibrate+1)& (0+255),7,b
 30352   013076  0EFF               	movlw	255
 30353   013078  6FB5               	movwf	(??_MPU6050_Calibrate+2)& (0+255),b
 30354   01307A  6FB6               	movwf	(??_MPU6050_Calibrate+3)& (0+255),b
 30355   01307C  51B3               	movf	??_MPU6050_Calibrate& (0+255),w,b
 30356   01307E  27CD               	addwf	MPU6050_Calibrate@temp_gyroZ& (0+255),f,b
 30357   013080  51B4               	movf	(??_MPU6050_Calibrate+1)& (0+255),w,b
 30358   013082  23CE               	addwfc	(MPU6050_Calibrate@temp_gyroZ+1)& (0+255),f,b
 30359   013084  51B5               	movf	(??_MPU6050_Calibrate+2)& (0+255),w,b
 30360   013086  23CF               	addwfc	(MPU6050_Calibrate@temp_gyroZ+2)& (0+255),f,b
 30361   013088  51B6               	movf	(??_MPU6050_Calibrate+3)& (0+255),w,b
 30362   01308A  23D0               	addwfc	(MPU6050_Calibrate@temp_gyroZ+3)& (0+255),f,b
 30363   01308C                     
 30364                           ; BSR set to: 5
 30365                           ;I2C_MPU6050.c: 329:         _delay((unsigned long)((10)*(64000000U/4000.0)));
 30366   01308C  0ED0               	movlw	208
 30367   01308E  0105               	movlb	5	; () banked
 30368   013090  6FB3               	movwf	??_MPU6050_Calibrate& (0+255),b
 30369   013092  0EC9               	movlw	201
 30370   013094                     u10857:
 30371   013094  2EE8               	decfsz	wreg,f,c
 30372   013096  D7FE               	bra	u10857
 30373   013098  2FB3               	decfsz	??_MPU6050_Calibrate& (0+255),f,b
 30374   01309A  D7FC               	bra	u10857
 30375   01309C  D000               	nop2	
 30376   01309E                     
 30377                           ;I2C_MPU6050.c: 330:     }
 30378   01309E  0105               	movlb	5	; () banked
 30379   0130A0  4BDD               	infsnz	MPU6050_Calibrate@i& (0+255),f,b
 30380   0130A2  2BDE               	incf	(MPU6050_Calibrate@i+1)& (0+255),f,b
 30381   0130A4                     
 30382                           ; BSR set to: 5
 30383   0130A4  51DE               	movf	(MPU6050_Calibrate@i+1)& (0+255),w,b
 30384   0130A6  E109               	bnz	u9920
 30385   0130A8  0E64               	movlw	100
 30386   0130AA  5DDD               	subwf	MPU6050_Calibrate@i& (0+255),w,b
 30387   0130AC  A0D8               	btfss	status,0,c
 30388   0130AE  EF5B  F098         	goto	u9921
 30389   0130B2  EF5D  F098         	goto	u9920
 30390   0130B6                     u9921:
 30391   0130B6  EFC1  F097         	goto	l10601
 30392   0130BA                     u9920:
 30393   0130BA                     
 30394                           ; BSR set to: 5
 30395                           ;I2C_MPU6050.c: 333:     accel_offset.x = (float)temp_accelX / 100;
 30396   0130BA  C5B9  F511         	movff	MPU6050_Calibrate@temp_accelX,___xxtofl@val
 30397   0130BE  C5BA  F512         	movff	MPU6050_Calibrate@temp_accelX+1,___xxtofl@val+1
 30398   0130C2  C5BB  F513         	movff	MPU6050_Calibrate@temp_accelX+2,___xxtofl@val+2
 30399   0130C6  C5BC  F514         	movff	MPU6050_Calibrate@temp_accelX+3,___xxtofl@val+3
 30400   0130CA  0E01               	movlw	1
 30401   0130CC  ECCA  F0A1         	call	___xxtofl
 30402   0130D0  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30403   0130D4  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30404   0130D8  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30405   0130DC  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30406   0130E0  0E00               	movlw	0
 30407   0130E2  0105               	movlb	5	; () banked
 30408   0130E4  6F9E               	movwf	___fldiv@a& (0+255),b
 30409   0130E6  0E00               	movlw	0
 30410   0130E8  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30411   0130EA  0EC8               	movlw	200
 30412   0130EC  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30413   0130EE  0E42               	movlw	66
 30414   0130F0  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30415   0130F2  EC5C  F099         	call	___fldiv	;wreg free
 30416   0130F6  C59A  F685         	movff	?___fldiv,_accel_offset
 30417   0130FA  C59B  F686         	movff	?___fldiv+1,_accel_offset+1
 30418   0130FE  C59C  F687         	movff	?___fldiv+2,_accel_offset+2
 30419   013102  C59D  F688         	movff	?___fldiv+3,_accel_offset+3
 30420                           
 30421                           ;I2C_MPU6050.c: 334:     accel_offset.y = (float)temp_accelY / 100;
 30422   013106  C5BD  F511         	movff	MPU6050_Calibrate@temp_accelY,___xxtofl@val
 30423   01310A  C5BE  F512         	movff	MPU6050_Calibrate@temp_accelY+1,___xxtofl@val+1
 30424   01310E  C5BF  F513         	movff	MPU6050_Calibrate@temp_accelY+2,___xxtofl@val+2
 30425   013112  C5C0  F514         	movff	MPU6050_Calibrate@temp_accelY+3,___xxtofl@val+3
 30426   013116  0E01               	movlw	1
 30427   013118  ECCA  F0A1         	call	___xxtofl
 30428   01311C  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30429   013120  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30430   013124  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30431   013128  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30432   01312C  0E00               	movlw	0
 30433   01312E  0105               	movlb	5	; () banked
 30434   013130  6F9E               	movwf	___fldiv@a& (0+255),b
 30435   013132  0E00               	movlw	0
 30436   013134  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30437   013136  0EC8               	movlw	200
 30438   013138  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30439   01313A  0E42               	movlw	66
 30440   01313C  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30441   01313E  EC5C  F099         	call	___fldiv	;wreg free
 30442   013142  C59A  F689         	movff	?___fldiv,_accel_offset+4
 30443   013146  C59B  F68A         	movff	?___fldiv+1,_accel_offset+5
 30444   01314A  C59C  F68B         	movff	?___fldiv+2,_accel_offset+6
 30445   01314E  C59D  F68C         	movff	?___fldiv+3,_accel_offset+7
 30446                           
 30447                           ;I2C_MPU6050.c: 335:     accel_offset.z = (float)temp_accelZ / 100;
 30448   013152  C5C1  F511         	movff	MPU6050_Calibrate@temp_accelZ,___xxtofl@val
 30449   013156  C5C2  F512         	movff	MPU6050_Calibrate@temp_accelZ+1,___xxtofl@val+1
 30450   01315A  C5C3  F513         	movff	MPU6050_Calibrate@temp_accelZ+2,___xxtofl@val+2
 30451   01315E  C5C4  F514         	movff	MPU6050_Calibrate@temp_accelZ+3,___xxtofl@val+3
 30452   013162  0E01               	movlw	1
 30453   013164  ECCA  F0A1         	call	___xxtofl
 30454   013168  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30455   01316C  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30456   013170  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30457   013174  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30458   013178  0E00               	movlw	0
 30459   01317A  0105               	movlb	5	; () banked
 30460   01317C  6F9E               	movwf	___fldiv@a& (0+255),b
 30461   01317E  0E00               	movlw	0
 30462   013180  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30463   013182  0EC8               	movlw	200
 30464   013184  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30465   013186  0E42               	movlw	66
 30466   013188  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30467   01318A  EC5C  F099         	call	___fldiv	;wreg free
 30468   01318E  C59A  F68D         	movff	?___fldiv,_accel_offset+8
 30469   013192  C59B  F68E         	movff	?___fldiv+1,_accel_offset+9
 30470   013196  C59C  F68F         	movff	?___fldiv+2,_accel_offset+10
 30471   01319A  C59D  F690         	movff	?___fldiv+3,_accel_offset+11
 30472                           
 30473                           ;I2C_MPU6050.c: 336:     gyro_offset.x = (float)temp_gyroX / 100;
 30474   01319E  C5C5  F511         	movff	MPU6050_Calibrate@temp_gyroX,___xxtofl@val
 30475   0131A2  C5C6  F512         	movff	MPU6050_Calibrate@temp_gyroX+1,___xxtofl@val+1
 30476   0131A6  C5C7  F513         	movff	MPU6050_Calibrate@temp_gyroX+2,___xxtofl@val+2
 30477   0131AA  C5C8  F514         	movff	MPU6050_Calibrate@temp_gyroX+3,___xxtofl@val+3
 30478   0131AE  0E01               	movlw	1
 30479   0131B0  ECCA  F0A1         	call	___xxtofl
 30480   0131B4  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30481   0131B8  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30482   0131BC  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30483   0131C0  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30484   0131C4  0E00               	movlw	0
 30485   0131C6  0105               	movlb	5	; () banked
 30486   0131C8  6F9E               	movwf	___fldiv@a& (0+255),b
 30487   0131CA  0E00               	movlw	0
 30488   0131CC  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30489   0131CE  0EC8               	movlw	200
 30490   0131D0  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30491   0131D2  0E42               	movlw	66
 30492   0131D4  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30493   0131D6  EC5C  F099         	call	___fldiv	;wreg free
 30494   0131DA  C59A  F679         	movff	?___fldiv,_gyro_offset
 30495   0131DE  C59B  F67A         	movff	?___fldiv+1,_gyro_offset+1
 30496   0131E2  C59C  F67B         	movff	?___fldiv+2,_gyro_offset+2
 30497   0131E6  C59D  F67C         	movff	?___fldiv+3,_gyro_offset+3
 30498                           
 30499                           ;I2C_MPU6050.c: 337:     gyro_offset.y = (float)temp_gyroY / 100;
 30500   0131EA  C5C9  F511         	movff	MPU6050_Calibrate@temp_gyroY,___xxtofl@val
 30501   0131EE  C5CA  F512         	movff	MPU6050_Calibrate@temp_gyroY+1,___xxtofl@val+1
 30502   0131F2  C5CB  F513         	movff	MPU6050_Calibrate@temp_gyroY+2,___xxtofl@val+2
 30503   0131F6  C5CC  F514         	movff	MPU6050_Calibrate@temp_gyroY+3,___xxtofl@val+3
 30504   0131FA  0E01               	movlw	1
 30505   0131FC  ECCA  F0A1         	call	___xxtofl
 30506   013200  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30507   013204  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30508   013208  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30509   01320C  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30510   013210  0E00               	movlw	0
 30511   013212  0105               	movlb	5	; () banked
 30512   013214  6F9E               	movwf	___fldiv@a& (0+255),b
 30513   013216  0E00               	movlw	0
 30514   013218  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30515   01321A  0EC8               	movlw	200
 30516   01321C  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30517   01321E  0E42               	movlw	66
 30518   013220  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30519   013222  EC5C  F099         	call	___fldiv	;wreg free
 30520   013226  C59A  F67D         	movff	?___fldiv,_gyro_offset+4
 30521   01322A  C59B  F67E         	movff	?___fldiv+1,_gyro_offset+5
 30522   01322E  C59C  F67F         	movff	?___fldiv+2,_gyro_offset+6
 30523   013232  C59D  F680         	movff	?___fldiv+3,_gyro_offset+7
 30524                           
 30525                           ;I2C_MPU6050.c: 338:     gyro_offset.z = (float)temp_gyroZ / 100;
 30526   013236  C5CD  F511         	movff	MPU6050_Calibrate@temp_gyroZ,___xxtofl@val
 30527   01323A  C5CE  F512         	movff	MPU6050_Calibrate@temp_gyroZ+1,___xxtofl@val+1
 30528   01323E  C5CF  F513         	movff	MPU6050_Calibrate@temp_gyroZ+2,___xxtofl@val+2
 30529   013242  C5D0  F514         	movff	MPU6050_Calibrate@temp_gyroZ+3,___xxtofl@val+3
 30530   013246  0E01               	movlw	1
 30531   013248  ECCA  F0A1         	call	___xxtofl
 30532   01324C  C511  F59A         	movff	?___xxtofl,___fldiv@b
 30533   013250  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 30534   013254  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 30535   013258  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 30536   01325C  0E00               	movlw	0
 30537   01325E  0105               	movlb	5	; () banked
 30538   013260  6F9E               	movwf	___fldiv@a& (0+255),b
 30539   013262  0E00               	movlw	0
 30540   013264  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 30541   013266  0EC8               	movlw	200
 30542   013268  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 30543   01326A  0E42               	movlw	66
 30544   01326C  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 30545   01326E  EC5C  F099         	call	___fldiv	;wreg free
 30546   013272  C59A  F681         	movff	?___fldiv,_gyro_offset+8
 30547   013276  C59B  F682         	movff	?___fldiv+1,_gyro_offset+9
 30548   01327A  C59C  F683         	movff	?___fldiv+2,_gyro_offset+10
 30549   01327E  C59D  F684         	movff	?___fldiv+3,_gyro_offset+11
 30550                           
 30551                           ;I2C_MPU6050.c: 343:     accel_offset.z -= accel_lsb_per_g;
 30552   013282  C68D  F575         	movff	_accel_offset+8,___flsub@b
 30553   013286  C68E  F576         	movff	_accel_offset+9,___flsub@b+1
 30554   01328A  C68F  F577         	movff	_accel_offset+10,___flsub@b+2
 30555   01328E  C690  F578         	movff	_accel_offset+11,___flsub@b+3
 30556   013292  C6E2  F579         	movff	_accel_lsb_per_g,___flsub@a
 30557   013296  C6E3  F57A         	movff	_accel_lsb_per_g+1,___flsub@a+1
 30558   01329A  C6E4  F57B         	movff	_accel_lsb_per_g+2,___flsub@a+2
 30559   01329E  C6E5  F57C         	movff	_accel_lsb_per_g+3,___flsub@a+3
 30560   0132A2  ECBF  F0B0         	call	___flsub	;wreg free
 30561   0132A6  C575  F68D         	movff	?___flsub,_accel_offset+8
 30562   0132AA  C576  F68E         	movff	?___flsub+1,_accel_offset+9
 30563   0132AE  C577  F68F         	movff	?___flsub+2,_accel_offset+10
 30564   0132B2  C578  F690         	movff	?___flsub+3,_accel_offset+11
 30565   0132B6                     l1303:
 30566   0132B6  0012               	return		;funcret
 30567   0132B8                     __end_of_MPU6050_Calibrate:
 30568                           	callstack 0
 30569                           
 30570 ;; *************** function ___flsub *****************
 30571 ;; Defined at:
 30572 ;;		line 245 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/sprcadd.c"
 30573 ;; Parameters:    Size  Location     Type
 30574 ;;  b               4   21[BANK5 ] void 
 30575 ;;  a               4   25[BANK5 ] void 
 30576 ;; Auto vars:     Size  Location     Type
 30577 ;;		None
 30578 ;; Return value:  Size  Location     Type
 30579 ;;                  4   21[BANK5 ] void 
 30580 ;; Registers used:
 30581 ;;		wreg, status,2, status,0, cstack
 30582 ;; Tracked objects:
 30583 ;;		On entry : 0/0
 30584 ;;		On exit  : 0/0
 30585 ;;		Unchanged: 0/0
 30586 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30591 ;;Total ram usage:        8 bytes
 30592 ;; Hardware stack levels used: 1
 30593 ;; Hardware stack levels required when called: 5
 30594 ;; This function calls:
 30595 ;;		___fladd
 30596 ;; This function is called by:
 30597 ;;		_MPU6050_Calibrate
 30598 ;;		_MPU6050_ReadSensorData
 30599 ;;		_atan2f
 30600 ;;		_atanf
 30601 ;;		_efgtoa
 30602 ;; This function uses a non-reentrant model
 30603 ;;
 30604                           
 30605                           	psect	text80
 30606   01617E                     __ptext80:
 30607                           	callstack 0
 30608   01617E                     ___flsub:
 30609                           	callstack 117
 30610   01617E  0E00               	movlw	0
 30611   016180  0105               	movlb	5	; () banked
 30612   016182  1B79               	xorwf	___flsub@a& (0+255),f,b
 30613   016184  0E00               	movlw	0
 30614   016186  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
 30615   016188  0E00               	movlw	0
 30616   01618A  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
 30617   01618C  0E80               	movlw	128
 30618   01618E  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
 30619   016190                     
 30620                           ; BSR set to: 5
 30621   016190  C575  F56D         	movff	___flsub@b,___fladd@b
 30622   016194  C576  F56E         	movff	___flsub@b+1,___fladd@b+1
 30623   016198  C577  F56F         	movff	___flsub@b+2,___fladd@b+2
 30624   01619C  C578  F570         	movff	___flsub@b+3,___fladd@b+3
 30625   0161A0  C579  F571         	movff	___flsub@a,___fladd@a
 30626   0161A4  C57A  F572         	movff	___flsub@a+1,___fladd@a+1
 30627   0161A8  C57B  F573         	movff	___flsub@a+2,___fladd@a+2
 30628   0161AC  C57C  F574         	movff	___flsub@a+3,___fladd@a+3
 30629   0161B0  EC18  F08F         	call	___fladd	;wreg free
 30630   0161B4  C56D  F575         	movff	?___fladd,?___flsub
 30631   0161B8  C56E  F576         	movff	?___fladd+1,?___flsub+1
 30632   0161BC  C56F  F577         	movff	?___fladd+2,?___flsub+2
 30633   0161C0  C570  F578         	movff	?___fladd+3,?___flsub+3
 30634   0161C4  0012               	return		;funcret
 30635   0161C6                     __end_of___flsub:
 30636                           	callstack 0
 30637                           
 30638 ;; *************** function ___fladd *****************
 30639 ;; Defined at:
 30640 ;;		line 10 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/sprcadd.c"
 30641 ;; Parameters:    Size  Location     Type
 30642 ;;  b               4   13[BANK5 ] void 
 30643 ;;  a               4   17[BANK5 ] void 
 30644 ;; Auto vars:     Size  Location     Type
 30645 ;;  grs             1   49[COMRAM] unsigned char 
 30646 ;;  bexp            1   48[COMRAM] unsigned char 
 30647 ;;  aexp            1   47[COMRAM] unsigned char 
 30648 ;;  signs           1   46[COMRAM] unsigned char 
 30649 ;; Return value:  Size  Location     Type
 30650 ;;                  4   13[BANK5 ] unsigned char 
 30651 ;; Registers used:
 30652 ;;		wreg, status,2, status,0
 30653 ;; Tracked objects:
 30654 ;;		On entry : 0/0
 30655 ;;		On exit  : 0/0
 30656 ;;		Unchanged: 0/0
 30657 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 30658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30661 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30662 ;;Total ram usage:       16 bytes
 30663 ;; Hardware stack levels used: 1
 30664 ;; Hardware stack levels required when called: 4
 30665 ;; This function calls:
 30666 ;;		Nothing
 30667 ;; This function is called by:
 30668 ;;		_DetectAdvancedGestures
 30669 ;;		_MPU6050_ReadSensorData
 30670 ;;		_MPU6050_GetMovement
 30671 ;;		___flsub
 30672 ;;		_atan2f
 30673 ;;		_atanf
 30674 ;;		_efgtoa
 30675 ;;		_CalculateConfidence
 30676 ;; This function uses a non-reentrant model
 30677 ;;
 30678                           
 30679                           	psect	text81
 30680   011E30                     __ptext81:
 30681                           	callstack 0
 30682   011E30                     ___fladd:
 30683                           	callstack 117
 30684   011E30  0105               	movlb	5	; () banked
 30685   011E32  5170               	movf	(___fladd@b+3)& (0+255),w,b
 30686   011E34  0B80               	andlw	128
 30687   011E36  6E2F               	movwf	___fladd@signs^(0+1280),c
 30688   011E38  5170               	movf	(___fladd@b+3)& (0+255),w,b
 30689   011E3A  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 30690   011E3C  6E31               	movwf	___fladd@bexp^(0+1280),c
 30691   011E3E                     
 30692                           ; BSR set to: 5
 30693   011E3E  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 30694   011E40  EF24  F08F         	goto	u8301
 30695   011E44  EF26  F08F         	goto	u8300
 30696   011E48                     u8301:
 30697   011E48  EF27  F08F         	goto	l9521
 30698   011E4C                     u8300:
 30699   011E4C                     
 30700                           ; BSR set to: 5
 30701   011E4C  8031               	bsf	___fladd@bexp^(0+1280),0,c
 30702   011E4E                     l9521:
 30703                           
 30704                           ; BSR set to: 5
 30705   011E4E  5031               	movf	___fladd@bexp^(0+1280),w,c
 30706   011E50  B4D8               	btfsc	status,2,c
 30707   011E52  EF2D  F08F         	goto	u8311
 30708   011E56  EF2F  F08F         	goto	u8310
 30709   011E5A                     u8311:
 30710   011E5A  EF43  F08F         	goto	l9531
 30711   011E5E                     u8310:
 30712   011E5E                     
 30713                           ; BSR set to: 5
 30714   011E5E  2831               	incf	___fladd@bexp^(0+1280),w,c
 30715   011E60  A4D8               	btfss	status,2,c
 30716   011E62  EF35  F08F         	goto	u8321
 30717   011E66  EF37  F08F         	goto	u8320
 30718   011E6A                     u8321:
 30719   011E6A  EF3F  F08F         	goto	l9527
 30720   011E6E                     u8320:
 30721   011E6E                     
 30722                           ; BSR set to: 5
 30723   011E6E  0E00               	movlw	0
 30724   011E70  6F6D               	movwf	___fladd@b& (0+255),b
 30725   011E72  0E00               	movlw	0
 30726   011E74  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 30727   011E76  0E00               	movlw	0
 30728   011E78  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 30729   011E7A  0E00               	movlw	0
 30730   011E7C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 30731   011E7E                     l9527:
 30732                           
 30733                           ; BSR set to: 5
 30734   011E7E  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 30735   011E80                     
 30736                           ; BSR set to: 5
 30737   011E80  6B70               	clrf	(___fladd@b+3)& (0+255),b
 30738   011E82  EF4B  F08F         	goto	l9533
 30739   011E86                     l9531:
 30740                           
 30741                           ; BSR set to: 5
 30742   011E86  0E00               	movlw	0
 30743   011E88  6F6D               	movwf	___fladd@b& (0+255),b
 30744   011E8A  0E00               	movlw	0
 30745   011E8C  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 30746   011E8E  0E00               	movlw	0
 30747   011E90  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 30748   011E92  0E00               	movlw	0
 30749   011E94  6F70               	movwf	(___fladd@b+3)& (0+255),b
 30750   011E96                     l9533:
 30751                           
 30752                           ; BSR set to: 5
 30753   011E96  5174               	movf	(___fladd@a+3)& (0+255),w,b
 30754   011E98  0B80               	andlw	128
 30755   011E9A  6E30               	movwf	___fladd@aexp^(0+1280),c
 30756   011E9C                     
 30757                           ; BSR set to: 5
 30758   011E9C  502F               	movf	___fladd@signs^(0+1280),w,c
 30759   011E9E  1830               	xorwf	___fladd@aexp^(0+1280),w,c
 30760   011EA0  B4D8               	btfsc	status,2,c
 30761   011EA2  EF55  F08F         	goto	u8331
 30762   011EA6  EF57  F08F         	goto	u8330
 30763   011EAA                     u8331:
 30764   011EAA  EF58  F08F         	goto	l9539
 30765   011EAE                     u8330:
 30766   011EAE                     
 30767                           ; BSR set to: 5
 30768   011EAE  8C2F               	bsf	___fladd@signs^(0+1280),6,c
 30769   011EB0                     l9539:
 30770                           
 30771                           ; BSR set to: 5
 30772   011EB0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 30773   011EB2  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 30774   011EB4  6E30               	movwf	___fladd@aexp^(0+1280),c
 30775   011EB6                     
 30776                           ; BSR set to: 5
 30777   011EB6  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 30778   011EB8  EF60  F08F         	goto	u8341
 30779   011EBC  EF62  F08F         	goto	u8340
 30780   011EC0                     u8341:
 30781   011EC0  EF63  F08F         	goto	l9545
 30782   011EC4                     u8340:
 30783   011EC4                     
 30784                           ; BSR set to: 5
 30785   011EC4  8030               	bsf	___fladd@aexp^(0+1280),0,c
 30786   011EC6                     l9545:
 30787                           
 30788                           ; BSR set to: 5
 30789   011EC6  5030               	movf	___fladd@aexp^(0+1280),w,c
 30790   011EC8  B4D8               	btfsc	status,2,c
 30791   011ECA  EF69  F08F         	goto	u8351
 30792   011ECE  EF6B  F08F         	goto	u8350
 30793   011ED2                     u8351:
 30794   011ED2  EF7F  F08F         	goto	l9555
 30795   011ED6                     u8350:
 30796   011ED6                     
 30797                           ; BSR set to: 5
 30798   011ED6  2830               	incf	___fladd@aexp^(0+1280),w,c
 30799   011ED8  A4D8               	btfss	status,2,c
 30800   011EDA  EF71  F08F         	goto	u8361
 30801   011EDE  EF73  F08F         	goto	u8360
 30802   011EE2                     u8361:
 30803   011EE2  EF7B  F08F         	goto	l9551
 30804   011EE6                     u8360:
 30805   011EE6                     
 30806                           ; BSR set to: 5
 30807   011EE6  0E00               	movlw	0
 30808   011EE8  6F71               	movwf	___fladd@a& (0+255),b
 30809   011EEA  0E00               	movlw	0
 30810   011EEC  6F72               	movwf	(___fladd@a+1)& (0+255),b
 30811   011EEE  0E00               	movlw	0
 30812   011EF0  6F73               	movwf	(___fladd@a+2)& (0+255),b
 30813   011EF2  0E00               	movlw	0
 30814   011EF4  6F74               	movwf	(___fladd@a+3)& (0+255),b
 30815   011EF6                     l9551:
 30816                           
 30817                           ; BSR set to: 5
 30818   011EF6  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 30819   011EF8                     
 30820                           ; BSR set to: 5
 30821   011EF8  6B74               	clrf	(___fladd@a+3)& (0+255),b
 30822   011EFA  EF87  F08F         	goto	l9557
 30823   011EFE                     l9555:
 30824                           
 30825                           ; BSR set to: 5
 30826   011EFE  0E00               	movlw	0
 30827   011F00  6F71               	movwf	___fladd@a& (0+255),b
 30828   011F02  0E00               	movlw	0
 30829   011F04  6F72               	movwf	(___fladd@a+1)& (0+255),b
 30830   011F06  0E00               	movlw	0
 30831   011F08  6F73               	movwf	(___fladd@a+2)& (0+255),b
 30832   011F0A  0E00               	movlw	0
 30833   011F0C  6F74               	movwf	(___fladd@a+3)& (0+255),b
 30834   011F0E                     l9557:
 30835                           
 30836                           ; BSR set to: 5
 30837   011F0E  5031               	movf	___fladd@bexp^(0+1280),w,c
 30838   011F10  5C30               	subwf	___fladd@aexp^(0+1280),w,c
 30839   011F12  B0D8               	btfsc	status,0,c
 30840   011F14  EF8E  F08F         	goto	u8371
 30841   011F18  EF90  F08F         	goto	u8370
 30842   011F1C                     u8371:
 30843   011F1C  EFB7  F08F         	goto	l9593
 30844   011F20                     u8370:
 30845   011F20                     
 30846                           ; BSR set to: 5
 30847   011F20  AC2F               	btfss	___fladd@signs^(0+1280),6,c
 30848   011F22  EF95  F08F         	goto	u8381
 30849   011F26  EF97  F08F         	goto	u8380
 30850   011F2A                     u8381:
 30851   011F2A  EF99  F08F         	goto	l9563
 30852   011F2E                     u8380:
 30853   011F2E                     
 30854                           ; BSR set to: 5
 30855   011F2E  0E80               	movlw	128
 30856   011F30  1A2F               	xorwf	___fladd@signs^(0+1280),f,c
 30857   011F32                     l9563:
 30858                           
 30859                           ; BSR set to: 5
 30860   011F32  C531  F532         	movff	___fladd@bexp,___fladd@grs
 30861   011F36                     
 30862                           ; BSR set to: 5
 30863   011F36  C530  F531         	movff	___fladd@aexp,___fladd@bexp
 30864   011F3A                     
 30865                           ; BSR set to: 5
 30866   011F3A  C532  F530         	movff	___fladd@grs,___fladd@aexp
 30867   011F3E                     
 30868                           ; BSR set to: 5
 30869   011F3E  C56D  F532         	movff	___fladd@b,___fladd@grs
 30870   011F42                     
 30871                           ; BSR set to: 5
 30872   011F42  C571  F56D         	movff	___fladd@a,___fladd@b
 30873   011F46                     
 30874                           ; BSR set to: 5
 30875   011F46  C532  F571         	movff	___fladd@grs,___fladd@a
 30876   011F4A                     
 30877                           ; BSR set to: 5
 30878   011F4A  C56E  F532         	movff	___fladd@b+1,___fladd@grs
 30879   011F4E                     
 30880                           ; BSR set to: 5
 30881   011F4E  C572  F56E         	movff	___fladd@a+1,___fladd@b+1
 30882   011F52                     
 30883                           ; BSR set to: 5
 30884   011F52  C532  F572         	movff	___fladd@grs,___fladd@a+1
 30885   011F56                     
 30886                           ; BSR set to: 5
 30887   011F56  C56F  F532         	movff	___fladd@b+2,___fladd@grs
 30888   011F5A                     
 30889                           ; BSR set to: 5
 30890   011F5A  C573  F56F         	movff	___fladd@a+2,___fladd@b+2
 30891   011F5E                     
 30892                           ; BSR set to: 5
 30893   011F5E  C532  F573         	movff	___fladd@grs,___fladd@a+2
 30894   011F62                     
 30895                           ; BSR set to: 5
 30896   011F62  C570  F532         	movff	___fladd@b+3,___fladd@grs
 30897   011F66                     
 30898                           ; BSR set to: 5
 30899   011F66  C574  F570         	movff	___fladd@a+3,___fladd@b+3
 30900   011F6A                     
 30901                           ; BSR set to: 5
 30902   011F6A  C532  F574         	movff	___fladd@grs,___fladd@a+3
 30903   011F6E                     l9593:
 30904                           
 30905                           ; BSR set to: 5
 30906   011F6E  6A32               	clrf	___fladd@grs^(0+1280),c
 30907   011F70  5031               	movf	___fladd@bexp^(0+1280),w,c
 30908   011F72  C530  F52B         	movff	___fladd@aexp,??___fladd
 30909   011F76  6A2C               	clrf	(??___fladd+1)^(0+1280),c
 30910   011F78  5E2B               	subwf	??___fladd^(0+1280),f,c
 30911   011F7A  0E00               	movlw	0
 30912   011F7C  5A2C               	subwfb	(??___fladd+1)^(0+1280),f,c
 30913   011F7E  BE2C               	btfsc	(??___fladd+1)^(0+1280),7,c
 30914   011F80  EFCB  F08F         	goto	u8391
 30915   011F84  502C               	movf	(??___fladd+1)^(0+1280),w,c
 30916   011F86  E109               	bnz	u8390
 30917   011F88  0E1A               	movlw	26
 30918   011F8A  5C2B               	subwf	??___fladd^(0+1280),w,c
 30919   011F8C  A0D8               	btfss	status,0,c
 30920   011F8E  EFCB  F08F         	goto	u8391
 30921   011F92  EFCD  F08F         	goto	u8390
 30922   011F96                     u8391:
 30923   011F96  EF04  F090         	goto	l2178
 30924   011F9A                     u8390:
 30925   011F9A                     
 30926                           ; BSR set to: 5
 30927   011F9A  516D               	movf	___fladd@b& (0+255),w,b
 30928   011F9C  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 30929   011F9E  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 30930   011FA0  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 30931   011FA2  A4D8               	btfss	status,2,c
 30932   011FA4  EFD6  F08F         	goto	u8401
 30933   011FA8  EFD9  F08F         	goto	u8400
 30934   011FAC                     u8401:
 30935   011FAC  0E01               	movlw	1
 30936   011FAE  EFDA  F08F         	goto	u8410
 30937   011FB2                     u8400:
 30938   011FB2  0E00               	movlw	0
 30939   011FB4                     u8410:
 30940   011FB4  6E32               	movwf	___fladd@grs^(0+1280),c
 30941   011FB6                     
 30942                           ; BSR set to: 5
 30943   011FB6  0E00               	movlw	0
 30944   011FB8  6F6D               	movwf	___fladd@b& (0+255),b
 30945   011FBA  0E00               	movlw	0
 30946   011FBC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 30947   011FBE  0E00               	movlw	0
 30948   011FC0  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 30949   011FC2  0E00               	movlw	0
 30950   011FC4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 30951   011FC6                     
 30952                           ; BSR set to: 5
 30953   011FC6  C530  F531         	movff	___fladd@aexp,___fladd@bexp
 30954   011FCA  EF0D  F090         	goto	l2177
 30955   011FCE                     l2179:
 30956                           
 30957                           ; BSR set to: 5
 30958   011FCE  A032               	btfss	___fladd@grs^(0+1280),0,c
 30959   011FD0  EFEC  F08F         	goto	u8421
 30960   011FD4  EFEE  F08F         	goto	u8420
 30961   011FD8                     u8421:
 30962   011FD8  EFF4  F08F         	goto	l9603
 30963   011FDC                     u8420:
 30964   011FDC                     
 30965                           ; BSR set to: 5
 30966   011FDC  90D8               	bcf	status,0,c
 30967   011FDE  3032               	rrcf	___fladd@grs^(0+1280),w,c
 30968   011FE0  0901               	iorlw	1
 30969   011FE2  6E32               	movwf	___fladd@grs^(0+1280),c
 30970   011FE4  EFF6  F08F         	goto	l9605
 30971   011FE8                     l9603:
 30972                           
 30973                           ; BSR set to: 5
 30974   011FE8  90D8               	bcf	status,0,c
 30975   011FEA  3232               	rrcf	___fladd@grs^(0+1280),f,c
 30976   011FEC                     l9605:
 30977                           
 30978                           ; BSR set to: 5
 30979   011FEC  A16D               	btfss	___fladd@b& (0+255),0,b
 30980   011FEE  EFFB  F08F         	goto	u8431
 30981   011FF2  EFFD  F08F         	goto	u8430
 30982   011FF6                     u8431:
 30983   011FF6  EFFE  F08F         	goto	l9609
 30984   011FFA                     u8430:
 30985   011FFA                     
 30986                           ; BSR set to: 5
 30987   011FFA  8E32               	bsf	___fladd@grs^(0+1280),7,c
 30988   011FFC                     l9609:
 30989                           
 30990                           ; BSR set to: 5
 30991   011FFC  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 30992   011FFE  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 30993   012000  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 30994   012002  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 30995   012004  336D               	rrcf	___fladd@b& (0+255),f,b
 30996   012006                     
 30997                           ; BSR set to: 5
 30998   012006  2A31               	incf	___fladd@bexp^(0+1280),f,c
 30999   012008                     l2178:
 31000                           
 31001                           ; BSR set to: 5
 31002   012008  5030               	movf	___fladd@aexp^(0+1280),w,c
 31003   01200A  5C31               	subwf	___fladd@bexp^(0+1280),w,c
 31004   01200C  A0D8               	btfss	status,0,c
 31005   01200E  EF0B  F090         	goto	u8441
 31006   012012  EF0D  F090         	goto	u8440
 31007   012016                     u8441:
 31008   012016  EFE7  F08F         	goto	l2179
 31009   01201A                     u8440:
 31010   01201A                     l2177:
 31011                           
 31012                           ; BSR set to: 5
 31013   01201A  BC2F               	btfsc	___fladd@signs^(0+1280),6,c
 31014   01201C  EF12  F090         	goto	u8451
 31015   012020  EF14  F090         	goto	u8450
 31016   012024                     u8451:
 31017   012024  EF54  F090         	goto	l9637
 31018   012028                     u8450:
 31019   012028                     
 31020                           ; BSR set to: 5
 31021   012028  5031               	movf	___fladd@bexp^(0+1280),w,c
 31022   01202A  A4D8               	btfss	status,2,c
 31023   01202C  EF1A  F090         	goto	u8461
 31024   012030  EF1C  F090         	goto	u8460
 31025   012034                     u8461:
 31026   012034  EF26  F090         	goto	l9619
 31027   012038                     u8460:
 31028   012038                     
 31029                           ; BSR set to: 5
 31030   012038  0E00               	movlw	0
 31031   01203A  6F6D               	movwf	?___fladd& (0+255),b
 31032   01203C  0E00               	movlw	0
 31033   01203E  6F6E               	movwf	(?___fladd+1)& (0+255),b
 31034   012040  0E00               	movlw	0
 31035   012042  6F6F               	movwf	(?___fladd+2)& (0+255),b
 31036   012044  0E00               	movlw	0
 31037   012046  6F70               	movwf	(?___fladd+3)& (0+255),b
 31038   012048  EF73  F091         	goto	l2186
 31039   01204C                     l9619:
 31040                           
 31041                           ; BSR set to: 5
 31042   01204C  5171               	movf	___fladd@a& (0+255),w,b
 31043   01204E  276D               	addwf	___fladd@b& (0+255),f,b
 31044   012050  5172               	movf	(___fladd@a+1)& (0+255),w,b
 31045   012052  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 31046   012054  5173               	movf	(___fladd@a+2)& (0+255),w,b
 31047   012056  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 31048   012058  5174               	movf	(___fladd@a+3)& (0+255),w,b
 31049   01205A  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 31050   01205C                     
 31051                           ; BSR set to: 5
 31052   01205C  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 31053   01205E  EF33  F090         	goto	u8471
 31054   012062  EF35  F090         	goto	u8470
 31055   012066                     u8471:
 31056   012066  EFE1  F090         	goto	l2191
 31057   01206A                     u8470:
 31058   01206A                     
 31059                           ; BSR set to: 5
 31060   01206A  A032               	btfss	___fladd@grs^(0+1280),0,c
 31061   01206C  EF3A  F090         	goto	u8481
 31062   012070  EF3C  F090         	goto	u8480
 31063   012074                     u8481:
 31064   012074  EF42  F090         	goto	l9627
 31065   012078                     u8480:
 31066   012078                     
 31067                           ; BSR set to: 5
 31068   012078  90D8               	bcf	status,0,c
 31069   01207A  3032               	rrcf	___fladd@grs^(0+1280),w,c
 31070   01207C  0901               	iorlw	1
 31071   01207E  6E32               	movwf	___fladd@grs^(0+1280),c
 31072   012080  EF44  F090         	goto	l9629
 31073   012084                     l9627:
 31074                           
 31075                           ; BSR set to: 5
 31076   012084  90D8               	bcf	status,0,c
 31077   012086  3232               	rrcf	___fladd@grs^(0+1280),f,c
 31078   012088                     l9629:
 31079                           
 31080                           ; BSR set to: 5
 31081   012088  A16D               	btfss	___fladd@b& (0+255),0,b
 31082   01208A  EF49  F090         	goto	u8491
 31083   01208E  EF4B  F090         	goto	u8490
 31084   012092                     u8491:
 31085   012092  EF4C  F090         	goto	l9633
 31086   012096                     u8490:
 31087   012096                     
 31088                           ; BSR set to: 5
 31089   012096  8E32               	bsf	___fladd@grs^(0+1280),7,c
 31090   012098                     l9633:
 31091                           
 31092                           ; BSR set to: 5
 31093   012098  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 31094   01209A  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 31095   01209C  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 31096   01209E  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 31097   0120A0  336D               	rrcf	___fladd@b& (0+255),f,b
 31098   0120A2                     
 31099                           ; BSR set to: 5
 31100   0120A2  2A31               	incf	___fladd@bexp^(0+1280),f,c
 31101   0120A4  EFE1  F090         	goto	l2191
 31102   0120A8                     l9637:
 31103                           
 31104                           ; BSR set to: 5
 31105   0120A8  5171               	movf	___fladd@a& (0+255),w,b
 31106   0120AA  5D6D               	subwf	___fladd@b& (0+255),w,b
 31107   0120AC  5172               	movf	(___fladd@a+1)& (0+255),w,b
 31108   0120AE  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 31109   0120B0  5173               	movf	(___fladd@a+2)& (0+255),w,b
 31110   0120B2  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 31111   0120B4  5170               	movf	(___fladd@b+3)& (0+255),w,b
 31112   0120B6  0A80               	xorlw	128
 31113   0120B8  6E2B               	movwf	??___fladd^(0+1280),c
 31114   0120BA  5174               	movf	(___fladd@a+3)& (0+255),w,b
 31115   0120BC  0A80               	xorlw	128
 31116   0120BE  582B               	subwfb	??___fladd^(0+1280),w,c
 31117   0120C0  B0D8               	btfsc	status,0,c
 31118   0120C2  EF65  F090         	goto	u8501
 31119   0120C6  EF67  F090         	goto	u8500
 31120   0120CA                     u8501:
 31121   0120CA  EF92  F090         	goto	l9647
 31122   0120CE                     u8500:
 31123   0120CE                     
 31124                           ; BSR set to: 5
 31125   0120CE  516D               	movf	___fladd@b& (0+255),w,b
 31126   0120D0  5D71               	subwf	___fladd@a& (0+255),w,b
 31127   0120D2  6E2B               	movwf	??___fladd^(0+1280),c
 31128   0120D4  516E               	movf	(___fladd@b+1)& (0+255),w,b
 31129   0120D6  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 31130   0120D8  6E2C               	movwf	(??___fladd+1)^(0+1280),c
 31131   0120DA  516F               	movf	(___fladd@b+2)& (0+255),w,b
 31132   0120DC  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 31133   0120DE  6E2D               	movwf	(??___fladd+2)^(0+1280),c
 31134   0120E0  5170               	movf	(___fladd@b+3)& (0+255),w,b
 31135   0120E2  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 31136   0120E4  6E2E               	movwf	(??___fladd+3)^(0+1280),c
 31137   0120E6  0EFF               	movlw	255
 31138   0120E8  242B               	addwf	??___fladd^(0+1280),w,c
 31139   0120EA  6F6D               	movwf	___fladd@b& (0+255),b
 31140   0120EC  0EFF               	movlw	255
 31141   0120EE  202C               	addwfc	(??___fladd+1)^(0+1280),w,c
 31142   0120F0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 31143   0120F2  0EFF               	movlw	255
 31144   0120F4  202D               	addwfc	(??___fladd+2)^(0+1280),w,c
 31145   0120F6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 31146   0120F8  0EFF               	movlw	255
 31147   0120FA  202E               	addwfc	(??___fladd+3)^(0+1280),w,c
 31148   0120FC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 31149   0120FE  0E80               	movlw	128
 31150   012100  1A2F               	xorwf	___fladd@signs^(0+1280),f,c
 31151   012102                     
 31152                           ; BSR set to: 5
 31153   012102  6C32               	negf	___fladd@grs^(0+1280),c
 31154   012104                     
 31155                           ; BSR set to: 5
 31156   012104  5032               	movf	___fladd@grs^(0+1280),w,c
 31157   012106  A4D8               	btfss	status,2,c
 31158   012108  EF88  F090         	goto	u8511
 31159   01210C  EF8A  F090         	goto	u8510
 31160   012110                     u8511:
 31161   012110  EF9A  F090         	goto	l2194
 31162   012114                     u8510:
 31163   012114                     
 31164                           ; BSR set to: 5
 31165   012114  0E01               	movlw	1
 31166   012116  276D               	addwf	___fladd@b& (0+255),f,b
 31167   012118  0E00               	movlw	0
 31168   01211A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 31169   01211C  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 31170   01211E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 31171   012120  EF9A  F090         	goto	l2194
 31172   012124                     l9647:
 31173                           
 31174                           ; BSR set to: 5
 31175   012124  5171               	movf	___fladd@a& (0+255),w,b
 31176   012126  5F6D               	subwf	___fladd@b& (0+255),f,b
 31177   012128  5172               	movf	(___fladd@a+1)& (0+255),w,b
 31178   01212A  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 31179   01212C  5173               	movf	(___fladd@a+2)& (0+255),w,b
 31180   01212E  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 31181   012130  5174               	movf	(___fladd@a+3)& (0+255),w,b
 31182   012132  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 31183   012134                     l2194:
 31184                           
 31185                           ; BSR set to: 5
 31186   012134  516D               	movf	___fladd@b& (0+255),w,b
 31187   012136  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 31188   012138  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 31189   01213A  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 31190   01213C  A4D8               	btfss	status,2,c
 31191   01213E  EFA3  F090         	goto	u8521
 31192   012142  EFA5  F090         	goto	u8520
 31193   012146                     u8521:
 31194   012146  EFDA  F090         	goto	l9671
 31195   01214A                     u8520:
 31196   01214A                     
 31197                           ; BSR set to: 5
 31198   01214A  5032               	movf	___fladd@grs^(0+1280),w,c
 31199   01214C  A4D8               	btfss	status,2,c
 31200   01214E  EFAB  F090         	goto	u8531
 31201   012152  EFAD  F090         	goto	u8530
 31202   012156                     u8531:
 31203   012156  EFDA  F090         	goto	l9671
 31204   01215A                     u8530:
 31205   01215A                     
 31206                           ; BSR set to: 5
 31207   01215A  0E00               	movlw	0
 31208   01215C  6F6D               	movwf	?___fladd& (0+255),b
 31209   01215E  0E00               	movlw	0
 31210   012160  6F6E               	movwf	(?___fladd+1)& (0+255),b
 31211   012162  0E00               	movlw	0
 31212   012164  6F6F               	movwf	(?___fladd+2)& (0+255),b
 31213   012166  0E00               	movlw	0
 31214   012168  6F70               	movwf	(?___fladd+3)& (0+255),b
 31215   01216A  EF73  F091         	goto	l2186
 31216   01216E                     l9655:
 31217                           
 31218                           ; BSR set to: 5
 31219   01216E  90D8               	bcf	status,0,c
 31220   012170  376D               	rlcf	___fladd@b& (0+255),f,b
 31221   012172  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 31222   012174  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 31223   012176  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 31224   012178                     
 31225                           ; BSR set to: 5
 31226   012178  AE32               	btfss	___fladd@grs^(0+1280),7,c
 31227   01217A  EFC1  F090         	goto	u8541
 31228   01217E  EFC3  F090         	goto	u8540
 31229   012182                     u8541:
 31230   012182  EFC4  F090         	goto	l9661
 31231   012186                     u8540:
 31232   012186                     
 31233                           ; BSR set to: 5
 31234   012186  816D               	bsf	___fladd@b& (0+255),0,b
 31235   012188                     l9661:
 31236                           
 31237                           ; BSR set to: 5
 31238   012188  A032               	btfss	___fladd@grs^(0+1280),0,c
 31239   01218A  EFC9  F090         	goto	u8551
 31240   01218E  EFCB  F090         	goto	u8550
 31241   012192                     u8551:
 31242   012192  EFCF  F090         	goto	l9665
 31243   012196                     u8550:
 31244   012196                     
 31245                           ; BSR set to: 5
 31246   012196  80D8               	bsf	status,0,c
 31247   012198  3632               	rlcf	___fladd@grs^(0+1280),f,c
 31248   01219A  EFD1  F090         	goto	l9667
 31249   01219E                     l9665:
 31250                           
 31251                           ; BSR set to: 5
 31252   01219E  90D8               	bcf	status,0,c
 31253   0121A0  3632               	rlcf	___fladd@grs^(0+1280),f,c
 31254   0121A2                     l9667:
 31255                           
 31256                           ; BSR set to: 5
 31257   0121A2  5031               	movf	___fladd@bexp^(0+1280),w,c
 31258   0121A4  B4D8               	btfsc	status,2,c
 31259   0121A6  EFD7  F090         	goto	u8561
 31260   0121AA  EFD9  F090         	goto	u8560
 31261   0121AE                     u8561:
 31262   0121AE  EFDA  F090         	goto	l9671
 31263   0121B2                     u8560:
 31264   0121B2                     
 31265                           ; BSR set to: 5
 31266   0121B2  0631               	decf	___fladd@bexp^(0+1280),f,c
 31267   0121B4                     l9671:
 31268                           
 31269                           ; BSR set to: 5
 31270   0121B4  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 31271   0121B6  EFDF  F090         	goto	u8571
 31272   0121BA  EFE1  F090         	goto	u8570
 31273   0121BE                     u8571:
 31274   0121BE  EFB7  F090         	goto	l9655
 31275   0121C2                     u8570:
 31276   0121C2                     l2191:
 31277                           
 31278                           ; BSR set to: 5
 31279   0121C2  6A30               	clrf	___fladd@aexp^(0+1280),c
 31280   0121C4  AE32               	btfss	___fladd@grs^(0+1280),7,c
 31281   0121C6  EFE7  F090         	goto	u8581
 31282   0121CA  EFE9  F090         	goto	u8580
 31283   0121CE                     u8581:
 31284   0121CE  EF01  F091         	goto	l2203
 31285   0121D2                     u8580:
 31286   0121D2                     
 31287                           ; BSR set to: 5
 31288   0121D2  C532  F52B         	movff	___fladd@grs,??___fladd
 31289   0121D6  0E7F               	movlw	127
 31290   0121D8  162B               	andwf	??___fladd^(0+1280),f,c
 31291   0121DA  B4D8               	btfsc	status,2,c
 31292   0121DC  EFF2  F090         	goto	u8591
 31293   0121E0  EFF4  F090         	goto	u8590
 31294   0121E4                     u8591:
 31295   0121E4  EFF8  F090         	goto	l2204
 31296   0121E8                     u8590:
 31297   0121E8                     l9675:
 31298                           
 31299                           ; BSR set to: 5
 31300   0121E8  0E01               	movlw	1
 31301   0121EA  6E30               	movwf	___fladd@aexp^(0+1280),c
 31302   0121EC  EF01  F091         	goto	l2203
 31303   0121F0                     l2204:
 31304                           
 31305                           ; BSR set to: 5
 31306   0121F0  A16D               	btfss	___fladd@b& (0+255),0,b
 31307   0121F2  EFFD  F090         	goto	u8601
 31308   0121F6  EFFF  F090         	goto	u8600
 31309   0121FA                     u8601:
 31310   0121FA  EF01  F091         	goto	l2203
 31311   0121FE                     u8600:
 31312   0121FE  EFF4  F090         	goto	l9675
 31313   012202                     l2203:
 31314                           
 31315                           ; BSR set to: 5
 31316   012202  5030               	movf	___fladd@aexp^(0+1280),w,c
 31317   012204  B4D8               	btfsc	status,2,c
 31318   012206  EF07  F091         	goto	u8611
 31319   01220A  EF09  F091         	goto	u8610
 31320   01220E                     u8611:
 31321   01220E  EF34  F091         	goto	l9687
 31322   012212                     u8610:
 31323   012212                     
 31324                           ; BSR set to: 5
 31325   012212  0E01               	movlw	1
 31326   012214  276D               	addwf	___fladd@b& (0+255),f,b
 31327   012216  0E00               	movlw	0
 31328   012218  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 31329   01221A  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 31330   01221C  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 31331   01221E                     
 31332                           ; BSR set to: 5
 31333   01221E  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 31334   012220  EF14  F091         	goto	u8621
 31335   012224  EF16  F091         	goto	u8620
 31336   012228                     u8621:
 31337   012228  EF34  F091         	goto	l9687
 31338   01222C                     u8620:
 31339   01222C                     
 31340                           ; BSR set to: 5
 31341   01222C  C56D  F52B         	movff	___fladd@b,??___fladd
 31342   012230  C56E  F52C         	movff	___fladd@b+1,??___fladd+1
 31343   012234  C56F  F52D         	movff	___fladd@b+2,??___fladd+2
 31344   012238  C570  F52E         	movff	___fladd@b+3,??___fladd+3
 31345   01223C  342E               	rlcf	(??___fladd+3)^(0+1280),w,c
 31346   01223E  322E               	rrcf	(??___fladd+3)^(0+1280),f,c
 31347   012240  322D               	rrcf	(??___fladd+2)^(0+1280),f,c
 31348   012242  322C               	rrcf	(??___fladd+1)^(0+1280),f,c
 31349   012244  322B               	rrcf	??___fladd^(0+1280),f,c
 31350   012246  C52B  F56D         	movff	??___fladd,___fladd@b
 31351   01224A  C52C  F56E         	movff	??___fladd+1,___fladd@b+1
 31352   01224E  C52D  F56F         	movff	??___fladd+2,___fladd@b+2
 31353   012252  C52E  F570         	movff	??___fladd+3,___fladd@b+3
 31354   012256  2831               	incf	___fladd@bexp^(0+1280),w,c
 31355   012258  B4D8               	btfsc	status,2,c
 31356   01225A  EF31  F091         	goto	u8631
 31357   01225E  EF33  F091         	goto	u8630
 31358   012262                     u8631:
 31359   012262  EF34  F091         	goto	l9687
 31360   012266                     u8630:
 31361   012266                     
 31362                           ; BSR set to: 5
 31363   012266  2A31               	incf	___fladd@bexp^(0+1280),f,c
 31364   012268                     l9687:
 31365                           
 31366                           ; BSR set to: 5
 31367   012268  2831               	incf	___fladd@bexp^(0+1280),w,c
 31368   01226A  B4D8               	btfsc	status,2,c
 31369   01226C  EF3A  F091         	goto	u8641
 31370   012270  EF3C  F091         	goto	u8640
 31371   012274                     u8641:
 31372   012274  EF44  F091         	goto	l9691
 31373   012278                     u8640:
 31374   012278                     
 31375                           ; BSR set to: 5
 31376   012278  5031               	movf	___fladd@bexp^(0+1280),w,c
 31377   01227A  A4D8               	btfss	status,2,c
 31378   01227C  EF42  F091         	goto	u8651
 31379   012280  EF44  F091         	goto	u8650
 31380   012284                     u8651:
 31381   012284  EF55  F091         	goto	l2210
 31382   012288                     u8650:
 31383   012288                     l9691:
 31384                           
 31385                           ; BSR set to: 5
 31386   012288  0E00               	movlw	0
 31387   01228A  6F6D               	movwf	___fladd@b& (0+255),b
 31388   01228C  0E00               	movlw	0
 31389   01228E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 31390   012290  0E00               	movlw	0
 31391   012292  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 31392   012294  0E00               	movlw	0
 31393   012296  6F70               	movwf	(___fladd@b+3)& (0+255),b
 31394   012298  5031               	movf	___fladd@bexp^(0+1280),w,c
 31395   01229A  A4D8               	btfss	status,2,c
 31396   01229C  EF52  F091         	goto	u8661
 31397   0122A0  EF54  F091         	goto	u8660
 31398   0122A4                     u8661:
 31399   0122A4  EF55  F091         	goto	l2210
 31400   0122A8                     u8660:
 31401   0122A8                     
 31402                           ; BSR set to: 5
 31403   0122A8  6A2F               	clrf	___fladd@signs^(0+1280),c
 31404   0122AA                     l2210:
 31405                           
 31406                           ; BSR set to: 5
 31407   0122AA  A031               	btfss	___fladd@bexp^(0+1280),0,c
 31408   0122AC  EF5A  F091         	goto	u8671
 31409   0122B0  EF5C  F091         	goto	u8670
 31410   0122B4                     u8671:
 31411   0122B4  EF5F  F091         	goto	l9697
 31412   0122B8                     u8670:
 31413   0122B8                     
 31414                           ; BSR set to: 5
 31415   0122B8  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 31416   0122BA  EF60  F091         	goto	l9699
 31417   0122BE                     l9697:
 31418                           
 31419                           ; BSR set to: 5
 31420   0122BE  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 31421   0122C0                     l9699:
 31422                           
 31423                           ; BSR set to: 5
 31424   0122C0  90D8               	bcf	status,0,c
 31425   0122C2  3031               	rrcf	___fladd@bexp^(0+1280),w,c
 31426   0122C4  6F70               	movwf	(___fladd@b+3)& (0+255),b
 31427   0122C6                     
 31428                           ; BSR set to: 5
 31429   0122C6  AE2F               	btfss	___fladd@signs^(0+1280),7,c
 31430   0122C8  EF68  F091         	goto	u8681
 31431   0122CC  EF6A  F091         	goto	u8680
 31432   0122D0                     u8681:
 31433   0122D0  EF6B  F091         	goto	l9705
 31434   0122D4                     u8680:
 31435   0122D4                     
 31436                           ; BSR set to: 5
 31437   0122D4  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 31438   0122D6                     l9705:
 31439                           
 31440                           ; BSR set to: 5
 31441   0122D6  C56D  F56D         	movff	___fladd@b,?___fladd
 31442   0122DA  C56E  F56E         	movff	___fladd@b+1,?___fladd+1
 31443   0122DE  C56F  F56F         	movff	___fladd@b+2,?___fladd+2
 31444   0122E2  C570  F570         	movff	___fladd@b+3,?___fladd+3
 31445   0122E6                     l2186:
 31446                           
 31447                           ; BSR set to: 5
 31448   0122E6  0012               	return		;funcret
 31449   0122E8                     __end_of___fladd:
 31450                           	callstack 0
 31451                           
 31452 ;; *************** function _MPU6050_ReadSensorRaw *****************
 31453 ;; Defined at:
 31454 ;;		line 138 in file "I2C_MPU6050.c"
 31455 ;; Parameters:    Size  Location     Type
 31456 ;;  accelX          2   28[COMRAM] PTR short 
 31457 ;;		 -> MPU6050_ReadSensorData@ax_raw(2), MPU6050_Calibrate@ax(2), 
 31458 ;;  accelY          2   30[COMRAM] PTR short 
 31459 ;;		 -> MPU6050_ReadSensorData@ay_raw(2), MPU6050_Calibrate@ay(2), 
 31460 ;;  accelZ          2   32[COMRAM] PTR short 
 31461 ;;		 -> MPU6050_ReadSensorData@az_raw(2), MPU6050_Calibrate@az(2), 
 31462 ;;  temp            2   34[COMRAM] PTR short 
 31463 ;;		 -> MPU6050_ReadSensorData@temp_raw(2), MPU6050_Calibrate@temp(2), 
 31464 ;;  gyroX           2   36[COMRAM] PTR short 
 31465 ;;		 -> MPU6050_ReadSensorData@gx_raw(2), MPU6050_Calibrate@gx(2), 
 31466 ;;  gyroY           2   38[COMRAM] PTR short 
 31467 ;;		 -> MPU6050_ReadSensorData@gy_raw(2), MPU6050_Calibrate@gy(2), 
 31468 ;;  gyroZ           2   40[COMRAM] PTR short 
 31469 ;;		 -> MPU6050_ReadSensorData@gz_raw(2), MPU6050_Calibrate@gz(2), 
 31470 ;; Auto vars:     Size  Location     Type
 31471 ;;  rawData        14    0[BANK5 ] unsigned char [14]
 31472 ;;  reg_addr        1   15[BANK5 ] unsigned char 
 31473 ;;  result          1   14[BANK5 ] _Bool 
 31474 ;; Return value:  Size  Location     Type
 31475 ;;                  1    wreg      void 
 31476 ;; Registers used:
 31477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31478 ;; Tracked objects:
 31479 ;;		On entry : 0/0
 31480 ;;		On exit  : 0/0
 31481 ;;		Unchanged: 0/0
 31482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31483 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31484 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31486 ;;      Totals:        16      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31487 ;;Total ram usage:       32 bytes
 31488 ;; Hardware stack levels used: 1
 31489 ;; Hardware stack levels required when called: 7
 31490 ;; This function calls:
 31491 ;;		_I2C1_IsBusy
 31492 ;;		_I2C1_WriteRead
 31493 ;; This function is called by:
 31494 ;;		_MPU6050_Calibrate
 31495 ;;		_MPU6050_ReadSensorData
 31496 ;; This function uses a non-reentrant model
 31497 ;;
 31498                           
 31499                           	psect	text82
 31500   014548                     __ptext82:
 31501                           	callstack 0
 31502   014548                     _MPU6050_ReadSensorRaw:
 31503                           	callstack 118
 31504   014548                     
 31505                           ;I2C_MPU6050.c: 138: static void MPU6050_ReadSensorRaw(int16_t *accelX, int16_t *accelY,
      +                           int16_t *accelZ,;I2C_MPU6050.c: 139:                                   int16_t *temp,;I
      +                          2C_MPU6050.c: 140:                                   int16_t *gyroX, int16_t *gyroY, int
      +                          16_t *gyroZ);I2C_MPU6050.c: 141: {;I2C_MPU6050.c: 142:     uint8_t rawData[14];;I2C_MPU6
      +                          050.c: 143:     uint8_t reg_addr = 0x3B;
 31506   014548  0E3B               	movlw	59
 31507   01454A  0105               	movlb	5	; () banked
 31508   01454C  6F6F               	movwf	MPU6050_ReadSensorRaw@reg_addr& (0+255),b
 31509                           
 31510                           ;I2C_MPU6050.c: 147:     while(I2C1_IsBusy()) {
 31511   01454E  EFAD  F0A2         	goto	l8137
 31512   014552                     l8135:
 31513                           
 31514                           ;I2C_MPU6050.c: 148:         _delay((unsigned long)((10)*(64000000U/4000000.0)));
 31515   014552  0E35               	movlw	53
 31516   014554                     u10867:
 31517   014554  2EE8               	decfsz	wreg,f,c
 31518   014556  D7FE               	bra	u10867
 31519   014558  0000               	nop	
 31520   01455A                     l8137:
 31521                           
 31522                           ;I2C_MPU6050.c: 147:     while(I2C1_IsBusy()) {
 31523   01455A  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 31524   01455E  0900               	iorlw	0
 31525   014560  A4D8               	btfss	status,2,c
 31526   014562  EFB5  F0A2         	goto	u6681
 31527   014566  EFB7  F0A2         	goto	u6680
 31528   01456A                     u6681:
 31529   01456A  EFA9  F0A2         	goto	l8135
 31530   01456E                     u6680:
 31531   01456E                     
 31532                           ;I2C_MPU6050.c: 152:     _Bool result = I2C1_WriteRead(0x68, &reg_addr, 1, rawData, 14);
 31533   01456E  0E00               	movlw	0
 31534   014570  6E13               	movwf	(I2C1_WriteRead@address+1)^(0+1280),c
 31535   014572  0E68               	movlw	104
 31536   014574  6E12               	movwf	I2C1_WriteRead@address^(0+1280),c
 31537   014576  0E6F               	movlw	low MPU6050_ReadSensorRaw@reg_addr
 31538   014578  6E14               	movwf	I2C1_WriteRead@writeData^(0+1280),c
 31539   01457A  0E05               	movlw	high MPU6050_ReadSensorRaw@reg_addr
 31540   01457C  6E15               	movwf	(I2C1_WriteRead@writeData+1)^(0+1280),c
 31541   01457E  0E00               	movlw	0
 31542   014580  6E17               	movwf	(I2C1_WriteRead@writeLength+1)^(0+1280),c
 31543   014582  0E01               	movlw	1
 31544   014584  6E16               	movwf	I2C1_WriteRead@writeLength^(0+1280),c
 31545   014586  0E60               	movlw	low MPU6050_ReadSensorRaw@rawData
 31546   014588  6E18               	movwf	I2C1_WriteRead@readData^(0+1280),c
 31547   01458A  0E05               	movlw	high MPU6050_ReadSensorRaw@rawData
 31548   01458C  6E19               	movwf	(I2C1_WriteRead@readData+1)^(0+1280),c
 31549   01458E  0E00               	movlw	0
 31550   014590  6E1B               	movwf	(I2C1_WriteRead@readLength+1)^(0+1280),c
 31551   014592  0E0E               	movlw	14
 31552   014594  6E1A               	movwf	I2C1_WriteRead@readLength^(0+1280),c
 31553   014596  ECAD  F0AF         	call	_I2C1_WriteRead	;wreg free
 31554   01459A  0105               	movlb	5	; () banked
 31555   01459C  6F6E               	movwf	MPU6050_ReadSensorRaw@result& (0+255),b
 31556   01459E                     
 31557                           ; BSR set to: 5
 31558                           ;I2C_MPU6050.c: 153:     if(result) {
 31559   01459E  516E               	movf	MPU6050_ReadSensorRaw@result& (0+255),w,b
 31560   0145A0  B4D8               	btfsc	status,2,c
 31561   0145A2  EFD5  F0A2         	goto	u6691
 31562   0145A6  EFD7  F0A2         	goto	u6690
 31563   0145AA                     u6691:
 31564   0145AA  EFE7  F0A2         	goto	l8149
 31565   0145AE                     u6690:
 31566   0145AE  EFDD  F0A2         	goto	l8147
 31567   0145B2                     l8145:
 31568                           
 31569                           ;I2C_MPU6050.c: 155:             _delay((unsigned long)((10)*(64000000U/4000000.0)));
 31570   0145B2  0E35               	movlw	53
 31571   0145B4                     u10877:
 31572   0145B4  2EE8               	decfsz	wreg,f,c
 31573   0145B6  D7FE               	bra	u10877
 31574   0145B8  0000               	nop	
 31575   0145BA                     l8147:
 31576                           
 31577                           ;I2C_MPU6050.c: 154:         while(I2C1_IsBusy()) {
 31578   0145BA  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 31579   0145BE  0900               	iorlw	0
 31580   0145C0  A4D8               	btfss	status,2,c
 31581   0145C2  EFE5  F0A2         	goto	u6701
 31582   0145C6  EFE7  F0A2         	goto	u6700
 31583   0145CA                     u6701:
 31584   0145CA  EFD9  F0A2         	goto	l8145
 31585   0145CE                     u6700:
 31586   0145CE                     l8149:
 31587                           
 31588                           ;I2C_MPU6050.c: 159:     _delay((unsigned long)((100)*(64000000U/4000000.0)));
 31589   0145CE  0EE4               	movlw	228
 31590   0145D0                     u10887:
 31591   0145D0  D000               	nop2	
 31592   0145D2  D000               	nop2	
 31593   0145D4  2EE8               	decfsz	wreg,f,c
 31594   0145D6  D7FC               	bra	u10887
 31595   0145D8  D000               	nop2	
 31596   0145DA  D000               	nop2	
 31597   0145DC                     
 31598                           ;I2C_MPU6050.c: 163:     *accelX = (rawData[0] << 8) | rawData[1];
 31599   0145DC  0105               	movlb	5	; () banked
 31600   0145DE  5161               	movf	(MPU6050_ReadSensorRaw@rawData+1)& (0+255),w,b
 31601   0145E0  C560  F52B         	movff	MPU6050_ReadSensorRaw@rawData,??_MPU6050_ReadSensorRaw
 31602   0145E4  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31603   0145E6  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31604   0145EA  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31605   0145EC  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31606   0145EE  0E00               	movlw	0
 31607   0145F0  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31608   0145F2  C51D  F4D9         	movff	MPU6050_ReadSensorRaw@accelX,fsr2l
 31609   0145F6  C51E  F4DA         	movff	MPU6050_ReadSensorRaw@accelX+1,fsr2h
 31610   0145FA  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31611   0145FE  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31612   014602                     
 31613                           ; BSR set to: 5
 31614                           ;I2C_MPU6050.c: 164:     *accelY = (rawData[2] << 8) | rawData[3];
 31615   014602  5163               	movf	(MPU6050_ReadSensorRaw@rawData+3)& (0+255),w,b
 31616   014604  C562  F52B         	movff	MPU6050_ReadSensorRaw@rawData+2,??_MPU6050_ReadSensorRaw
 31617   014608  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31618   01460A  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31619   01460E  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31620   014610  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31621   014612  0E00               	movlw	0
 31622   014614  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31623   014616  C51F  F4D9         	movff	MPU6050_ReadSensorRaw@accelY,fsr2l
 31624   01461A  C520  F4DA         	movff	MPU6050_ReadSensorRaw@accelY+1,fsr2h
 31625   01461E  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31626   014622  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31627   014626                     
 31628                           ; BSR set to: 5
 31629                           ;I2C_MPU6050.c: 165:     *accelZ = (rawData[4] << 8) | rawData[5];
 31630   014626  5165               	movf	(MPU6050_ReadSensorRaw@rawData+5)& (0+255),w,b
 31631   014628  C564  F52B         	movff	MPU6050_ReadSensorRaw@rawData+4,??_MPU6050_ReadSensorRaw
 31632   01462C  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31633   01462E  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31634   014632  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31635   014634  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31636   014636  0E00               	movlw	0
 31637   014638  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31638   01463A  C521  F4D9         	movff	MPU6050_ReadSensorRaw@accelZ,fsr2l
 31639   01463E  C522  F4DA         	movff	MPU6050_ReadSensorRaw@accelZ+1,fsr2h
 31640   014642  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31641   014646  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31642   01464A                     
 31643                           ; BSR set to: 5
 31644                           ;I2C_MPU6050.c: 166:     *temp = (rawData[6] << 8) | rawData[7];
 31645   01464A  5167               	movf	(MPU6050_ReadSensorRaw@rawData+7)& (0+255),w,b
 31646   01464C  C566  F52B         	movff	MPU6050_ReadSensorRaw@rawData+6,??_MPU6050_ReadSensorRaw
 31647   014650  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31648   014652  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31649   014656  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31650   014658  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31651   01465A  0E00               	movlw	0
 31652   01465C  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31653   01465E  C523  F4D9         	movff	MPU6050_ReadSensorRaw@temp,fsr2l
 31654   014662  C524  F4DA         	movff	MPU6050_ReadSensorRaw@temp+1,fsr2h
 31655   014666  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31656   01466A  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31657   01466E                     
 31658                           ; BSR set to: 5
 31659                           ;I2C_MPU6050.c: 167:     *gyroX = (rawData[8] << 8) | rawData[9];
 31660   01466E  5169               	movf	(MPU6050_ReadSensorRaw@rawData+9)& (0+255),w,b
 31661   014670  C568  F52B         	movff	MPU6050_ReadSensorRaw@rawData+8,??_MPU6050_ReadSensorRaw
 31662   014674  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31663   014676  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31664   01467A  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31665   01467C  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31666   01467E  0E00               	movlw	0
 31667   014680  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31668   014682  C525  F4D9         	movff	MPU6050_ReadSensorRaw@gyroX,fsr2l
 31669   014686  C526  F4DA         	movff	MPU6050_ReadSensorRaw@gyroX+1,fsr2h
 31670   01468A  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31671   01468E  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31672   014692                     
 31673                           ; BSR set to: 5
 31674                           ;I2C_MPU6050.c: 168:     *gyroY = (rawData[10] << 8) | rawData[11];
 31675   014692  516B               	movf	(MPU6050_ReadSensorRaw@rawData+11)& (0+255),w,b
 31676   014694  C56A  F52B         	movff	MPU6050_ReadSensorRaw@rawData+10,??_MPU6050_ReadSensorRaw
 31677   014698  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31678   01469A  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31679   01469E  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31680   0146A0  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31681   0146A2  0E00               	movlw	0
 31682   0146A4  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31683   0146A6  C527  F4D9         	movff	MPU6050_ReadSensorRaw@gyroY,fsr2l
 31684   0146AA  C528  F4DA         	movff	MPU6050_ReadSensorRaw@gyroY+1,fsr2h
 31685   0146AE  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31686   0146B2  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31687   0146B6                     
 31688                           ; BSR set to: 5
 31689                           ;I2C_MPU6050.c: 169:     *gyroZ = (rawData[12] << 8) | rawData[13];
 31690   0146B6  516D               	movf	(MPU6050_ReadSensorRaw@rawData+13)& (0+255),w,b
 31691   0146B8  C56C  F52B         	movff	MPU6050_ReadSensorRaw@rawData+12,??_MPU6050_ReadSensorRaw
 31692   0146BC  6A2C               	clrf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),c
 31693   0146BE  C52B  F52C         	movff	??_MPU6050_ReadSensorRaw,??_MPU6050_ReadSensorRaw+1
 31694   0146C2  6A2B               	clrf	??_MPU6050_ReadSensorRaw^(0+1280),c
 31695   0146C4  122B               	iorwf	??_MPU6050_ReadSensorRaw^(0+1280),f,c
 31696   0146C6  0E00               	movlw	0
 31697   0146C8  122C               	iorwf	(??_MPU6050_ReadSensorRaw+1)^(0+1280),f,c
 31698   0146CA  C529  F4D9         	movff	MPU6050_ReadSensorRaw@gyroZ,fsr2l
 31699   0146CE  C52A  F4DA         	movff	MPU6050_ReadSensorRaw@gyroZ+1,fsr2h
 31700   0146D2  C52B  F4DE         	movff	??_MPU6050_ReadSensorRaw,postinc2
 31701   0146D6  C52C  F4DD         	movff	??_MPU6050_ReadSensorRaw+1,postdec2
 31702   0146DA                     
 31703                           ; BSR set to: 5
 31704   0146DA  0012               	return		;funcret
 31705   0146DC                     __end_of_MPU6050_ReadSensorRaw:
 31706                           	callstack 0
 31707                           
 31708 ;; *************** function _I2C1_WriteRead *****************
 31709 ;; Defined at:
 31710 ;;		line 193 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 31711 ;; Parameters:    Size  Location     Type
 31712 ;;  address         2   17[COMRAM] unsigned short 
 31713 ;;  writeData       2   19[COMRAM] PTR unsigned char 
 31714 ;;		 -> MPU6050_ReadSensorRaw@reg_addr(1), MPU6050_ReadRegister@reg_addr(1), 
 31715 ;;  writeLength     2   21[COMRAM] unsigned int 
 31716 ;;  readData        2   23[COMRAM] PTR unsigned char 
 31717 ;;		 -> MPU6050_ReadSensorRaw@rawData(14), MPU6050_ReadRegister@data_read(1), 
 31718 ;;  readLength      2   25[COMRAM] unsigned int 
 31719 ;; Auto vars:     Size  Location     Type
 31720 ;;  retStatus       1   27[COMRAM] _Bool 
 31721 ;; Return value:  Size  Location     Type
 31722 ;;                  1    wreg      _Bool 
 31723 ;; Registers used:
 31724 ;;		wreg, status,2, status,0, cstack
 31725 ;; Tracked objects:
 31726 ;;		On entry : 0/0
 31727 ;;		On exit  : 0/0
 31728 ;;		Unchanged: 0/0
 31729 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31730 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31733 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31734 ;;Total ram usage:       11 bytes
 31735 ;; Hardware stack levels used: 1
 31736 ;; Hardware stack levels required when called: 6
 31737 ;; This function calls:
 31738 ;;		_I2C1_IsBusy
 31739 ;;		_I2C1_WriteStart
 31740 ;; This function is called by:
 31741 ;;		_MPU6050_ReadRegister
 31742 ;;		_MPU6050_ReadSensorRaw
 31743 ;; This function uses a non-reentrant model
 31744 ;;
 31745                           
 31746                           	psect	text83
 31747   015F5A                     __ptext83:
 31748                           	callstack 0
 31749   015F5A                     _I2C1_WriteRead:
 31750                           	callstack 118
 31751   015F5A                     
 31752                           ;mcc_generated_files/i2c_host/src/i2c1.c: 193: _Bool I2C1_WriteRead(uint16_t address, ui
      +                          nt8_t *writeData, size_t writeLength, uint8_t *readData, size_t readLength);mcc_generate
      +                          d_files/i2c_host/src/i2c1.c: 194: {;mcc_generated_files/i2c_host/src/i2c1.c: 195:     _B
      +                          ool retStatus = 0;
 31753   015F5A  6A1C               	clrf	I2C1_WriteRead@retStatus^(0+1280),c
 31754   015F5C                     
 31755                           ;mcc_generated_files/i2c_host/src/i2c1.c: 196:     if (!I2C1_IsBusy())
 31756   015F5C  ECB9  F0B2         	call	_I2C1_IsBusy	;wreg free
 31757   015F60  0900               	iorlw	0
 31758   015F62  A4D8               	btfss	status,2,c
 31759   015F64  EFB6  F0AF         	goto	u6101
 31760   015F68  EFB8  F0AF         	goto	u6100
 31761   015F6C                     u6101:
 31762   015F6C  EFD5  F0AF         	goto	l7405
 31763   015F70                     u6100:
 31764   015F70                     
 31765                           ;mcc_generated_files/i2c_host/src/i2c1.c: 197:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 198:         i2c1Status.busy = 1;
 31766   015F70  0E01               	movlw	1
 31767   015F72  6E34               	movwf	_i2c1Status^(0+1280),c	;volatile
 31768   015F74                     
 31769                           ;mcc_generated_files/i2c_host/src/i2c1.c: 199:         i2c1Status.address = address;
 31770   015F74  C512  F535         	movff	I2C1_WriteRead@address,_i2c1Status+1	;volatile
 31771   015F78  C513  F536         	movff	I2C1_WriteRead@address+1,_i2c1Status+2	;volatile
 31772                           
 31773                           ;mcc_generated_files/i2c_host/src/i2c1.c: 200:         i2c1Status.switchToRead = 1;
 31774   015F7C  0E01               	movlw	1
 31775   015F7E  6E3F               	movwf	(_i2c1Status+11)^(0+1280),c	;volatile
 31776   015F80                     
 31777                           ;mcc_generated_files/i2c_host/src/i2c1.c: 201:         i2c1Status.writePtr = writeData;
 31778   015F80  C514  F537         	movff	I2C1_WriteRead@writeData,_i2c1Status+3	;volatile
 31779   015F84  C515  F538         	movff	I2C1_WriteRead@writeData+1,_i2c1Status+4	;volatile
 31780   015F88                     
 31781                           ;mcc_generated_files/i2c_host/src/i2c1.c: 202:         i2c1Status.writeLength = writeLen
      +                          gth;
 31782   015F88  C516  F539         	movff	I2C1_WriteRead@writeLength,_i2c1Status+5	;volatile
 31783   015F8C  C517  F53A         	movff	I2C1_WriteRead@writeLength+1,_i2c1Status+6	;volatile
 31784   015F90                     
 31785                           ;mcc_generated_files/i2c_host/src/i2c1.c: 203:         i2c1Status.readPtr = readData;
 31786   015F90  C518  F53B         	movff	I2C1_WriteRead@readData,_i2c1Status+7	;volatile
 31787   015F94  C519  F53C         	movff	I2C1_WriteRead@readData+1,_i2c1Status+8	;volatile
 31788   015F98                     
 31789                           ;mcc_generated_files/i2c_host/src/i2c1.c: 204:         i2c1Status.readLength = readLengt
      +                          h;
 31790   015F98  C51A  F53D         	movff	I2C1_WriteRead@readLength,_i2c1Status+9	;volatile
 31791   015F9C  C51B  F53E         	movff	I2C1_WriteRead@readLength+1,_i2c1Status+10	;volatile
 31792   015FA0                     
 31793                           ;mcc_generated_files/i2c_host/src/i2c1.c: 205:         i2c1Status.errorState = I2C_ERROR
      +                          _NONE;
 31794   015FA0  6A40               	clrf	(_i2c1Status+12)^(0+1280),c	;volatile
 31795   015FA2                     
 31796                           ;mcc_generated_files/i2c_host/src/i2c1.c: 206:         I2C1_WriteStart();
 31797   015FA2  EC81  F0B1         	call	_I2C1_WriteStart	;wreg free
 31798   015FA6                     
 31799                           ;mcc_generated_files/i2c_host/src/i2c1.c: 207:         retStatus = 1;
 31800   015FA6  0E01               	movlw	1
 31801   015FA8  6E1C               	movwf	I2C1_WriteRead@retStatus^(0+1280),c
 31802   015FAA                     l7405:
 31803                           
 31804                           ;mcc_generated_files/i2c_host/src/i2c1.c: 209:     return retStatus;
 31805   015FAA  501C               	movf	I2C1_WriteRead@retStatus^(0+1280),w,c
 31806   015FAC  0012               	return		;funcret
 31807   015FAE                     __end_of_I2C1_WriteRead:
 31808                           	callstack 0
 31809                           
 31810 ;; *************** function _I2C1_WriteStart *****************
 31811 ;; Defined at:
 31812 ;;		line 326 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 31813 ;; Parameters:    Size  Location     Type
 31814 ;;		None
 31815 ;; Auto vars:     Size  Location     Type
 31816 ;;		None
 31817 ;; Return value:  Size  Location     Type
 31818 ;;                  1    wreg      void 
 31819 ;; Registers used:
 31820 ;;		wreg, status,2, status,0, cstack
 31821 ;; Tracked objects:
 31822 ;;		On entry : 0/0
 31823 ;;		On exit  : 0/0
 31824 ;;		Unchanged: 0/0
 31825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31830 ;;Total ram usage:        0 bytes
 31831 ;; Hardware stack levels used: 1
 31832 ;; Hardware stack levels required when called: 5
 31833 ;; This function calls:
 31834 ;;		_I2C1_AddrTransmit
 31835 ;;		_I2C1_CounterSet
 31836 ;;		_I2C1_RestartEnable
 31837 ;;		_I2C1_StartSend
 31838 ;; This function is called by:
 31839 ;;		_I2C1_Write
 31840 ;;		_I2C1_WriteRead
 31841 ;; This function uses a non-reentrant model
 31842 ;;
 31843                           
 31844                           	psect	text84
 31845   016302                     __ptext84:
 31846                           	callstack 0
 31847   016302                     _I2C1_WriteStart:
 31848                           	callstack 115
 31849   016302                     
 31850                           ;mcc_generated_files/i2c_host/src/i2c1.c: 328:     if (0U != i2c1Status.writeLength)
 31851   016302  5039               	movf	(_i2c1Status+5)^(0+1280),w,c	;volatile
 31852   016304  103A               	iorwf	(_i2c1Status+6)^(0+1280),w,c	;volatile
 31853   016306  B4D8               	btfsc	status,2,c
 31854   016308  EF88  F0B1         	goto	u4211
 31855   01630C  EF8A  F0B1         	goto	u4210
 31856   016310                     u4211:
 31857   016310  EF97  F0B1         	goto	l6237
 31858   016314                     u4210:
 31859   016314                     
 31860                           ;mcc_generated_files/i2c_host/src/i2c1.c: 329:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 330:         I2C1_CounterSet((uint8_t) i2c1Status.writeLength);
 31861   016314  5039               	movf	(_i2c1Status+5)^(0+1280),w,c	;volatile
 31862   016316  ECF0  F0B4         	call	_I2C1_CounterSet
 31863   01631A                     
 31864                           ;mcc_generated_files/i2c_host/src/i2c1.c: 331:         if (0 != i2c1Status.switchToRead)
 31865   01631A  503F               	movf	(_i2c1Status+11)^(0+1280),w,c	;volatile
 31866   01631C  B4D8               	btfsc	status,2,c
 31867   01631E  EF93  F0B1         	goto	u4221
 31868   016322  EF95  F0B1         	goto	u4220
 31869   016326                     u4221:
 31870   016326  EF97  F0B1         	goto	l6237
 31871   01632A                     u4220:
 31872   01632A                     
 31873                           ;mcc_generated_files/i2c_host/src/i2c1.c: 332:         {;mcc_generated_files/i2c_host/sr
      +                          c/i2c1.c: 333:             I2C1_RestartEnable();
 31874   01632A  EC14  F0B5         	call	_I2C1_RestartEnable	;wreg free
 31875   01632E                     l6237:
 31876                           
 31877                           ;mcc_generated_files/i2c_host/src/i2c1.c: 337:     I2C1_AddrTransmit((uint8_t) (i2c1Stat
      +                          us.address << 1));
 31878   01632E  5035               	movf	(_i2c1Status+1)^(0+1280),w,c	;volatile
 31879   016330  2435               	addwf	(_i2c1Status+1)^(0+1280),w,c	;volatile
 31880   016332  ECF4  F0B4         	call	_I2C1_AddrTransmit
 31881   016336                     
 31882                           ;mcc_generated_files/i2c_host/src/i2c1.c: 338:     I2C1_StartSend();
 31883   016336  EC11  F0B5         	call	_I2C1_StartSend	;wreg free
 31884   01633A  0012               	return		;funcret
 31885   01633C                     __end_of_I2C1_WriteStart:
 31886                           	callstack 0
 31887                           
 31888 ;; *************** function _I2C1_StartSend *****************
 31889 ;; Defined at:
 31890 ;;		line 355 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 31891 ;; Parameters:    Size  Location     Type
 31892 ;;		None
 31893 ;; Auto vars:     Size  Location     Type
 31894 ;;		None
 31895 ;; Return value:  Size  Location     Type
 31896 ;;                  1    wreg      void 
 31897 ;; Registers used:
 31898 ;;		None
 31899 ;; Tracked objects:
 31900 ;;		On entry : 0/0
 31901 ;;		On exit  : 0/0
 31902 ;;		Unchanged: 0/0
 31903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31908 ;;Total ram usage:        0 bytes
 31909 ;; Hardware stack levels used: 1
 31910 ;; Hardware stack levels required when called: 4
 31911 ;; This function calls:
 31912 ;;		Nothing
 31913 ;; This function is called by:
 31914 ;;		_I2C1_WriteStart
 31915 ;; This function uses a non-reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text85
 31919   016A22                     __ptext85:
 31920                           	callstack 0
 31921   016A22                     _I2C1_StartSend:
 31922                           	callstack 115
 31923   016A22                     
 31924                           ;mcc_generated_files/i2c_host/src/i2c1.c: 357:     I2C1CON0bits.S = 1;
 31925   016A22  0102               	movlb	2	; () banked
 31926   016A24  8B94               	bsf	148,5,b	;volatile
 31927   016A26                     
 31928                           ; BSR set to: 2
 31929   016A26  0012               	return		;funcret
 31930   016A28                     __end_of_I2C1_StartSend:
 31931                           	callstack 0
 31932                           
 31933 ;; *************** function _I2C1_RestartEnable *****************
 31934 ;; Defined at:
 31935 ;;		line 411 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 31936 ;; Parameters:    Size  Location     Type
 31937 ;;		None
 31938 ;; Auto vars:     Size  Location     Type
 31939 ;;		None
 31940 ;; Return value:  Size  Location     Type
 31941 ;;                  1    wreg      void 
 31942 ;; Registers used:
 31943 ;;		None
 31944 ;; Tracked objects:
 31945 ;;		On entry : 0/0
 31946 ;;		On exit  : 0/0
 31947 ;;		Unchanged: 0/0
 31948 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31953 ;;Total ram usage:        0 bytes
 31954 ;; Hardware stack levels used: 1
 31955 ;; Hardware stack levels required when called: 4
 31956 ;; This function calls:
 31957 ;;		Nothing
 31958 ;; This function is called by:
 31959 ;;		_I2C1_WriteStart
 31960 ;; This function uses a non-reentrant model
 31961 ;;
 31962                           
 31963                           	psect	text86
 31964   016A28                     __ptext86:
 31965                           	callstack 0
 31966   016A28                     _I2C1_RestartEnable:
 31967                           	callstack 115
 31968   016A28                     
 31969                           ;mcc_generated_files/i2c_host/src/i2c1.c: 413:     I2C1CON0bits.RSEN = 1;
 31970   016A28  0102               	movlb	2	; () banked
 31971   016A2A  8D94               	bsf	148,6,b	;volatile
 31972   016A2C                     
 31973                           ; BSR set to: 2
 31974   016A2C  0012               	return		;funcret
 31975   016A2E                     __end_of_I2C1_RestartEnable:
 31976                           	callstack 0
 31977                           
 31978 ;; *************** function _I2C1_CounterSet *****************
 31979 ;; Defined at:
 31980 ;;		line 375 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 31981 ;; Parameters:    Size  Location     Type
 31982 ;;  counter         1    wreg     unsigned char 
 31983 ;; Auto vars:     Size  Location     Type
 31984 ;;  counter         1   16[COMRAM] unsigned char 
 31985 ;; Return value:  Size  Location     Type
 31986 ;;                  1    wreg      void 
 31987 ;; Registers used:
 31988 ;;		wreg
 31989 ;; Tracked objects:
 31990 ;;		On entry : 0/0
 31991 ;;		On exit  : 0/0
 31992 ;;		Unchanged: 0/0
 31993 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 31994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31998 ;;Total ram usage:        1 bytes
 31999 ;; Hardware stack levels used: 1
 32000 ;; Hardware stack levels required when called: 4
 32001 ;; This function calls:
 32002 ;;		Nothing
 32003 ;; This function is called by:
 32004 ;;		_I2C1_WriteStart
 32005 ;; This function uses a non-reentrant model
 32006 ;;
 32007                           
 32008                           	psect	text87
 32009   0169E0                     __ptext87:
 32010                           	callstack 0
 32011   0169E0                     _I2C1_CounterSet:
 32012                           	callstack 115
 32013                           
 32014                           ; BSR set to: 2
 32015                           ;incstack = 0
 32016                           ;I2C1_CounterSet@counter stored from wreg
 32017   0169E0  6E11               	movwf	I2C1_CounterSet@counter^(0+1280),c
 32018   0169E2                     
 32019                           ;mcc_generated_files/i2c_host/src/i2c1.c: 375: static void I2C1_CounterSet(uint8_t count
      +                          er);mcc_generated_files/i2c_host/src/i2c1.c: 376: {;mcc_generated_files/i2c_host/src/i2c
      +                          1.c: 377:     I2C1CNT = counter;
 32020   0169E2  C511  F28D         	movff	I2C1_CounterSet@counter,653	;volatile
 32021   0169E6  0012               	return		;funcret
 32022   0169E8                     __end_of_I2C1_CounterSet:
 32023                           	callstack 0
 32024                           
 32025 ;; *************** function _I2C1_AddrTransmit *****************
 32026 ;; Defined at:
 32027 ;;		line 360 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 32028 ;; Parameters:    Size  Location     Type
 32029 ;;  addr            1    wreg     unsigned char 
 32030 ;; Auto vars:     Size  Location     Type
 32031 ;;  addr            1   16[COMRAM] unsigned char 
 32032 ;; Return value:  Size  Location     Type
 32033 ;;                  1    wreg      void 
 32034 ;; Registers used:
 32035 ;;		wreg
 32036 ;; Tracked objects:
 32037 ;;		On entry : 0/0
 32038 ;;		On exit  : 0/0
 32039 ;;		Unchanged: 0/0
 32040 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32045 ;;Total ram usage:        1 bytes
 32046 ;; Hardware stack levels used: 1
 32047 ;; Hardware stack levels required when called: 4
 32048 ;; This function calls:
 32049 ;;		Nothing
 32050 ;; This function is called by:
 32051 ;;		_I2C1_WriteStart
 32052 ;; This function uses a non-reentrant model
 32053 ;;
 32054                           
 32055                           	psect	text88
 32056   0169E8                     __ptext88:
 32057                           	callstack 0
 32058   0169E8                     _I2C1_AddrTransmit:
 32059                           	callstack 115
 32060                           
 32061                           ;incstack = 0
 32062                           ;I2C1_AddrTransmit@addr stored from wreg
 32063   0169E8  6E11               	movwf	I2C1_AddrTransmit@addr^(0+1280),c
 32064   0169EA                     
 32065                           ;mcc_generated_files/i2c_host/src/i2c1.c: 360: static void I2C1_AddrTransmit(uint8_t add
      +                          r);mcc_generated_files/i2c_host/src/i2c1.c: 361: {;mcc_generated_files/i2c_host/src/i2c1
      +                          .c: 362:     I2C1ADB1 = addr;
 32066   0169EA  C511  F28F         	movff	I2C1_AddrTransmit@addr,655	;volatile
 32067   0169EE  0012               	return		;funcret
 32068   0169F0                     __end_of_I2C1_AddrTransmit:
 32069                           	callstack 0
 32070                           
 32071 ;; *************** function _I2C1_IsBusy *****************
 32072 ;; Defined at:
 32073 ;;		line 219 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 32074 ;; Parameters:    Size  Location     Type
 32075 ;;		None
 32076 ;; Auto vars:     Size  Location     Type
 32077 ;;		None
 32078 ;; Return value:  Size  Location     Type
 32079 ;;                  1    wreg      _Bool 
 32080 ;; Registers used:
 32081 ;;		wreg, status,2
 32082 ;; Tracked objects:
 32083 ;;		On entry : 0/0
 32084 ;;		On exit  : 0/0
 32085 ;;		Unchanged: 0/0
 32086 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32091 ;;Total ram usage:        1 bytes
 32092 ;; Hardware stack levels used: 1
 32093 ;; Hardware stack levels required when called: 4
 32094 ;; This function calls:
 32095 ;;		Nothing
 32096 ;; This function is called by:
 32097 ;;		_I2C1_Write
 32098 ;;		_I2C1_WriteRead
 32099 ;;		_PCF_Wr
 32100 ;;		_MPU6050_WriteRegister
 32101 ;;		_MPU6050_ReadRegister
 32102 ;;		_MPU6050_ReadSensorRaw
 32103 ;;		_I2C1_Read
 32104 ;; This function uses a non-reentrant model
 32105 ;;
 32106                           
 32107                           	psect	text89
 32108   016572                     __ptext89:
 32109                           	callstack 0
 32110   016572                     _I2C1_IsBusy:
 32111                           	callstack 116
 32112   016572                     
 32113                           ;mcc_generated_files/i2c_host/src/i2c1.c: 221:     return i2c1Status.busy || !I2C1STAT0b
      +                          its.BFRE;
 32114   016572  0E01               	movlw	1
 32115   016574  6E11               	movwf	_I2C1_IsBusy$599^(0+1280),c
 32116   016576  5034               	movf	_i2c1Status^(0+1280),w,c	;volatile
 32117   016578  A4D8               	btfss	status,2,c
 32118   01657A  EFC1  F0B2         	goto	u4191
 32119   01657E  EFC3  F0B2         	goto	u4190
 32120   016582                     u4191:
 32121   016582  EFCC  F0B2         	goto	l6225
 32122   016586                     u4190:
 32123   016586  0102               	movlb	2	; () banked
 32124   016588  AF98               	btfss	152,7,b	;volatile
 32125   01658A  EFC9  F0B2         	goto	u4201
 32126   01658E  EFCB  F0B2         	goto	u4200
 32127   016592                     u4201:
 32128   016592  EFCC  F0B2         	goto	l6225
 32129   016596                     u4200:
 32130   016596                     
 32131                           ; BSR set to: 2
 32132   016596  6A11               	clrf	_I2C1_IsBusy$599^(0+1280),c
 32133   016598                     l6225:
 32134   016598  5011               	movf	_I2C1_IsBusy$599^(0+1280),w,c
 32135   01659A  0012               	return		;funcret
 32136   01659C                     __end_of_I2C1_IsBusy:
 32137                           	callstack 0
 32138                           
 32139 ;; *************** function _HC_SR04_Read_Distance_CM *****************
 32140 ;; Defined at:
 32141 ;;		line 138 in file "HC_SR04.c"
 32142 ;; Parameters:    Size  Location     Type
 32143 ;;		None
 32144 ;; Auto vars:     Size  Location     Type
 32145 ;;  i               2   89[BANK5 ] unsigned short 
 32146 ;;  distance_flo    4   85[BANK5 ] float 
 32147 ;; Return value:  Size  Location     Type
 32148 ;;                  2   83[BANK5 ] unsigned short 
 32149 ;; Registers used:
 32150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32151 ;; Tracked objects:
 32152 ;;		On entry : 0/0
 32153 ;;		On exit  : 0/0
 32154 ;;		Unchanged: 0/0
 32155 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32159 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32160 ;;Total ram usage:        9 bytes
 32161 ;; Hardware stack levels used: 1
 32162 ;; Hardware stack levels required when called: 6
 32163 ;; This function calls:
 32164 ;;		_HC_SR04_Add_To_Filter
 32165 ;;		_HC_SR04_Get_Filtered_Value
 32166 ;;		_HC_SR04_Measure_Echo_Time
 32167 ;;		_HC_SR04_Trigger_Pulse
 32168 ;;		___fldiv
 32169 ;;		___fltol
 32170 ;;		___xxtofl
 32171 ;; This function is called by:
 32172 ;;		_main
 32173 ;;		_HC_SR04_Is_Object_Detected
 32174 ;; This function uses a non-reentrant model
 32175 ;;
 32176                           
 32177                           	psect	text90
 32178   0146DC                     __ptext90:
 32179                           	callstack 0
 32180   0146DC                     _HC_SR04_Read_Distance_CM:
 32181                           	callstack 120
 32182   0146DC                     
 32183                           ;HC_SR04.c: 139:     if (!sensor_initialized) return 0;
 32184   0146DC  0106               	movlb	6	; () banked
 32185   0146DE  51D9               	movf	_sensor_initialized& (0+255),w,b
 32186   0146E0  A4D8               	btfss	status,2,c
 32187   0146E2  EF75  F0A3         	goto	u10011
 32188   0146E6  EF77  F0A3         	goto	u10010
 32189   0146EA                     u10011:
 32190   0146EA  EF7E  F0A3         	goto	l10705
 32191   0146EE                     u10010:
 32192   0146EE                     
 32193                           ; BSR set to: 6
 32194   0146EE  0E00               	movlw	0
 32195   0146F0  0105               	movlb	5	; () banked
 32196   0146F2  6FB4               	movwf	(?_HC_SR04_Read_Distance_CM+1)& (0+255),b
 32197   0146F4  0E00               	movlw	0
 32198   0146F6  6FB3               	movwf	?_HC_SR04_Read_Distance_CM& (0+255),b
 32199   0146F8  EF35  F0A4         	goto	l1461
 32200   0146FC                     l10705:
 32201                           
 32202                           ; BSR set to: 6
 32203                           ;HC_SR04.c: 143:     for(uint16_t i = 0; i < sensor_config.stabilization_ms; i++) {
 32204   0146FC  0E00               	movlw	0
 32205   0146FE  0105               	movlb	5	; () banked
 32206   014700  6FBA               	movwf	(HC_SR04_Read_Distance_CM@i+1)& (0+255),b
 32207   014702  0E00               	movlw	0
 32208   014704  6FB9               	movwf	HC_SR04_Read_Distance_CM@i& (0+255),b
 32209   014706  EF90  F0A3         	goto	l1462
 32210   01470A                     l10707:
 32211                           
 32212                           ; BSR set to: 5
 32213                           ;HC_SR04.c: 144:         _delay((unsigned long)((1)*(64000000U/4000.0)));
 32214   01470A  0E15               	movlw	21
 32215   01470C  6E33               	movwf	??_HC_SR04_Read_Distance_CM^(0+1280),c
 32216   01470E  0EC6               	movlw	198
 32217   014710                     u10897:
 32218   014710  2EE8               	decfsz	wreg,f,c
 32219   014712  D7FE               	bra	u10897
 32220   014714  2E33               	decfsz	??_HC_SR04_Read_Distance_CM^(0+1280),f,c
 32221   014716  D7FC               	bra	u10897
 32222   014718  D000               	nop2	
 32223   01471A                     
 32224                           ;HC_SR04.c: 145:     }
 32225   01471A  0105               	movlb	5	; () banked
 32226   01471C  4BB9               	infsnz	HC_SR04_Read_Distance_CM@i& (0+255),f,b
 32227   01471E  2BBA               	incf	(HC_SR04_Read_Distance_CM@i+1)& (0+255),f,b
 32228   014720                     l1462:
 32229                           
 32230                           ; BSR set to: 5
 32231   014720  0107               	movlb	7	; () banked
 32232   014722  51D0               	movf	(_sensor_config+6)& (0+255),w,b
 32233   014724  0105               	movlb	5	; () banked
 32234   014726  5DB9               	subwf	HC_SR04_Read_Distance_CM@i& (0+255),w,b
 32235   014728  0107               	movlb	7	; () banked
 32236   01472A  51D1               	movf	(_sensor_config+7)& (0+255),w,b
 32237   01472C  0105               	movlb	5	; () banked
 32238   01472E  59BA               	subwfb	(HC_SR04_Read_Distance_CM@i+1)& (0+255),w,b
 32239   014730  A0D8               	btfss	status,0,c
 32240   014732  EF9D  F0A3         	goto	u10021
 32241   014736  EF9F  F0A3         	goto	u10020
 32242   01473A                     u10021:
 32243   01473A  EF85  F0A3         	goto	l10707
 32244   01473E                     u10020:
 32245   01473E                     
 32246                           ; BSR set to: 5
 32247                           ;HC_SR04.c: 148:     HC_SR04_Trigger_Pulse();
 32248   01473E  EC9F  F0B3         	call	_HC_SR04_Trigger_Pulse	;wreg free
 32249   014742                     
 32250                           ;HC_SR04.c: 149:     last_echo_time_us = HC_SR04_Measure_Echo_Time();
 32251   014742  ECE8  F09D         	call	_HC_SR04_Measure_Echo_Time	;wreg free
 32252   014746  C571  F6A1         	movff	?_HC_SR04_Measure_Echo_Time,_last_echo_time_us
 32253   01474A  C572  F6A2         	movff	?_HC_SR04_Measure_Echo_Time+1,_last_echo_time_us+1
 32254   01474E  C573  F6A3         	movff	?_HC_SR04_Measure_Echo_Time+2,_last_echo_time_us+2
 32255   014752  C574  F6A4         	movff	?_HC_SR04_Measure_Echo_Time+3,_last_echo_time_us+3
 32256   014756                     
 32257                           ;HC_SR04.c: 151:     if (last_echo_time_us == 0) {
 32258   014756  0106               	movlb	6	; () banked
 32259   014758  51A1               	movf	_last_echo_time_us& (0+255),w,b
 32260   01475A  11A2               	iorwf	(_last_echo_time_us+1)& (0+255),w,b
 32261   01475C  11A3               	iorwf	(_last_echo_time_us+2)& (0+255),w,b
 32262   01475E  11A4               	iorwf	(_last_echo_time_us+3)& (0+255),w,b
 32263   014760  A4D8               	btfss	status,2,c
 32264   014762  EFB5  F0A3         	goto	u10031
 32265   014766  EFB7  F0A3         	goto	u10030
 32266   01476A                     u10031:
 32267   01476A  EFC4  F0A3         	goto	l10721
 32268   01476E                     u10030:
 32269   01476E                     
 32270                           ; BSR set to: 6
 32271                           ;HC_SR04.c: 152:         last_status = HC_SR04_TIMEOUT;
 32272   01476E  0E01               	movlw	1
 32273   014770  6FDA               	movwf	_last_status& (0+255),b
 32274                           
 32275                           ;HC_SR04.c: 153:         last_distance_cm = 0;
 32276   014772  0E00               	movlw	0
 32277   014774  6E44               	movwf	(_last_distance_cm+1)^(0+1280),c
 32278   014776  0E00               	movlw	0
 32279   014778  6E43               	movwf	_last_distance_cm^(0+1280),c
 32280                           
 32281                           ;HC_SR04.c: 154:         return 0;
 32282   01477A  0E00               	movlw	0
 32283   01477C  0105               	movlb	5	; () banked
 32284   01477E  6FB4               	movwf	(?_HC_SR04_Read_Distance_CM+1)& (0+255),b
 32285   014780  0E00               	movlw	0
 32286   014782  6FB3               	movwf	?_HC_SR04_Read_Distance_CM& (0+255),b
 32287   014784  EF35  F0A4         	goto	l1461
 32288   014788                     l10721:
 32289                           
 32290                           ; BSR set to: 6
 32291                           ;HC_SR04.c: 159:     float distance_float = (float)last_echo_time_us / 58.0f;
 32292   014788  C6A1  F511         	movff	_last_echo_time_us,___xxtofl@val
 32293   01478C  C6A2  F512         	movff	_last_echo_time_us+1,___xxtofl@val+1
 32294   014790  C6A3  F513         	movff	_last_echo_time_us+2,___xxtofl@val+2
 32295   014794  C6A4  F514         	movff	_last_echo_time_us+3,___xxtofl@val+3
 32296   014798  0E00               	movlw	0
 32297   01479A  ECCA  F0A1         	call	___xxtofl
 32298   01479E  C511  F59A         	movff	?___xxtofl,___fldiv@b
 32299   0147A2  C512  F59B         	movff	?___xxtofl+1,___fldiv@b+1
 32300   0147A6  C513  F59C         	movff	?___xxtofl+2,___fldiv@b+2
 32301   0147AA  C514  F59D         	movff	?___xxtofl+3,___fldiv@b+3
 32302   0147AE  0E00               	movlw	0
 32303   0147B0  0105               	movlb	5	; () banked
 32304   0147B2  6F9E               	movwf	___fldiv@a& (0+255),b
 32305   0147B4  0E00               	movlw	0
 32306   0147B6  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 32307   0147B8  0E68               	movlw	104
 32308   0147BA  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 32309   0147BC  0E42               	movlw	66
 32310   0147BE  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 32311   0147C0  EC5C  F099         	call	___fldiv	;wreg free
 32312   0147C4  C59A  F5B5         	movff	?___fldiv,HC_SR04_Read_Distance_CM@distance_float
 32313   0147C8  C59B  F5B6         	movff	?___fldiv+1,HC_SR04_Read_Distance_CM@distance_float+1
 32314   0147CC  C59C  F5B7         	movff	?___fldiv+2,HC_SR04_Read_Distance_CM@distance_float+2
 32315   0147D0  C59D  F5B8         	movff	?___fldiv+3,HC_SR04_Read_Distance_CM@distance_float+3
 32316                           
 32317                           ;HC_SR04.c: 160:     last_distance_cm = (uint16_t)distance_float;
 32318   0147D4  C5B5  F56D         	movff	HC_SR04_Read_Distance_CM@distance_float,___fltol@f1
 32319   0147D8  C5B6  F56E         	movff	HC_SR04_Read_Distance_CM@distance_float+1,___fltol@f1+1
 32320   0147DC  C5B7  F56F         	movff	HC_SR04_Read_Distance_CM@distance_float+2,___fltol@f1+2
 32321   0147E0  C5B8  F570         	movff	HC_SR04_Read_Distance_CM@distance_float+3,___fltol@f1+3
 32322   0147E4  ECA1  F0A5         	call	___fltol	;wreg free
 32323   0147E8  C56D  F543         	movff	?___fltol,_last_distance_cm
 32324   0147EC  C56E  F544         	movff	?___fltol+1,_last_distance_cm+1
 32325   0147F0                     
 32326                           ;HC_SR04.c: 163:     if (last_distance_cm < 2 || last_distance_cm > 400) {
 32327   0147F0  5044               	movf	(_last_distance_cm+1)^(0+1280),w,c
 32328   0147F2  E109               	bnz	u10040
 32329   0147F4  0E02               	movlw	2
 32330   0147F6  5C43               	subwf	_last_distance_cm^(0+1280),w,c
 32331   0147F8  A0D8               	btfss	status,0,c
 32332   0147FA  EF01  F0A4         	goto	u10041
 32333   0147FE  EF03  F0A4         	goto	u10040
 32334   014802                     u10041:
 32335   014802  EF0E  F0A4         	goto	l10727
 32336   014806                     u10040:
 32337   014806  0E91               	movlw	145
 32338   014808  5C43               	subwf	_last_distance_cm^(0+1280),w,c
 32339   01480A  0E01               	movlw	1
 32340   01480C  5844               	subwfb	(_last_distance_cm+1)^(0+1280),w,c
 32341   01480E  A0D8               	btfss	status,0,c
 32342   014810  EF0C  F0A4         	goto	u10051
 32343   014814  EF0E  F0A4         	goto	u10050
 32344   014818                     u10051:
 32345   014818  EF18  F0A4         	goto	l1466
 32346   01481C                     u10050:
 32347   01481C                     l10727:
 32348                           
 32349                           ;HC_SR04.c: 164:         last_status = HC_SR04_OUT_OF_RANGE;
 32350   01481C  0E02               	movlw	2
 32351   01481E  0106               	movlb	6	; () banked
 32352   014820  6FDA               	movwf	_last_status& (0+255),b
 32353                           
 32354                           ;HC_SR04.c: 165:         return 0;
 32355   014822  0E00               	movlw	0
 32356   014824  0105               	movlb	5	; () banked
 32357   014826  6FB4               	movwf	(?_HC_SR04_Read_Distance_CM+1)& (0+255),b
 32358   014828  0E00               	movlw	0
 32359   01482A  6FB3               	movwf	?_HC_SR04_Read_Distance_CM& (0+255),b
 32360   01482C  EF35  F0A4         	goto	l1461
 32361   014830                     l1466:
 32362                           
 32363                           ;HC_SR04.c: 168:     last_status = HC_SR04_OK;
 32364   014830  0106               	movlb	6	; () banked
 32365   014832  6BDA               	clrf	_last_status& (0+255),b
 32366   014834                     
 32367                           ; BSR set to: 6
 32368                           ;HC_SR04.c: 171:     if (sensor_config.filter_enabled) {
 32369   014834  0107               	movlb	7	; () banked
 32370   014836  51D3               	movf	(_sensor_config+9)& (0+255),w,b
 32371   014838  B4D8               	btfsc	status,2,c
 32372   01483A  EF21  F0A4         	goto	u10061
 32373   01483E  EF23  F0A4         	goto	u10060
 32374   014842                     u10061:
 32375   014842  EF31  F0A4         	goto	l1469
 32376   014846                     u10060:
 32377   014846                     
 32378                           ; BSR set to: 7
 32379                           ;HC_SR04.c: 172:         HC_SR04_Add_To_Filter(last_distance_cm);
 32380   014846  C543  F517         	movff	_last_distance_cm,HC_SR04_Add_To_Filter@distance
 32381   01484A  C544  F518         	movff	_last_distance_cm+1,HC_SR04_Add_To_Filter@distance+1
 32382   01484E  EC2A  F0AF         	call	_HC_SR04_Add_To_Filter	;wreg free
 32383                           
 32384                           ;HC_SR04.c: 173:         return HC_SR04_Get_Filtered_Value();
 32385   014852  ECC9  F0A8         	call	_HC_SR04_Get_Filtered_Value	;wreg free
 32386   014856  C52A  F5B3         	movff	?_HC_SR04_Get_Filtered_Value,?_HC_SR04_Read_Distance_CM
 32387   01485A  C52B  F5B4         	movff	?_HC_SR04_Get_Filtered_Value+1,?_HC_SR04_Read_Distance_CM+1
 32388   01485E  EF35  F0A4         	goto	l1461
 32389   014862                     l1469:
 32390                           
 32391                           ; BSR set to: 7
 32392                           ;HC_SR04.c: 175:         return last_distance_cm;
 32393   014862  C543  F5B3         	movff	_last_distance_cm,?_HC_SR04_Read_Distance_CM
 32394   014866  C544  F5B4         	movff	_last_distance_cm+1,?_HC_SR04_Read_Distance_CM+1
 32395   01486A                     l1461:
 32396   01486A  0012               	return		;funcret
 32397   01486C                     __end_of_HC_SR04_Read_Distance_CM:
 32398                           	callstack 0
 32399                           
 32400 ;; *************** function ___fldiv *****************
 32401 ;; Defined at:
 32402 ;;		line 11 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/sprcdiv.c"
 32403 ;; Parameters:    Size  Location     Type
 32404 ;;  b               4   58[BANK5 ] unsigned short 
 32405 ;;  a               4   62[BANK5 ] unsigned short 
 32406 ;; Auto vars:     Size  Location     Type
 32407 ;;  grs             4   77[BANK5 ] unsigned long 
 32408 ;;  rem             4   70[BANK5 ] unsigned long 
 32409 ;;  new_exp         2   75[BANK5 ] short 
 32410 ;;  aexp            1   82[BANK5 ] unsigned char 
 32411 ;;  bexp            1   81[BANK5 ] unsigned char 
 32412 ;;  sign            1   74[BANK5 ] unsigned char 
 32413 ;; Return value:  Size  Location     Type
 32414 ;;                  4   58[BANK5 ] unsigned char 
 32415 ;; Registers used:
 32416 ;;		wreg, status,2, status,0
 32417 ;; Tracked objects:
 32418 ;;		On entry : 0/0
 32419 ;;		On exit  : 0/0
 32420 ;;		Unchanged: 0/0
 32421 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 32422 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32423 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32424 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32425 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32426 ;;Total ram usage:       25 bytes
 32427 ;; Hardware stack levels used: 1
 32428 ;; Hardware stack levels required when called: 4
 32429 ;; This function calls:
 32430 ;;		Nothing
 32431 ;; This function is called by:
 32432 ;;		_MPU6050_Calibrate
 32433 ;;		_MPU6050_ReadSensorData
 32434 ;;		_MPU6050_GetMovement
 32435 ;;		_HC_SR04_Read_Distance_CM
 32436 ;;		_atan2f
 32437 ;;		_atanf
 32438 ;;		_efgtoa
 32439 ;; This function uses a non-reentrant model
 32440 ;;
 32441                           
 32442                           	psect	text91
 32443   0132B8                     __ptext91:
 32444                           	callstack 0
 32445   0132B8                     ___fldiv:
 32446                           	callstack 118
 32447   0132B8  0105               	movlb	5	; () banked
 32448   0132BA  519D               	movf	(___fldiv@b+3)& (0+255),w,b
 32449   0132BC  0B80               	andlw	128
 32450   0132BE  6FAA               	movwf	___fldiv@sign& (0+255),b
 32451   0132C0  519D               	movf	(___fldiv@b+3)& (0+255),w,b
 32452   0132C2  259D               	addwf	(___fldiv@b+3)& (0+255),w,b
 32453   0132C4  6FB1               	movwf	___fldiv@bexp& (0+255),b
 32454   0132C6                     
 32455                           ; BSR set to: 5
 32456   0132C6  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
 32457   0132C8  EF68  F099         	goto	u4851
 32458   0132CC  EF6A  F099         	goto	u4850
 32459   0132D0                     u4851:
 32460   0132D0  EF6B  F099         	goto	l6619
 32461   0132D4                     u4850:
 32462   0132D4                     
 32463                           ; BSR set to: 5
 32464   0132D4  81B1               	bsf	___fldiv@bexp& (0+255),0,b
 32465   0132D6                     l6619:
 32466                           
 32467                           ; BSR set to: 5
 32468   0132D6  51B1               	movf	___fldiv@bexp& (0+255),w,b
 32469   0132D8  B4D8               	btfsc	status,2,c
 32470   0132DA  EF71  F099         	goto	u4861
 32471   0132DE  EF73  F099         	goto	u4860
 32472   0132E2                     u4861:
 32473   0132E2  EF87  F099         	goto	l6629
 32474   0132E6                     u4860:
 32475   0132E6                     
 32476                           ; BSR set to: 5
 32477   0132E6  29B1               	incf	___fldiv@bexp& (0+255),w,b
 32478   0132E8  A4D8               	btfss	status,2,c
 32479   0132EA  EF79  F099         	goto	u4871
 32480   0132EE  EF7B  F099         	goto	u4870
 32481   0132F2                     u4871:
 32482   0132F2  EF83  F099         	goto	l6625
 32483   0132F6                     u4870:
 32484   0132F6                     
 32485                           ; BSR set to: 5
 32486   0132F6  0E00               	movlw	0
 32487   0132F8  6F9A               	movwf	___fldiv@b& (0+255),b
 32488   0132FA  0E00               	movlw	0
 32489   0132FC  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32490   0132FE  0E00               	movlw	0
 32491   013300  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32492   013302  0E00               	movlw	0
 32493   013304  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32494   013306                     l6625:
 32495                           
 32496                           ; BSR set to: 5
 32497   013306  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
 32498   013308                     
 32499                           ; BSR set to: 5
 32500   013308  6B9D               	clrf	(___fldiv@b+3)& (0+255),b
 32501   01330A  EF8F  F099         	goto	l6631
 32502   01330E                     l6629:
 32503                           
 32504                           ; BSR set to: 5
 32505   01330E  0E00               	movlw	0
 32506   013310  6F9A               	movwf	___fldiv@b& (0+255),b
 32507   013312  0E00               	movlw	0
 32508   013314  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32509   013316  0E00               	movlw	0
 32510   013318  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32511   01331A  0E00               	movlw	0
 32512   01331C  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32513   01331E                     l6631:
 32514                           
 32515                           ; BSR set to: 5
 32516   01331E  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
 32517   013320  0B80               	andlw	128
 32518   013322  1BAA               	xorwf	___fldiv@sign& (0+255),f,b
 32519   013324                     
 32520                           ; BSR set to: 5
 32521   013324  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
 32522   013326  25A1               	addwf	(___fldiv@a+3)& (0+255),w,b
 32523   013328  6FB2               	movwf	___fldiv@aexp& (0+255),b
 32524   01332A                     
 32525                           ; BSR set to: 5
 32526   01332A  AFA0               	btfss	(___fldiv@a+2)& (0+255),7,b
 32527   01332C  EF9A  F099         	goto	u4881
 32528   013330  EF9C  F099         	goto	u4880
 32529   013334                     u4881:
 32530   013334  EF9D  F099         	goto	l6639
 32531   013338                     u4880:
 32532   013338                     
 32533                           ; BSR set to: 5
 32534   013338  81B2               	bsf	___fldiv@aexp& (0+255),0,b
 32535   01333A                     l6639:
 32536                           
 32537                           ; BSR set to: 5
 32538   01333A  51B2               	movf	___fldiv@aexp& (0+255),w,b
 32539   01333C  B4D8               	btfsc	status,2,c
 32540   01333E  EFA3  F099         	goto	u4891
 32541   013342  EFA5  F099         	goto	u4890
 32542   013346                     u4891:
 32543   013346  EFB9  F099         	goto	l6649
 32544   01334A                     u4890:
 32545   01334A                     
 32546                           ; BSR set to: 5
 32547   01334A  29B2               	incf	___fldiv@aexp& (0+255),w,b
 32548   01334C  A4D8               	btfss	status,2,c
 32549   01334E  EFAB  F099         	goto	u4901
 32550   013352  EFAD  F099         	goto	u4900
 32551   013356                     u4901:
 32552   013356  EFB5  F099         	goto	l6645
 32553   01335A                     u4900:
 32554   01335A                     
 32555                           ; BSR set to: 5
 32556   01335A  0E00               	movlw	0
 32557   01335C  6F9E               	movwf	___fldiv@a& (0+255),b
 32558   01335E  0E00               	movlw	0
 32559   013360  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 32560   013362  0E00               	movlw	0
 32561   013364  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 32562   013366  0E00               	movlw	0
 32563   013368  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 32564   01336A                     l6645:
 32565                           
 32566                           ; BSR set to: 5
 32567   01336A  8FA0               	bsf	(___fldiv@a+2)& (0+255),7,b
 32568   01336C                     
 32569                           ; BSR set to: 5
 32570   01336C  6BA1               	clrf	(___fldiv@a+3)& (0+255),b
 32571   01336E  EFC1  F099         	goto	l6651
 32572   013372                     l6649:
 32573                           
 32574                           ; BSR set to: 5
 32575   013372  0E00               	movlw	0
 32576   013374  6F9E               	movwf	___fldiv@a& (0+255),b
 32577   013376  0E00               	movlw	0
 32578   013378  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
 32579   01337A  0E00               	movlw	0
 32580   01337C  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
 32581   01337E  0E00               	movlw	0
 32582   013380  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
 32583   013382                     l6651:
 32584                           
 32585                           ; BSR set to: 5
 32586   013382  519E               	movf	___fldiv@a& (0+255),w,b
 32587   013384  119F               	iorwf	(___fldiv@a+1)& (0+255),w,b
 32588   013386  11A0               	iorwf	(___fldiv@a+2)& (0+255),w,b
 32589   013388  11A1               	iorwf	(___fldiv@a+3)& (0+255),w,b
 32590   01338A  A4D8               	btfss	status,2,c
 32591   01338C  EFCA  F099         	goto	u4911
 32592   013390  EFCC  F099         	goto	u4910
 32593   013394                     u4911:
 32594   013394  EFE4  F099         	goto	l6663
 32595   013398                     u4910:
 32596   013398                     
 32597                           ; BSR set to: 5
 32598   013398  0E00               	movlw	0
 32599   01339A  6F9A               	movwf	___fldiv@b& (0+255),b
 32600   01339C  0E00               	movlw	0
 32601   01339E  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32602   0133A0  0E00               	movlw	0
 32603   0133A2  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32604   0133A4  0E00               	movlw	0
 32605   0133A6  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32606   0133A8                     
 32607                           ; BSR set to: 5
 32608   0133A8  0E80               	movlw	128
 32609   0133AA  139C               	iorwf	(___fldiv@b+2)& (0+255),f,b
 32610   0133AC  0E7F               	movlw	127
 32611   0133AE  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 32612   0133B0                     l6657:
 32613                           
 32614                           ; BSR set to: 5
 32615   0133B0  51AA               	movf	___fldiv@sign& (0+255),w,b
 32616   0133B2  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
 32617   0133B4                     
 32618                           ; BSR set to: 5
 32619   0133B4  C59A  F59A         	movff	___fldiv@b,?___fldiv
 32620   0133B8  C59B  F59B         	movff	___fldiv@b+1,?___fldiv+1
 32621   0133BC  C59C  F59C         	movff	___fldiv@b+2,?___fldiv+2
 32622   0133C0  C59D  F59D         	movff	___fldiv@b+3,?___fldiv+3
 32623   0133C4  EF24  F09B         	goto	l2231
 32624   0133C8                     l6663:
 32625                           
 32626                           ; BSR set to: 5
 32627   0133C8  51B1               	movf	___fldiv@bexp& (0+255),w,b
 32628   0133CA  A4D8               	btfss	status,2,c
 32629   0133CC  EFEA  F099         	goto	u4921
 32630   0133D0  EFEC  F099         	goto	u4920
 32631   0133D4                     u4921:
 32632   0133D4  EFF6  F099         	goto	l6671
 32633   0133D8                     u4920:
 32634   0133D8                     
 32635                           ; BSR set to: 5
 32636   0133D8  0E00               	movlw	0
 32637   0133DA  6F9A               	movwf	?___fldiv& (0+255),b
 32638   0133DC  0E00               	movlw	0
 32639   0133DE  6F9B               	movwf	(?___fldiv+1)& (0+255),b
 32640   0133E0  0E00               	movlw	0
 32641   0133E2  6F9C               	movwf	(?___fldiv+2)& (0+255),b
 32642   0133E4  0E00               	movlw	0
 32643   0133E6  6F9D               	movwf	(?___fldiv+3)& (0+255),b
 32644   0133E8  EF24  F09B         	goto	l2231
 32645   0133EC                     l6671:
 32646                           
 32647                           ; BSR set to: 5
 32648   0133EC  51B2               	movf	___fldiv@aexp& (0+255),w,b
 32649   0133EE  C5B1  F5A2         	movff	___fldiv@bexp,??___fldiv
 32650   0133F2  6BA3               	clrf	(??___fldiv+1)& (0+255),b
 32651   0133F4  5FA2               	subwf	??___fldiv& (0+255),f,b
 32652   0133F6  0E00               	movlw	0
 32653   0133F8  5BA3               	subwfb	(??___fldiv+1)& (0+255),f,b
 32654   0133FA  0E7F               	movlw	127
 32655   0133FC  25A2               	addwf	??___fldiv& (0+255),w,b
 32656   0133FE  6FAB               	movwf	___fldiv@new_exp& (0+255),b
 32657   013400  0E00               	movlw	0
 32658   013402  21A3               	addwfc	(??___fldiv+1)& (0+255),w,b
 32659   013404  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
 32660   013406                     
 32661                           ; BSR set to: 5
 32662   013406  C59A  F5A6         	movff	___fldiv@b,___fldiv@rem
 32663   01340A  C59B  F5A7         	movff	___fldiv@b+1,___fldiv@rem+1
 32664   01340E  C59C  F5A8         	movff	___fldiv@b+2,___fldiv@rem+2
 32665   013412  C59D  F5A9         	movff	___fldiv@b+3,___fldiv@rem+3
 32666   013416                     
 32667                           ; BSR set to: 5
 32668   013416  0E00               	movlw	0
 32669   013418  6F9A               	movwf	___fldiv@b& (0+255),b
 32670   01341A  0E00               	movlw	0
 32671   01341C  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32672   01341E  0E00               	movlw	0
 32673   013420  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32674   013422  0E00               	movlw	0
 32675   013424  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32676   013426                     
 32677                           ; BSR set to: 5
 32678   013426  0E00               	movlw	0
 32679   013428  6FAD               	movwf	___fldiv@grs& (0+255),b
 32680   01342A  0E00               	movlw	0
 32681   01342C  6FAE               	movwf	(___fldiv@grs+1)& (0+255),b
 32682   01342E  0E00               	movlw	0
 32683   013430  6FAF               	movwf	(___fldiv@grs+2)& (0+255),b
 32684   013432  0E00               	movlw	0
 32685   013434  6FB0               	movwf	(___fldiv@grs+3)& (0+255),b
 32686   013436                     
 32687                           ; BSR set to: 5
 32688   013436  6BB2               	clrf	___fldiv@aexp& (0+255),b
 32689   013438  EF56  F09A         	goto	l2233
 32690   01343C                     l6681:
 32691                           
 32692                           ; BSR set to: 5
 32693   01343C  51B2               	movf	___fldiv@aexp& (0+255),w,b
 32694   01343E  B4D8               	btfsc	status,2,c
 32695   013440  EF24  F09A         	goto	u4931
 32696   013444  EF26  F09A         	goto	u4930
 32697   013448                     u4931:
 32698   013448  EF3D  F09A         	goto	l6689
 32699   01344C                     u4930:
 32700   01344C                     
 32701                           ; BSR set to: 5
 32702   01344C  90D8               	bcf	status,0,c
 32703   01344E  37A6               	rlcf	___fldiv@rem& (0+255),f,b
 32704   013450  37A7               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 32705   013452  37A8               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 32706   013454  37A9               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 32707   013456  90D8               	bcf	status,0,c
 32708   013458  379A               	rlcf	___fldiv@b& (0+255),f,b
 32709   01345A  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 32710   01345C  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 32711   01345E  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 32712   013460                     
 32713                           ; BSR set to: 5
 32714   013460  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
 32715   013462  EF35  F09A         	goto	u4941
 32716   013466  EF37  F09A         	goto	u4940
 32717   01346A                     u4941:
 32718   01346A  EF38  F09A         	goto	l2236
 32719   01346E                     u4940:
 32720   01346E                     
 32721                           ; BSR set to: 5
 32722   01346E  819A               	bsf	___fldiv@b& (0+255),0,b
 32723   013470                     l2236:
 32724                           
 32725                           ; BSR set to: 5
 32726   013470  90D8               	bcf	status,0,c
 32727   013472  37AD               	rlcf	___fldiv@grs& (0+255),f,b
 32728   013474  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 32729   013476  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 32730   013478  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 32731   01347A                     l6689:
 32732                           
 32733                           ; BSR set to: 5
 32734   01347A  519E               	movf	___fldiv@a& (0+255),w,b
 32735   01347C  5DA6               	subwf	___fldiv@rem& (0+255),w,b
 32736   01347E  519F               	movf	(___fldiv@a+1)& (0+255),w,b
 32737   013480  59A7               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 32738   013482  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
 32739   013484  59A8               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 32740   013486  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
 32741   013488  59A9               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 32742   01348A  A0D8               	btfss	status,0,c
 32743   01348C  EF4A  F09A         	goto	u4951
 32744   013490  EF4C  F09A         	goto	u4950
 32745   013494                     u4951:
 32746   013494  EF55  F09A         	goto	l6695
 32747   013498                     u4950:
 32748   013498                     
 32749                           ; BSR set to: 5
 32750   013498  8DB0               	bsf	(___fldiv@grs+3)& (0+255),6,b
 32751   01349A                     
 32752                           ; BSR set to: 5
 32753   01349A  519E               	movf	___fldiv@a& (0+255),w,b
 32754   01349C  5FA6               	subwf	___fldiv@rem& (0+255),f,b
 32755   01349E  519F               	movf	(___fldiv@a+1)& (0+255),w,b
 32756   0134A0  5BA7               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 32757   0134A2  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
 32758   0134A4  5BA8               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 32759   0134A6  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
 32760   0134A8  5BA9               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 32761   0134AA                     l6695:
 32762                           
 32763                           ; BSR set to: 5
 32764   0134AA  2BB2               	incf	___fldiv@aexp& (0+255),f,b
 32765   0134AC                     l2233:
 32766                           
 32767                           ; BSR set to: 5
 32768   0134AC  0E19               	movlw	25
 32769   0134AE  65B2               	cpfsgt	___fldiv@aexp& (0+255),b
 32770   0134B0  EF5C  F09A         	goto	u4961
 32771   0134B4  EF5E  F09A         	goto	u4960
 32772   0134B8                     u4961:
 32773   0134B8  EF1E  F09A         	goto	l6681
 32774   0134BC                     u4960:
 32775   0134BC                     
 32776                           ; BSR set to: 5
 32777   0134BC  51A6               	movf	___fldiv@rem& (0+255),w,b
 32778   0134BE  11A7               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 32779   0134C0  11A8               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 32780   0134C2  11A9               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 32781   0134C4  B4D8               	btfsc	status,2,c
 32782   0134C6  EF67  F09A         	goto	u4971
 32783   0134CA  EF69  F09A         	goto	u4970
 32784   0134CE                     u4971:
 32785   0134CE  EF81  F09A         	goto	l6707
 32786   0134D2                     u4970:
 32787   0134D2                     
 32788                           ; BSR set to: 5
 32789   0134D2  81AD               	bsf	___fldiv@grs& (0+255),0,b
 32790   0134D4  EF81  F09A         	goto	l6707
 32791   0134D8                     l6701:
 32792                           
 32793                           ; BSR set to: 5
 32794   0134D8  90D8               	bcf	status,0,c
 32795   0134DA  379A               	rlcf	___fldiv@b& (0+255),f,b
 32796   0134DC  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
 32797   0134DE  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
 32798   0134E0  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
 32799   0134E2                     
 32800                           ; BSR set to: 5
 32801   0134E2  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
 32802   0134E4  EF76  F09A         	goto	u4981
 32803   0134E8  EF78  F09A         	goto	u4980
 32804   0134EC                     u4981:
 32805   0134EC  EF79  F09A         	goto	l2242
 32806   0134F0                     u4980:
 32807   0134F0                     
 32808                           ; BSR set to: 5
 32809   0134F0  819A               	bsf	___fldiv@b& (0+255),0,b
 32810   0134F2                     l2242:
 32811                           
 32812                           ; BSR set to: 5
 32813   0134F2  90D8               	bcf	status,0,c
 32814   0134F4  37AD               	rlcf	___fldiv@grs& (0+255),f,b
 32815   0134F6  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 32816   0134F8  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 32817   0134FA  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 32818   0134FC  07AB               	decf	___fldiv@new_exp& (0+255),f,b
 32819   0134FE  A0D8               	btfss	status,0,c
 32820   013500  07AC               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 32821   013502                     l6707:
 32822                           
 32823                           ; BSR set to: 5
 32824   013502  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
 32825   013504  EF86  F09A         	goto	u4991
 32826   013508  EF88  F09A         	goto	u4990
 32827   01350C                     u4991:
 32828   01350C  EF6C  F09A         	goto	l6701
 32829   013510                     u4990:
 32830   013510                     
 32831                           ; BSR set to: 5
 32832   013510  6BB2               	clrf	___fldiv@aexp& (0+255),b
 32833   013512  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
 32834   013514  EF8E  F09A         	goto	u5001
 32835   013518  EF90  F09A         	goto	u5000
 32836   01351C                     u5001:
 32837   01351C  EFB4  F09A         	goto	l2244
 32838   013520                     u5000:
 32839   013520                     
 32840                           ; BSR set to: 5
 32841   013520  0EFF               	movlw	255
 32842   013522  15AD               	andwf	___fldiv@grs& (0+255),w,b
 32843   013524  6FA2               	movwf	??___fldiv& (0+255),b
 32844   013526  0EFF               	movlw	255
 32845   013528  15AE               	andwf	(___fldiv@grs+1)& (0+255),w,b
 32846   01352A  6FA3               	movwf	(??___fldiv+1)& (0+255),b
 32847   01352C  0EFF               	movlw	255
 32848   01352E  15AF               	andwf	(___fldiv@grs+2)& (0+255),w,b
 32849   013530  6FA4               	movwf	(??___fldiv+2)& (0+255),b
 32850   013532  0E7F               	movlw	127
 32851   013534  15B0               	andwf	(___fldiv@grs+3)& (0+255),w,b
 32852   013536  6FA5               	movwf	(??___fldiv+3)& (0+255),b
 32853   013538  51A2               	movf	??___fldiv& (0+255),w,b
 32854   01353A  11A3               	iorwf	(??___fldiv+1)& (0+255),w,b
 32855   01353C  11A4               	iorwf	(??___fldiv+2)& (0+255),w,b
 32856   01353E  11A5               	iorwf	(??___fldiv+3)& (0+255),w,b
 32857   013540  B4D8               	btfsc	status,2,c
 32858   013542  EFA5  F09A         	goto	u5011
 32859   013546  EFA7  F09A         	goto	u5010
 32860   01354A                     u5011:
 32861   01354A  EFAB  F09A         	goto	l2245
 32862   01354E                     u5010:
 32863   01354E                     l6711:
 32864                           
 32865                           ; BSR set to: 5
 32866   01354E  0E01               	movlw	1
 32867   013550  6FB2               	movwf	___fldiv@aexp& (0+255),b
 32868   013552  EFB4  F09A         	goto	l2244
 32869   013556                     l2245:
 32870                           
 32871                           ; BSR set to: 5
 32872   013556  A19A               	btfss	___fldiv@b& (0+255),0,b
 32873   013558  EFB0  F09A         	goto	u5021
 32874   01355C  EFB2  F09A         	goto	u5020
 32875   013560                     u5021:
 32876   013560  EFB4  F09A         	goto	l2244
 32877   013564                     u5020:
 32878   013564  EFA7  F09A         	goto	l6711
 32879   013568                     l2244:
 32880                           
 32881                           ; BSR set to: 5
 32882   013568  51B2               	movf	___fldiv@aexp& (0+255),w,b
 32883   01356A  B4D8               	btfsc	status,2,c
 32884   01356C  EFBA  F09A         	goto	u5031
 32885   013570  EFBC  F09A         	goto	u5030
 32886   013574                     u5031:
 32887   013574  EFE0  F09A         	goto	l6723
 32888   013578                     u5030:
 32889   013578                     
 32890                           ; BSR set to: 5
 32891   013578  0E01               	movlw	1
 32892   01357A  279A               	addwf	___fldiv@b& (0+255),f,b
 32893   01357C  0E00               	movlw	0
 32894   01357E  239B               	addwfc	(___fldiv@b+1)& (0+255),f,b
 32895   013580  239C               	addwfc	(___fldiv@b+2)& (0+255),f,b
 32896   013582  239D               	addwfc	(___fldiv@b+3)& (0+255),f,b
 32897   013584                     
 32898                           ; BSR set to: 5
 32899   013584  A19D               	btfss	(___fldiv@b+3)& (0+255),0,b
 32900   013586  EFC7  F09A         	goto	u5041
 32901   01358A  EFC9  F09A         	goto	u5040
 32902   01358E                     u5041:
 32903   01358E  EFE0  F09A         	goto	l6723
 32904   013592                     u5040:
 32905   013592                     
 32906                           ; BSR set to: 5
 32907   013592  C59A  F5A2         	movff	___fldiv@b,??___fldiv
 32908   013596  C59B  F5A3         	movff	___fldiv@b+1,??___fldiv+1
 32909   01359A  C59C  F5A4         	movff	___fldiv@b+2,??___fldiv+2
 32910   01359E  C59D  F5A5         	movff	___fldiv@b+3,??___fldiv+3
 32911   0135A2  35A5               	rlcf	(??___fldiv+3)& (0+255),w,b
 32912   0135A4  33A5               	rrcf	(??___fldiv+3)& (0+255),f,b
 32913   0135A6  33A4               	rrcf	(??___fldiv+2)& (0+255),f,b
 32914   0135A8  33A3               	rrcf	(??___fldiv+1)& (0+255),f,b
 32915   0135AA  33A2               	rrcf	??___fldiv& (0+255),f,b
 32916   0135AC  C5A2  F59A         	movff	??___fldiv,___fldiv@b
 32917   0135B0  C5A3  F59B         	movff	??___fldiv+1,___fldiv@b+1
 32918   0135B4  C5A4  F59C         	movff	??___fldiv+2,___fldiv@b+2
 32919   0135B8  C5A5  F59D         	movff	??___fldiv+3,___fldiv@b+3
 32920   0135BC                     
 32921                           ; BSR set to: 5
 32922   0135BC  4BAB               	infsnz	___fldiv@new_exp& (0+255),f,b
 32923   0135BE  2BAC               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 32924   0135C0                     l6723:
 32925                           
 32926                           ; BSR set to: 5
 32927   0135C0  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 32928   0135C2  EFEB  F09A         	goto	u5051
 32929   0135C6  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 32930   0135C8  E108               	bnz	u5050
 32931   0135CA  29AB               	incf	___fldiv@new_exp& (0+255),w,b
 32932   0135CC  A0D8               	btfss	status,0,c
 32933   0135CE  EFEB  F09A         	goto	u5051
 32934   0135D2  EFED  F09A         	goto	u5050
 32935   0135D6                     u5051:
 32936   0135D6  EFF8  F09A         	goto	l6727
 32937   0135DA                     u5050:
 32938   0135DA                     
 32939                           ; BSR set to: 5
 32940   0135DA  0E00               	movlw	0
 32941   0135DC  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
 32942   0135DE  69AB               	setf	___fldiv@new_exp& (0+255),b
 32943   0135E0  0E00               	movlw	0
 32944   0135E2  6F9A               	movwf	___fldiv@b& (0+255),b
 32945   0135E4  0E00               	movlw	0
 32946   0135E6  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32947   0135E8  0E00               	movlw	0
 32948   0135EA  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32949   0135EC  0E00               	movlw	0
 32950   0135EE  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32951   0135F0                     l6727:
 32952                           
 32953                           ; BSR set to: 5
 32954   0135F0  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 32955   0135F2  EF05  F09B         	goto	u5060
 32956   0135F6  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 32957   0135F8  E106               	bnz	u5061
 32958   0135FA  05AB               	decf	___fldiv@new_exp& (0+255),w,b
 32959   0135FC  B0D8               	btfsc	status,0,c
 32960   0135FE  EF03  F09B         	goto	u5061
 32961   013602  EF05  F09B         	goto	u5060
 32962   013606                     u5061:
 32963   013606  EF12  F09B         	goto	l6733
 32964   01360A                     u5060:
 32965   01360A                     
 32966                           ; BSR set to: 5
 32967   01360A  0E00               	movlw	0
 32968   01360C  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
 32969   01360E  0E00               	movlw	0
 32970   013610  6FAB               	movwf	___fldiv@new_exp& (0+255),b
 32971   013612  0E00               	movlw	0
 32972   013614  6F9A               	movwf	___fldiv@b& (0+255),b
 32973   013616  0E00               	movlw	0
 32974   013618  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
 32975   01361A  0E00               	movlw	0
 32976   01361C  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
 32977   01361E  0E00               	movlw	0
 32978   013620  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 32979   013622                     
 32980                           ; BSR set to: 5
 32981   013622  6BAA               	clrf	___fldiv@sign& (0+255),b
 32982   013624                     l6733:
 32983                           
 32984                           ; BSR set to: 5
 32985   013624  C5AB  F5B1         	movff	___fldiv@new_exp,___fldiv@bexp
 32986   013628                     
 32987                           ; BSR set to: 5
 32988   013628  A1B1               	btfss	___fldiv@bexp& (0+255),0,b
 32989   01362A  EF19  F09B         	goto	u5071
 32990   01362E  EF1B  F09B         	goto	u5070
 32991   013632                     u5071:
 32992   013632  EF1E  F09B         	goto	l6739
 32993   013636                     u5070:
 32994   013636                     
 32995                           ; BSR set to: 5
 32996   013636  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
 32997   013638  EF1F  F09B         	goto	l6741
 32998   01363C                     l6739:
 32999                           
 33000                           ; BSR set to: 5
 33001   01363C  9F9C               	bcf	(___fldiv@b+2)& (0+255),7,b
 33002   01363E                     l6741:
 33003                           
 33004                           ; BSR set to: 5
 33005   01363E  90D8               	bcf	status,0,c
 33006   013640  31B1               	rrcf	___fldiv@bexp& (0+255),w,b
 33007   013642  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
 33008   013644  EFD8  F099         	goto	l6657
 33009   013648                     l2231:
 33010                           
 33011                           ; BSR set to: 5
 33012   013648  0012               	return		;funcret
 33013   01364A                     __end_of___fldiv:
 33014                           	callstack 0
 33015                           
 33016 ;; *************** function _HC_SR04_Trigger_Pulse *****************
 33017 ;; Defined at:
 33018 ;;		line 50 in file "HC_SR04.c"
 33019 ;; Parameters:    Size  Location     Type
 33020 ;;		None
 33021 ;; Auto vars:     Size  Location     Type
 33022 ;;		None
 33023 ;; Return value:  Size  Location     Type
 33024 ;;                  1    wreg      void 
 33025 ;; Registers used:
 33026 ;;		wreg
 33027 ;; Tracked objects:
 33028 ;;		On entry : 0/0
 33029 ;;		On exit  : 0/0
 33030 ;;		Unchanged: 0/0
 33031 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33036 ;;Total ram usage:        0 bytes
 33037 ;; Hardware stack levels used: 1
 33038 ;; Hardware stack levels required when called: 4
 33039 ;; This function calls:
 33040 ;;		Nothing
 33041 ;; This function is called by:
 33042 ;;		_HC_SR04_Read_Distance_CM
 33043 ;; This function uses a non-reentrant model
 33044 ;;
 33045                           
 33046                           	psect	text92
 33047   01673E                     __ptext92:
 33048                           	callstack 0
 33049   01673E                     _HC_SR04_Trigger_Pulse:
 33050                           	callstack 121
 33051   01673E  98C1               	bcf	193,4,c	;volatile
 33052   016740                     
 33053                           ;HC_SR04.c: 52:     _delay((unsigned long)((2)*(64000000U/4000000.0)));
 33054   016740  0E0A               	movlw	10
 33055   016742                     u10907:
 33056   016742  2EE8               	decfsz	wreg,f,c
 33057   016744  D7FE               	bra	u10907
 33058   016746  D000               	nop2	
 33059   016748  88C1               	bsf	193,4,c	;volatile
 33060   01674A                     
 33061                           ;HC_SR04.c: 54:     _delay((unsigned long)((10)*(64000000U/4000000.0)));
 33062   01674A  0E35               	movlw	53
 33063   01674C                     u10917:
 33064   01674C  2EE8               	decfsz	wreg,f,c
 33065   01674E  D7FE               	bra	u10917
 33066   016750  0000               	nop	
 33067   016752  98C1               	bcf	193,4,c	;volatile
 33068   016754  0012               	return		;funcret
 33069   016756                     __end_of_HC_SR04_Trigger_Pulse:
 33070                           	callstack 0
 33071                           
 33072 ;; *************** function _HC_SR04_Measure_Echo_Time *****************
 33073 ;; Defined at:
 33074 ;;		line 63 in file "HC_SR04.c"
 33075 ;; Parameters:    Size  Location     Type
 33076 ;;		None
 33077 ;; Auto vars:     Size  Location     Type
 33078 ;;  timeout_coun    4   35[BANK5 ] unsigned long 
 33079 ;;  pulse_durati    4   27[BANK5 ] unsigned long 
 33080 ;;  end_time        2   33[BANK5 ] unsigned short 
 33081 ;;  start_time      2   31[BANK5 ] unsigned short 
 33082 ;; Return value:  Size  Location     Type
 33083 ;;                  4   17[BANK5 ] unsigned long 
 33084 ;; Registers used:
 33085 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33086 ;; Tracked objects:
 33087 ;;		On entry : 0/0
 33088 ;;		On exit  : 0/0
 33089 ;;		Unchanged: 0/0
 33090 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33092 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33093 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33094 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33095 ;;Total ram usage:       22 bytes
 33096 ;; Hardware stack levels used: 1
 33097 ;; Hardware stack levels required when called: 5
 33098 ;; This function calls:
 33099 ;;		_TMR0_CounterGet
 33100 ;;		___flmul
 33101 ;;		___fltol
 33102 ;;		___xxtofl
 33103 ;; This function is called by:
 33104 ;;		_HC_SR04_Read_Distance_CM
 33105 ;; This function uses a non-reentrant model
 33106 ;;
 33107                           
 33108                           	psect	text93
 33109   013BD0                     __ptext93:
 33110                           	callstack 0
 33111   013BD0                     _HC_SR04_Measure_Echo_Time:
 33112                           	callstack 120
 33113   013BD0                     
 33114                           ;HC_SR04.c: 64:     uint16_t start_time, end_time;;HC_SR04.c: 65:     uint32_t pulse_dur
      +                          ation_ticks;;HC_SR04.c: 66:     uint32_t timeout_counter_us = 0;
 33115   013BD0  0E00               	movlw	0
 33116   013BD2  0105               	movlb	5	; () banked
 33117   013BD4  6F83               	movwf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),b
 33118   013BD6  0E00               	movlw	0
 33119   013BD8  6F84               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),b
 33120   013BDA  0E00               	movlw	0
 33121   013BDC  6F85               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),b
 33122   013BDE  0E00               	movlw	0
 33123   013BE0  6F86               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),b
 33124                           
 33125                           ;HC_SR04.c: 70:     while(PORTAbits.RA5 == 1) {
 33126   013BE2  EF1D  F09E         	goto	l10497
 33127   013BE6                     l10489:
 33128                           
 33129                           ;HC_SR04.c: 71:         if (timeout_counter_us++ > (25000 * 2UL)) return 0;
 33130   013BE6  C583  F575         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us,??_HC_SR04_Measure_Echo_Time
 33131   013BEA  C584  F576         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+1,??_HC_SR04_Measure_Echo_Time+1
 33132   013BEE  C585  F577         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+2,??_HC_SR04_Measure_Echo_Time+2
 33133   013BF2  C586  F578         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+3,??_HC_SR04_Measure_Echo_Time+3
 33134   013BF6  0105               	movlb	5	; () banked
 33135   013BF8  2B83               	incf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),f,b
 33136   013BFA  0E00               	movlw	0
 33137   013BFC  2384               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),f,b
 33138   013BFE  2385               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),f,b
 33139   013C00  2386               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),f,b
 33140   013C02  5178               	movf	(??_HC_SR04_Measure_Echo_Time+3)& (0+255),w,b
 33141   013C04  1177               	iorwf	(??_HC_SR04_Measure_Echo_Time+2)& (0+255),w,b
 33142   013C06  E10B               	bnz	u9730
 33143   013C08  0E51               	movlw	81
 33144   013C0A  5D75               	subwf	??_HC_SR04_Measure_Echo_Time& (0+255),w,b
 33145   013C0C  0EC3               	movlw	195
 33146   013C0E  5976               	subwfb	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),w,b
 33147   013C10  A0D8               	btfss	status,0,c
 33148   013C12  EF0D  F09E         	goto	u9731
 33149   013C16  EF0F  F09E         	goto	u9730
 33150   013C1A                     u9731:
 33151   013C1A  EF19  F09E         	goto	l10495
 33152   013C1E                     u9730:
 33153   013C1E                     l10491:
 33154                           
 33155                           ; BSR set to: 5
 33156   013C1E  0E00               	movlw	0
 33157   013C20  6F71               	movwf	?_HC_SR04_Measure_Echo_Time& (0+255),b
 33158   013C22  0E00               	movlw	0
 33159   013C24  6F72               	movwf	(?_HC_SR04_Measure_Echo_Time+1)& (0+255),b
 33160   013C26  0E00               	movlw	0
 33161   013C28  6F73               	movwf	(?_HC_SR04_Measure_Echo_Time+2)& (0+255),b
 33162   013C2A  0E00               	movlw	0
 33163   013C2C  6F74               	movwf	(?_HC_SR04_Measure_Echo_Time+3)& (0+255),b
 33164   013C2E  EFFB  F09E         	goto	l1434
 33165   013C32                     l10495:
 33166                           
 33167                           ; BSR set to: 5
 33168                           ;HC_SR04.c: 72:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
 33169   013C32  0E05               	movlw	5
 33170   013C34                     u10927:
 33171   013C34  2EE8               	decfsz	wreg,f,c
 33172   013C36  D7FE               	bra	u10927
 33173   013C38  0000               	nop	
 33174   013C3A                     l10497:
 33175                           
 33176                           ;HC_SR04.c: 70:     while(PORTAbits.RA5 == 1) {
 33177   013C3A  BACE               	btfsc	206,5,c	;volatile
 33178   013C3C  EF22  F09E         	goto	u9741
 33179   013C40  EF24  F09E         	goto	u9740
 33180   013C44                     u9741:
 33181   013C44  EFF3  F09D         	goto	l10489
 33182   013C48                     u9740:
 33183   013C48                     
 33184                           ;HC_SR04.c: 74:     timeout_counter_us = 0;
 33185   013C48  0E00               	movlw	0
 33186   013C4A  0105               	movlb	5	; () banked
 33187   013C4C  6F83               	movwf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),b
 33188   013C4E  0E00               	movlw	0
 33189   013C50  6F84               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),b
 33190   013C52  0E00               	movlw	0
 33191   013C54  6F85               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),b
 33192   013C56  0E00               	movlw	0
 33193   013C58  6F86               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),b
 33194                           
 33195                           ;HC_SR04.c: 77:     while(PORTAbits.RA5 == 0) {
 33196   013C5A  EF51  F09E         	goto	l10509
 33197   013C5E                     l10501:
 33198                           
 33199                           ;HC_SR04.c: 78:         if (timeout_counter_us++ > 25000) return 0;
 33200   013C5E  C583  F575         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us,??_HC_SR04_Measure_Echo_Time
 33201   013C62  C584  F576         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+1,??_HC_SR04_Measure_Echo_Time+1
 33202   013C66  C585  F577         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+2,??_HC_SR04_Measure_Echo_Time+2
 33203   013C6A  C586  F578         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+3,??_HC_SR04_Measure_Echo_Time+3
 33204   013C6E  0105               	movlb	5	; () banked
 33205   013C70  2B83               	incf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),f,b
 33206   013C72  0E00               	movlw	0
 33207   013C74  2384               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),f,b
 33208   013C76  2385               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),f,b
 33209   013C78  2386               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),f,b
 33210   013C7A  5178               	movf	(??_HC_SR04_Measure_Echo_Time+3)& (0+255),w,b
 33211   013C7C  1177               	iorwf	(??_HC_SR04_Measure_Echo_Time+2)& (0+255),w,b
 33212   013C7E  E10B               	bnz	u9750
 33213   013C80  0EA9               	movlw	169
 33214   013C82  5D75               	subwf	??_HC_SR04_Measure_Echo_Time& (0+255),w,b
 33215   013C84  0E61               	movlw	97
 33216   013C86  5976               	subwfb	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),w,b
 33217   013C88  A0D8               	btfss	status,0,c
 33218   013C8A  EF49  F09E         	goto	u9751
 33219   013C8E  EF4B  F09E         	goto	u9750
 33220   013C92                     u9751:
 33221   013C92  EF4D  F09E         	goto	l10507
 33222   013C96                     u9750:
 33223   013C96  EF0F  F09E         	goto	l10491
 33224   013C9A                     l10507:
 33225                           
 33226                           ; BSR set to: 5
 33227                           ;HC_SR04.c: 79:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
 33228   013C9A  0E05               	movlw	5
 33229   013C9C                     u10937:
 33230   013C9C  2EE8               	decfsz	wreg,f,c
 33231   013C9E  D7FE               	bra	u10937
 33232   013CA0  0000               	nop	
 33233   013CA2                     l10509:
 33234                           
 33235                           ;HC_SR04.c: 77:     while(PORTAbits.RA5 == 0) {
 33236   013CA2  AACE               	btfss	206,5,c	;volatile
 33237   013CA4  EF56  F09E         	goto	u9761
 33238   013CA8  EF58  F09E         	goto	u9760
 33239   013CAC                     u9761:
 33240   013CAC  EF2F  F09E         	goto	l10501
 33241   013CB0                     u9760:
 33242   013CB0                     
 33243                           ;HC_SR04.c: 82:     start_time = TMR0_CounterGet();
 33244   013CB0  EC82  F0B3         	call	_TMR0_CounterGet	;wreg free
 33245   013CB4  C511  F57F         	movff	?_TMR0_CounterGet,HC_SR04_Measure_Echo_Time@start_time
 33246   013CB8  C512  F580         	movff	?_TMR0_CounterGet+1,HC_SR04_Measure_Echo_Time@start_time+1
 33247   013CBC                     
 33248                           ;HC_SR04.c: 83:     timeout_counter_us = 0;
 33249   013CBC  0E00               	movlw	0
 33250   013CBE  0105               	movlb	5	; () banked
 33251   013CC0  6F83               	movwf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),b
 33252   013CC2  0E00               	movlw	0
 33253   013CC4  6F84               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),b
 33254   013CC6  0E00               	movlw	0
 33255   013CC8  6F85               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),b
 33256   013CCA  0E00               	movlw	0
 33257   013CCC  6F86               	movwf	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),b
 33258                           
 33259                           ;HC_SR04.c: 86:     while(PORTAbits.RA5 == 1) {
 33260   013CCE  EF8B  F09E         	goto	l10523
 33261   013CD2                     l10515:
 33262                           
 33263                           ;HC_SR04.c: 87:         if (timeout_counter_us++ > 25000) {
 33264   013CD2  C583  F575         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us,??_HC_SR04_Measure_Echo_Time
 33265   013CD6  C584  F576         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+1,??_HC_SR04_Measure_Echo_Time+1
 33266   013CDA  C585  F577         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+2,??_HC_SR04_Measure_Echo_Time+2
 33267   013CDE  C586  F578         	movff	HC_SR04_Measure_Echo_Time@timeout_counter_us+3,??_HC_SR04_Measure_Echo_Time+3
 33268   013CE2  0105               	movlb	5	; () banked
 33269   013CE4  2B83               	incf	HC_SR04_Measure_Echo_Time@timeout_counter_us& (0+255),f,b
 33270   013CE6  0E00               	movlw	0
 33271   013CE8  2384               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+1)& (0+255),f,b
 33272   013CEA  2385               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+2)& (0+255),f,b
 33273   013CEC  2386               	addwfc	(HC_SR04_Measure_Echo_Time@timeout_counter_us+3)& (0+255),f,b
 33274   013CEE  5178               	movf	(??_HC_SR04_Measure_Echo_Time+3)& (0+255),w,b
 33275   013CF0  1177               	iorwf	(??_HC_SR04_Measure_Echo_Time+2)& (0+255),w,b
 33276   013CF2  E10B               	bnz	u9770
 33277   013CF4  0EA9               	movlw	169
 33278   013CF6  5D75               	subwf	??_HC_SR04_Measure_Echo_Time& (0+255),w,b
 33279   013CF8  0E61               	movlw	97
 33280   013CFA  5976               	subwfb	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),w,b
 33281   013CFC  A0D8               	btfss	status,0,c
 33282   013CFE  EF83  F09E         	goto	u9771
 33283   013D02  EF85  F09E         	goto	u9770
 33284   013D06                     u9771:
 33285   013D06  EF87  F09E         	goto	l10521
 33286   013D0A                     u9770:
 33287   013D0A  EF0F  F09E         	goto	l10491
 33288   013D0E                     l10521:
 33289                           
 33290                           ; BSR set to: 5
 33291                           ;HC_SR04.c: 91:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
 33292   013D0E  0E05               	movlw	5
 33293   013D10                     u10947:
 33294   013D10  2EE8               	decfsz	wreg,f,c
 33295   013D12  D7FE               	bra	u10947
 33296   013D14  0000               	nop	
 33297   013D16                     l10523:
 33298                           
 33299                           ;HC_SR04.c: 86:     while(PORTAbits.RA5 == 1) {
 33300   013D16  BACE               	btfsc	206,5,c	;volatile
 33301   013D18  EF90  F09E         	goto	u9781
 33302   013D1C  EF92  F09E         	goto	u9780
 33303   013D20                     u9781:
 33304   013D20  EF69  F09E         	goto	l10515
 33305   013D24                     u9780:
 33306   013D24                     
 33307                           ;HC_SR04.c: 94:     end_time = TMR0_CounterGet();
 33308   013D24  EC82  F0B3         	call	_TMR0_CounterGet	;wreg free
 33309   013D28  C511  F581         	movff	?_TMR0_CounterGet,HC_SR04_Measure_Echo_Time@end_time
 33310   013D2C  C512  F582         	movff	?_TMR0_CounterGet+1,HC_SR04_Measure_Echo_Time@end_time+1
 33311   013D30                     
 33312                           ;HC_SR04.c: 97:     if (end_time < start_time) {
 33313   013D30  0105               	movlb	5	; () banked
 33314   013D32  517F               	movf	HC_SR04_Measure_Echo_Time@start_time& (0+255),w,b
 33315   013D34  5D81               	subwf	HC_SR04_Measure_Echo_Time@end_time& (0+255),w,b
 33316   013D36  5180               	movf	(HC_SR04_Measure_Echo_Time@start_time+1)& (0+255),w,b
 33317   013D38  5982               	subwfb	(HC_SR04_Measure_Echo_Time@end_time+1)& (0+255),w,b
 33318   013D3A  B0D8               	btfsc	status,0,c
 33319   013D3C  EFA2  F09E         	goto	u9791
 33320   013D40  EFA4  F09E         	goto	u9790
 33321   013D44                     u9791:
 33322   013D44  EFC0  F09E         	goto	l10531
 33323   013D48                     u9790:
 33324   013D48                     
 33325                           ; BSR set to: 5
 33326                           ;HC_SR04.c: 98:         pulse_duration_ticks = (uint32_t)(0xFFFF - start_time) + end_tim
      +                          e + 1;
 33327   013D48  1D7F               	comf	HC_SR04_Measure_Echo_Time@start_time& (0+255),w,b
 33328   013D4A  6F75               	movwf	??_HC_SR04_Measure_Echo_Time& (0+255),b
 33329   013D4C  1D80               	comf	(HC_SR04_Measure_Echo_Time@start_time+1)& (0+255),w,b
 33330   013D4E  6F76               	movwf	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),b
 33331   013D50  5175               	movf	??_HC_SR04_Measure_Echo_Time& (0+255),w,b
 33332   013D52  2581               	addwf	HC_SR04_Measure_Echo_Time@end_time& (0+255),w,b
 33333   013D54  6F77               	movwf	(??_HC_SR04_Measure_Echo_Time+2)& (0+255),b
 33334   013D56  5176               	movf	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),w,b
 33335   013D58  2182               	addwfc	(HC_SR04_Measure_Echo_Time@end_time+1)& (0+255),w,b
 33336   013D5A  6F78               	movwf	(??_HC_SR04_Measure_Echo_Time+3)& (0+255),b
 33337   013D5C  6B79               	clrf	(??_HC_SR04_Measure_Echo_Time+4)& (0+255),b
 33338   013D5E  B0D8               	btfsc	status,0,c
 33339   013D60  2B79               	incf	(??_HC_SR04_Measure_Echo_Time+4)& (0+255),f,b
 33340   013D62  6B7A               	clrf	(??_HC_SR04_Measure_Echo_Time+5)& (0+255),b
 33341   013D64  0E01               	movlw	1
 33342   013D66  2577               	addwf	(??_HC_SR04_Measure_Echo_Time+2)& (0+255),w,b
 33343   013D68  6F7B               	movwf	HC_SR04_Measure_Echo_Time@pulse_duration_ticks& (0+255),b
 33344   013D6A  0E00               	movlw	0
 33345   013D6C  2178               	addwfc	(??_HC_SR04_Measure_Echo_Time+3)& (0+255),w,b
 33346   013D6E  6F7C               	movwf	(HC_SR04_Measure_Echo_Time@pulse_duration_ticks+1)& (0+255),b
 33347   013D70  0E00               	movlw	0
 33348   013D72  2179               	addwfc	(??_HC_SR04_Measure_Echo_Time+4)& (0+255),w,b
 33349   013D74  6F7D               	movwf	(HC_SR04_Measure_Echo_Time@pulse_duration_ticks+2)& (0+255),b
 33350   013D76  0E00               	movlw	0
 33351   013D78  217A               	addwfc	(??_HC_SR04_Measure_Echo_Time+5)& (0+255),w,b
 33352   013D7A  6F7E               	movwf	(HC_SR04_Measure_Echo_Time@pulse_duration_ticks+3)& (0+255),b
 33353                           
 33354                           ;HC_SR04.c: 99:     } else {
 33355   013D7C  EFCC  F09E         	goto	l10533
 33356   013D80                     l10531:
 33357                           
 33358                           ; BSR set to: 5
 33359                           ;HC_SR04.c: 100:         pulse_duration_ticks = end_time - start_time;
 33360   013D80  517F               	movf	HC_SR04_Measure_Echo_Time@start_time& (0+255),w,b
 33361   013D82  5D81               	subwf	HC_SR04_Measure_Echo_Time@end_time& (0+255),w,b
 33362   013D84  6F75               	movwf	??_HC_SR04_Measure_Echo_Time& (0+255),b
 33363   013D86  5180               	movf	(HC_SR04_Measure_Echo_Time@start_time+1)& (0+255),w,b
 33364   013D88  5982               	subwfb	(HC_SR04_Measure_Echo_Time@end_time+1)& (0+255),w,b
 33365   013D8A  6F76               	movwf	(??_HC_SR04_Measure_Echo_Time+1)& (0+255),b
 33366   013D8C  C575  F57B         	movff	??_HC_SR04_Measure_Echo_Time,HC_SR04_Measure_Echo_Time@pulse_duration_ticks
 33367   013D90  C576  F57C         	movff	??_HC_SR04_Measure_Echo_Time+1,HC_SR04_Measure_Echo_Time@pulse_duration_ticks+1
 33368   013D94  6B7D               	clrf	(HC_SR04_Measure_Echo_Time@pulse_duration_ticks+2)& (0+255),b
 33369   013D96  6B7E               	clrf	(HC_SR04_Measure_Echo_Time@pulse_duration_ticks+3)& (0+255),b
 33370   013D98                     l10533:
 33371                           
 33372                           ; BSR set to: 5
 33373                           ;HC_SR04.c: 104:     return (uint32_t)((float)pulse_duration_ticks * 0.5f);
 33374   013D98  0E00               	movlw	0
 33375   013D9A  6E23               	movwf	___flmul@a^(0+1280),c
 33376   013D9C  0E00               	movlw	0
 33377   013D9E  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 33378   013DA0  0E00               	movlw	0
 33379   013DA2  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 33380   013DA4  0E3F               	movlw	63
 33381   013DA6  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 33382   013DA8  C57B  F511         	movff	HC_SR04_Measure_Echo_Time@pulse_duration_ticks,___xxtofl@val
 33383   013DAC  C57C  F512         	movff	HC_SR04_Measure_Echo_Time@pulse_duration_ticks+1,___xxtofl@val+1
 33384   013DB0  C57D  F513         	movff	HC_SR04_Measure_Echo_Time@pulse_duration_ticks+2,___xxtofl@val+2
 33385   013DB4  C57E  F514         	movff	HC_SR04_Measure_Echo_Time@pulse_duration_ticks+3,___xxtofl@val+3
 33386   013DB8  0E00               	movlw	0
 33387   013DBA  ECCA  F0A1         	call	___xxtofl
 33388   013DBE  C511  F51F         	movff	?___xxtofl,___flmul@b
 33389   013DC2  C512  F520         	movff	?___xxtofl+1,___flmul@b+1
 33390   013DC6  C513  F521         	movff	?___xxtofl+2,___flmul@b+2
 33391   013DCA  C514  F522         	movff	?___xxtofl+3,___flmul@b+3
 33392   013DCE  EC74  F091         	call	___flmul	;wreg free
 33393   013DD2  C51F  F56D         	movff	?___flmul,___fltol@f1
 33394   013DD6  C520  F56E         	movff	?___flmul+1,___fltol@f1+1
 33395   013DDA  C521  F56F         	movff	?___flmul+2,___fltol@f1+2
 33396   013DDE  C522  F570         	movff	?___flmul+3,___fltol@f1+3
 33397   013DE2  ECA1  F0A5         	call	___fltol	;wreg free
 33398   013DE6  C56D  F571         	movff	?___fltol,?_HC_SR04_Measure_Echo_Time
 33399   013DEA  C56E  F572         	movff	?___fltol+1,?_HC_SR04_Measure_Echo_Time+1
 33400   013DEE  C56F  F573         	movff	?___fltol+2,?_HC_SR04_Measure_Echo_Time+2
 33401   013DF2  C570  F574         	movff	?___fltol+3,?_HC_SR04_Measure_Echo_Time+3
 33402   013DF6                     l1434:
 33403   013DF6  0012               	return		;funcret
 33404   013DF8                     __end_of_HC_SR04_Measure_Echo_Time:
 33405                           	callstack 0
 33406                           
 33407 ;; *************** function ___xxtofl *****************
 33408 ;; Defined at:
 33409 ;;		line 10 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/xxtofl.c"
 33410 ;; Parameters:    Size  Location     Type
 33411 ;;  sign            1    wreg     unsigned char 
 33412 ;;  val             4   16[COMRAM] long 
 33413 ;; Auto vars:     Size  Location     Type
 33414 ;;  sign            1   24[COMRAM] unsigned char 
 33415 ;;  arg             4   26[COMRAM] unsigned long 
 33416 ;;  exp             1   25[COMRAM] unsigned char 
 33417 ;; Return value:  Size  Location     Type
 33418 ;;                  4   16[COMRAM] unsigned char 
 33419 ;; Registers used:
 33420 ;;		wreg, status,2, status,0
 33421 ;; Tracked objects:
 33422 ;;		On entry : 0/0
 33423 ;;		On exit  : 0/0
 33424 ;;		Unchanged: 0/0
 33425 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33427 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33429 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33430 ;;Total ram usage:       14 bytes
 33431 ;; Hardware stack levels used: 1
 33432 ;; Hardware stack levels required when called: 4
 33433 ;; This function calls:
 33434 ;;		Nothing
 33435 ;; This function is called by:
 33436 ;;		_main
 33437 ;;		_MPU6050_Calibrate
 33438 ;;		_MPU6050_ReadSensorData
 33439 ;;		_HC_SR04_Measure_Echo_Time
 33440 ;;		_HC_SR04_Read_Distance_CM
 33441 ;; This function uses a non-reentrant model
 33442 ;;
 33443                           
 33444                           	psect	text94
 33445   014394                     __ptext94:
 33446                           	callstack 0
 33447   014394                     ___xxtofl:
 33448                           	callstack 122
 33449                           
 33450                           ;incstack = 0
 33451                           ;___xxtofl@sign stored from wreg
 33452   014394  6E19               	movwf	___xxtofl@sign^(0+1280),c
 33453   014396  5019               	movf	___xxtofl@sign^(0+1280),w,c
 33454   014398  B4D8               	btfsc	status,2,c
 33455   01439A  EFD1  F0A1         	goto	u6311
 33456   01439E  EFD3  F0A1         	goto	u6310
 33457   0143A2                     u6311:
 33458   0143A2  EFF5  F0A1         	goto	l2304
 33459   0143A6                     u6310:
 33460   0143A6  BE14               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 33461   0143A8  EFDA  F0A1         	goto	u6320
 33462   0143AC  EFD8  F0A1         	goto	u6321
 33463   0143B0                     u6321:
 33464   0143B0  EFF5  F0A1         	goto	l2304
 33465   0143B4                     u6320:
 33466   0143B4  C511  F515         	movff	___xxtofl@val,??___xxtofl
 33467   0143B8  C512  F516         	movff	___xxtofl@val+1,??___xxtofl+1
 33468   0143BC  C513  F517         	movff	___xxtofl@val+2,??___xxtofl+2
 33469   0143C0  C514  F518         	movff	___xxtofl@val+3,??___xxtofl+3
 33470   0143C4  1E15               	comf	??___xxtofl^(0+1280),f,c
 33471   0143C6  1E16               	comf	(??___xxtofl+1)^(0+1280),f,c
 33472   0143C8  1E17               	comf	(??___xxtofl+2)^(0+1280),f,c
 33473   0143CA  1E18               	comf	(??___xxtofl+3)^(0+1280),f,c
 33474   0143CC  2A15               	incf	??___xxtofl^(0+1280),f,c
 33475   0143CE  0E00               	movlw	0
 33476   0143D0  2216               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 33477   0143D2  2217               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 33478   0143D4  2218               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 33479   0143D6  C515  F51B         	movff	??___xxtofl,___xxtofl@arg
 33480   0143DA  C516  F51C         	movff	??___xxtofl+1,___xxtofl@arg+1
 33481   0143DE  C517  F51D         	movff	??___xxtofl+2,___xxtofl@arg+2
 33482   0143E2  C518  F51E         	movff	??___xxtofl+3,___xxtofl@arg+3
 33483   0143E6  EFFD  F0A1         	goto	l7567
 33484   0143EA                     l2304:
 33485   0143EA  C511  F51B         	movff	___xxtofl@val,___xxtofl@arg
 33486   0143EE  C512  F51C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 33487   0143F2  C513  F51D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 33488   0143F6  C514  F51E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 33489   0143FA                     l7567:
 33490   0143FA  5011               	movf	___xxtofl@val^(0+1280),w,c
 33491   0143FC  1012               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 33492   0143FE  1013               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 33493   014400  1014               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 33494   014402  A4D8               	btfss	status,2,c
 33495   014404  EF06  F0A2         	goto	u6331
 33496   014408  EF08  F0A2         	goto	u6330
 33497   01440C                     u6331:
 33498   01440C  EF12  F0A2         	goto	l7573
 33499   014410                     u6330:
 33500   014410  0E00               	movlw	0
 33501   014412  6E11               	movwf	?___xxtofl^(0+1280),c
 33502   014414  0E00               	movlw	0
 33503   014416  6E12               	movwf	(?___xxtofl+1)^(0+1280),c
 33504   014418  0E00               	movlw	0
 33505   01441A  6E13               	movwf	(?___xxtofl+2)^(0+1280),c
 33506   01441C  0E00               	movlw	0
 33507   01441E  6E14               	movwf	(?___xxtofl+3)^(0+1280),c
 33508   014420  EFA3  F0A2         	goto	l2307
 33509   014424                     l7573:
 33510   014424  0E96               	movlw	150
 33511   014426  6E1A               	movwf	___xxtofl@exp^(0+1280),c
 33512   014428  EF1C  F0A2         	goto	l7577
 33513   01442C                     l7575:
 33514   01442C  2A1A               	incf	___xxtofl@exp^(0+1280),f,c
 33515   01442E  90D8               	bcf	status,0,c
 33516   014430  321E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 33517   014432  321D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 33518   014434  321C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 33519   014436  321B               	rrcf	___xxtofl@arg^(0+1280),f,c
 33520   014438                     l7577:
 33521   014438  0E00               	movlw	0
 33522   01443A  141B               	andwf	___xxtofl@arg^(0+1280),w,c
 33523   01443C  6E15               	movwf	??___xxtofl^(0+1280),c
 33524   01443E  0E00               	movlw	0
 33525   014440  141C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 33526   014442  6E16               	movwf	(??___xxtofl+1)^(0+1280),c
 33527   014444  0E00               	movlw	0
 33528   014446  141D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 33529   014448  6E17               	movwf	(??___xxtofl+2)^(0+1280),c
 33530   01444A  0EFE               	movlw	254
 33531   01444C  141E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 33532   01444E  6E18               	movwf	(??___xxtofl+3)^(0+1280),c
 33533   014450  5015               	movf	??___xxtofl^(0+1280),w,c
 33534   014452  1016               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 33535   014454  1017               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 33536   014456  1018               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 33537   014458  A4D8               	btfss	status,2,c
 33538   01445A  EF31  F0A2         	goto	u6341
 33539   01445E  EF33  F0A2         	goto	u6340
 33540   014462                     u6341:
 33541   014462  EF16  F0A2         	goto	l7575
 33542   014466                     u6340:
 33543   014466  EF41  F0A2         	goto	l2311
 33544   01446A                     l7579:
 33545   01446A  2A1A               	incf	___xxtofl@exp^(0+1280),f,c
 33546   01446C  0E01               	movlw	1
 33547   01446E  261B               	addwf	___xxtofl@arg^(0+1280),f,c
 33548   014470  0E00               	movlw	0
 33549   014472  221C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 33550   014474  221D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 33551   014476  221E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 33552   014478  90D8               	bcf	status,0,c
 33553   01447A  321E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 33554   01447C  321D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 33555   01447E  321C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 33556   014480  321B               	rrcf	___xxtofl@arg^(0+1280),f,c
 33557   014482                     l2311:
 33558   014482  0E00               	movlw	0
 33559   014484  141B               	andwf	___xxtofl@arg^(0+1280),w,c
 33560   014486  6E15               	movwf	??___xxtofl^(0+1280),c
 33561   014488  0E00               	movlw	0
 33562   01448A  141C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 33563   01448C  6E16               	movwf	(??___xxtofl+1)^(0+1280),c
 33564   01448E  0E00               	movlw	0
 33565   014490  141D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 33566   014492  6E17               	movwf	(??___xxtofl+2)^(0+1280),c
 33567   014494  0EFF               	movlw	255
 33568   014496  141E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 33569   014498  6E18               	movwf	(??___xxtofl+3)^(0+1280),c
 33570   01449A  5015               	movf	??___xxtofl^(0+1280),w,c
 33571   01449C  1016               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 33572   01449E  1017               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 33573   0144A0  1018               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 33574   0144A2  A4D8               	btfss	status,2,c
 33575   0144A4  EF56  F0A2         	goto	u6351
 33576   0144A8  EF58  F0A2         	goto	u6350
 33577   0144AC                     u6351:
 33578   0144AC  EF35  F0A2         	goto	l7579
 33579   0144B0                     u6350:
 33580   0144B0  EF60  F0A2         	goto	l7587
 33581   0144B4                     l7585:
 33582   0144B4  061A               	decf	___xxtofl@exp^(0+1280),f,c
 33583   0144B6  90D8               	bcf	status,0,c
 33584   0144B8  361B               	rlcf	___xxtofl@arg^(0+1280),f,c
 33585   0144BA  361C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 33586   0144BC  361D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 33587   0144BE  361E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 33588   0144C0                     l7587:
 33589   0144C0  BE1D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 33590   0144C2  EF65  F0A2         	goto	u6361
 33591   0144C6  EF67  F0A2         	goto	u6360
 33592   0144CA                     u6361:
 33593   0144CA  EF6F  F0A2         	goto	l2318
 33594   0144CE                     u6360:
 33595   0144CE  0E02               	movlw	2
 33596   0144D0  601A               	cpfslt	___xxtofl@exp^(0+1280),c
 33597   0144D2  EF6D  F0A2         	goto	u6371
 33598   0144D6  EF6F  F0A2         	goto	u6370
 33599   0144DA                     u6371:
 33600   0144DA  EF5A  F0A2         	goto	l7585
 33601   0144DE                     u6370:
 33602   0144DE                     l2318:
 33603   0144DE  B01A               	btfsc	___xxtofl@exp^(0+1280),0,c
 33604   0144E0  EF74  F0A2         	goto	u6381
 33605   0144E4  EF76  F0A2         	goto	u6380
 33606   0144E8                     u6381:
 33607   0144E8  EF77  F0A2         	goto	l7593
 33608   0144EC                     u6380:
 33609   0144EC  9E1D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 33610   0144EE                     l7593:
 33611   0144EE  90D8               	bcf	status,0,c
 33612   0144F0  321A               	rrcf	___xxtofl@exp^(0+1280),f,c
 33613   0144F2  C51A  F515         	movff	___xxtofl@exp,??___xxtofl
 33614   0144F6  6A16               	clrf	(??___xxtofl+1)^(0+1280),c
 33615   0144F8  6A17               	clrf	(??___xxtofl+2)^(0+1280),c
 33616   0144FA  6A18               	clrf	(??___xxtofl+3)^(0+1280),c
 33617   0144FC  C515  F518         	movff	??___xxtofl,??___xxtofl+3
 33618   014500  6A17               	clrf	(??___xxtofl+2)^(0+1280),c
 33619   014502  6A16               	clrf	(??___xxtofl+1)^(0+1280),c
 33620   014504  6A15               	clrf	??___xxtofl^(0+1280),c
 33621   014506  5015               	movf	??___xxtofl^(0+1280),w,c
 33622   014508  121B               	iorwf	___xxtofl@arg^(0+1280),f,c
 33623   01450A  5016               	movf	(??___xxtofl+1)^(0+1280),w,c
 33624   01450C  121C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 33625   01450E  5017               	movf	(??___xxtofl+2)^(0+1280),w,c
 33626   014510  121D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 33627   014512  5018               	movf	(??___xxtofl+3)^(0+1280),w,c
 33628   014514  121E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 33629   014516  5019               	movf	___xxtofl@sign^(0+1280),w,c
 33630   014518  B4D8               	btfsc	status,2,c
 33631   01451A  EF91  F0A2         	goto	u6391
 33632   01451E  EF93  F0A2         	goto	u6390
 33633   014522                     u6391:
 33634   014522  EF9B  F0A2         	goto	l7603
 33635   014526                     u6390:
 33636   014526  BE14               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 33637   014528  EF9A  F0A2         	goto	u6400
 33638   01452C  EF98  F0A2         	goto	u6401
 33639   014530                     u6401:
 33640   014530  EF9B  F0A2         	goto	l7603
 33641   014534                     u6400:
 33642   014534  8E1E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 33643   014536                     l7603:
 33644   014536  C51B  F511         	movff	___xxtofl@arg,?___xxtofl
 33645   01453A  C51C  F512         	movff	___xxtofl@arg+1,?___xxtofl+1
 33646   01453E  C51D  F513         	movff	___xxtofl@arg+2,?___xxtofl+2
 33647   014542  C51E  F514         	movff	___xxtofl@arg+3,?___xxtofl+3
 33648   014546                     l2307:
 33649   014546  0012               	return		;funcret
 33650   014548                     __end_of___xxtofl:
 33651                           	callstack 0
 33652                           
 33653 ;; *************** function ___fltol *****************
 33654 ;; Defined at:
 33655 ;;		line 43 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/fltol.c"
 33656 ;; Parameters:    Size  Location     Type
 33657 ;;  f1              4   13[BANK5 ] unsigned char 
 33658 ;; Auto vars:     Size  Location     Type
 33659 ;;  exp1            1   47[COMRAM] unsigned char 
 33660 ;;  sign1           1   46[COMRAM] unsigned char 
 33661 ;; Return value:  Size  Location     Type
 33662 ;;                  4   13[BANK5 ] long 
 33663 ;; Registers used:
 33664 ;;		wreg, status,2, status,0
 33665 ;; Tracked objects:
 33666 ;;		On entry : 0/0
 33667 ;;		On exit  : 0/0
 33668 ;;		Unchanged: 0/0
 33669 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33670 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33673 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33674 ;;Total ram usage:       10 bytes
 33675 ;; Hardware stack levels used: 1
 33676 ;; Hardware stack levels required when called: 4
 33677 ;; This function calls:
 33678 ;;		Nothing
 33679 ;; This function is called by:
 33680 ;;		_HC_SR04_Measure_Echo_Time
 33681 ;;		_HC_SR04_Read_Distance_CM
 33682 ;;		_efgtoa
 33683 ;;		_CalculateConfidence
 33684 ;; This function uses a non-reentrant model
 33685 ;;
 33686                           
 33687                           	psect	text95
 33688   014B42                     __ptext95:
 33689                           	callstack 0
 33690   014B42                     ___fltol:
 33691                           	callstack 118
 33692   014B42  0105               	movlb	5	; () banked
 33693   014B44  356F               	rlcf	(___fltol@f1+2)& (0+255),w,b
 33694   014B46  3570               	rlcf	(___fltol@f1+3)& (0+255),w,b
 33695   014B48  6E30               	movwf	___fltol@exp1^(0+1280),c
 33696   014B4A  5030               	movf	___fltol@exp1^(0+1280),w,c
 33697   014B4C  A4D8               	btfss	status,2,c
 33698   014B4E  EFAB  F0A5         	goto	u8891
 33699   014B52  EFAD  F0A5         	goto	u8890
 33700   014B56                     u8891:
 33701   014B56  EFB7  F0A5         	goto	l9857
 33702   014B5A                     u8890:
 33703   014B5A                     l9853:
 33704                           
 33705                           ; BSR set to: 5
 33706   014B5A  0E00               	movlw	0
 33707   014B5C  6F6D               	movwf	?___fltol& (0+255),b
 33708   014B5E  0E00               	movlw	0
 33709   014B60  6F6E               	movwf	(?___fltol+1)& (0+255),b
 33710   014B62  0E00               	movlw	0
 33711   014B64  6F6F               	movwf	(?___fltol+2)& (0+255),b
 33712   014B66  0E00               	movlw	0
 33713   014B68  6F70               	movwf	(?___fltol+3)& (0+255),b
 33714   014B6A  EF24  F0A6         	goto	l1946
 33715   014B6E                     l9857:
 33716                           
 33717                           ; BSR set to: 5
 33718   014B6E  C56D  F52B         	movff	___fltol@f1,??___fltol
 33719   014B72  C56E  F52C         	movff	___fltol@f1+1,??___fltol+1
 33720   014B76  C56F  F52D         	movff	___fltol@f1+2,??___fltol+2
 33721   014B7A  C570  F52E         	movff	___fltol@f1+3,??___fltol+3
 33722   014B7E  0E20               	movlw	32
 33723   014B80  EFC7  F0A5         	goto	u8900
 33724   014B84                     u8905:
 33725   014B84  90D8               	bcf	status,0,c
 33726   014B86  322E               	rrcf	(??___fltol+3)^(0+1280),f,c
 33727   014B88  322D               	rrcf	(??___fltol+2)^(0+1280),f,c
 33728   014B8A  322C               	rrcf	(??___fltol+1)^(0+1280),f,c
 33729   014B8C  322B               	rrcf	??___fltol^(0+1280),f,c
 33730   014B8E                     u8900:
 33731   014B8E  2EE8               	decfsz	wreg,f,c
 33732   014B90  EFC2  F0A5         	goto	u8905
 33733   014B94  502B               	movf	??___fltol^(0+1280),w,c
 33734   014B96  6E2F               	movwf	___fltol@sign1^(0+1280),c
 33735   014B98                     
 33736                           ; BSR set to: 5
 33737   014B98  8F6F               	bsf	(___fltol@f1+2)& (0+255),7,b
 33738   014B9A                     
 33739                           ; BSR set to: 5
 33740   014B9A  0EFF               	movlw	255
 33741   014B9C  176D               	andwf	___fltol@f1& (0+255),f,b
 33742   014B9E  0EFF               	movlw	255
 33743   014BA0  176E               	andwf	(___fltol@f1+1)& (0+255),f,b
 33744   014BA2  0EFF               	movlw	255
 33745   014BA4  176F               	andwf	(___fltol@f1+2)& (0+255),f,b
 33746   014BA6  0E00               	movlw	0
 33747   014BA8  1770               	andwf	(___fltol@f1+3)& (0+255),f,b
 33748   014BAA                     
 33749                           ; BSR set to: 5
 33750   014BAA  0E96               	movlw	150
 33751   014BAC  5E30               	subwf	___fltol@exp1^(0+1280),f,c
 33752   014BAE                     
 33753                           ; BSR set to: 5
 33754   014BAE  BE30               	btfsc	___fltol@exp1^(0+1280),7,c
 33755   014BB0  EFDE  F0A5         	goto	u8910
 33756   014BB4  EFDC  F0A5         	goto	u8911
 33757   014BB8                     u8911:
 33758   014BB8  EFF4  F0A5         	goto	l9877
 33759   014BBC                     u8910:
 33760   014BBC                     
 33761                           ; BSR set to: 5
 33762   014BBC  5030               	movf	___fltol@exp1^(0+1280),w,c
 33763   014BBE  0A80               	xorlw	128
 33764   014BC0  0F97               	addlw	151
 33765   014BC2  B0D8               	btfsc	status,0,c
 33766   014BC4  EFE6  F0A5         	goto	u8921
 33767   014BC8  EFE8  F0A5         	goto	u8920
 33768   014BCC                     u8921:
 33769   014BCC  EFEA  F0A5         	goto	l9873
 33770   014BD0                     u8920:
 33771   014BD0  EFAD  F0A5         	goto	l9853
 33772   014BD4                     l9873:
 33773                           
 33774                           ; BSR set to: 5
 33775   014BD4  90D8               	bcf	status,0,c
 33776   014BD6  3370               	rrcf	(___fltol@f1+3)& (0+255),f,b
 33777   014BD8  336F               	rrcf	(___fltol@f1+2)& (0+255),f,b
 33778   014BDA  336E               	rrcf	(___fltol@f1+1)& (0+255),f,b
 33779   014BDC  336D               	rrcf	___fltol@f1& (0+255),f,b
 33780   014BDE                     
 33781                           ; BSR set to: 5
 33782   014BDE  3E30               	incfsz	___fltol@exp1^(0+1280),f,c
 33783   014BE0  EFEA  F0A5         	goto	l9873
 33784   014BE4  EF0C  F0A6         	goto	l9887
 33785   014BE8                     l9877:
 33786                           
 33787                           ; BSR set to: 5
 33788   014BE8  0E1F               	movlw	31
 33789   014BEA  6430               	cpfsgt	___fltol@exp1^(0+1280),c
 33790   014BEC  EFFA  F0A5         	goto	u8931
 33791   014BF0  EFFC  F0A5         	goto	u8930
 33792   014BF4                     u8931:
 33793   014BF4  EF04  F0A6         	goto	l9885
 33794   014BF8                     u8930:
 33795   014BF8  EFAD  F0A5         	goto	l9853
 33796   014BFC                     l9883:
 33797                           
 33798                           ; BSR set to: 5
 33799   014BFC  90D8               	bcf	status,0,c
 33800   014BFE  376D               	rlcf	___fltol@f1& (0+255),f,b
 33801   014C00  376E               	rlcf	(___fltol@f1+1)& (0+255),f,b
 33802   014C02  376F               	rlcf	(___fltol@f1+2)& (0+255),f,b
 33803   014C04  3770               	rlcf	(___fltol@f1+3)& (0+255),f,b
 33804   014C06  0630               	decf	___fltol@exp1^(0+1280),f,c
 33805   014C08                     l9885:
 33806                           
 33807                           ; BSR set to: 5
 33808   014C08  5030               	movf	___fltol@exp1^(0+1280),w,c
 33809   014C0A  A4D8               	btfss	status,2,c
 33810   014C0C  EF0A  F0A6         	goto	u8941
 33811   014C10  EF0C  F0A6         	goto	u8940
 33812   014C14                     u8941:
 33813   014C14  EFFE  F0A5         	goto	l9883
 33814   014C18                     u8940:
 33815   014C18                     l9887:
 33816                           
 33817                           ; BSR set to: 5
 33818   014C18  502F               	movf	___fltol@sign1^(0+1280),w,c
 33819   014C1A  B4D8               	btfsc	status,2,c
 33820   014C1C  EF12  F0A6         	goto	u8951
 33821   014C20  EF14  F0A6         	goto	u8950
 33822   014C24                     u8951:
 33823   014C24  EF1C  F0A6         	goto	l9891
 33824   014C28                     u8950:
 33825   014C28                     
 33826                           ; BSR set to: 5
 33827   014C28  1F70               	comf	(___fltol@f1+3)& (0+255),f,b
 33828   014C2A  1F6F               	comf	(___fltol@f1+2)& (0+255),f,b
 33829   014C2C  1F6E               	comf	(___fltol@f1+1)& (0+255),f,b
 33830   014C2E  6D6D               	negf	___fltol@f1& (0+255),b
 33831   014C30  0E00               	movlw	0
 33832   014C32  236E               	addwfc	(___fltol@f1+1)& (0+255),f,b
 33833   014C34  236F               	addwfc	(___fltol@f1+2)& (0+255),f,b
 33834   014C36  2370               	addwfc	(___fltol@f1+3)& (0+255),f,b
 33835   014C38                     l9891:
 33836                           
 33837                           ; BSR set to: 5
 33838   014C38  C56D  F56D         	movff	___fltol@f1,?___fltol
 33839   014C3C  C56E  F56E         	movff	___fltol@f1+1,?___fltol+1
 33840   014C40  C56F  F56F         	movff	___fltol@f1+2,?___fltol+2
 33841   014C44  C570  F570         	movff	___fltol@f1+3,?___fltol+3
 33842   014C48                     l1946:
 33843                           
 33844                           ; BSR set to: 5
 33845   014C48  0012               	return		;funcret
 33846   014C4A                     __end_of___fltol:
 33847                           	callstack 0
 33848                           
 33849 ;; *************** function ___flmul *****************
 33850 ;; Defined at:
 33851 ;;		line 8 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/sprcmul.c"
 33852 ;; Parameters:    Size  Location     Type
 33853 ;;  b               4   30[COMRAM] long 
 33854 ;;  a               4   34[COMRAM] long 
 33855 ;; Auto vars:     Size  Location     Type
 33856 ;;  prod            4    7[BANK5 ] struct .
 33857 ;;  grs             4    2[BANK5 ] unsigned long 
 33858 ;;  temp            2   11[BANK5 ] struct .
 33859 ;;  bexp            1    6[BANK5 ] unsigned char 
 33860 ;;  aexp            1    1[BANK5 ] unsigned char 
 33861 ;;  sign            1    0[BANK5 ] unsigned char 
 33862 ;; Return value:  Size  Location     Type
 33863 ;;                  4   30[COMRAM] unsigned char 
 33864 ;; Registers used:
 33865 ;;		wreg, status,2, status,0, prodl, prodh
 33866 ;; Tracked objects:
 33867 ;;		On entry : 0/0
 33868 ;;		On exit  : 0/0
 33869 ;;		Unchanged: 0/0
 33870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 33871 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33872 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33873 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33874 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33875 ;;Total ram usage:       25 bytes
 33876 ;; Hardware stack levels used: 1
 33877 ;; Hardware stack levels required when called: 4
 33878 ;; This function calls:
 33879 ;;		Nothing
 33880 ;; This function is called by:
 33881 ;;		_MPU6050_GetMovement
 33882 ;;		_HC_SR04_Measure_Echo_Time
 33883 ;;		_atanf
 33884 ;;		_efgtoa
 33885 ;; This function uses a non-reentrant model
 33886 ;;
 33887                           
 33888                           	psect	text96
 33889   0122E8                     __ptext96:
 33890                           	callstack 0
 33891   0122E8                     ___flmul:
 33892                           	callstack 118
 33893   0122E8  5022               	movf	(___flmul@b+3)^(0+1280),w,c
 33894   0122EA  0B80               	andlw	128
 33895   0122EC  0105               	movlb	5	; () banked
 33896   0122EE  6F60               	movwf	___flmul@sign& (0+255),b
 33897   0122F0  5022               	movf	(___flmul@b+3)^(0+1280),w,c
 33898   0122F2  2422               	addwf	(___flmul@b+3)^(0+1280),w,c
 33899   0122F4  6F66               	movwf	___flmul@bexp& (0+255),b
 33900   0122F6                     
 33901                           ; BSR set to: 5
 33902   0122F6  AE21               	btfss	(___flmul@b+2)^(0+1280),7,c
 33903   0122F8  EF80  F091         	goto	u8701
 33904   0122FC  EF82  F091         	goto	u8700
 33905   012300                     u8701:
 33906   012300  EF83  F091         	goto	l9723
 33907   012304                     u8700:
 33908   012304                     
 33909                           ; BSR set to: 5
 33910   012304  8166               	bsf	___flmul@bexp& (0+255),0,b
 33911   012306                     l9723:
 33912                           
 33913                           ; BSR set to: 5
 33914   012306  5166               	movf	___flmul@bexp& (0+255),w,b
 33915   012308  B4D8               	btfsc	status,2,c
 33916   01230A  EF89  F091         	goto	u8711
 33917   01230E  EF8B  F091         	goto	u8710
 33918   012312                     u8711:
 33919   012312  EF9E  F091         	goto	l9731
 33920   012316                     u8710:
 33921   012316                     
 33922                           ; BSR set to: 5
 33923   012316  2966               	incf	___flmul@bexp& (0+255),w,b
 33924   012318  A4D8               	btfss	status,2,c
 33925   01231A  EF91  F091         	goto	u8721
 33926   01231E  EF93  F091         	goto	u8720
 33927   012322                     u8721:
 33928   012322  EF9B  F091         	goto	l9729
 33929   012326                     u8720:
 33930   012326                     
 33931                           ; BSR set to: 5
 33932   012326  0E00               	movlw	0
 33933   012328  6E1F               	movwf	___flmul@b^(0+1280),c
 33934   01232A  0E00               	movlw	0
 33935   01232C  6E20               	movwf	(___flmul@b+1)^(0+1280),c
 33936   01232E  0E00               	movlw	0
 33937   012330  6E21               	movwf	(___flmul@b+2)^(0+1280),c
 33938   012332  0E00               	movlw	0
 33939   012334  6E22               	movwf	(___flmul@b+3)^(0+1280),c
 33940   012336                     l9729:
 33941                           
 33942                           ; BSR set to: 5
 33943   012336  8E21               	bsf	(___flmul@b+2)^(0+1280),7,c
 33944   012338  EFA6  F091         	goto	l9733
 33945   01233C                     l9731:
 33946                           
 33947                           ; BSR set to: 5
 33948   01233C  0E00               	movlw	0
 33949   01233E  6E1F               	movwf	___flmul@b^(0+1280),c
 33950   012340  0E00               	movlw	0
 33951   012342  6E20               	movwf	(___flmul@b+1)^(0+1280),c
 33952   012344  0E00               	movlw	0
 33953   012346  6E21               	movwf	(___flmul@b+2)^(0+1280),c
 33954   012348  0E00               	movlw	0
 33955   01234A  6E22               	movwf	(___flmul@b+3)^(0+1280),c
 33956   01234C                     l9733:
 33957                           
 33958                           ; BSR set to: 5
 33959   01234C  5026               	movf	(___flmul@a+3)^(0+1280),w,c
 33960   01234E  0B80               	andlw	128
 33961   012350  1B60               	xorwf	___flmul@sign& (0+255),f,b
 33962   012352                     
 33963                           ; BSR set to: 5
 33964   012352  5026               	movf	(___flmul@a+3)^(0+1280),w,c
 33965   012354  2426               	addwf	(___flmul@a+3)^(0+1280),w,c
 33966   012356  6F61               	movwf	___flmul@aexp& (0+255),b
 33967   012358                     
 33968                           ; BSR set to: 5
 33969   012358  AE25               	btfss	(___flmul@a+2)^(0+1280),7,c
 33970   01235A  EFB1  F091         	goto	u8731
 33971   01235E  EFB3  F091         	goto	u8730
 33972   012362                     u8731:
 33973   012362  EFB4  F091         	goto	l9741
 33974   012366                     u8730:
 33975   012366                     
 33976                           ; BSR set to: 5
 33977   012366  8161               	bsf	___flmul@aexp& (0+255),0,b
 33978   012368                     l9741:
 33979                           
 33980                           ; BSR set to: 5
 33981   012368  5161               	movf	___flmul@aexp& (0+255),w,b
 33982   01236A  B4D8               	btfsc	status,2,c
 33983   01236C  EFBA  F091         	goto	u8741
 33984   012370  EFBC  F091         	goto	u8740
 33985   012374                     u8741:
 33986   012374  EFCF  F091         	goto	l9749
 33987   012378                     u8740:
 33988   012378                     
 33989                           ; BSR set to: 5
 33990   012378  2961               	incf	___flmul@aexp& (0+255),w,b
 33991   01237A  A4D8               	btfss	status,2,c
 33992   01237C  EFC2  F091         	goto	u8751
 33993   012380  EFC4  F091         	goto	u8750
 33994   012384                     u8751:
 33995   012384  EFCC  F091         	goto	l9747
 33996   012388                     u8750:
 33997   012388                     
 33998                           ; BSR set to: 5
 33999   012388  0E00               	movlw	0
 34000   01238A  6E23               	movwf	___flmul@a^(0+1280),c
 34001   01238C  0E00               	movlw	0
 34002   01238E  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 34003   012390  0E00               	movlw	0
 34004   012392  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 34005   012394  0E00               	movlw	0
 34006   012396  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 34007   012398                     l9747:
 34008                           
 34009                           ; BSR set to: 5
 34010   012398  8E25               	bsf	(___flmul@a+2)^(0+1280),7,c
 34011   01239A  EFD7  F091         	goto	l2263
 34012   01239E                     l9749:
 34013                           
 34014                           ; BSR set to: 5
 34015   01239E  0E00               	movlw	0
 34016   0123A0  6E23               	movwf	___flmul@a^(0+1280),c
 34017   0123A2  0E00               	movlw	0
 34018   0123A4  6E24               	movwf	(___flmul@a+1)^(0+1280),c
 34019   0123A6  0E00               	movlw	0
 34020   0123A8  6E25               	movwf	(___flmul@a+2)^(0+1280),c
 34021   0123AA  0E00               	movlw	0
 34022   0123AC  6E26               	movwf	(___flmul@a+3)^(0+1280),c
 34023   0123AE                     l2263:
 34024                           
 34025                           ; BSR set to: 5
 34026   0123AE  5161               	movf	___flmul@aexp& (0+255),w,b
 34027   0123B0  B4D8               	btfsc	status,2,c
 34028   0123B2  EFDD  F091         	goto	u8761
 34029   0123B6  EFDF  F091         	goto	u8760
 34030   0123BA                     u8761:
 34031   0123BA  EFE7  F091         	goto	l9753
 34032   0123BE                     u8760:
 34033   0123BE                     
 34034                           ; BSR set to: 5
 34035   0123BE  5166               	movf	___flmul@bexp& (0+255),w,b
 34036   0123C0  A4D8               	btfss	status,2,c
 34037   0123C2  EFE5  F091         	goto	u8771
 34038   0123C6  EFE7  F091         	goto	u8770
 34039   0123CA                     u8771:
 34040   0123CA  EFF1  F091         	goto	l9757
 34041   0123CE                     u8770:
 34042   0123CE                     l9753:
 34043                           
 34044                           ; BSR set to: 5
 34045   0123CE  0E00               	movlw	0
 34046   0123D0  6E1F               	movwf	?___flmul^(0+1280),c
 34047   0123D2  0E00               	movlw	0
 34048   0123D4  6E20               	movwf	(?___flmul+1)^(0+1280),c
 34049   0123D6  0E00               	movlw	0
 34050   0123D8  6E21               	movwf	(?___flmul+2)^(0+1280),c
 34051   0123DA  0E00               	movlw	0
 34052   0123DC  6E22               	movwf	(?___flmul+3)^(0+1280),c
 34053   0123DE  EF87  F093         	goto	l2267
 34054   0123E2                     l9757:
 34055                           
 34056                           ; BSR set to: 5
 34057   0123E2  5025               	movf	(___flmul@a+2)^(0+1280),w,c
 34058   0123E4  021F               	mulwf	___flmul@b^(0+1280),c
 34059   0123E6  C4F3 F56B          	movff	prodl,___flmul@temp
 34060   0123EA  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34061   0123EE                     
 34062                           ; BSR set to: 5
 34063   0123EE  516B               	movf	___flmul@temp& (0+255),w,b
 34064   0123F0  6F62               	movwf	___flmul@grs& (0+255),b
 34065   0123F2  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 34066   0123F4  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 34067   0123F6  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 34068   0123F8                     
 34069                           ; BSR set to: 5
 34070   0123F8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34071   0123FA  6F67               	movwf	___flmul@prod& (0+255),b
 34072   0123FC  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 34073   0123FE  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 34074   012400  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 34075   012402  5024               	movf	(___flmul@a+1)^(0+1280),w,c
 34076   012404  0220               	mulwf	(___flmul@b+1)^(0+1280),c
 34077   012406  C4F3 F56B          	movff	prodl,___flmul@temp
 34078   01240A  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34079   01240E                     
 34080                           ; BSR set to: 5
 34081   01240E  516B               	movf	___flmul@temp& (0+255),w,b
 34082   012410  2762               	addwf	___flmul@grs& (0+255),f,b
 34083   012412  0E00               	movlw	0
 34084   012414  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 34085   012416  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 34086   012418  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 34087   01241A                     
 34088                           ; BSR set to: 5
 34089   01241A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34090   01241C  2767               	addwf	___flmul@prod& (0+255),f,b
 34091   01241E  0E00               	movlw	0
 34092   012420  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34093   012422  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34094   012424  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34095   012426  5023               	movf	___flmul@a^(0+1280),w,c
 34096   012428  0221               	mulwf	(___flmul@b+2)^(0+1280),c
 34097   01242A  C4F3 F56B          	movff	prodl,___flmul@temp
 34098   01242E  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34099   012432                     
 34100                           ; BSR set to: 5
 34101   012432  516B               	movf	___flmul@temp& (0+255),w,b
 34102   012434  2762               	addwf	___flmul@grs& (0+255),f,b
 34103   012436  0E00               	movlw	0
 34104   012438  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 34105   01243A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 34106   01243C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 34107   01243E                     
 34108                           ; BSR set to: 5
 34109   01243E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34110   012440  2767               	addwf	___flmul@prod& (0+255),f,b
 34111   012442  0E00               	movlw	0
 34112   012444  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34113   012446  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34114   012448  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34115   01244A                     
 34116                           ; BSR set to: 5
 34117   01244A  C564  F565         	movff	___flmul@grs+2,___flmul@grs+3
 34118   01244E  C563  F564         	movff	___flmul@grs+1,___flmul@grs+2
 34119   012452  C562  F563         	movff	___flmul@grs,___flmul@grs+1
 34120   012456  6B62               	clrf	___flmul@grs& (0+255),b
 34121   012458                     
 34122                           ; BSR set to: 5
 34123   012458  5023               	movf	___flmul@a^(0+1280),w,c
 34124   01245A  0220               	mulwf	(___flmul@b+1)^(0+1280),c
 34125   01245C  C4F3 F56B          	movff	prodl,___flmul@temp
 34126   012460  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34127   012464                     
 34128                           ; BSR set to: 5
 34129   012464  516B               	movf	___flmul@temp& (0+255),w,b
 34130   012466  2762               	addwf	___flmul@grs& (0+255),f,b
 34131   012468  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34132   01246A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 34133   01246C  0E00               	movlw	0
 34134   01246E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 34135   012470  0E00               	movlw	0
 34136   012472  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 34137   012474                     
 34138                           ; BSR set to: 5
 34139   012474  5024               	movf	(___flmul@a+1)^(0+1280),w,c
 34140   012476  021F               	mulwf	___flmul@b^(0+1280),c
 34141   012478  C4F3 F56B          	movff	prodl,___flmul@temp
 34142   01247C  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34143   012480                     
 34144                           ; BSR set to: 5
 34145   012480  516B               	movf	___flmul@temp& (0+255),w,b
 34146   012482  2762               	addwf	___flmul@grs& (0+255),f,b
 34147   012484  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34148   012486  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 34149   012488  0E00               	movlw	0
 34150   01248A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 34151   01248C  0E00               	movlw	0
 34152   01248E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 34153   012490                     
 34154                           ; BSR set to: 5
 34155   012490  C564  F565         	movff	___flmul@grs+2,___flmul@grs+3
 34156   012494  C563  F564         	movff	___flmul@grs+1,___flmul@grs+2
 34157   012498  C562  F563         	movff	___flmul@grs,___flmul@grs+1
 34158   01249C  6B62               	clrf	___flmul@grs& (0+255),b
 34159   01249E  5023               	movf	___flmul@a^(0+1280),w,c
 34160   0124A0  021F               	mulwf	___flmul@b^(0+1280),c
 34161   0124A2  C4F3 F56B          	movff	prodl,___flmul@temp
 34162   0124A6  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34163   0124AA                     
 34164                           ; BSR set to: 5
 34165   0124AA  516B               	movf	___flmul@temp& (0+255),w,b
 34166   0124AC  2762               	addwf	___flmul@grs& (0+255),f,b
 34167   0124AE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34168   0124B0  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 34169   0124B2  0E00               	movlw	0
 34170   0124B4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 34171   0124B6  0E00               	movlw	0
 34172   0124B8  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 34173   0124BA                     
 34174                           ; BSR set to: 5
 34175   0124BA  5025               	movf	(___flmul@a+2)^(0+1280),w,c
 34176   0124BC  0220               	mulwf	(___flmul@b+1)^(0+1280),c
 34177   0124BE  C4F3 F56B          	movff	prodl,___flmul@temp
 34178   0124C2  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34179   0124C6  516B               	movf	___flmul@temp& (0+255),w,b
 34180   0124C8  2767               	addwf	___flmul@prod& (0+255),f,b
 34181   0124CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34182   0124CC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34183   0124CE  0E00               	movlw	0
 34184   0124D0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34185   0124D2  0E00               	movlw	0
 34186   0124D4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34187   0124D6                     
 34188                           ; BSR set to: 5
 34189   0124D6  5024               	movf	(___flmul@a+1)^(0+1280),w,c
 34190   0124D8  0221               	mulwf	(___flmul@b+2)^(0+1280),c
 34191   0124DA  C4F3 F56B          	movff	prodl,___flmul@temp
 34192   0124DE  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34193   0124E2                     
 34194                           ; BSR set to: 5
 34195   0124E2  516B               	movf	___flmul@temp& (0+255),w,b
 34196   0124E4  2767               	addwf	___flmul@prod& (0+255),f,b
 34197   0124E6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34198   0124E8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34199   0124EA  0E00               	movlw	0
 34200   0124EC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34201   0124EE  0E00               	movlw	0
 34202   0124F0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34203   0124F2  5025               	movf	(___flmul@a+2)^(0+1280),w,c
 34204   0124F4  0221               	mulwf	(___flmul@b+2)^(0+1280),c
 34205   0124F6  C4F3 F56B          	movff	prodl,___flmul@temp
 34206   0124FA  C4F4 F56C          	movff	prodh,___flmul@temp+1
 34207   0124FE                     
 34208                           ; BSR set to: 5
 34209   0124FE  516B               	movf	___flmul@temp& (0+255),w,b
 34210   012500  6E27               	movwf	??___flmul^(0+1280),c
 34211   012502  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34212   012504  6E28               	movwf	(??___flmul+1)^(0+1280),c
 34213   012506  6A29               	clrf	(??___flmul+2)^(0+1280),c
 34214   012508  6A2A               	clrf	(??___flmul+3)^(0+1280),c
 34215   01250A  C529  F52A         	movff	??___flmul+2,??___flmul+3
 34216   01250E  C528  F529         	movff	??___flmul+1,??___flmul+2
 34217   012512  C527  F528         	movff	??___flmul,??___flmul+1
 34218   012516  6A27               	clrf	??___flmul^(0+1280),c
 34219   012518  5027               	movf	??___flmul^(0+1280),w,c
 34220   01251A  2767               	addwf	___flmul@prod& (0+255),f,b
 34221   01251C  5028               	movf	(??___flmul+1)^(0+1280),w,c
 34222   01251E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34223   012520  5029               	movf	(??___flmul+2)^(0+1280),w,c
 34224   012522  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34225   012524  502A               	movf	(??___flmul+3)^(0+1280),w,c
 34226   012526  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34227   012528                     
 34228                           ; BSR set to: 5
 34229   012528  C562  F527         	movff	___flmul@grs,??___flmul
 34230   01252C  C563  F528         	movff	___flmul@grs+1,??___flmul+1
 34231   012530  C564  F529         	movff	___flmul@grs+2,??___flmul+2
 34232   012534  C565  F52A         	movff	___flmul@grs+3,??___flmul+3
 34233   012538  0E19               	movlw	25
 34234   01253A  EFA4  F092         	goto	u8780
 34235   01253E                     u8785:
 34236   01253E  90D8               	bcf	status,0,c
 34237   012540  322A               	rrcf	(??___flmul+3)^(0+1280),f,c
 34238   012542  3229               	rrcf	(??___flmul+2)^(0+1280),f,c
 34239   012544  3228               	rrcf	(??___flmul+1)^(0+1280),f,c
 34240   012546  3227               	rrcf	??___flmul^(0+1280),f,c
 34241   012548                     u8780:
 34242   012548  2EE8               	decfsz	wreg,f,c
 34243   01254A  EF9F  F092         	goto	u8785
 34244   01254E  5027               	movf	??___flmul^(0+1280),w,c
 34245   012550  2767               	addwf	___flmul@prod& (0+255),f,b
 34246   012552  5028               	movf	(??___flmul+1)^(0+1280),w,c
 34247   012554  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34248   012556  5029               	movf	(??___flmul+2)^(0+1280),w,c
 34249   012558  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34250   01255A  502A               	movf	(??___flmul+3)^(0+1280),w,c
 34251   01255C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34252   01255E                     
 34253                           ; BSR set to: 5
 34254   01255E  C564  F565         	movff	___flmul@grs+2,___flmul@grs+3
 34255   012562  C563  F564         	movff	___flmul@grs+1,___flmul@grs+2
 34256   012566  C562  F563         	movff	___flmul@grs,___flmul@grs+1
 34257   01256A  6B62               	clrf	___flmul@grs& (0+255),b
 34258   01256C                     
 34259                           ; BSR set to: 5
 34260   01256C  5161               	movf	___flmul@aexp& (0+255),w,b
 34261   01256E  C566  F527         	movff	___flmul@bexp,??___flmul
 34262   012572  6A28               	clrf	(??___flmul+1)^(0+1280),c
 34263   012574  2627               	addwf	??___flmul^(0+1280),f,c
 34264   012576  0E00               	movlw	0
 34265   012578  2228               	addwfc	(??___flmul+1)^(0+1280),f,c
 34266   01257A  0E82               	movlw	130
 34267   01257C  2427               	addwf	??___flmul^(0+1280),w,c
 34268   01257E  6F6B               	movwf	___flmul@temp& (0+255),b
 34269   012580  0EFF               	movlw	255
 34270   012582  2028               	addwfc	(??___flmul+1)^(0+1280),w,c
 34271   012584  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 34272   012586  EFDA  F092         	goto	l9805
 34273   01258A                     l9799:
 34274                           
 34275                           ; BSR set to: 5
 34276   01258A  90D8               	bcf	status,0,c
 34277   01258C  3767               	rlcf	___flmul@prod& (0+255),f,b
 34278   01258E  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 34279   012590  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 34280   012592  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 34281   012594                     
 34282                           ; BSR set to: 5
 34283   012594  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 34284   012596  EFCF  F092         	goto	u8791
 34285   01259A  EFD1  F092         	goto	u8790
 34286   01259E                     u8791:
 34287   01259E  EFD2  F092         	goto	l2270
 34288   0125A2                     u8790:
 34289   0125A2                     
 34290                           ; BSR set to: 5
 34291   0125A2  8167               	bsf	___flmul@prod& (0+255),0,b
 34292   0125A4                     l2270:
 34293                           
 34294                           ; BSR set to: 5
 34295   0125A4  90D8               	bcf	status,0,c
 34296   0125A6  3762               	rlcf	___flmul@grs& (0+255),f,b
 34297   0125A8  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 34298   0125AA  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 34299   0125AC  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 34300   0125AE  076B               	decf	___flmul@temp& (0+255),f,b
 34301   0125B0  A0D8               	btfss	status,0,c
 34302   0125B2  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 34303   0125B4                     l9805:
 34304                           
 34305                           ; BSR set to: 5
 34306   0125B4  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 34307   0125B6  EFDF  F092         	goto	u8801
 34308   0125BA  EFE1  F092         	goto	u8800
 34309   0125BE                     u8801:
 34310   0125BE  EFC5  F092         	goto	l9799
 34311   0125C2                     u8800:
 34312   0125C2                     
 34313                           ; BSR set to: 5
 34314   0125C2  6B61               	clrf	___flmul@aexp& (0+255),b
 34315   0125C4  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 34316   0125C6  EFE7  F092         	goto	u8811
 34317   0125CA  EFE9  F092         	goto	u8810
 34318   0125CE                     u8811:
 34319   0125CE  EF0D  F093         	goto	l2272
 34320   0125D2                     u8810:
 34321   0125D2                     
 34322                           ; BSR set to: 5
 34323   0125D2  0EFF               	movlw	255
 34324   0125D4  1562               	andwf	___flmul@grs& (0+255),w,b
 34325   0125D6  6E27               	movwf	??___flmul^(0+1280),c
 34326   0125D8  0EFF               	movlw	255
 34327   0125DA  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 34328   0125DC  6E28               	movwf	(??___flmul+1)^(0+1280),c
 34329   0125DE  0EFF               	movlw	255
 34330   0125E0  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 34331   0125E2  6E29               	movwf	(??___flmul+2)^(0+1280),c
 34332   0125E4  0E7F               	movlw	127
 34333   0125E6  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 34334   0125E8  6E2A               	movwf	(??___flmul+3)^(0+1280),c
 34335   0125EA  5027               	movf	??___flmul^(0+1280),w,c
 34336   0125EC  1028               	iorwf	(??___flmul+1)^(0+1280),w,c
 34337   0125EE  1029               	iorwf	(??___flmul+2)^(0+1280),w,c
 34338   0125F0  102A               	iorwf	(??___flmul+3)^(0+1280),w,c
 34339   0125F2  B4D8               	btfsc	status,2,c
 34340   0125F4  EFFE  F092         	goto	u8821
 34341   0125F8  EF00  F093         	goto	u8820
 34342   0125FC                     u8821:
 34343   0125FC  EF04  F093         	goto	l2273
 34344   012600                     u8820:
 34345   012600                     l9809:
 34346                           
 34347                           ; BSR set to: 5
 34348   012600  0E01               	movlw	1
 34349   012602  6F61               	movwf	___flmul@aexp& (0+255),b
 34350   012604  EF0D  F093         	goto	l2272
 34351   012608                     l2273:
 34352                           
 34353                           ; BSR set to: 5
 34354   012608  A167               	btfss	___flmul@prod& (0+255),0,b
 34355   01260A  EF09  F093         	goto	u8831
 34356   01260E  EF0B  F093         	goto	u8830
 34357   012612                     u8831:
 34358   012612  EF0D  F093         	goto	l2272
 34359   012616                     u8830:
 34360   012616  EF00  F093         	goto	l9809
 34361   01261A                     l2272:
 34362                           
 34363                           ; BSR set to: 5
 34364   01261A  5161               	movf	___flmul@aexp& (0+255),w,b
 34365   01261C  B4D8               	btfsc	status,2,c
 34366   01261E  EF13  F093         	goto	u8841
 34367   012622  EF15  F093         	goto	u8840
 34368   012626                     u8841:
 34369   012626  EF39  F093         	goto	l9821
 34370   01262A                     u8840:
 34371   01262A                     
 34372                           ; BSR set to: 5
 34373   01262A  0E01               	movlw	1
 34374   01262C  2767               	addwf	___flmul@prod& (0+255),f,b
 34375   01262E  0E00               	movlw	0
 34376   012630  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 34377   012632  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 34378   012634  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 34379   012636                     
 34380                           ; BSR set to: 5
 34381   012636  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 34382   012638  EF20  F093         	goto	u8851
 34383   01263C  EF22  F093         	goto	u8850
 34384   012640                     u8851:
 34385   012640  EF39  F093         	goto	l9821
 34386   012644                     u8850:
 34387   012644                     
 34388                           ; BSR set to: 5
 34389   012644  C567  F527         	movff	___flmul@prod,??___flmul
 34390   012648  C568  F528         	movff	___flmul@prod+1,??___flmul+1
 34391   01264C  C569  F529         	movff	___flmul@prod+2,??___flmul+2
 34392   012650  C56A  F52A         	movff	___flmul@prod+3,??___flmul+3
 34393   012654  342A               	rlcf	(??___flmul+3)^(0+1280),w,c
 34394   012656  322A               	rrcf	(??___flmul+3)^(0+1280),f,c
 34395   012658  3229               	rrcf	(??___flmul+2)^(0+1280),f,c
 34396   01265A  3228               	rrcf	(??___flmul+1)^(0+1280),f,c
 34397   01265C  3227               	rrcf	??___flmul^(0+1280),f,c
 34398   01265E  C527  F567         	movff	??___flmul,___flmul@prod
 34399   012662  C528  F568         	movff	??___flmul+1,___flmul@prod+1
 34400   012666  C529  F569         	movff	??___flmul+2,___flmul@prod+2
 34401   01266A  C52A  F56A         	movff	??___flmul+3,___flmul@prod+3
 34402   01266E                     
 34403                           ; BSR set to: 5
 34404   01266E  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 34405   012670  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 34406   012672                     l9821:
 34407                           
 34408                           ; BSR set to: 5
 34409   012672  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 34410   012674  EF44  F093         	goto	u8861
 34411   012678  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34412   01267A  E108               	bnz	u8860
 34413   01267C  296B               	incf	___flmul@temp& (0+255),w,b
 34414   01267E  A0D8               	btfss	status,0,c
 34415   012680  EF44  F093         	goto	u8861
 34416   012684  EF46  F093         	goto	u8860
 34417   012688                     u8861:
 34418   012688  EF50  F093         	goto	l9825
 34419   01268C                     u8860:
 34420   01268C                     
 34421                           ; BSR set to: 5
 34422   01268C  0E00               	movlw	0
 34423   01268E  6F67               	movwf	___flmul@prod& (0+255),b
 34424   012690  0E00               	movlw	0
 34425   012692  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 34426   012694  0E80               	movlw	128
 34427   012696  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 34428   012698  0E7F               	movlw	127
 34429   01269A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 34430   01269C  EF7D  F093         	goto	l9839
 34431   0126A0                     l9825:
 34432                           
 34433                           ; BSR set to: 5
 34434   0126A0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 34435   0126A2  EF5D  F093         	goto	u8870
 34436   0126A6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 34437   0126A8  E106               	bnz	u8871
 34438   0126AA  056B               	decf	___flmul@temp& (0+255),w,b
 34439   0126AC  B0D8               	btfsc	status,0,c
 34440   0126AE  EF5B  F093         	goto	u8871
 34441   0126B2  EF5D  F093         	goto	u8870
 34442   0126B6                     u8871:
 34443   0126B6  EF68  F093         	goto	l2280
 34444   0126BA                     u8870:
 34445   0126BA                     
 34446                           ; BSR set to: 5
 34447   0126BA  0E00               	movlw	0
 34448   0126BC  6F67               	movwf	___flmul@prod& (0+255),b
 34449   0126BE  0E00               	movlw	0
 34450   0126C0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 34451   0126C2  0E00               	movlw	0
 34452   0126C4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 34453   0126C6  0E00               	movlw	0
 34454   0126C8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 34455   0126CA                     
 34456                           ; BSR set to: 5
 34457   0126CA  6B60               	clrf	___flmul@sign& (0+255),b
 34458   0126CC  EF7D  F093         	goto	l9839
 34459   0126D0                     l2280:
 34460                           
 34461                           ; BSR set to: 5
 34462   0126D0  C56B  F566         	movff	___flmul@temp,___flmul@bexp
 34463   0126D4                     
 34464                           ; BSR set to: 5
 34465   0126D4  0EFF               	movlw	255
 34466   0126D6  1767               	andwf	___flmul@prod& (0+255),f,b
 34467   0126D8  0EFF               	movlw	255
 34468   0126DA  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 34469   0126DC  0E7F               	movlw	127
 34470   0126DE  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 34471   0126E0  0E00               	movlw	0
 34472   0126E2  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 34473   0126E4                     
 34474                           ; BSR set to: 5
 34475   0126E4  A166               	btfss	___flmul@bexp& (0+255),0,b
 34476   0126E6  EF77  F093         	goto	u8881
 34477   0126EA  EF79  F093         	goto	u8880
 34478   0126EE                     u8881:
 34479   0126EE  EF7A  F093         	goto	l9837
 34480   0126F2                     u8880:
 34481   0126F2                     
 34482                           ; BSR set to: 5
 34483   0126F2  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 34484   0126F4                     l9837:
 34485                           
 34486                           ; BSR set to: 5
 34487   0126F4  90D8               	bcf	status,0,c
 34488   0126F6  3166               	rrcf	___flmul@bexp& (0+255),w,b
 34489   0126F8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 34490   0126FA                     l9839:
 34491                           
 34492                           ; BSR set to: 5
 34493   0126FA  5160               	movf	___flmul@sign& (0+255),w,b
 34494   0126FC  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 34495   0126FE                     
 34496                           ; BSR set to: 5
 34497   0126FE  C567  F51F         	movff	___flmul@prod,?___flmul
 34498   012702  C568  F520         	movff	___flmul@prod+1,?___flmul+1
 34499   012706  C569  F521         	movff	___flmul@prod+2,?___flmul+2
 34500   01270A  C56A  F522         	movff	___flmul@prod+3,?___flmul+3
 34501   01270E                     l2267:
 34502                           
 34503                           ; BSR set to: 5
 34504   01270E  0012               	return		;funcret
 34505   012710                     __end_of___flmul:
 34506                           	callstack 0
 34507                           
 34508 ;; *************** function _TMR0_CounterGet *****************
 34509 ;; Defined at:
 34510 ;;		line 88 in file "mcc_generated_files/timer/src/tmr0.c"
 34511 ;; Parameters:    Size  Location     Type
 34512 ;;		None
 34513 ;; Auto vars:     Size  Location     Type
 34514 ;;  counterValue    2   20[COMRAM] unsigned short 
 34515 ;;  counterHighB    1   23[COMRAM] unsigned char 
 34516 ;;  counterLowBy    1   22[COMRAM] unsigned char 
 34517 ;; Return value:  Size  Location     Type
 34518 ;;                  2   16[COMRAM] unsigned short 
 34519 ;; Registers used:
 34520 ;;		wreg, status,2
 34521 ;; Tracked objects:
 34522 ;;		On entry : 0/0
 34523 ;;		On exit  : 0/0
 34524 ;;		Unchanged: 0/0
 34525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;Total ram usage:        8 bytes
 34531 ;; Hardware stack levels used: 1
 34532 ;; Hardware stack levels required when called: 4
 34533 ;; This function calls:
 34534 ;;		Nothing
 34535 ;; This function is called by:
 34536 ;;		_HC_SR04_Measure_Echo_Time
 34537 ;; This function uses a non-reentrant model
 34538 ;;
 34539                           
 34540                           	psect	text97
 34541   016704                     __ptext97:
 34542                           	callstack 0
 34543   016704                     _TMR0_CounterGet:
 34544                           	callstack 120
 34545   016704                     
 34546                           ;mcc_generated_files/timer/src/tmr0.c: 90:     uint16_t counterValue;;mcc_generated_file
      +                          s/timer/src/tmr0.c: 91:     uint8_t counterLowByte;;mcc_generated_files/timer/src/tmr0.c
      +                          : 92:     uint8_t counterHighByte;;mcc_generated_files/timer/src/tmr0.c: 94:     counter
      +                          LowByte = TMR0L;
 34547   016704  C318 F517          	movff	792,TMR0_CounterGet@counterLowByte	;volatile
 34548                           
 34549                           ;mcc_generated_files/timer/src/tmr0.c: 95:     counterHighByte = TMR0H;
 34550   016708  C319 F518          	movff	793,TMR0_CounterGet@counterHighByte	;volatile
 34551   01670C                     
 34552                           ;mcc_generated_files/timer/src/tmr0.c: 96:     counterValue = ((uint16_t)counterHighByte
      +                           << 8) + counterLowByte;
 34553   01670C  5018               	movf	TMR0_CounterGet@counterHighByte^(0+1280),w,c
 34554   01670E  6E13               	movwf	??_TMR0_CounterGet^(0+1280),c
 34555   016710  5017               	movf	TMR0_CounterGet@counterLowByte^(0+1280),w,c
 34556   016712  6E15               	movwf	TMR0_CounterGet@counterValue^(0+1280),c
 34557   016714  C513  F516         	movff	??_TMR0_CounterGet,TMR0_CounterGet@counterValue+1
 34558   016718                     
 34559                           ;mcc_generated_files/timer/src/tmr0.c: 98:     return counterValue;
 34560   016718  C515  F511         	movff	TMR0_CounterGet@counterValue,?_TMR0_CounterGet
 34561   01671C  C516  F512         	movff	TMR0_CounterGet@counterValue+1,?_TMR0_CounterGet+1
 34562   016720  0012               	return		;funcret
 34563   016722                     __end_of_TMR0_CounterGet:
 34564                           	callstack 0
 34565                           
 34566 ;; *************** function _HC_SR04_Get_Filtered_Value *****************
 34567 ;; Defined at:
 34568 ;;		line 217 in file "HC_SR04.c"
 34569 ;; Parameters:    Size  Location     Type
 34570 ;;		None
 34571 ;; Auto vars:     Size  Location     Type
 34572 ;;  i               1    6[BANK5 ] unsigned char 
 34573 ;;  sum             4    0[BANK5 ] unsigned long 
 34574 ;;  count           1    7[BANK5 ] unsigned char 
 34575 ;; Return value:  Size  Location     Type
 34576 ;;                  2   41[COMRAM] unsigned short 
 34577 ;; Registers used:
 34578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34579 ;; Tracked objects:
 34580 ;;		On entry : 0/0
 34581 ;;		On exit  : 0/0
 34582 ;;		Unchanged: 0/0
 34583 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34585 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34587 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34588 ;;Total ram usage:       12 bytes
 34589 ;; Hardware stack levels used: 1
 34590 ;; Hardware stack levels required when called: 5
 34591 ;; This function calls:
 34592 ;;		___lldiv
 34593 ;; This function is called by:
 34594 ;;		_HC_SR04_Read_Distance_CM
 34595 ;; This function uses a non-reentrant model
 34596 ;;
 34597                           
 34598                           	psect	text98
 34599   015192                     __ptext98:
 34600                           	callstack 0
 34601   015192                     _HC_SR04_Get_Filtered_Value:
 34602                           	callstack 120
 34603   015192                     
 34604                           ;HC_SR04.c: 218:     uint32_t sum = 0;
 34605   015192  0E00               	movlw	0
 34606   015194  0105               	movlb	5	; () banked
 34607   015196  6F60               	movwf	HC_SR04_Get_Filtered_Value@sum& (0+255),b
 34608   015198  0E00               	movlw	0
 34609   01519A  6F61               	movwf	(HC_SR04_Get_Filtered_Value@sum+1)& (0+255),b
 34610   01519C  0E00               	movlw	0
 34611   01519E  6F62               	movwf	(HC_SR04_Get_Filtered_Value@sum+2)& (0+255),b
 34612   0151A0  0E00               	movlw	0
 34613   0151A2  6F63               	movwf	(HC_SR04_Get_Filtered_Value@sum+3)& (0+255),b
 34614                           
 34615                           ;HC_SR04.c: 219:     uint8_t count = buffer_full ? 5 : buffer_index;
 34616   0151A4  5047               	movf	_buffer_full^(0+1280),w,c
 34617   0151A6  A4D8               	btfss	status,2,c
 34618   0151A8  EFD8  F0A8         	goto	u9801
 34619   0151AC  EFDA  F0A8         	goto	u9800
 34620   0151B0                     u9801:
 34621   0151B0  EFDF  F0A8         	goto	l10541
 34622   0151B4                     u9800:
 34623   0151B4                     
 34624                           ; BSR set to: 5
 34625   0151B4  C548  F564         	movff	_buffer_index,_HC_SR04_Get_Filtered_Value$3080
 34626   0151B8  6B65               	clrf	(_HC_SR04_Get_Filtered_Value$3080+1)& (0+255),b
 34627   0151BA  EFE3  F0A8         	goto	l10543
 34628   0151BE                     l10541:
 34629                           
 34630                           ; BSR set to: 5
 34631   0151BE  0E00               	movlw	0
 34632   0151C0  6F65               	movwf	(_HC_SR04_Get_Filtered_Value$3080+1)& (0+255),b
 34633   0151C2  0E05               	movlw	5
 34634   0151C4  6F64               	movwf	_HC_SR04_Get_Filtered_Value$3080& (0+255),b
 34635   0151C6                     l10543:
 34636                           
 34637                           ; BSR set to: 5
 34638   0151C6  C564  F567         	movff	_HC_SR04_Get_Filtered_Value$3080,HC_SR04_Get_Filtered_Value@count
 34639                           
 34640                           ;HC_SR04.c: 221:     if (count == 0) return 0;
 34641   0151CA  5167               	movf	HC_SR04_Get_Filtered_Value@count& (0+255),w,b
 34642   0151CC  A4D8               	btfss	status,2,c
 34643   0151CE  EFEB  F0A8         	goto	u9811
 34644   0151D2  EFED  F0A8         	goto	u9810
 34645   0151D6                     u9811:
 34646   0151D6  EFF3  F0A8         	goto	l1489
 34647   0151DA                     u9810:
 34648   0151DA                     
 34649                           ; BSR set to: 5
 34650   0151DA  0E00               	movlw	0
 34651   0151DC  6E2B               	movwf	(?_HC_SR04_Get_Filtered_Value+1)^(0+1280),c
 34652   0151DE  0E00               	movlw	0
 34653   0151E0  6E2A               	movwf	?_HC_SR04_Get_Filtered_Value^(0+1280),c
 34654   0151E2  EF27  F0A9         	goto	l1490
 34655   0151E6                     l1489:
 34656                           
 34657                           ; BSR set to: 5
 34658                           ;HC_SR04.c: 223:     for(uint8_t i = 0; i < count; i++) {
 34659   0151E6  6B66               	clrf	HC_SR04_Get_Filtered_Value@i& (0+255),b
 34660   0151E8  EF0B  F0A9         	goto	l10553
 34661   0151EC                     l10549:
 34662                           
 34663                           ; BSR set to: 5
 34664                           ;HC_SR04.c: 224:         sum += distance_buffer[i];
 34665   0151EC  5166               	movf	HC_SR04_Get_Filtered_Value@i& (0+255),w,b
 34666   0151EE  0D02               	mullw	2
 34667   0151F0  0E44               	movlw	low _distance_buffer
 34668   0151F2  24F3               	addwf	243,w,c
 34669   0151F4  6ED9               	movwf	fsr2l,c
 34670   0151F6  0E07               	movlw	high _distance_buffer
 34671   0151F8  20F4               	addwfc	prodh,w,c
 34672   0151FA  6EDA               	movwf	fsr2h,c
 34673   0151FC  C4DE F52C          	movff	postinc2,??_HC_SR04_Get_Filtered_Value
 34674   015200  C4DD F52D          	movff	postdec2,??_HC_SR04_Get_Filtered_Value+1
 34675   015204  502C               	movf	??_HC_SR04_Get_Filtered_Value^(0+1280),w,c
 34676   015206  2760               	addwf	HC_SR04_Get_Filtered_Value@sum& (0+255),f,b
 34677   015208  502D               	movf	(??_HC_SR04_Get_Filtered_Value+1)^(0+1280),w,c
 34678   01520A  2361               	addwfc	(HC_SR04_Get_Filtered_Value@sum+1)& (0+255),f,b
 34679   01520C  0E00               	movlw	0
 34680   01520E  2362               	addwfc	(HC_SR04_Get_Filtered_Value@sum+2)& (0+255),f,b
 34681   015210  0E00               	movlw	0
 34682   015212  2363               	addwfc	(HC_SR04_Get_Filtered_Value@sum+3)& (0+255),f,b
 34683   015214                     
 34684                           ; BSR set to: 5
 34685                           ;HC_SR04.c: 225:     }
 34686   015214  2B66               	incf	HC_SR04_Get_Filtered_Value@i& (0+255),f,b
 34687   015216                     l10553:
 34688                           
 34689                           ; BSR set to: 5
 34690   015216  5167               	movf	HC_SR04_Get_Filtered_Value@count& (0+255),w,b
 34691   015218  5D66               	subwf	HC_SR04_Get_Filtered_Value@i& (0+255),w,b
 34692   01521A  A0D8               	btfss	status,0,c
 34693   01521C  EF12  F0A9         	goto	u9821
 34694   015220  EF14  F0A9         	goto	u9820
 34695   015224                     u9821:
 34696   015224  EFF6  F0A8         	goto	l10549
 34697   015228                     u9820:
 34698   015228                     
 34699                           ; BSR set to: 5
 34700                           ;HC_SR04.c: 226:     return (uint16_t)(sum / count);
 34701   015228  C560  F51D         	movff	HC_SR04_Get_Filtered_Value@sum,___lldiv@dividend
 34702   01522C  C561  F51E         	movff	HC_SR04_Get_Filtered_Value@sum+1,___lldiv@dividend+1
 34703   015230  C562  F51F         	movff	HC_SR04_Get_Filtered_Value@sum+2,___lldiv@dividend+2
 34704   015234  C563  F520         	movff	HC_SR04_Get_Filtered_Value@sum+3,___lldiv@dividend+3
 34705   015238  5167               	movf	HC_SR04_Get_Filtered_Value@count& (0+255),w,b
 34706   01523A  6E21               	movwf	___lldiv@divisor^(0+1280),c
 34707   01523C  6A22               	clrf	(___lldiv@divisor+1)^(0+1280),c
 34708   01523E  6A23               	clrf	(___lldiv@divisor+2)^(0+1280),c
 34709   015240  6A24               	clrf	(___lldiv@divisor+3)^(0+1280),c
 34710   015242  EC40  F0AB         	call	___lldiv	;wreg free
 34711   015246  C51D  F52A         	movff	?___lldiv,?_HC_SR04_Get_Filtered_Value
 34712   01524A  C51E  F52B         	movff	?___lldiv+1,?_HC_SR04_Get_Filtered_Value+1
 34713   01524E                     l1490:
 34714   01524E  0012               	return		;funcret
 34715   015250                     __end_of_HC_SR04_Get_Filtered_Value:
 34716                           	callstack 0
 34717                           
 34718 ;; *************** function ___lldiv *****************
 34719 ;; Defined at:
 34720 ;;		line 7 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
 34721 ;; Parameters:    Size  Location     Type
 34722 ;;  dividend        4   28[COMRAM] unsigned long 
 34723 ;;  divisor         4   32[COMRAM] unsigned long 
 34724 ;; Auto vars:     Size  Location     Type
 34725 ;;  quotient        4   36[COMRAM] unsigned long 
 34726 ;;  counter         1   40[COMRAM] unsigned char 
 34727 ;; Return value:  Size  Location     Type
 34728 ;;                  4   28[COMRAM] unsigned long 
 34729 ;; Registers used:
 34730 ;;		wreg, status,2, status,0
 34731 ;; Tracked objects:
 34732 ;;		On entry : 0/0
 34733 ;;		On exit  : 0/0
 34734 ;;		Unchanged: 0/0
 34735 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34736 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34737 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34739 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34740 ;;Total ram usage:       13 bytes
 34741 ;; Hardware stack levels used: 1
 34742 ;; Hardware stack levels required when called: 4
 34743 ;; This function calls:
 34744 ;;		Nothing
 34745 ;; This function is called by:
 34746 ;;		_HC_SR04_Get_Filtered_Value
 34747 ;;		_ConvertPercentToPWM
 34748 ;; This function uses a non-reentrant model
 34749 ;;
 34750                           
 34751                           	psect	text99
 34752   015680                     __ptext99:
 34753                           	callstack 0
 34754   015680                     ___lldiv:
 34755                           	callstack 117
 34756   015680  0E00               	movlw	0
 34757   015682  6E25               	movwf	___lldiv@quotient^(0+1280),c
 34758   015684  0E00               	movlw	0
 34759   015686  6E26               	movwf	(___lldiv@quotient+1)^(0+1280),c
 34760   015688  0E00               	movlw	0
 34761   01568A  6E27               	movwf	(___lldiv@quotient+2)^(0+1280),c
 34762   01568C  0E00               	movlw	0
 34763   01568E  6E28               	movwf	(___lldiv@quotient+3)^(0+1280),c
 34764   015690  5021               	movf	___lldiv@divisor^(0+1280),w,c
 34765   015692  1022               	iorwf	(___lldiv@divisor+1)^(0+1280),w,c
 34766   015694  1023               	iorwf	(___lldiv@divisor+2)^(0+1280),w,c
 34767   015696  1024               	iorwf	(___lldiv@divisor+3)^(0+1280),w,c
 34768   015698  B4D8               	btfsc	status,2,c
 34769   01569A  EF51  F0AB         	goto	u8271
 34770   01569E  EF53  F0AB         	goto	u8270
 34771   0156A2                     u8271:
 34772   0156A2  EF89  F0AB         	goto	l1676
 34773   0156A6                     u8270:
 34774   0156A6  0E01               	movlw	1
 34775   0156A8  6E29               	movwf	___lldiv@counter^(0+1280),c
 34776   0156AA  EF5D  F0AB         	goto	l9501
 34777   0156AE                     l9499:
 34778   0156AE  90D8               	bcf	status,0,c
 34779   0156B0  3621               	rlcf	___lldiv@divisor^(0+1280),f,c
 34780   0156B2  3622               	rlcf	(___lldiv@divisor+1)^(0+1280),f,c
 34781   0156B4  3623               	rlcf	(___lldiv@divisor+2)^(0+1280),f,c
 34782   0156B6  3624               	rlcf	(___lldiv@divisor+3)^(0+1280),f,c
 34783   0156B8  2A29               	incf	___lldiv@counter^(0+1280),f,c
 34784   0156BA                     l9501:
 34785   0156BA  AE24               	btfss	(___lldiv@divisor+3)^(0+1280),7,c
 34786   0156BC  EF62  F0AB         	goto	u8281
 34787   0156C0  EF64  F0AB         	goto	u8280
 34788   0156C4                     u8281:
 34789   0156C4  EF57  F0AB         	goto	l9499
 34790   0156C8                     u8280:
 34791   0156C8                     l9503:
 34792   0156C8  90D8               	bcf	status,0,c
 34793   0156CA  3625               	rlcf	___lldiv@quotient^(0+1280),f,c
 34794   0156CC  3626               	rlcf	(___lldiv@quotient+1)^(0+1280),f,c
 34795   0156CE  3627               	rlcf	(___lldiv@quotient+2)^(0+1280),f,c
 34796   0156D0  3628               	rlcf	(___lldiv@quotient+3)^(0+1280),f,c
 34797   0156D2  5021               	movf	___lldiv@divisor^(0+1280),w,c
 34798   0156D4  5C1D               	subwf	___lldiv@dividend^(0+1280),w,c
 34799   0156D6  5022               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 34800   0156D8  581E               	subwfb	(___lldiv@dividend+1)^(0+1280),w,c
 34801   0156DA  5023               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 34802   0156DC  581F               	subwfb	(___lldiv@dividend+2)^(0+1280),w,c
 34803   0156DE  5024               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 34804   0156E0  5820               	subwfb	(___lldiv@dividend+3)^(0+1280),w,c
 34805   0156E2  A0D8               	btfss	status,0,c
 34806   0156E4  EF76  F0AB         	goto	u8291
 34807   0156E8  EF78  F0AB         	goto	u8290
 34808   0156EC                     u8291:
 34809   0156EC  EF81  F0AB         	goto	l9511
 34810   0156F0                     u8290:
 34811   0156F0  5021               	movf	___lldiv@divisor^(0+1280),w,c
 34812   0156F2  5E1D               	subwf	___lldiv@dividend^(0+1280),f,c
 34813   0156F4  5022               	movf	(___lldiv@divisor+1)^(0+1280),w,c
 34814   0156F6  5A1E               	subwfb	(___lldiv@dividend+1)^(0+1280),f,c
 34815   0156F8  5023               	movf	(___lldiv@divisor+2)^(0+1280),w,c
 34816   0156FA  5A1F               	subwfb	(___lldiv@dividend+2)^(0+1280),f,c
 34817   0156FC  5024               	movf	(___lldiv@divisor+3)^(0+1280),w,c
 34818   0156FE  5A20               	subwfb	(___lldiv@dividend+3)^(0+1280),f,c
 34819   015700  8025               	bsf	___lldiv@quotient^(0+1280),0,c
 34820   015702                     l9511:
 34821   015702  90D8               	bcf	status,0,c
 34822   015704  3224               	rrcf	(___lldiv@divisor+3)^(0+1280),f,c
 34823   015706  3223               	rrcf	(___lldiv@divisor+2)^(0+1280),f,c
 34824   015708  3222               	rrcf	(___lldiv@divisor+1)^(0+1280),f,c
 34825   01570A  3221               	rrcf	___lldiv@divisor^(0+1280),f,c
 34826   01570C  2E29               	decfsz	___lldiv@counter^(0+1280),f,c
 34827   01570E  EF64  F0AB         	goto	l9503
 34828   015712                     l1676:
 34829   015712  C525  F51D         	movff	___lldiv@quotient,?___lldiv
 34830   015716  C526  F51E         	movff	___lldiv@quotient+1,?___lldiv+1
 34831   01571A  C527  F51F         	movff	___lldiv@quotient+2,?___lldiv+2
 34832   01571E  C528  F520         	movff	___lldiv@quotient+3,?___lldiv+3
 34833   015722  0012               	return		;funcret
 34834   015724                     __end_of___lldiv:
 34835                           	callstack 0
 34836                           
 34837 ;; *************** function _HC_SR04_Add_To_Filter *****************
 34838 ;; Defined at:
 34839 ;;		line 205 in file "HC_SR04.c"
 34840 ;; Parameters:    Size  Location     Type
 34841 ;;  distance        2   22[COMRAM] unsigned short 
 34842 ;; Auto vars:     Size  Location     Type
 34843 ;;		None
 34844 ;; Return value:  Size  Location     Type
 34845 ;;                  1    wreg      void 
 34846 ;; Registers used:
 34847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34848 ;; Tracked objects:
 34849 ;;		On entry : 0/0
 34850 ;;		On exit  : 0/0
 34851 ;;		Unchanged: 0/0
 34852 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34857 ;;Total ram usage:        2 bytes
 34858 ;; Hardware stack levels used: 1
 34859 ;; Hardware stack levels required when called: 5
 34860 ;; This function calls:
 34861 ;;		___awmod
 34862 ;; This function is called by:
 34863 ;;		_HC_SR04_Read_Distance_CM
 34864 ;; This function uses a non-reentrant model
 34865 ;;
 34866                           
 34867                           	psect	text100
 34868   015E54                     __ptext100:
 34869                           	callstack 0
 34870   015E54                     _HC_SR04_Add_To_Filter:
 34871                           	callstack 120
 34872   015E54                     
 34873                           ;HC_SR04.c: 206:     distance_buffer[buffer_index] = distance;
 34874   015E54  5048               	movf	_buffer_index^(0+1280),w,c
 34875   015E56  0D02               	mullw	2
 34876   015E58  0E44               	movlw	low _distance_buffer
 34877   015E5A  24F3               	addwf	243,w,c
 34878   015E5C  6ED9               	movwf	fsr2l,c
 34879   015E5E  0E07               	movlw	high _distance_buffer
 34880   015E60  20F4               	addwfc	prodh,w,c
 34881   015E62  6EDA               	movwf	fsr2h,c
 34882   015E64  C517  F4DE         	movff	HC_SR04_Add_To_Filter@distance,postinc2
 34883   015E68  C518  F4DD         	movff	HC_SR04_Add_To_Filter@distance+1,postdec2
 34884   015E6C                     
 34885                           ;HC_SR04.c: 207:     buffer_index = (buffer_index + 1) % 5;
 34886   015E6C  0E01               	movlw	1
 34887   015E6E  2448               	addwf	_buffer_index^(0+1280),w,c
 34888   015E70  6E11               	movwf	___awmod@dividend^(0+1280),c
 34889   015E72  6A12               	clrf	(___awmod@dividend+1)^(0+1280),c
 34890   015E74  0E00               	movlw	0
 34891   015E76  2212               	addwfc	(___awmod@dividend+1)^(0+1280),f,c
 34892   015E78  0E00               	movlw	0
 34893   015E7A  6E14               	movwf	(___awmod@divisor+1)^(0+1280),c
 34894   015E7C  0E05               	movlw	5
 34895   015E7E  6E13               	movwf	___awmod@divisor^(0+1280),c
 34896   015E80  EC94  F0AA         	call	___awmod	;wreg free
 34897   015E84  5011               	movf	?___awmod^(0+1280),w,c
 34898   015E86  6E48               	movwf	_buffer_index^(0+1280),c
 34899   015E88                     
 34900                           ;HC_SR04.c: 209:     if(!buffer_full && buffer_index == 0) {
 34901   015E88  5047               	movf	_buffer_full^(0+1280),w,c
 34902   015E8A  A4D8               	btfss	status,2,c
 34903   015E8C  EF4A  F0AF         	goto	u7111
 34904   015E90  EF4C  F0AF         	goto	u7110
 34905   015E94                     u7111:
 34906   015E94  EF56  F0AF         	goto	l1482
 34907   015E98                     u7110:
 34908   015E98  5048               	movf	_buffer_index^(0+1280),w,c
 34909   015E9A  A4D8               	btfss	status,2,c
 34910   015E9C  EF52  F0AF         	goto	u7121
 34911   015EA0  EF54  F0AF         	goto	u7120
 34912   015EA4                     u7121:
 34913   015EA4  EF56  F0AF         	goto	l1482
 34914   015EA8                     u7120:
 34915   015EA8                     
 34916                           ;HC_SR04.c: 210:         buffer_full = 1;
 34917   015EA8  0E01               	movlw	1
 34918   015EAA  6E47               	movwf	_buffer_full^(0+1280),c
 34919   015EAC                     l1482:
 34920   015EAC  0012               	return		;funcret
 34921   015EAE                     __end_of_HC_SR04_Add_To_Filter:
 34922                           	callstack 0
 34923                           
 34924 ;; *************** function ___awmod *****************
 34925 ;; Defined at:
 34926 ;;		line 7 in file "/Applications/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
 34927 ;; Parameters:    Size  Location     Type
 34928 ;;  dividend        2   16[COMRAM] int 
 34929 ;;  divisor         2   18[COMRAM] int 
 34930 ;; Auto vars:     Size  Location     Type
 34931 ;;  sign            1   21[COMRAM] unsigned char 
 34932 ;;  counter         1   20[COMRAM] unsigned char 
 34933 ;; Return value:  Size  Location     Type
 34934 ;;                  2   16[COMRAM] int 
 34935 ;; Registers used:
 34936 ;;		wreg, status,2, status,0
 34937 ;; Tracked objects:
 34938 ;;		On entry : 0/0
 34939 ;;		On exit  : 0/0
 34940 ;;		Unchanged: 0/0
 34941 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 34942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34946 ;;Total ram usage:        6 bytes
 34947 ;; Hardware stack levels used: 1
 34948 ;; Hardware stack levels required when called: 4
 34949 ;; This function calls:
 34950 ;;		Nothing
 34951 ;; This function is called by:
 34952 ;;		_HC_SR04_Add_To_Filter
 34953 ;; This function uses a non-reentrant model
 34954 ;;
 34955                           
 34956                           	psect	text101
 34957   015528                     __ptext101:
 34958                           	callstack 0
 34959   015528                     ___awmod:
 34960                           	callstack 120
 34961   015528  6A16               	clrf	___awmod@sign^(0+1280),c
 34962   01552A  BE12               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 34963   01552C  EF9C  F0AA         	goto	u6250
 34964   015530  EF9A  F0AA         	goto	u6251
 34965   015534                     u6251:
 34966   015534  EFA2  F0AA         	goto	l7533
 34967   015538                     u6250:
 34968   015538  6C11               	negf	___awmod@dividend^(0+1280),c
 34969   01553A  1E12               	comf	(___awmod@dividend+1)^(0+1280),f,c
 34970   01553C  B0D8               	btfsc	status,0,c
 34971   01553E  2A12               	incf	(___awmod@dividend+1)^(0+1280),f,c
 34972   015540  0E01               	movlw	1
 34973   015542  6E16               	movwf	___awmod@sign^(0+1280),c
 34974   015544                     l7533:
 34975   015544  BE14               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 34976   015546  EFA9  F0AA         	goto	u6260
 34977   01554A  EFA7  F0AA         	goto	u6261
 34978   01554E                     u6261:
 34979   01554E  EFAD  F0AA         	goto	l7537
 34980   015552                     u6260:
 34981   015552  6C13               	negf	___awmod@divisor^(0+1280),c
 34982   015554  1E14               	comf	(___awmod@divisor+1)^(0+1280),f,c
 34983   015556  B0D8               	btfsc	status,0,c
 34984   015558  2A14               	incf	(___awmod@divisor+1)^(0+1280),f,c
 34985   01555A                     l7537:
 34986   01555A  5013               	movf	___awmod@divisor^(0+1280),w,c
 34987   01555C  1014               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 34988   01555E  B4D8               	btfsc	status,2,c
 34989   015560  EFB4  F0AA         	goto	u6271
 34990   015564  EFB6  F0AA         	goto	u6270
 34991   015568                     u6271:
 34992   015568  EFDA  F0AA         	goto	l7553
 34993   01556C                     u6270:
 34994   01556C  0E01               	movlw	1
 34995   01556E  6E15               	movwf	___awmod@counter^(0+1280),c
 34996   015570  EFBE  F0AA         	goto	l7543
 34997   015574                     l7541:
 34998   015574  90D8               	bcf	status,0,c
 34999   015576  3613               	rlcf	___awmod@divisor^(0+1280),f,c
 35000   015578  3614               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 35001   01557A  2A15               	incf	___awmod@counter^(0+1280),f,c
 35002   01557C                     l7543:
 35003   01557C  AE14               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 35004   01557E  EFC3  F0AA         	goto	u6281
 35005   015582  EFC5  F0AA         	goto	u6280
 35006   015586                     u6281:
 35007   015586  EFBA  F0AA         	goto	l7541
 35008   01558A                     u6280:
 35009   01558A                     l7545:
 35010   01558A  5013               	movf	___awmod@divisor^(0+1280),w,c
 35011   01558C  5C11               	subwf	___awmod@dividend^(0+1280),w,c
 35012   01558E  5014               	movf	(___awmod@divisor+1)^(0+1280),w,c
 35013   015590  5812               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 35014   015592  A0D8               	btfss	status,0,c
 35015   015594  EFCE  F0AA         	goto	u6291
 35016   015598  EFD0  F0AA         	goto	u6290
 35017   01559C                     u6291:
 35018   01559C  EFD4  F0AA         	goto	l7549
 35019   0155A0                     u6290:
 35020   0155A0  5013               	movf	___awmod@divisor^(0+1280),w,c
 35021   0155A2  5E11               	subwf	___awmod@dividend^(0+1280),f,c
 35022   0155A4  5014               	movf	(___awmod@divisor+1)^(0+1280),w,c
 35023   0155A6  5A12               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 35024   0155A8                     l7549:
 35025   0155A8  90D8               	bcf	status,0,c
 35026   0155AA  3214               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 35027   0155AC  3213               	rrcf	___awmod@divisor^(0+1280),f,c
 35028   0155AE  2E15               	decfsz	___awmod@counter^(0+1280),f,c
 35029   0155B0  EFC5  F0AA         	goto	l7545
 35030   0155B4                     l7553:
 35031   0155B4  5016               	movf	___awmod@sign^(0+1280),w,c
 35032   0155B6  B4D8               	btfsc	status,2,c
 35033   0155B8  EFE0  F0AA         	goto	u6301
 35034   0155BC  EFE2  F0AA         	goto	u6300
 35035   0155C0                     u6301:
 35036   0155C0  EFE6  F0AA         	goto	l7557
 35037   0155C4                     u6300:
 35038   0155C4  6C11               	negf	___awmod@dividend^(0+1280),c
 35039   0155C6  1E12               	comf	(___awmod@dividend+1)^(0+1280),f,c
 35040   0155C8  B0D8               	btfsc	status,0,c
 35041   0155CA  2A12               	incf	(___awmod@dividend+1)^(0+1280),f,c
 35042   0155CC                     l7557:
 35043   0155CC  C511  F511         	movff	___awmod@dividend,?___awmod
 35044   0155D0  C512  F512         	movff	___awmod@dividend+1,?___awmod+1
 35045   0155D4  0012               	return		;funcret
 35046   0155D6                     __end_of___awmod:
 35047                           	callstack 0
 35048                           
 35049 ;; *************** function _HC_SR04_Init *****************
 35050 ;; Defined at:
 35051 ;;		line 115 in file "HC_SR04.c"
 35052 ;; Parameters:    Size  Location     Type
 35053 ;;		None
 35054 ;; Auto vars:     Size  Location     Type
 35055 ;;		None
 35056 ;; Return value:  Size  Location     Type
 35057 ;;                  1    wreg      void 
 35058 ;; Registers used:
 35059 ;;		wreg, status,2
 35060 ;; Tracked objects:
 35061 ;;		On entry : 0/0
 35062 ;;		On exit  : 0/0
 35063 ;;		Unchanged: 0/0
 35064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35069 ;;Total ram usage:        0 bytes
 35070 ;; Hardware stack levels used: 1
 35071 ;; Hardware stack levels required when called: 4
 35072 ;; This function calls:
 35073 ;;		Nothing
 35074 ;; This function is called by:
 35075 ;;		_main
 35076 ;; This function uses a non-reentrant model
 35077 ;;
 35078                           
 35079                           	psect	text102
 35080   0169BE                     __ptext102:
 35081                           	callstack 0
 35082   0169BE                     _HC_SR04_Init:
 35083                           	callstack 122
 35084   0169BE  98C9               	bcf	201,4,c	;volatile
 35085   0169C0  98C1               	bcf	193,4,c	;volatile
 35086   0169C2  8AC6               	bsf	198,5,c	;volatile
 35087   0169C4                     
 35088                           ;HC_SR04.c: 124:     sensor_initialized = 1;
 35089   0169C4  0E01               	movlw	1
 35090   0169C6  0106               	movlb	6	; () banked
 35091   0169C8  6FD9               	movwf	_sensor_initialized& (0+255),b
 35092   0169CA                     
 35093                           ; BSR set to: 6
 35094   0169CA  0012               	return		;funcret
 35095   0169CC                     __end_of_HC_SR04_Init:
 35096                           	callstack 0
 35097                           
 35098 ;; *************** function _HC_SR04_Get_Last_Status *****************
 35099 ;; Defined at:
 35100 ;;		line 193 in file "HC_SR04.c"
 35101 ;; Parameters:    Size  Location     Type
 35102 ;;		None
 35103 ;; Auto vars:     Size  Location     Type
 35104 ;;		None
 35105 ;; Return value:  Size  Location     Type
 35106 ;;                  1    wreg      enum E18134
 35107 ;; Registers used:
 35108 ;;		wreg, status,2
 35109 ;; Tracked objects:
 35110 ;;		On entry : 0/0
 35111 ;;		On exit  : 0/0
 35112 ;;		Unchanged: 0/0
 35113 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35118 ;;Total ram usage:        0 bytes
 35119 ;; Hardware stack levels used: 1
 35120 ;; Hardware stack levels required when called: 4
 35121 ;; This function calls:
 35122 ;;		Nothing
 35123 ;; This function is called by:
 35124 ;;		_main
 35125 ;; This function uses a non-reentrant model
 35126 ;;
 35127                           
 35128                           	psect	text103
 35129   016A2E                     __ptext103:
 35130                           	callstack 0
 35131   016A2E                     _HC_SR04_Get_Last_Status:
 35132                           	callstack 122
 35133   016A2E                     
 35134                           ;HC_SR04.c: 194:     return last_status;
 35135   016A2E  0106               	movlb	6	; () banked
 35136   016A30  51DA               	movf	_last_status& (0+255),w,b
 35137   016A32                     
 35138                           ; BSR set to: 6
 35139   016A32  0012               	return		;funcret
 35140   016A34                     __end_of_HC_SR04_Get_Last_Status:
 35141                           	callstack 0
 35142                           
 35143 ;; *************** function _I2C1_ISR *****************
 35144 ;; Defined at:
 35145 ;;		line 232 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35146 ;; Parameters:    Size  Location     Type
 35147 ;;		None
 35148 ;; Auto vars:     Size  Location     Type
 35149 ;;		None
 35150 ;; Return value:  Size  Location     Type
 35151 ;;                  1    wreg      void 
 35152 ;; Registers used:
 35153 ;;		wreg, status,2, status,0, cstack
 35154 ;; Tracked objects:
 35155 ;;		On entry : 0/0
 35156 ;;		On exit  : 0/0
 35157 ;;		Unchanged: 0/0
 35158 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35163 ;;Total ram usage:        0 bytes
 35164 ;; Hardware stack levels used: 1
 35165 ;; Hardware stack levels required when called: 2
 35166 ;; This function calls:
 35167 ;;		_I2C1_Close
 35168 ;;		_I2C1_ReadStart
 35169 ;;		_I2C1_RestartDisable
 35170 ;;		_I2C1_StopSend
 35171 ;; This function is called by:
 35172 ;;		Interrupt level 2
 35173 ;; This function uses a non-reentrant model
 35174 ;;
 35175                           
 35176                           	psect	text104
 35177   015854                     __ptext104:
 35178                           	callstack 0
 35179   015854                     _I2C1_ISR:
 35180                           	callstack 115
 35181   015854                     
 35182                           ;mcc_generated_files/i2c_host/src/i2c1.c: 234:     if (I2C1PIEbits.PCIE && I2C1PIRbits.P
      +                          CIF)
 35183   015854  0102               	movlb	2	; () banked
 35184   015856  A59B               	btfss	155,2,b	;volatile
 35185   015858  EF30  F0AC         	goto	i2u774_41
 35186   01585C  EF32  F0AC         	goto	i2u774_40
 35187   015860                     i2u774_41:
 35188   015860  EF3D  F0AC         	goto	i2l149
 35189   015864                     i2u774_40:
 35190   015864                     
 35191                           ; BSR set to: 2
 35192   015864  A59A               	btfss	154,2,b	;volatile
 35193   015866  EF37  F0AC         	goto	i2u775_41
 35194   01586A  EF39  F0AC         	goto	i2u775_40
 35195   01586E                     i2u775_41:
 35196   01586E  EF3D  F0AC         	goto	i2l149
 35197   015872                     i2u775_40:
 35198   015872                     i2l8955:
 35199                           
 35200                           ;mcc_generated_files/i2c_host/src/i2c1.c: 235:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 236:         I2C1_Close();
 35201   015872  EC1A  F0B3         	call	_I2C1_Close	;wreg free
 35202                           
 35203                           ;mcc_generated_files/i2c_host/src/i2c1.c: 237:     }
 35204   015876  EF72  F0AC         	goto	i2l157
 35205   01587A                     i2l149:
 35206                           
 35207                           ; BSR set to: 2
 35208   01587A  AF9B               	btfss	155,7,b	;volatile
 35209   01587C  EF42  F0AC         	goto	i2u776_41
 35210   015880  EF44  F0AC         	goto	i2u776_40
 35211   015884                     i2u776_41:
 35212   015884  EF5E  F0AC         	goto	i2l151
 35213   015888                     i2u776_40:
 35214   015888                     
 35215                           ; BSR set to: 2
 35216   015888  AF9A               	btfss	154,7,b	;volatile
 35217   01588A  EF49  F0AC         	goto	i2u777_41
 35218   01588E  EF4B  F0AC         	goto	i2u777_40
 35219   015892                     i2u777_41:
 35220   015892  EF5E  F0AC         	goto	i2l151
 35221   015896                     i2u777_40:
 35222   015896                     
 35223                           ; BSR set to: 2
 35224                           ;mcc_generated_files/i2c_host/src/i2c1.c: 239:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 241:         if (0 != i2c1Status.switchToRead)
 35225   015896  503F               	movf	(_i2c1Status+11)^(0+1280),w,c	;volatile
 35226   015898  B4D8               	btfsc	status,2,c
 35227   01589A  EF51  F0AC         	goto	i2u778_41
 35228   01589E  EF53  F0AC         	goto	i2u778_40
 35229   0158A2                     i2u778_41:
 35230   0158A2  EF5A  F0AC         	goto	i2l8965
 35231   0158A6                     i2u778_40:
 35232   0158A6                     
 35233                           ; BSR set to: 2
 35234                           ;mcc_generated_files/i2c_host/src/i2c1.c: 242:         {;mcc_generated_files/i2c_host/sr
      +                          c/i2c1.c: 243:             i2c1Status.switchToRead = 0;
 35235   0158A6  6A3F               	clrf	(_i2c1Status+11)^(0+1280),c	;volatile
 35236                           
 35237                           ;mcc_generated_files/i2c_host/src/i2c1.c: 244:             I2C1PIRbits.SCIF = 0;
 35238   0158A8  919A               	bcf	154,0,b	;volatile
 35239                           
 35240                           ;mcc_generated_files/i2c_host/src/i2c1.c: 245:             I2C1PIRbits.CNTIF = 0;
 35241   0158AA  9F9A               	bcf	154,7,b	;volatile
 35242   0158AC                     
 35243                           ; BSR set to: 2
 35244                           ;mcc_generated_files/i2c_host/src/i2c1.c: 246:             I2C1_ReadStart();
 35245   0158AC  EC07  F0B3         	call	_I2C1_ReadStart	;wreg free
 35246                           
 35247                           ;mcc_generated_files/i2c_host/src/i2c1.c: 247:         }
 35248   0158B0  EF72  F0AC         	goto	i2l157
 35249   0158B4                     i2l8965:
 35250                           
 35251                           ; BSR set to: 2
 35252                           ;mcc_generated_files/i2c_host/src/i2c1.c: 249:         {;mcc_generated_files/i2c_host/sr
      +                          c/i2c1.c: 250:             I2C1_StopSend();
 35253   0158B4  ECF4  F0B2         	call	_I2C1_StopSend	;wreg free
 35254   0158B8  EF39  F0AC         	goto	i2l8955
 35255   0158BC                     i2l151:
 35256                           
 35257                           ; BSR set to: 2
 35258   0158BC  A39B               	btfss	155,1,b	;volatile
 35259   0158BE  EF63  F0AC         	goto	i2u779_41
 35260   0158C2  EF65  F0AC         	goto	i2u779_40
 35261   0158C6                     i2u779_41:
 35262   0158C6  EF72  F0AC         	goto	i2l154
 35263   0158CA                     i2u779_40:
 35264   0158CA                     
 35265                           ; BSR set to: 2
 35266   0158CA  A39A               	btfss	154,1,b	;volatile
 35267   0158CC  EF6A  F0AC         	goto	i2u780_41
 35268   0158D0  EF6C  F0AC         	goto	i2u780_40
 35269   0158D4                     i2u780_41:
 35270   0158D4  EF72  F0AC         	goto	i2l154
 35271   0158D8                     i2u780_40:
 35272   0158D8                     
 35273                           ; BSR set to: 2
 35274                           ;mcc_generated_files/i2c_host/src/i2c1.c: 255:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 256:         I2C1_RestartDisable();
 35275   0158D8  EC1A  F0B5         	call	_I2C1_RestartDisable	;wreg free
 35276   0158DC                     
 35277                           ;mcc_generated_files/i2c_host/src/i2c1.c: 257:         I2C1PIRbits.RSCIF = 0;
 35278   0158DC  0102               	movlb	2	; () banked
 35279   0158DE  939A               	bcf	154,1,b	;volatile
 35280                           
 35281                           ;mcc_generated_files/i2c_host/src/i2c1.c: 258:     }
 35282   0158E0  EF72  F0AC         	goto	i2l157
 35283   0158E4                     i2l154:
 35284   0158E4                     i2l157:
 35285   0158E4  0011               	retfie		f
 35286   0158E6                     __end_of_I2C1_ISR:
 35287                           	callstack 0
 35288                           
 35289 ;; *************** function _I2C1_StopSend *****************
 35290 ;; Defined at:
 35291 ;;		line 421 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35292 ;; Parameters:    Size  Location     Type
 35293 ;;		None
 35294 ;; Auto vars:     Size  Location     Type
 35295 ;;		None
 35296 ;; Return value:  Size  Location     Type
 35297 ;;                  1    wreg      void 
 35298 ;; Registers used:
 35299 ;;		wreg, status,2, cstack
 35300 ;; Tracked objects:
 35301 ;;		On entry : 0/0
 35302 ;;		On exit  : 0/0
 35303 ;;		Unchanged: 0/0
 35304 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35309 ;;Total ram usage:        0 bytes
 35310 ;; Hardware stack levels used: 1
 35311 ;; Hardware stack levels required when called: 1
 35312 ;; This function calls:
 35313 ;;		_I2C1_CounterGet
 35314 ;;		_I2C1_DataTransmit
 35315 ;;		_I2C1_RestartDisable
 35316 ;;		i2_I2C1_CounterSet
 35317 ;; This function is called by:
 35318 ;;		_I2C1_ISR
 35319 ;;		_I2C1_ERROR_ISR
 35320 ;; This function uses a non-reentrant model
 35321 ;;
 35322                           
 35323                           	psect	text105
 35324   0165E8                     __ptext105:
 35325                           	callstack 0
 35326   0165E8                     _I2C1_StopSend:
 35327                           	callstack 115
 35328   0165E8                     
 35329                           ;mcc_generated_files/i2c_host/src/i2c1.c: 423:     I2C1_RestartDisable();
 35330   0165E8  EC1A  F0B5         	call	_I2C1_RestartDisable	;wreg free
 35331   0165EC                     
 35332                           ;mcc_generated_files/i2c_host/src/i2c1.c: 424:     if (0U != I2C1_CounterGet())
 35333   0165EC  EC1D  F0B5         	call	_I2C1_CounterGet	;wreg free
 35334   0165F0  0900               	iorlw	0
 35335   0165F2  B4D8               	btfsc	status,2,c
 35336   0165F4  EFFE  F0B2         	goto	i2u725_41
 35337   0165F8  EF00  F0B3         	goto	i2u725_40
 35338   0165FC                     i2u725_41:
 35339   0165FC  EF06  F0B3         	goto	i2l224
 35340   016600                     i2u725_40:
 35341   016600                     
 35342                           ;mcc_generated_files/i2c_host/src/i2c1.c: 425:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 426:         I2C1_CounterSet(0);
 35343   016600  0E00               	movlw	0
 35344   016602  ECFC  F0B4         	call	i2_I2C1_CounterSet
 35345                           
 35346                           ;mcc_generated_files/i2c_host/src/i2c1.c: 427:         I2C1_DataTransmit(0);
 35347   016606  0E00               	movlw	0
 35348   016608  ECF8  F0B4         	call	_I2C1_DataTransmit
 35349   01660C                     i2l224:
 35350   01660C  0012               	return		;funcret
 35351   01660E                     __end_of_I2C1_StopSend:
 35352                           	callstack 0
 35353                           
 35354 ;; *************** function _I2C1_RestartDisable *****************
 35355 ;; Defined at:
 35356 ;;		line 416 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35357 ;; Parameters:    Size  Location     Type
 35358 ;;		None
 35359 ;; Auto vars:     Size  Location     Type
 35360 ;;		None
 35361 ;; Return value:  Size  Location     Type
 35362 ;;                  1    wreg      void 
 35363 ;; Registers used:
 35364 ;;		None
 35365 ;; Tracked objects:
 35366 ;;		On entry : 0/0
 35367 ;;		On exit  : 0/0
 35368 ;;		Unchanged: 0/0
 35369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35374 ;;Total ram usage:        0 bytes
 35375 ;; Hardware stack levels used: 1
 35376 ;; This function calls:
 35377 ;;		Nothing
 35378 ;; This function is called by:
 35379 ;;		_I2C1_ISR
 35380 ;;		_I2C1_StopSend
 35381 ;; This function uses a non-reentrant model
 35382 ;;
 35383                           
 35384                           	psect	text106
 35385   016A34                     __ptext106:
 35386                           	callstack 0
 35387   016A34                     _I2C1_RestartDisable:
 35388                           	callstack 115
 35389   016A34                     
 35390                           ;mcc_generated_files/i2c_host/src/i2c1.c: 418:     I2C1CON0bits.RSEN = 0;
 35391   016A34  0102               	movlb	2	; () banked
 35392   016A36  9D94               	bcf	148,6,b	;volatile
 35393   016A38                     
 35394                           ; BSR set to: 2
 35395   016A38  0012               	return		;funcret
 35396   016A3A                     __end_of_I2C1_RestartDisable:
 35397                           	callstack 0
 35398                           
 35399 ;; *************** function _I2C1_DataTransmit *****************
 35400 ;; Defined at:
 35401 ;;		line 365 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35402 ;; Parameters:    Size  Location     Type
 35403 ;;  data            1    wreg     unsigned char 
 35404 ;; Auto vars:     Size  Location     Type
 35405 ;;  data            1    2[COMRAM] unsigned char 
 35406 ;; Return value:  Size  Location     Type
 35407 ;;                  1    wreg      void 
 35408 ;; Registers used:
 35409 ;;		wreg
 35410 ;; Tracked objects:
 35411 ;;		On entry : 0/0
 35412 ;;		On exit  : 0/0
 35413 ;;		Unchanged: 0/0
 35414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35419 ;;Total ram usage:        1 bytes
 35420 ;; Hardware stack levels used: 1
 35421 ;; This function calls:
 35422 ;;		Nothing
 35423 ;; This function is called by:
 35424 ;;		_I2C1_TX_ISR
 35425 ;;		_I2C1_StopSend
 35426 ;; This function uses a non-reentrant model
 35427 ;;
 35428                           
 35429                           	psect	text107
 35430   0169F0                     __ptext107:
 35431                           	callstack 0
 35432   0169F0                     _I2C1_DataTransmit:
 35433                           	callstack 116
 35434                           
 35435                           ; BSR set to: 2
 35436                           ;incstack = 0
 35437                           ;I2C1_DataTransmit@data stored from wreg
 35438   0169F0  6E03               	movwf	I2C1_DataTransmit@data^(0+1280),c
 35439   0169F2                     
 35440                           ;mcc_generated_files/i2c_host/src/i2c1.c: 365: static void I2C1_DataTransmit(uint8_t dat
      +                          a);mcc_generated_files/i2c_host/src/i2c1.c: 366: {;mcc_generated_files/i2c_host/src/i2c1
      +                          .c: 367:     I2C1TXB = data;
 35441   0169F2  C503  F28C         	movff	I2C1_DataTransmit@data,652	;volatile
 35442   0169F6  0012               	return		;funcret
 35443   0169F8                     __end_of_I2C1_DataTransmit:
 35444                           	callstack 0
 35445                           
 35446 ;; *************** function _I2C1_CounterGet *****************
 35447 ;; Defined at:
 35448 ;;		line 380 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35449 ;; Parameters:    Size  Location     Type
 35450 ;;		None
 35451 ;; Auto vars:     Size  Location     Type
 35452 ;;		None
 35453 ;; Return value:  Size  Location     Type
 35454 ;;                  1    wreg      unsigned char 
 35455 ;; Registers used:
 35456 ;;		wreg, status,2
 35457 ;; Tracked objects:
 35458 ;;		On entry : 0/0
 35459 ;;		On exit  : 0/0
 35460 ;;		Unchanged: 0/0
 35461 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35466 ;;Total ram usage:        0 bytes
 35467 ;; Hardware stack levels used: 1
 35468 ;; This function calls:
 35469 ;;		Nothing
 35470 ;; This function is called by:
 35471 ;;		_I2C1_StopSend
 35472 ;; This function uses a non-reentrant model
 35473 ;;
 35474                           
 35475                           	psect	text108
 35476   016A3A                     __ptext108:
 35477                           	callstack 0
 35478   016A3A                     _I2C1_CounterGet:
 35479                           	callstack 115
 35480   016A3A                     
 35481                           ;mcc_generated_files/i2c_host/src/i2c1.c: 382:     return (uint8_t) I2C1CNT;
 35482   016A3A  0102               	movlb	2	; () banked
 35483   016A3C  518D               	movf	141,w,b	;volatile
 35484   016A3E                     
 35485                           ; BSR set to: 2
 35486   016A3E  0012               	return		;funcret
 35487   016A40                     __end_of_I2C1_CounterGet:
 35488                           	callstack 0
 35489                           
 35490 ;; *************** function _I2C1_ReadStart *****************
 35491 ;; Defined at:
 35492 ;;		line 315 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35493 ;; Parameters:    Size  Location     Type
 35494 ;;		None
 35495 ;; Auto vars:     Size  Location     Type
 35496 ;;		None
 35497 ;; Return value:  Size  Location     Type
 35498 ;;                  1    wreg      void 
 35499 ;; Registers used:
 35500 ;;		wreg, status,2, status,0, cstack
 35501 ;; Tracked objects:
 35502 ;;		On entry : 0/0
 35503 ;;		On exit  : 0/0
 35504 ;;		Unchanged: 0/0
 35505 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35510 ;;Total ram usage:        0 bytes
 35511 ;; Hardware stack levels used: 1
 35512 ;; Hardware stack levels required when called: 1
 35513 ;; This function calls:
 35514 ;;		i2_I2C1_AddrTransmit
 35515 ;;		i2_I2C1_CounterSet
 35516 ;;		i2_I2C1_StartSend
 35517 ;; This function is called by:
 35518 ;;		_I2C1_ISR
 35519 ;;		_I2C1_Read
 35520 ;; This function uses a non-reentrant model
 35521 ;;
 35522                           
 35523                           	psect	text109
 35524   01660E                     __ptext109:
 35525                           	callstack 0
 35526   01660E                     _I2C1_ReadStart:
 35527                           	callstack 115
 35528   01660E                     
 35529                           ;mcc_generated_files/i2c_host/src/i2c1.c: 317:     if (0U != i2c1Status.readLength)
 35530   01660E  503D               	movf	(_i2c1Status+9)^(0+1280),w,c	;volatile
 35531   016610  103E               	iorwf	(_i2c1Status+10)^(0+1280),w,c	;volatile
 35532   016612  B4D8               	btfsc	status,2,c
 35533   016614  EF0E  F0B3         	goto	i2u724_41
 35534   016618  EF10  F0B3         	goto	i2u724_40
 35535   01661C                     i2u724_41:
 35536   01661C  EF13  F0B3         	goto	i2l8507
 35537   016620                     i2u724_40:
 35538   016620                     
 35539                           ;mcc_generated_files/i2c_host/src/i2c1.c: 318:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 319:         I2C1_CounterSet((uint8_t) i2c1Status.readLength);
 35540   016620  503D               	movf	(_i2c1Status+9)^(0+1280),w,c	;volatile
 35541   016622  ECFC  F0B4         	call	i2_I2C1_CounterSet
 35542   016626                     i2l8507:
 35543                           
 35544                           ;mcc_generated_files/i2c_host/src/i2c1.c: 322:     I2C1_AddrTransmit((uint8_t) ((i2c1Sta
      +                          tus.address << 1) | 1U));
 35545   016626  80D8               	bsf	status,0,c
 35546   016628  3435               	rlcf	(_i2c1Status+1)^(0+1280),w,c	;volatile
 35547   01662A  EC00  F0B5         	call	i2_I2C1_AddrTransmit
 35548   01662E                     
 35549                           ;mcc_generated_files/i2c_host/src/i2c1.c: 323:     I2C1_StartSend();
 35550   01662E  EC20  F0B5         	call	i2_I2C1_StartSend	;wreg free
 35551   016632  0012               	return		;funcret
 35552   016634                     __end_of_I2C1_ReadStart:
 35553                           	callstack 0
 35554                           
 35555 ;; *************** function i2_I2C1_StartSend *****************
 35556 ;; Defined at:
 35557 ;;		line 355 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35558 ;; Parameters:    Size  Location     Type
 35559 ;;		None
 35560 ;; Auto vars:     Size  Location     Type
 35561 ;;		None
 35562 ;; Return value:  Size  Location     Type
 35563 ;;                  1    wreg      void 
 35564 ;; Registers used:
 35565 ;;		None
 35566 ;; Tracked objects:
 35567 ;;		On entry : 0/0
 35568 ;;		On exit  : 0/0
 35569 ;;		Unchanged: 0/0
 35570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35575 ;;Total ram usage:        0 bytes
 35576 ;; Hardware stack levels used: 1
 35577 ;; This function calls:
 35578 ;;		Nothing
 35579 ;; This function is called by:
 35580 ;;		_I2C1_ReadStart
 35581 ;; This function uses a non-reentrant model
 35582 ;;
 35583                           
 35584                           	psect	text110
 35585   016A40                     __ptext110:
 35586                           	callstack 0
 35587   016A40                     i2_I2C1_StartSend:
 35588                           	callstack 115
 35589   016A40                     
 35590                           ;mcc_generated_files/i2c_host/src/i2c1.c: 357:     I2C1CON0bits.S = 1;
 35591   016A40  0102               	movlb	2	; () banked
 35592   016A42  8B94               	bsf	148,5,b	;volatile
 35593   016A44                     
 35594                           ; BSR set to: 2
 35595   016A44  0012               	return		;funcret
 35596   016A46                     __end_ofi2_I2C1_StartSend:
 35597                           	callstack 0
 35598                           
 35599 ;; *************** function i2_I2C1_CounterSet *****************
 35600 ;; Defined at:
 35601 ;;		line 375 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35602 ;; Parameters:    Size  Location     Type
 35603 ;;  counter         1    wreg     unsigned char 
 35604 ;; Auto vars:     Size  Location     Type
 35605 ;;  counter         1    1[COMRAM] unsigned char 
 35606 ;; Return value:  Size  Location     Type
 35607 ;;                  1    wreg      void 
 35608 ;; Registers used:
 35609 ;;		wreg
 35610 ;; Tracked objects:
 35611 ;;		On entry : 0/0
 35612 ;;		On exit  : 0/0
 35613 ;;		Unchanged: 0/0
 35614 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35619 ;;Total ram usage:        1 bytes
 35620 ;; Hardware stack levels used: 1
 35621 ;; This function calls:
 35622 ;;		Nothing
 35623 ;; This function is called by:
 35624 ;;		_I2C1_ReadStart
 35625 ;;		_I2C1_StopSend
 35626 ;; This function uses a non-reentrant model
 35627 ;;
 35628                           
 35629                           	psect	text111
 35630   0169F8                     __ptext111:
 35631                           	callstack 0
 35632   0169F8                     i2_I2C1_CounterSet:
 35633                           	callstack 115
 35634                           
 35635                           ; BSR set to: 2
 35636                           ;incstack = 0
 35637                           ;i2I2C1_CounterSet@counter stored from wreg
 35638   0169F8  6E02               	movwf	i2I2C1_CounterSet@counter^(0+1280),c
 35639   0169FA                     
 35640                           ;mcc_generated_files/i2c_host/src/i2c1.c: 375: static void I2C1_CounterSet(uint8_t count
      +                          er);mcc_generated_files/i2c_host/src/i2c1.c: 376: {;mcc_generated_files/i2c_host/src/i2c
      +                          1.c: 377:     I2C1CNT = counter;
 35641   0169FA  C502  F28D         	movff	i2I2C1_CounterSet@counter,653	;volatile
 35642   0169FE  0012               	return		;funcret
 35643   016A00                     __end_ofi2_I2C1_CounterSet:
 35644                           	callstack 0
 35645                           
 35646 ;; *************** function i2_I2C1_AddrTransmit *****************
 35647 ;; Defined at:
 35648 ;;		line 360 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35649 ;; Parameters:    Size  Location     Type
 35650 ;;  addr            1    wreg     unsigned char 
 35651 ;; Auto vars:     Size  Location     Type
 35652 ;;  addr            1    0[COMRAM] unsigned char 
 35653 ;; Return value:  Size  Location     Type
 35654 ;;                  1    wreg      void 
 35655 ;; Registers used:
 35656 ;;		wreg
 35657 ;; Tracked objects:
 35658 ;;		On entry : 0/0
 35659 ;;		On exit  : 0/0
 35660 ;;		Unchanged: 0/0
 35661 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35666 ;;Total ram usage:        1 bytes
 35667 ;; Hardware stack levels used: 1
 35668 ;; This function calls:
 35669 ;;		Nothing
 35670 ;; This function is called by:
 35671 ;;		_I2C1_ReadStart
 35672 ;; This function uses a non-reentrant model
 35673 ;;
 35674                           
 35675                           	psect	text112
 35676   016A00                     __ptext112:
 35677                           	callstack 0
 35678   016A00                     i2_I2C1_AddrTransmit:
 35679                           	callstack 115
 35680                           
 35681                           ;incstack = 0
 35682                           ;i2I2C1_AddrTransmit@addr stored from wreg
 35683   016A00  6E01               	movwf	i2I2C1_AddrTransmit@addr^(0+1280),c
 35684   016A02                     
 35685                           ;mcc_generated_files/i2c_host/src/i2c1.c: 360: static void I2C1_AddrTransmit(uint8_t add
      +                          r);mcc_generated_files/i2c_host/src/i2c1.c: 361: {;mcc_generated_files/i2c_host/src/i2c1
      +                          .c: 362:     I2C1ADB1 = addr;
 35686   016A02  C501  F28F         	movff	i2I2C1_AddrTransmit@addr,655	;volatile
 35687   016A06  0012               	return		;funcret
 35688   016A08                     __end_ofi2_I2C1_AddrTransmit:
 35689                           	callstack 0
 35690                           
 35691 ;; *************** function _I2C1_Close *****************
 35692 ;; Defined at:
 35693 ;;		line 341 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35694 ;; Parameters:    Size  Location     Type
 35695 ;;		None
 35696 ;; Auto vars:     Size  Location     Type
 35697 ;;		None
 35698 ;; Return value:  Size  Location     Type
 35699 ;;                  1    wreg      void 
 35700 ;; Registers used:
 35701 ;;		wreg, status,2, status,0, cstack
 35702 ;; Tracked objects:
 35703 ;;		On entry : 0/0
 35704 ;;		On exit  : 0/0
 35705 ;;		Unchanged: 0/0
 35706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35711 ;;Total ram usage:        0 bytes
 35712 ;; Hardware stack levels used: 1
 35713 ;; Hardware stack levels required when called: 1
 35714 ;; This function calls:
 35715 ;;		_I2C1_BufferClear
 35716 ;;		_I2C1_ErrorFlagsClear
 35717 ;;		_I2C1_InterruptsClear
 35718 ;; This function is called by:
 35719 ;;		_I2C1_ISR
 35720 ;; This function uses a non-reentrant model
 35721 ;;
 35722                           
 35723                           	psect	text113
 35724   016634                     __ptext113:
 35725                           	callstack 0
 35726   016634                     _I2C1_Close:
 35727                           	callstack 115
 35728   016634                     
 35729                           ;mcc_generated_files/i2c_host/src/i2c1.c: 343:     i2c1Status.busy = 0;
 35730   016634  6A34               	clrf	_i2c1Status^(0+1280),c	;volatile
 35731   016636                     
 35732                           ;mcc_generated_files/i2c_host/src/i2c1.c: 344:     i2c1Status.address = 0xFF;
 35733   016636  0E00               	movlw	0
 35734   016638  6E36               	movwf	(_i2c1Status+2)^(0+1280),c	;volatile
 35735   01663A  6835               	setf	(_i2c1Status+1)^(0+1280),c	;volatile
 35736   01663C                     
 35737                           ;mcc_generated_files/i2c_host/src/i2c1.c: 345:     i2c1Status.writePtr = ((void*)0);
 35738   01663C  0E00               	movlw	0
 35739   01663E  6E37               	movwf	(_i2c1Status+3)^(0+1280),c	;volatile
 35740   016640  0E00               	movlw	0
 35741   016642  6E38               	movwf	(_i2c1Status+4)^(0+1280),c	;volatile
 35742   016644                     
 35743                           ;mcc_generated_files/i2c_host/src/i2c1.c: 346:     i2c1Status.readPtr = ((void*)0);
 35744   016644  0E00               	movlw	0
 35745   016646  6E3B               	movwf	(_i2c1Status+7)^(0+1280),c	;volatile
 35746   016648  0E00               	movlw	0
 35747   01664A  6E3C               	movwf	(_i2c1Status+8)^(0+1280),c	;volatile
 35748   01664C                     
 35749                           ;mcc_generated_files/i2c_host/src/i2c1.c: 347:     I2C1_InterruptsClear();
 35750   01664C  EC23  F0B5         	call	_I2C1_InterruptsClear	;wreg free
 35751   016650                     
 35752                           ;mcc_generated_files/i2c_host/src/i2c1.c: 348:     I2C1_ErrorFlagsClear();
 35753   016650  ECEB  F0B4         	call	_I2C1_ErrorFlagsClear	;wreg free
 35754   016654                     
 35755                           ;mcc_generated_files/i2c_host/src/i2c1.c: 349:     I2C1_BufferClear();
 35756   016654  EC04  F0B5         	call	_I2C1_BufferClear	;wreg free
 35757   016658  0012               	return		;funcret
 35758   01665A                     __end_of_I2C1_Close:
 35759                           	callstack 0
 35760                           
 35761 ;; *************** function _I2C1_InterruptsClear *****************
 35762 ;; Defined at:
 35763 ;;		line 479 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35764 ;; Parameters:    Size  Location     Type
 35765 ;;		None
 35766 ;; Auto vars:     Size  Location     Type
 35767 ;;		None
 35768 ;; Return value:  Size  Location     Type
 35769 ;;                  1    wreg      void 
 35770 ;; Registers used:
 35771 ;;		None
 35772 ;; Tracked objects:
 35773 ;;		On entry : 0/0
 35774 ;;		On exit  : 0/0
 35775 ;;		Unchanged: 0/0
 35776 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35781 ;;Total ram usage:        0 bytes
 35782 ;; Hardware stack levels used: 1
 35783 ;; This function calls:
 35784 ;;		Nothing
 35785 ;; This function is called by:
 35786 ;;		_I2C1_Close
 35787 ;;		_I2C1_BusReset
 35788 ;; This function uses a non-reentrant model
 35789 ;;
 35790                           
 35791                           	psect	text114
 35792   016A46                     __ptext114:
 35793                           	callstack 0
 35794   016A46                     _I2C1_InterruptsClear:
 35795                           	callstack 115
 35796   016A46                     
 35797                           ;mcc_generated_files/i2c_host/src/i2c1.c: 481:     I2C1PIR = 0x00;
 35798   016A46  0102               	movlb	2	; () banked
 35799   016A48  6B9A               	clrf	154,b	;volatile
 35800   016A4A                     
 35801                           ; BSR set to: 2
 35802   016A4A  0012               	return		;funcret
 35803   016A4C                     __end_of_I2C1_InterruptsClear:
 35804                           	callstack 0
 35805                           
 35806 ;; *************** function _I2C1_ErrorFlagsClear *****************
 35807 ;; Defined at:
 35808 ;;		line 484 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35809 ;; Parameters:    Size  Location     Type
 35810 ;;		None
 35811 ;; Auto vars:     Size  Location     Type
 35812 ;;		None
 35813 ;; Return value:  Size  Location     Type
 35814 ;;                  1    wreg      void 
 35815 ;; Registers used:
 35816 ;;		None
 35817 ;; Tracked objects:
 35818 ;;		On entry : 0/0
 35819 ;;		On exit  : 0/0
 35820 ;;		Unchanged: 0/0
 35821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35826 ;;Total ram usage:        0 bytes
 35827 ;; Hardware stack levels used: 1
 35828 ;; This function calls:
 35829 ;;		Nothing
 35830 ;; This function is called by:
 35831 ;;		_I2C1_Close
 35832 ;;		_I2C1_BusReset
 35833 ;; This function uses a non-reentrant model
 35834 ;;
 35835                           
 35836                           	psect	text115
 35837   0169D6                     __ptext115:
 35838                           	callstack 0
 35839   0169D6                     _I2C1_ErrorFlagsClear:
 35840                           	callstack 115
 35841   0169D6                     
 35842                           ;mcc_generated_files/i2c_host/src/i2c1.c: 486:     I2C1ERRbits.BCLIF = 0;
 35843   0169D6  0102               	movlb	2	; () banked
 35844   0169D8  9B97               	bcf	151,5,b	;volatile
 35845                           
 35846                           ;mcc_generated_files/i2c_host/src/i2c1.c: 487:     I2C1ERRbits.BTOIF = 0;
 35847   0169DA  9D97               	bcf	151,6,b	;volatile
 35848                           
 35849                           ;mcc_generated_files/i2c_host/src/i2c1.c: 488:     I2C1ERRbits.NACKIF = 0;
 35850   0169DC  9997               	bcf	151,4,b	;volatile
 35851   0169DE                     
 35852                           ; BSR set to: 2
 35853   0169DE  0012               	return		;funcret
 35854   0169E0                     __end_of_I2C1_ErrorFlagsClear:
 35855                           	callstack 0
 35856                           
 35857 ;; *************** function _I2C1_BufferClear *****************
 35858 ;; Defined at:
 35859 ;;		line 491 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35860 ;; Parameters:    Size  Location     Type
 35861 ;;		None
 35862 ;; Auto vars:     Size  Location     Type
 35863 ;;		None
 35864 ;; Return value:  Size  Location     Type
 35865 ;;                  1    wreg      void 
 35866 ;; Registers used:
 35867 ;;		None
 35868 ;; Tracked objects:
 35869 ;;		On entry : 0/0
 35870 ;;		On exit  : 0/0
 35871 ;;		Unchanged: 0/0
 35872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35877 ;;Total ram usage:        0 bytes
 35878 ;; Hardware stack levels used: 1
 35879 ;; This function calls:
 35880 ;;		Nothing
 35881 ;; This function is called by:
 35882 ;;		_I2C1_Close
 35883 ;;		_I2C1_BusReset
 35884 ;; This function uses a non-reentrant model
 35885 ;;
 35886                           
 35887                           	psect	text116
 35888   016A08                     __ptext116:
 35889                           	callstack 0
 35890   016A08                     _I2C1_BufferClear:
 35891                           	callstack 115
 35892   016A08                     
 35893                           ;mcc_generated_files/i2c_host/src/i2c1.c: 493:     I2C1STAT1 = 0x00;
 35894   016A08  0102               	movlb	2	; () banked
 35895   016A0A  6B99               	clrf	153,b	;volatile
 35896                           
 35897                           ;mcc_generated_files/i2c_host/src/i2c1.c: 494:     I2C1STAT1bits.CLRBF = 1;
 35898   016A0C  8599               	bsf	153,2,b	;volatile
 35899   016A0E                     
 35900                           ; BSR set to: 2
 35901   016A0E  0012               	return		;funcret
 35902   016A10                     __end_of_I2C1_BufferClear:
 35903                           	callstack 0
 35904                           
 35905 ;; *************** function _I2C1_ERROR_ISR *****************
 35906 ;; Defined at:
 35907 ;;		line 265 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 35908 ;; Parameters:    Size  Location     Type
 35909 ;;		None
 35910 ;; Auto vars:     Size  Location     Type
 35911 ;;		None
 35912 ;; Return value:  Size  Location     Type
 35913 ;;                  1    wreg      void 
 35914 ;; Registers used:
 35915 ;;		wreg, status,2, cstack
 35916 ;; Tracked objects:
 35917 ;;		On entry : 0/0
 35918 ;;		On exit  : 0/0
 35919 ;;		Unchanged: 0/0
 35920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 35921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35925 ;;Total ram usage:        0 bytes
 35926 ;; Hardware stack levels used: 1
 35927 ;; Hardware stack levels required when called: 2
 35928 ;; This function calls:
 35929 ;;		_I2C1_BusReset
 35930 ;;		_I2C1_IsAddr
 35931 ;;		_I2C1_IsBusCol
 35932 ;;		_I2C1_IsBusTimeOut
 35933 ;;		_I2C1_IsData
 35934 ;;		_I2C1_IsNack
 35935 ;;		_I2C1_StopSend
 35936 ;; This function is called by:
 35937 ;;		Interrupt level 2
 35938 ;; This function uses a non-reentrant model
 35939 ;;
 35940                           
 35941                           	psect	text117
 35942   015308                     __ptext117:
 35943                           	callstack 0
 35944   015308                     _I2C1_ERROR_ISR:
 35945                           	callstack 115
 35946   015308                     
 35947                           ;mcc_generated_files/i2c_host/src/i2c1.c: 267:     if (I2C1_IsBusCol())
 35948   015308  EC54  F0B4         	call	_I2C1_IsBusCol	;wreg free
 35949   01530C  0900               	iorlw	0
 35950   01530E  B4D8               	btfsc	status,2,c
 35951   015310  EF8C  F0A9         	goto	i2u781_41
 35952   015314  EF8E  F0A9         	goto	i2u781_40
 35953   015318                     i2u781_41:
 35954   015318  EF96  F0A9         	goto	i2l8983
 35955   01531C                     i2u781_40:
 35956   01531C                     
 35957                           ;mcc_generated_files/i2c_host/src/i2c1.c: 268:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 269:         i2c1Status.errorState = I2C_ERROR_BUS_COLLISION;
 35958   01531C  0E03               	movlw	3
 35959   01531E  6E40               	movwf	(_i2c1Status+12)^(0+1280),c	;volatile
 35960   015320                     
 35961                           ;mcc_generated_files/i2c_host/src/i2c1.c: 270:         I2C1ERRbits.BCLIF = 0;
 35962   015320  0102               	movlb	2	; () banked
 35963   015322  9B97               	bcf	151,5,b	;volatile
 35964   015324                     
 35965                           ; BSR set to: 2
 35966                           ;mcc_generated_files/i2c_host/src/i2c1.c: 271:         I2C1_BusReset();
 35967   015324  EC26  F0B1         	call	_I2C1_BusReset	;wreg free
 35968                           
 35969                           ;mcc_generated_files/i2c_host/src/i2c1.c: 272:     }
 35970   015328  EFDE  F0A9         	goto	i2l9009
 35971   01532C                     i2l8983:
 35972   01532C  EC5F  F0B4         	call	_I2C1_IsAddr	;wreg free
 35973   015330  0900               	iorlw	0
 35974   015332  B4D8               	btfsc	status,2,c
 35975   015334  EF9E  F0A9         	goto	i2u782_41
 35976   015338  EFA0  F0A9         	goto	i2u782_40
 35977   01533C                     i2u782_41:
 35978   01533C  EFB2  F0A9         	goto	i2l8993
 35979   015340                     i2u782_40:
 35980   015340  EC33  F0B4         	call	_I2C1_IsNack	;wreg free
 35981   015344  0900               	iorlw	0
 35982   015346  B4D8               	btfsc	status,2,c
 35983   015348  EFA8  F0A9         	goto	i2u783_41
 35984   01534C  EFAA  F0A9         	goto	i2u783_40
 35985   015350                     i2u783_41:
 35986   015350  EFB2  F0A9         	goto	i2l8993
 35987   015354                     i2u783_40:
 35988   015354                     
 35989                           ;mcc_generated_files/i2c_host/src/i2c1.c: 274:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 275:         i2c1Status.errorState = I2C_ERROR_ADDR_NACK;
 35990   015354  0E01               	movlw	1
 35991   015356  6E40               	movwf	(_i2c1Status+12)^(0+1280),c	;volatile
 35992   015358                     
 35993                           ;mcc_generated_files/i2c_host/src/i2c1.c: 276:         I2C1ERRbits.NACKIF = 0;
 35994   015358  0102               	movlb	2	; () banked
 35995   01535A  9997               	bcf	151,4,b	;volatile
 35996   01535C                     i2l8991:
 35997                           
 35998                           ; BSR set to: 2
 35999                           ;mcc_generated_files/i2c_host/src/i2c1.c: 277:         I2C1_StopSend();
 36000   01535C  ECF4  F0B2         	call	_I2C1_StopSend	;wreg free
 36001                           
 36002                           ;mcc_generated_files/i2c_host/src/i2c1.c: 278:     }
 36003   015360  EFDE  F0A9         	goto	i2l9009
 36004   015364                     i2l8993:
 36005   015364  EC3E  F0B4         	call	_I2C1_IsData	;wreg free
 36006   015368  0900               	iorlw	0
 36007   01536A  B4D8               	btfsc	status,2,c
 36008   01536C  EFBA  F0A9         	goto	i2u784_41
 36009   015370  EFBC  F0A9         	goto	i2u784_40
 36010   015374                     i2u784_41:
 36011   015374  EFCC  F0A9         	goto	i2l9003
 36012   015378                     i2u784_40:
 36013   015378  EC33  F0B4         	call	_I2C1_IsNack	;wreg free
 36014   01537C  0900               	iorlw	0
 36015   01537E  B4D8               	btfsc	status,2,c
 36016   015380  EFC4  F0A9         	goto	i2u785_41
 36017   015384  EFC6  F0A9         	goto	i2u785_40
 36018   015388                     i2u785_41:
 36019   015388  EFCC  F0A9         	goto	i2l9003
 36020   01538C                     i2u785_40:
 36021   01538C                     
 36022                           ;mcc_generated_files/i2c_host/src/i2c1.c: 280:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 281:         i2c1Status.errorState = I2C_ERROR_DATA_NACK;
 36023   01538C  0E02               	movlw	2
 36024   01538E  6E40               	movwf	(_i2c1Status+12)^(0+1280),c	;volatile
 36025   015390                     
 36026                           ;mcc_generated_files/i2c_host/src/i2c1.c: 282:         I2C1ERRbits.NACKIF = 0;
 36027   015390  0102               	movlb	2	; () banked
 36028   015392  9997               	bcf	151,4,b	;volatile
 36029   015394  EFAE  F0A9         	goto	i2l8991
 36030   015398                     i2l9003:
 36031   015398  EC49  F0B4         	call	_I2C1_IsBusTimeOut	;wreg free
 36032   01539C  0900               	iorlw	0
 36033   01539E  B4D8               	btfsc	status,2,c
 36034   0153A0  EFD4  F0A9         	goto	i2u786_41
 36035   0153A4  EFD6  F0A9         	goto	i2u786_40
 36036   0153A8                     i2u786_41:
 36037   0153A8  EFDC  F0A9         	goto	i2l168
 36038   0153AC                     i2u786_40:
 36039   0153AC                     
 36040                           ;mcc_generated_files/i2c_host/src/i2c1.c: 286:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 287:         i2c1Status.errorState = I2C_ERROR_BUS_COLLISION;
 36041   0153AC  0E03               	movlw	3
 36042   0153AE  6E40               	movwf	(_i2c1Status+12)^(0+1280),c	;volatile
 36043   0153B0                     
 36044                           ;mcc_generated_files/i2c_host/src/i2c1.c: 288:         I2C1ERRbits.BTOIF = 0;
 36045   0153B0  0102               	movlb	2	; () banked
 36046   0153B2  9D97               	bcf	151,6,b	;volatile
 36047                           
 36048                           ;mcc_generated_files/i2c_host/src/i2c1.c: 289:     }
 36049   0153B4  EFDE  F0A9         	goto	i2l9009
 36050   0153B8                     i2l168:
 36051                           
 36052                           ;mcc_generated_files/i2c_host/src/i2c1.c: 291:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 292:         I2C1ERRbits.NACKIF = 0;
 36053   0153B8  0102               	movlb	2	; () banked
 36054   0153BA  9997               	bcf	151,4,b	;volatile
 36055   0153BC                     i2l9009:
 36056                           
 36057                           ;mcc_generated_files/i2c_host/src/i2c1.c: 296:     {;mcc_generated_files/i2c_host/src/i2
      +                          c1.c: 297:         I2C1_Callback();
 36058   0153BC  5040               	movf	(_i2c1Status+12)^(0+1280),w,c	;volatile
 36059   0153BE  0011               	retfie		f
 36060   0153C0                     __end_of_I2C1_ERROR_ISR:
 36061                           	callstack 0
 36062                           
 36063 ;; *************** function _I2C1_IsNack *****************
 36064 ;; Defined at:
 36065 ;;		line 431 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;		None
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      _Bool 
 36072 ;; Registers used:
 36073 ;;		wreg
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36083 ;;Total ram usage:        0 bytes
 36084 ;; Hardware stack levels used: 1
 36085 ;; This function calls:
 36086 ;;		Nothing
 36087 ;; This function is called by:
 36088 ;;		_I2C1_ERROR_ISR
 36089 ;; This function uses a non-reentrant model
 36090 ;;
 36091                           
 36092                           	psect	text118
 36093   016866                     __ptext118:
 36094                           	callstack 0
 36095   016866                     _I2C1_IsNack:
 36096                           	callstack 116
 36097   016866                     
 36098                           ;mcc_generated_files/i2c_host/src/i2c1.c: 433:     return I2C1CON1bits.ACKSTAT;
 36099   016866  0102               	movlb	2	; () banked
 36100   016868  BB95               	btfsc	149,5,b	;volatile
 36101   01686A  EF39  F0B4         	goto	i2u311_41
 36102   01686E  EF3C  F0B4         	goto	i2u311_40
 36103   016872                     i2u311_41:
 36104   016872  0E01               	movlw	1
 36105   016874  EF3D  F0B4         	goto	i2u311_46
 36106   016878                     i2u311_40:
 36107   016878  0E00               	movlw	0
 36108   01687A                     i2u311_46:
 36109   01687A                     
 36110                           ; BSR set to: 2
 36111   01687A  0012               	return		;funcret
 36112   01687C                     __end_of_I2C1_IsNack:
 36113                           	callstack 0
 36114                           
 36115 ;; *************** function _I2C1_IsData *****************
 36116 ;; Defined at:
 36117 ;;		line 446 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36118 ;; Parameters:    Size  Location     Type
 36119 ;;		None
 36120 ;; Auto vars:     Size  Location     Type
 36121 ;;		None
 36122 ;; Return value:  Size  Location     Type
 36123 ;;                  1    wreg      _Bool 
 36124 ;; Registers used:
 36125 ;;		wreg
 36126 ;; Tracked objects:
 36127 ;;		On entry : 0/0
 36128 ;;		On exit  : 0/0
 36129 ;;		Unchanged: 0/0
 36130 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36135 ;;Total ram usage:        0 bytes
 36136 ;; Hardware stack levels used: 1
 36137 ;; This function calls:
 36138 ;;		Nothing
 36139 ;; This function is called by:
 36140 ;;		_I2C1_ERROR_ISR
 36141 ;; This function uses a non-reentrant model
 36142 ;;
 36143                           
 36144                           	psect	text119
 36145   01687C                     __ptext119:
 36146                           	callstack 0
 36147   01687C                     _I2C1_IsData:
 36148                           	callstack 116
 36149   01687C                     
 36150                           ;mcc_generated_files/i2c_host/src/i2c1.c: 448:     return I2C1STAT0bits.D;
 36151   01687C  0102               	movlb	2	; () banked
 36152   01687E  B798               	btfsc	152,3,b	;volatile
 36153   016880  EF44  F0B4         	goto	i2u312_41
 36154   016884  EF47  F0B4         	goto	i2u312_40
 36155   016888                     i2u312_41:
 36156   016888  0E01               	movlw	1
 36157   01688A  EF48  F0B4         	goto	i2u312_46
 36158   01688E                     i2u312_40:
 36159   01688E  0E00               	movlw	0
 36160   016890                     i2u312_46:
 36161   016890                     
 36162                           ; BSR set to: 2
 36163   016890  0012               	return		;funcret
 36164   016892                     __end_of_I2C1_IsData:
 36165                           	callstack 0
 36166                           
 36167 ;; *************** function _I2C1_IsBusTimeOut *****************
 36168 ;; Defined at:
 36169 ;;		line 441 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36170 ;; Parameters:    Size  Location     Type
 36171 ;;		None
 36172 ;; Auto vars:     Size  Location     Type
 36173 ;;		None
 36174 ;; Return value:  Size  Location     Type
 36175 ;;                  1    wreg      _Bool 
 36176 ;; Registers used:
 36177 ;;		wreg
 36178 ;; Tracked objects:
 36179 ;;		On entry : 0/0
 36180 ;;		On exit  : 0/0
 36181 ;;		Unchanged: 0/0
 36182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36187 ;;Total ram usage:        0 bytes
 36188 ;; Hardware stack levels used: 1
 36189 ;; This function calls:
 36190 ;;		Nothing
 36191 ;; This function is called by:
 36192 ;;		_I2C1_ERROR_ISR
 36193 ;; This function uses a non-reentrant model
 36194 ;;
 36195                           
 36196                           	psect	text120
 36197   016892                     __ptext120:
 36198                           	callstack 0
 36199   016892                     _I2C1_IsBusTimeOut:
 36200                           	callstack 116
 36201   016892                     
 36202                           ;mcc_generated_files/i2c_host/src/i2c1.c: 443:     return I2C1ERRbits.BTOIF;
 36203   016892  0102               	movlb	2	; () banked
 36204   016894  BD97               	btfsc	151,6,b	;volatile
 36205   016896  EF4F  F0B4         	goto	i2u313_41
 36206   01689A  EF52  F0B4         	goto	i2u313_40
 36207   01689E                     i2u313_41:
 36208   01689E  0E01               	movlw	1
 36209   0168A0  EF53  F0B4         	goto	i2u313_46
 36210   0168A4                     i2u313_40:
 36211   0168A4  0E00               	movlw	0
 36212   0168A6                     i2u313_46:
 36213   0168A6                     
 36214                           ; BSR set to: 2
 36215   0168A6  0012               	return		;funcret
 36216   0168A8                     __end_of_I2C1_IsBusTimeOut:
 36217                           	callstack 0
 36218                           
 36219 ;; *************** function _I2C1_IsBusCol *****************
 36220 ;; Defined at:
 36221 ;;		line 436 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36222 ;; Parameters:    Size  Location     Type
 36223 ;;		None
 36224 ;; Auto vars:     Size  Location     Type
 36225 ;;		None
 36226 ;; Return value:  Size  Location     Type
 36227 ;;                  1    wreg      _Bool 
 36228 ;; Registers used:
 36229 ;;		wreg
 36230 ;; Tracked objects:
 36231 ;;		On entry : 0/0
 36232 ;;		On exit  : 0/0
 36233 ;;		Unchanged: 0/0
 36234 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36239 ;;Total ram usage:        0 bytes
 36240 ;; Hardware stack levels used: 1
 36241 ;; This function calls:
 36242 ;;		Nothing
 36243 ;; This function is called by:
 36244 ;;		_I2C1_ERROR_ISR
 36245 ;; This function uses a non-reentrant model
 36246 ;;
 36247                           
 36248                           	psect	text121
 36249   0168A8                     __ptext121:
 36250                           	callstack 0
 36251   0168A8                     _I2C1_IsBusCol:
 36252                           	callstack 116
 36253   0168A8                     
 36254                           ;mcc_generated_files/i2c_host/src/i2c1.c: 438:     return I2C1ERRbits.BCLIF;
 36255   0168A8  0102               	movlb	2	; () banked
 36256   0168AA  BB97               	btfsc	151,5,b	;volatile
 36257   0168AC  EF5A  F0B4         	goto	i2u308_41
 36258   0168B0  EF5D  F0B4         	goto	i2u308_40
 36259   0168B4                     i2u308_41:
 36260   0168B4  0E01               	movlw	1
 36261   0168B6  EF5E  F0B4         	goto	i2u308_46
 36262   0168BA                     i2u308_40:
 36263   0168BA  0E00               	movlw	0
 36264   0168BC                     i2u308_46:
 36265   0168BC                     
 36266                           ; BSR set to: 2
 36267   0168BC  0012               	return		;funcret
 36268   0168BE                     __end_of_I2C1_IsBusCol:
 36269                           	callstack 0
 36270                           
 36271 ;; *************** function _I2C1_IsAddr *****************
 36272 ;; Defined at:
 36273 ;;		line 451 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36274 ;; Parameters:    Size  Location     Type
 36275 ;;		None
 36276 ;; Auto vars:     Size  Location     Type
 36277 ;;		None
 36278 ;; Return value:  Size  Location     Type
 36279 ;;                  1    wreg      _Bool 
 36280 ;; Registers used:
 36281 ;;		wreg
 36282 ;; Tracked objects:
 36283 ;;		On entry : 0/0
 36284 ;;		On exit  : 0/0
 36285 ;;		Unchanged: 0/0
 36286 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36291 ;;Total ram usage:        0 bytes
 36292 ;; Hardware stack levels used: 1
 36293 ;; This function calls:
 36294 ;;		Nothing
 36295 ;; This function is called by:
 36296 ;;		_I2C1_ERROR_ISR
 36297 ;; This function uses a non-reentrant model
 36298 ;;
 36299                           
 36300                           	psect	text122
 36301   0168BE                     __ptext122:
 36302                           	callstack 0
 36303   0168BE                     _I2C1_IsAddr:
 36304                           	callstack 116
 36305   0168BE                     
 36306                           ;mcc_generated_files/i2c_host/src/i2c1.c: 453:     return !I2C1STAT0bits.D;
 36307   0168BE  0102               	movlb	2	; () banked
 36308   0168C0  A798               	btfss	152,3,b	;volatile
 36309   0168C2  EF65  F0B4         	goto	i2u309_41
 36310   0168C6  EF68  F0B4         	goto	i2u309_40
 36311   0168CA                     i2u309_41:
 36312   0168CA  0E01               	movlw	1
 36313   0168CC  EF69  F0B4         	goto	i2u310_40
 36314   0168D0                     i2u309_40:
 36315   0168D0  0E00               	movlw	0
 36316   0168D2                     i2u310_40:
 36317   0168D2                     
 36318                           ; BSR set to: 2
 36319   0168D2  0012               	return		;funcret
 36320   0168D4                     __end_of_I2C1_IsAddr:
 36321                           	callstack 0
 36322                           
 36323 ;; *************** function _I2C1_BusReset *****************
 36324 ;; Defined at:
 36325 ;;		line 385 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36326 ;; Parameters:    Size  Location     Type
 36327 ;;		None
 36328 ;; Auto vars:     Size  Location     Type
 36329 ;;		None
 36330 ;; Return value:  Size  Location     Type
 36331 ;;                  1    wreg      void 
 36332 ;; Registers used:
 36333 ;;		wreg, cstack
 36334 ;; Tracked objects:
 36335 ;;		On entry : 0/0
 36336 ;;		On exit  : 0/0
 36337 ;;		Unchanged: 0/0
 36338 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36343 ;;Total ram usage:        0 bytes
 36344 ;; Hardware stack levels used: 1
 36345 ;; Hardware stack levels required when called: 1
 36346 ;; This function calls:
 36347 ;;		_I2C1_BufferClear
 36348 ;;		_I2C1_ErrorFlagsClear
 36349 ;;		_I2C1_InterruptsClear
 36350 ;;		_I2C1_InterruptsDisable
 36351 ;;		i2_I2C1_InterruptsEnable
 36352 ;; This function is called by:
 36353 ;;		_I2C1_ERROR_ISR
 36354 ;; This function uses a non-reentrant model
 36355 ;;
 36356                           
 36357                           	psect	text123
 36358   01624C                     __ptext123:
 36359                           	callstack 0
 36360   01624C                     _I2C1_BusReset:
 36361                           	callstack 115
 36362   01624C                     
 36363                           ;mcc_generated_files/i2c_host/src/i2c1.c: 387:     I2C1_InterruptsClear();
 36364   01624C  EC23  F0B5         	call	_I2C1_InterruptsClear	;wreg free
 36365                           
 36366                           ;mcc_generated_files/i2c_host/src/i2c1.c: 388:     I2C1_ErrorFlagsClear();
 36367   016250  ECEB  F0B4         	call	_I2C1_ErrorFlagsClear	;wreg free
 36368                           
 36369                           ;mcc_generated_files/i2c_host/src/i2c1.c: 389:     I2C1_InterruptsDisable();
 36370   016254  ECBB  F0B4         	call	_I2C1_InterruptsDisable	;wreg free
 36371                           
 36372                           ;mcc_generated_files/i2c_host/src/i2c1.c: 390:     I2C1_BufferClear();
 36373   016258  EC04  F0B5         	call	_I2C1_BufferClear	;wreg free
 36374   01625C                     
 36375                           ;mcc_generated_files/i2c_host/src/i2c1.c: 391:     I2C1CON0bits.EN = 0;
 36376   01625C  0102               	movlb	2	; () banked
 36377   01625E  9F94               	bcf	148,7,b	;volatile
 36378                           
 36379                           ;mcc_generated_files/i2c_host/src/i2c1.c: 392:     I2C1_InterruptsEnable();
 36380   016260  EC94  F0B4         	call	i2_I2C1_InterruptsEnable	;wreg free
 36381   016264                     
 36382                           ;mcc_generated_files/i2c_host/src/i2c1.c: 396:     I2C1PIEbits.SCIE = 0;
 36383   016264  0102               	movlb	2	; () banked
 36384   016266  919B               	bcf	155,0,b	;volatile
 36385   016268                     
 36386                           ; BSR set to: 2
 36387                           ;mcc_generated_files/i2c_host/src/i2c1.c: 397:     I2C1PIEbits.PCIE = 0;
 36388   016268  959B               	bcf	155,2,b	;volatile
 36389   01626A                     
 36390                           ; BSR set to: 2
 36391                           ;mcc_generated_files/i2c_host/src/i2c1.c: 398:     I2C1CON0bits.EN = 1;
 36392   01626A  8F94               	bsf	148,7,b	;volatile
 36393   01626C                     
 36394                           ; BSR set to: 2
 36395                           ;mcc_generated_files/i2c_host/src/i2c1.c: 399:     _delay((unsigned long)((1)*(64000000U
      +                          /4000000.0)));
 36396   01626C  0E05               	movlw	5
 36397   01626E                     i2u1095_47:
 36398   01626E  2EE8               	decfsz	wreg,f,c
 36399   016270  D7FE               	bra	i2u1095_47
 36400   016272  0000               	nop	
 36401   016274                     
 36402                           ;mcc_generated_files/i2c_host/src/i2c1.c: 400:     __nop();
 36403   016274  0000               	nop	
 36404   016276                     
 36405                           ;mcc_generated_files/i2c_host/src/i2c1.c: 401:     __nop();
 36406   016276  0000               	nop	
 36407   016278                     
 36408                           ;mcc_generated_files/i2c_host/src/i2c1.c: 402:     __nop();
 36409   016278  0000               	nop	
 36410   01627A                     
 36411                           ;mcc_generated_files/i2c_host/src/i2c1.c: 403:     __nop();
 36412   01627A  0000               	nop	
 36413   01627C                     
 36414                           ;mcc_generated_files/i2c_host/src/i2c1.c: 404:     __nop();
 36415   01627C  0000               	nop	
 36416   01627E                     
 36417                           ;mcc_generated_files/i2c_host/src/i2c1.c: 405:     __nop();
 36418   01627E  0000               	nop	
 36419   016280                     
 36420                           ;mcc_generated_files/i2c_host/src/i2c1.c: 406:     I2C1PIRbits.SCIF = 0;
 36421   016280  0102               	movlb	2	; () banked
 36422   016282  919A               	bcf	154,0,b	;volatile
 36423   016284                     
 36424                           ; BSR set to: 2
 36425                           ;mcc_generated_files/i2c_host/src/i2c1.c: 407:     I2C1PIRbits.PCIF = 0;
 36426   016284  959A               	bcf	154,2,b	;volatile
 36427   016286                     
 36428                           ; BSR set to: 2
 36429                           ;mcc_generated_files/i2c_host/src/i2c1.c: 408:     I2C1PIEbits.PCIE = 1;
 36430   016286  859B               	bsf	155,2,b	;volatile
 36431   016288                     
 36432                           ; BSR set to: 2
 36433   016288  0012               	return		;funcret
 36434   01628A                     __end_of_I2C1_BusReset:
 36435                           	callstack 0
 36436                           
 36437 ;; *************** function i2_I2C1_InterruptsEnable *****************
 36438 ;; Defined at:
 36439 ;;		line 456 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36440 ;; Parameters:    Size  Location     Type
 36441 ;;		None
 36442 ;; Auto vars:     Size  Location     Type
 36443 ;;		None
 36444 ;; Return value:  Size  Location     Type
 36445 ;;                  1    wreg      void 
 36446 ;; Registers used:
 36447 ;;		None
 36448 ;; Tracked objects:
 36449 ;;		On entry : 0/0
 36450 ;;		On exit  : 0/0
 36451 ;;		Unchanged: 0/0
 36452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36457 ;;Total ram usage:        0 bytes
 36458 ;; Hardware stack levels used: 1
 36459 ;; This function calls:
 36460 ;;		Nothing
 36461 ;; This function is called by:
 36462 ;;		_I2C1_BusReset
 36463 ;; This function uses a non-reentrant model
 36464 ;;
 36465                           
 36466                           	psect	text124
 36467   016928                     __ptext124:
 36468                           	callstack 0
 36469   016928                     i2_I2C1_InterruptsEnable:
 36470                           	callstack 115
 36471   016928                     
 36472                           ;mcc_generated_files/i2c_host/src/i2c1.c: 458:     PIE7bits.I2C1IE = 1;
 36473   016928  84A5               	bsf	165,2,c	;volatile
 36474                           
 36475                           ;mcc_generated_files/i2c_host/src/i2c1.c: 459:     PIE7bits.I2C1EIE = 1;
 36476   01692A  86A5               	bsf	165,3,c	;volatile
 36477                           
 36478                           ;mcc_generated_files/i2c_host/src/i2c1.c: 460:     PIE7bits.I2C1RXIE = 1;
 36479   01692C  80A5               	bsf	165,0,c	;volatile
 36480                           
 36481                           ;mcc_generated_files/i2c_host/src/i2c1.c: 461:     PIE7bits.I2C1TXIE = 1;
 36482   01692E  82A5               	bsf	165,1,c	;volatile
 36483                           
 36484                           ;mcc_generated_files/i2c_host/src/i2c1.c: 463:     I2C1PIEbits.PCIE = 1;
 36485   016930  0102               	movlb	2	; () banked
 36486   016932  859B               	bsf	155,2,b	;volatile
 36487                           
 36488                           ;mcc_generated_files/i2c_host/src/i2c1.c: 464:     I2C1PIEbits.RSCIE = 1;
 36489   016934  839B               	bsf	155,1,b	;volatile
 36490                           
 36491                           ;mcc_generated_files/i2c_host/src/i2c1.c: 465:     I2C1PIEbits.CNTIE = 1;
 36492   016936  8F9B               	bsf	155,7,b	;volatile
 36493                           
 36494                           ;mcc_generated_files/i2c_host/src/i2c1.c: 466:     I2C1ERRbits.NACKIE = 1;
 36495   016938  8197               	bsf	151,0,b	;volatile
 36496   01693A                     
 36497                           ; BSR set to: 2
 36498   01693A  0012               	return		;funcret
 36499   01693C                     __end_ofi2_I2C1_InterruptsEnable:
 36500                           	callstack 0
 36501                           
 36502 ;; *************** function _I2C1_InterruptsDisable *****************
 36503 ;; Defined at:
 36504 ;;		line 469 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36505 ;; Parameters:    Size  Location     Type
 36506 ;;		None
 36507 ;; Auto vars:     Size  Location     Type
 36508 ;;		None
 36509 ;; Return value:  Size  Location     Type
 36510 ;;                  1    wreg      void 
 36511 ;; Registers used:
 36512 ;;		None
 36513 ;; Tracked objects:
 36514 ;;		On entry : 0/0
 36515 ;;		On exit  : 0/0
 36516 ;;		Unchanged: 0/0
 36517 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36522 ;;Total ram usage:        0 bytes
 36523 ;; Hardware stack levels used: 1
 36524 ;; This function calls:
 36525 ;;		Nothing
 36526 ;; This function is called by:
 36527 ;;		_I2C1_BusReset
 36528 ;;		_I2C1_Deinitialize
 36529 ;; This function uses a non-reentrant model
 36530 ;;
 36531                           
 36532                           	psect	text125
 36533   016976                     __ptext125:
 36534                           	callstack 0
 36535   016976                     _I2C1_InterruptsDisable:
 36536                           	callstack 115
 36537   016976                     
 36538                           ;mcc_generated_files/i2c_host/src/i2c1.c: 471:     PIE7bits.I2C1IE = 0;
 36539   016976  94A5               	bcf	165,2,c	;volatile
 36540                           
 36541                           ;mcc_generated_files/i2c_host/src/i2c1.c: 472:     PIE7bits.I2C1EIE = 0;
 36542   016978  96A5               	bcf	165,3,c	;volatile
 36543                           
 36544                           ;mcc_generated_files/i2c_host/src/i2c1.c: 473:     PIE7bits.I2C1RXIE = 0;
 36545   01697A  90A5               	bcf	165,0,c	;volatile
 36546                           
 36547                           ;mcc_generated_files/i2c_host/src/i2c1.c: 474:     PIE7bits.I2C1TXIE = 0;
 36548   01697C  92A5               	bcf	165,1,c	;volatile
 36549                           
 36550                           ;mcc_generated_files/i2c_host/src/i2c1.c: 475:     I2C1PIE = 0x00;
 36551   01697E  0102               	movlb	2	; () banked
 36552   016980  6B9B               	clrf	155,b	;volatile
 36553                           
 36554                           ;mcc_generated_files/i2c_host/src/i2c1.c: 476:     I2C1ERR = 0x00;
 36555   016982  6B97               	clrf	151,b	;volatile
 36556   016984                     
 36557                           ; BSR set to: 2
 36558   016984  0012               	return		;funcret
 36559   016986                     __end_of_I2C1_InterruptsDisable:
 36560                           	callstack 0
 36561                           
 36562 ;; *************** function _I2C1_RX_ISR *****************
 36563 ;; Defined at:
 36564 ;;		line 301 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36565 ;; Parameters:    Size  Location     Type
 36566 ;;		None
 36567 ;; Auto vars:     Size  Location     Type
 36568 ;;		None
 36569 ;; Return value:  Size  Location     Type
 36570 ;;                  1    wreg      void 
 36571 ;; Registers used:
 36572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36573 ;; Tracked objects:
 36574 ;;		On entry : 0/0
 36575 ;;		On exit  : 0/0
 36576 ;;		Unchanged: 0/0
 36577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36582 ;;Total ram usage:        0 bytes
 36583 ;; Hardware stack levels used: 1
 36584 ;; Hardware stack levels required when called: 1
 36585 ;; This function calls:
 36586 ;;		_I2C1_DataReceive
 36587 ;; This function is called by:
 36588 ;;		Interrupt level 2
 36589 ;; This function uses a non-reentrant model
 36590 ;;
 36591                           
 36592                           	psect	text126
 36593   01693C                     __ptext126:
 36594                           	callstack 0
 36595   01693C                     _I2C1_RX_ISR:
 36596                           	callstack 116
 36597   01693C                     
 36598                           ;mcc_generated_files/i2c_host/src/i2c1.c: 303:     *i2c1Status.readPtr = I2C1_DataReceiv
      +                          e();
 36599   01693C  EC26  F0B5         	call	_I2C1_DataReceive	;wreg free
 36600   016940  C53B  F4D9         	movff	_i2c1Status+7,fsr2l	;volatile
 36601   016944  C53C  F4DA         	movff	_i2c1Status+8,fsr2h	;volatile
 36602   016948  6EDF               	movwf	indf2,c
 36603   01694A                     
 36604                           ;mcc_generated_files/i2c_host/src/i2c1.c: 304:     i2c1Status.readPtr++;
 36605   01694A  4A3B               	infsnz	(_i2c1Status+7)^(0+1280),f,c	;volatile
 36606   01694C  2A3C               	incf	(_i2c1Status+8)^(0+1280),f,c	;volatile
 36607   01694E  0011               	retfie		f
 36608   016950                     __end_of_I2C1_RX_ISR:
 36609                           	callstack 0
 36610                           
 36611 ;; *************** function _I2C1_DataReceive *****************
 36612 ;; Defined at:
 36613 ;;		line 370 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36614 ;; Parameters:    Size  Location     Type
 36615 ;;		None
 36616 ;; Auto vars:     Size  Location     Type
 36617 ;;		None
 36618 ;; Return value:  Size  Location     Type
 36619 ;;                  1    wreg      unsigned char 
 36620 ;; Registers used:
 36621 ;;		wreg, status,2
 36622 ;; Tracked objects:
 36623 ;;		On entry : 0/0
 36624 ;;		On exit  : 0/0
 36625 ;;		Unchanged: 0/0
 36626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36631 ;;Total ram usage:        0 bytes
 36632 ;; Hardware stack levels used: 1
 36633 ;; This function calls:
 36634 ;;		Nothing
 36635 ;; This function is called by:
 36636 ;;		_I2C1_RX_ISR
 36637 ;; This function uses a non-reentrant model
 36638 ;;
 36639                           
 36640                           	psect	text127
 36641   016A4C                     __ptext127:
 36642                           	callstack 0
 36643   016A4C                     _I2C1_DataReceive:
 36644                           	callstack 116
 36645   016A4C                     
 36646                           ;mcc_generated_files/i2c_host/src/i2c1.c: 372:     return I2C1RXB;
 36647   016A4C  0102               	movlb	2	; () banked
 36648   016A4E  518B               	movf	139,w,b	;volatile
 36649   016A50                     
 36650                           ; BSR set to: 2
 36651   016A50  0012               	return		;funcret
 36652   016A52                     __end_of_I2C1_DataReceive:
 36653                           	callstack 0
 36654                           
 36655 ;; *************** function _I2C1_TX_ISR *****************
 36656 ;; Defined at:
 36657 ;;		line 307 in file "mcc_generated_files/i2c_host/src/i2c1.c"
 36658 ;; Parameters:    Size  Location     Type
 36659 ;;		None
 36660 ;; Auto vars:     Size  Location     Type
 36661 ;;		None
 36662 ;; Return value:  Size  Location     Type
 36663 ;;                  1    wreg      void 
 36664 ;; Registers used:
 36665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36666 ;; Tracked objects:
 36667 ;;		On entry : 0/0
 36668 ;;		On exit  : 0/0
 36669 ;;		Unchanged: 0/0
 36670 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36675 ;;Total ram usage:        0 bytes
 36676 ;; Hardware stack levels used: 1
 36677 ;; Hardware stack levels required when called: 1
 36678 ;; This function calls:
 36679 ;;		_I2C1_DataTransmit
 36680 ;; This function is called by:
 36681 ;;		Interrupt level 2
 36682 ;; This function uses a non-reentrant model
 36683 ;;
 36684                           
 36685                           	psect	text128
 36686   016950                     __ptext128:
 36687                           	callstack 0
 36688   016950                     _I2C1_TX_ISR:
 36689                           	callstack 116
 36690   016950                     
 36691                           ;mcc_generated_files/i2c_host/src/i2c1.c: 309:     I2C1_DataTransmit(*i2c1Status.writePt
      +                          r++);
 36692   016950  C537  F4D9         	movff	_i2c1Status+3,fsr2l	;volatile
 36693   016954  C538  F4DA         	movff	_i2c1Status+4,fsr2h	;volatile
 36694   016958  4A37               	infsnz	(_i2c1Status+3)^(0+1280),f,c	;volatile
 36695   01695A  2A38               	incf	(_i2c1Status+4)^(0+1280),f,c	;volatile
 36696   01695C  50DF               	movf	indf2,w,c
 36697   01695E  ECF8  F0B4         	call	_I2C1_DataTransmit
 36698   016962  0011               	retfie		f
 36699   016964                     __end_of_I2C1_TX_ISR:
 36700                           	callstack 0
 36701                           
 36702 ;; *************** function _Default_ISR *****************
 36703 ;; Defined at:
 36704 ;;		line 96 in file "mcc_generated_files/system/src/interrupt.c"
 36705 ;; Parameters:    Size  Location     Type
 36706 ;;		None
 36707 ;; Auto vars:     Size  Location     Type
 36708 ;;		None
 36709 ;; Return value:  Size  Location     Type
 36710 ;;                  1    wreg      void 
 36711 ;; Registers used:
 36712 ;;		None
 36713 ;; Tracked objects:
 36714 ;;		On entry : 0/0
 36715 ;;		On exit  : 0/0
 36716 ;;		Unchanged: 0/0
 36717 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36722 ;;Total ram usage:        0 bytes
 36723 ;; Hardware stack levels used: 1
 36724 ;; This function calls:
 36725 ;;		Nothing
 36726 ;; This function is called by:
 36727 ;;		Interrupt level 2
 36728 ;; This function uses a non-reentrant model
 36729 ;;
 36730                           
 36731                           	psect	text129
 36732   016A5C                     __ptext129:
 36733                           	callstack 0
 36734   016A5C                     _Default_ISR:
 36735                           	callstack 117
 36736   016A5C  0011               	retfie		f
 36737   016A5E                     __end_of_Default_ISR:
 36738                           	callstack 0
 36739                           
 36740 ;; *************** function _INT0_ISR *****************
 36741 ;; Defined at:
 36742 ;;		line 109 in file "mcc_generated_files/system/src/interrupt.c"
 36743 ;; Parameters:    Size  Location     Type
 36744 ;;		None
 36745 ;; Auto vars:     Size  Location     Type
 36746 ;;		None
 36747 ;; Return value:  Size  Location     Type
 36748 ;;                  1    wreg      void 
 36749 ;; Registers used:
 36750 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36751 ;; Tracked objects:
 36752 ;;		On entry : 0/0
 36753 ;;		On exit  : 0/0
 36754 ;;		Unchanged: 0/0
 36755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36760 ;;Total ram usage:        2 bytes
 36761 ;; Hardware stack levels used: 1
 36762 ;; Hardware stack levels required when called: 2
 36763 ;; This function calls:
 36764 ;;		_INT0_CallBack
 36765 ;; This function is called by:
 36766 ;;		Interrupt level 2
 36767 ;; This function uses a non-reentrant model
 36768 ;;
 36769                           
 36770                           	psect	text130
 36771   016758                     __ptext130:
 36772                           	callstack 0
 36773   016758                     _INT0_ISR:
 36774                           	callstack 115
 36775                           
 36776                           ;incstack = 0
 36777   016758  C4FA F504          	movff	pclath,??_INT0_ISR
 36778   01675C  C4FB F505          	movff	pclatu,??_INT0_ISR+1
 36779   016760                     
 36780                           ;mcc_generated_files/system/src/interrupt.c: 111:     (PIR1bits.INT0IF = 0);
 36781   016760  90AF               	bcf	175,0,c	;volatile
 36782   016762                     
 36783                           ;mcc_generated_files/system/src/interrupt.c: 114:     INT0_CallBack();
 36784   016762  EC42  F0B2         	call	_INT0_CallBack	;wreg free
 36785   016766  C505  F4FB         	movff	??_INT0_ISR+1,pclatu
 36786   01676A  C504  F4FA         	movff	??_INT0_ISR,pclath
 36787   01676E  0011               	retfie		f
 36788   016770                     __end_of_INT0_ISR:
 36789                           	callstack 0
 36790                           
 36791 ;; *************** function _INT0_CallBack *****************
 36792 ;; Defined at:
 36793 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
 36794 ;; Parameters:    Size  Location     Type
 36795 ;;		None
 36796 ;; Auto vars:     Size  Location     Type
 36797 ;;		None
 36798 ;; Return value:  Size  Location     Type
 36799 ;;                  1    wreg      void 
 36800 ;; Registers used:
 36801 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36802 ;; Tracked objects:
 36803 ;;		On entry : 0/0
 36804 ;;		On exit  : 0/0
 36805 ;;		Unchanged: 0/0
 36806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36811 ;;Total ram usage:        0 bytes
 36812 ;; Hardware stack levels used: 1
 36813 ;; Hardware stack levels required when called: 1
 36814 ;; This function calls:
 36815 ;;		NULL
 36816 ;;		_INT0_DefaultInterruptHandler
 36817 ;; This function is called by:
 36818 ;;		_INT0_ISR
 36819 ;; This function uses a non-reentrant model
 36820 ;;
 36821                           
 36822                           	psect	text131
 36823   016484                     __ptext131:
 36824                           	callstack 0
 36825   016484                     _INT0_CallBack:
 36826                           	callstack 115
 36827   016484                     
 36828                           ;mcc_generated_files/system/src/interrupt.c: 121:     if(INT0_InterruptHandler)
 36829   016484  0106               	movlb	6	; () banked
 36830   016486  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 36831   016488  11C5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36832   01648A  11C6               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36833   01648C  B4D8               	btfsc	status,2,c
 36834   01648E  EF4B  F0B2         	goto	i2u726_41
 36835   016492  EF4D  F0B2         	goto	i2u726_40
 36836   016496                     i2u726_41:
 36837   016496  EF5A  F0B2         	goto	i2l380
 36838   01649A                     i2u726_40:
 36839   01649A                     
 36840                           ; BSR set to: 6
 36841                           ;mcc_generated_files/system/src/interrupt.c: 122:     {;mcc_generated_files/system/src/i
      +                          nterrupt.c: 123:         INT0_InterruptHandler();
 36842   01649A  D802               	call	i2u727_48
 36843   01649C  EF5A  F0B2         	goto	i2u727_49
 36844   0164A0                     i2u727_48:
 36845   0164A0  0005               	push	
 36846   0164A2  6EFA               	movwf	pclath,c
 36847   0164A4  51C4               	movf	_INT0_InterruptHandler& (0+255),w,b
 36848   0164A6  6EFD               	movwf	tosl,c
 36849   0164A8  51C5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 36850   0164AA  6EFE               	movwf	tosh,c
 36851   0164AC  51C6               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 36852   0164AE  6EFF               	movwf	tosu,c
 36853   0164B0  50FA               	movf	pclath,w,c
 36854   0164B2  0012               	return		;indir
 36855   0164B4                     i2u727_49:
 36856   0164B4                     i2l380:
 36857   0164B4  0012               	return		;funcret
 36858   0164B6                     __end_of_INT0_CallBack:
 36859                           	callstack 0
 36860                           
 36861 ;; *************** function _INT0_DefaultInterruptHandler *****************
 36862 ;; Defined at:
 36863 ;;		line 131 in file "mcc_generated_files/system/src/interrupt.c"
 36864 ;; Parameters:    Size  Location     Type
 36865 ;;		None
 36866 ;; Auto vars:     Size  Location     Type
 36867 ;;		None
 36868 ;; Return value:  Size  Location     Type
 36869 ;;                  1    wreg      void 
 36870 ;; Registers used:
 36871 ;;		None
 36872 ;; Tracked objects:
 36873 ;;		On entry : 0/0
 36874 ;;		On exit  : 0/0
 36875 ;;		Unchanged: 0/0
 36876 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36881 ;;Total ram usage:        0 bytes
 36882 ;; Hardware stack levels used: 1
 36883 ;; This function calls:
 36884 ;;		Nothing
 36885 ;; This function is called by:
 36886 ;;		_INTERRUPT_Initialize
 36887 ;;		_INT0_CallBack
 36888 ;; This function uses a non-reentrant model
 36889 ;;
 36890                           
 36891                           	psect	text132
 36892   016A5E                     __ptext132:
 36893                           	callstack 0
 36894   016A5E                     _INT0_DefaultInterruptHandler:
 36895                           	callstack 115
 36896   016A5E  0012               	return		;funcret
 36897   016A60                     __end_of_INT0_DefaultInterruptHandler:
 36898                           	callstack 0
 36899                           
 36900 ;; *************** function _INT1_ISR *****************
 36901 ;; Defined at:
 36902 ;;		line 143 in file "mcc_generated_files/system/src/interrupt.c"
 36903 ;; Parameters:    Size  Location     Type
 36904 ;;		None
 36905 ;; Auto vars:     Size  Location     Type
 36906 ;;		None
 36907 ;; Return value:  Size  Location     Type
 36908 ;;                  1    wreg      void 
 36909 ;; Registers used:
 36910 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36911 ;; Tracked objects:
 36912 ;;		On entry : 0/0
 36913 ;;		On exit  : 0/0
 36914 ;;		Unchanged: 0/0
 36915 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36918 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36920 ;;Total ram usage:        2 bytes
 36921 ;; Hardware stack levels used: 1
 36922 ;; Hardware stack levels required when called: 2
 36923 ;; This function calls:
 36924 ;;		_INT1_CallBack
 36925 ;; This function is called by:
 36926 ;;		Interrupt level 2
 36927 ;; This function uses a non-reentrant model
 36928 ;;
 36929                           
 36930                           	psect	text133
 36931   016770                     __ptext133:
 36932                           	callstack 0
 36933   016770                     _INT1_ISR:
 36934                           	callstack 115
 36935                           
 36936                           ;incstack = 0
 36937   016770  C4FA F506          	movff	pclath,??_INT1_ISR
 36938   016774  C4FB F507          	movff	pclatu,??_INT1_ISR+1
 36939   016778                     
 36940                           ;mcc_generated_files/system/src/interrupt.c: 145:     (PIR6bits.INT1IF = 0);
 36941   016778  90B4               	bcf	180,0,c	;volatile
 36942   01677A                     
 36943                           ;mcc_generated_files/system/src/interrupt.c: 148:     INT1_CallBack();
 36944   01677A  EC5B  F0B2         	call	_INT1_CallBack	;wreg free
 36945   01677E  C507  F4FB         	movff	??_INT1_ISR+1,pclatu
 36946   016782  C506  F4FA         	movff	??_INT1_ISR,pclath
 36947   016786  0011               	retfie		f
 36948   016788                     __end_of_INT1_ISR:
 36949                           	callstack 0
 36950                           
 36951 ;; *************** function _INT1_CallBack *****************
 36952 ;; Defined at:
 36953 ;;		line 152 in file "mcc_generated_files/system/src/interrupt.c"
 36954 ;; Parameters:    Size  Location     Type
 36955 ;;		None
 36956 ;; Auto vars:     Size  Location     Type
 36957 ;;		None
 36958 ;; Return value:  Size  Location     Type
 36959 ;;                  1    wreg      void 
 36960 ;; Registers used:
 36961 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 36962 ;; Tracked objects:
 36963 ;;		On entry : 0/0
 36964 ;;		On exit  : 0/0
 36965 ;;		Unchanged: 0/0
 36966 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 36967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36971 ;;Total ram usage:        0 bytes
 36972 ;; Hardware stack levels used: 1
 36973 ;; Hardware stack levels required when called: 1
 36974 ;; This function calls:
 36975 ;;		NULL
 36976 ;;		_INT1_DefaultInterruptHandler
 36977 ;; This function is called by:
 36978 ;;		_INT1_ISR
 36979 ;; This function uses a non-reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text134
 36983   0164B6                     __ptext134:
 36984                           	callstack 0
 36985   0164B6                     _INT1_CallBack:
 36986                           	callstack 115
 36987   0164B6                     
 36988                           ;mcc_generated_files/system/src/interrupt.c: 155:     if(INT1_InterruptHandler)
 36989   0164B6  0106               	movlb	6	; () banked
 36990   0164B8  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 36991   0164BA  11C2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 36992   0164BC  11C3               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 36993   0164BE  B4D8               	btfsc	status,2,c
 36994   0164C0  EF64  F0B2         	goto	i2u728_41
 36995   0164C4  EF66  F0B2         	goto	i2u728_40
 36996   0164C8                     i2u728_41:
 36997   0164C8  EF73  F0B2         	goto	i2l395
 36998   0164CC                     i2u728_40:
 36999   0164CC                     
 37000                           ; BSR set to: 6
 37001                           ;mcc_generated_files/system/src/interrupt.c: 156:     {;mcc_generated_files/system/src/i
      +                          nterrupt.c: 157:         INT1_InterruptHandler();
 37002   0164CC  D802               	call	i2u729_48
 37003   0164CE  EF73  F0B2         	goto	i2u729_49
 37004   0164D2                     i2u729_48:
 37005   0164D2  0005               	push	
 37006   0164D4  6EFA               	movwf	pclath,c
 37007   0164D6  51C1               	movf	_INT1_InterruptHandler& (0+255),w,b
 37008   0164D8  6EFD               	movwf	tosl,c
 37009   0164DA  51C2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 37010   0164DC  6EFE               	movwf	tosh,c
 37011   0164DE  51C3               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 37012   0164E0  6EFF               	movwf	tosu,c
 37013   0164E2  50FA               	movf	pclath,w,c
 37014   0164E4  0012               	return		;indir
 37015   0164E6                     i2u729_49:
 37016   0164E6                     i2l395:
 37017   0164E6  0012               	return		;funcret
 37018   0164E8                     __end_of_INT1_CallBack:
 37019                           	callstack 0
 37020                           
 37021 ;; *************** function _INT1_DefaultInterruptHandler *****************
 37022 ;; Defined at:
 37023 ;;		line 165 in file "mcc_generated_files/system/src/interrupt.c"
 37024 ;; Parameters:    Size  Location     Type
 37025 ;;		None
 37026 ;; Auto vars:     Size  Location     Type
 37027 ;;		None
 37028 ;; Return value:  Size  Location     Type
 37029 ;;                  1    wreg      void 
 37030 ;; Registers used:
 37031 ;;		None
 37032 ;; Tracked objects:
 37033 ;;		On entry : 0/0
 37034 ;;		On exit  : 0/0
 37035 ;;		Unchanged: 0/0
 37036 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;Total ram usage:        0 bytes
 37042 ;; Hardware stack levels used: 1
 37043 ;; This function calls:
 37044 ;;		Nothing
 37045 ;; This function is called by:
 37046 ;;		_INTERRUPT_Initialize
 37047 ;;		_INT1_CallBack
 37048 ;; This function uses a non-reentrant model
 37049 ;;
 37050                           
 37051                           	psect	text135
 37052   016A60                     __ptext135:
 37053                           	callstack 0
 37054   016A60                     _INT1_DefaultInterruptHandler:
 37055                           	callstack 115
 37056   016A60  0012               	return		;funcret
 37057   016A62                     __end_of_INT1_DefaultInterruptHandler:
 37058                           	callstack 0
 37059                           
 37060 ;; *************** function _INT2_ISR *****************
 37061 ;; Defined at:
 37062 ;;		line 177 in file "mcc_generated_files/system/src/interrupt.c"
 37063 ;; Parameters:    Size  Location     Type
 37064 ;;		None
 37065 ;; Auto vars:     Size  Location     Type
 37066 ;;		None
 37067 ;; Return value:  Size  Location     Type
 37068 ;;                  1    wreg      void 
 37069 ;; Registers used:
 37070 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37071 ;; Tracked objects:
 37072 ;;		On entry : 0/0
 37073 ;;		On exit  : 0/0
 37074 ;;		Unchanged: 0/0
 37075 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37080 ;;Total ram usage:        2 bytes
 37081 ;; Hardware stack levels used: 1
 37082 ;; Hardware stack levels required when called: 2
 37083 ;; This function calls:
 37084 ;;		_INT2_CallBack
 37085 ;; This function is called by:
 37086 ;;		Interrupt level 2
 37087 ;; This function uses a non-reentrant model
 37088 ;;
 37089                           
 37090                           	psect	text136
 37091   016788                     __ptext136:
 37092                           	callstack 0
 37093   016788                     _INT2_ISR:
 37094                           	callstack 115
 37095                           
 37096                           ;incstack = 0
 37097   016788  C4FA F508          	movff	pclath,??_INT2_ISR
 37098   01678C  C4FB F509          	movff	pclatu,??_INT2_ISR+1
 37099   016790                     
 37100                           ;mcc_generated_files/system/src/interrupt.c: 179:     (PIR10bits.INT2IF = 0);
 37101   016790  90B8               	bcf	184,0,c	;volatile
 37102   016792                     
 37103                           ;mcc_generated_files/system/src/interrupt.c: 182:     INT2_CallBack();
 37104   016792  EC74  F0B2         	call	_INT2_CallBack	;wreg free
 37105   016796  C509  F4FB         	movff	??_INT2_ISR+1,pclatu
 37106   01679A  C508  F4FA         	movff	??_INT2_ISR,pclath
 37107   01679E  0011               	retfie		f
 37108   0167A0                     __end_of_INT2_ISR:
 37109                           	callstack 0
 37110                           
 37111 ;; *************** function _INT2_CallBack *****************
 37112 ;; Defined at:
 37113 ;;		line 186 in file "mcc_generated_files/system/src/interrupt.c"
 37114 ;; Parameters:    Size  Location     Type
 37115 ;;		None
 37116 ;; Auto vars:     Size  Location     Type
 37117 ;;		None
 37118 ;; Return value:  Size  Location     Type
 37119 ;;                  1    wreg      void 
 37120 ;; Registers used:
 37121 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 37122 ;; Tracked objects:
 37123 ;;		On entry : 0/0
 37124 ;;		On exit  : 0/0
 37125 ;;		Unchanged: 0/0
 37126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37131 ;;Total ram usage:        0 bytes
 37132 ;; Hardware stack levels used: 1
 37133 ;; Hardware stack levels required when called: 1
 37134 ;; This function calls:
 37135 ;;		NULL
 37136 ;;		_INT2_DefaultInterruptHandler
 37137 ;; This function is called by:
 37138 ;;		_INT2_ISR
 37139 ;; This function uses a non-reentrant model
 37140 ;;
 37141                           
 37142                           	psect	text137
 37143   0164E8                     __ptext137:
 37144                           	callstack 0
 37145   0164E8                     _INT2_CallBack:
 37146                           	callstack 115
 37147   0164E8                     
 37148                           ;mcc_generated_files/system/src/interrupt.c: 189:     if(INT2_InterruptHandler)
 37149   0164E8  0106               	movlb	6	; () banked
 37150   0164EA  51BE               	movf	_INT2_InterruptHandler& (0+255),w,b
 37151   0164EC  11BF               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 37152   0164EE  11C0               	iorwf	(_INT2_InterruptHandler+2)& (0+255),w,b
 37153   0164F0  B4D8               	btfsc	status,2,c
 37154   0164F2  EF7D  F0B2         	goto	i2u730_41
 37155   0164F6  EF7F  F0B2         	goto	i2u730_40
 37156   0164FA                     i2u730_41:
 37157   0164FA  EF8C  F0B2         	goto	i2l410
 37158   0164FE                     i2u730_40:
 37159   0164FE                     
 37160                           ; BSR set to: 6
 37161                           ;mcc_generated_files/system/src/interrupt.c: 190:     {;mcc_generated_files/system/src/i
      +                          nterrupt.c: 191:         INT2_InterruptHandler();
 37162   0164FE  D802               	call	i2u731_48
 37163   016500  EF8C  F0B2         	goto	i2u731_49
 37164   016504                     i2u731_48:
 37165   016504  0005               	push	
 37166   016506  6EFA               	movwf	pclath,c
 37167   016508  51BE               	movf	_INT2_InterruptHandler& (0+255),w,b
 37168   01650A  6EFD               	movwf	tosl,c
 37169   01650C  51BF               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 37170   01650E  6EFE               	movwf	tosh,c
 37171   016510  51C0               	movf	(_INT2_InterruptHandler+2)& (0+255),w,b
 37172   016512  6EFF               	movwf	tosu,c
 37173   016514  50FA               	movf	pclath,w,c
 37174   016516  0012               	return		;indir
 37175   016518                     i2u731_49:
 37176   016518                     i2l410:
 37177   016518  0012               	return		;funcret
 37178   01651A                     __end_of_INT2_CallBack:
 37179                           	callstack 0
 37180                           
 37181 ;; *************** function _INT2_DefaultInterruptHandler *****************
 37182 ;; Defined at:
 37183 ;;		line 199 in file "mcc_generated_files/system/src/interrupt.c"
 37184 ;; Parameters:    Size  Location     Type
 37185 ;;		None
 37186 ;; Auto vars:     Size  Location     Type
 37187 ;;		None
 37188 ;; Return value:  Size  Location     Type
 37189 ;;                  1    wreg      void 
 37190 ;; Registers used:
 37191 ;;		None
 37192 ;; Tracked objects:
 37193 ;;		On entry : 0/0
 37194 ;;		On exit  : 0/0
 37195 ;;		Unchanged: 0/0
 37196 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37201 ;;Total ram usage:        0 bytes
 37202 ;; Hardware stack levels used: 1
 37203 ;; This function calls:
 37204 ;;		Nothing
 37205 ;; This function is called by:
 37206 ;;		_INTERRUPT_Initialize
 37207 ;;		_INT2_CallBack
 37208 ;; This function uses a non-reentrant model
 37209 ;;
 37210                           
 37211                           	psect	text138
 37212   016A62                     __ptext138:
 37213                           	callstack 0
 37214   016A62                     _INT2_DefaultInterruptHandler:
 37215                           	callstack 115
 37216   016A62  0012               	return		;funcret
 37217   016A64                     __end_of_INT2_DefaultInterruptHandler:
 37218                           	callstack 0
 37219                           
 37220 ;; *************** function _UART1_Receive_Vector_ISR *****************
 37221 ;; Defined at:
 37222 ;;		line 312 in file "mcc_generated_files/uart/src/uart1.c"
 37223 ;; Parameters:    Size  Location     Type
 37224 ;;		None
 37225 ;; Auto vars:     Size  Location     Type
 37226 ;;		None
 37227 ;; Return value:  Size  Location     Type
 37228 ;;                  1    wreg      void 
 37229 ;; Registers used:
 37230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 37231 ;; Tracked objects:
 37232 ;;		On entry : 0/0
 37233 ;;		On exit  : 0/0
 37234 ;;		Unchanged: 0/0
 37235 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37240 ;;Total ram usage:        2 bytes
 37241 ;; Hardware stack levels used: 1
 37242 ;; Hardware stack levels required when called: 3
 37243 ;; This function calls:
 37244 ;;		_UART1_ReceiveISR
 37245 ;; This function is called by:
 37246 ;;		Interrupt level 2
 37247 ;; This function uses a non-reentrant model
 37248 ;;
 37249                           
 37250                           	psect	text139
 37251   0168D4                     __ptext139:
 37252                           	callstack 0
 37253   0168D4                     _UART1_Receive_Vector_ISR:
 37254                           	callstack 114
 37255                           
 37256                           ;incstack = 0
 37257   0168D4  C4FA F50E          	movff	pclath,??_UART1_Receive_Vector_ISR
 37258   0168D8  C4FB F50F          	movff	pclatu,??_UART1_Receive_Vector_ISR+1
 37259   0168DC                     
 37260                           ;mcc_generated_files/uart/src/uart1.c: 314:     UART1_ReceiveISR();
 37261   0168DC  EC36  F0A4         	call	_UART1_ReceiveISR	;wreg free
 37262   0168E0  C50F  F4FB         	movff	??_UART1_Receive_Vector_ISR+1,pclatu
 37263   0168E4  C50E  F4FA         	movff	??_UART1_Receive_Vector_ISR,pclath
 37264   0168E8  0011               	retfie		f
 37265   0168EA                     __end_of_UART1_Receive_Vector_ISR:
 37266                           	callstack 0
 37267                           
 37268 ;; *************** function _UART1_ReceiveISR *****************
 37269 ;; Defined at:
 37270 ;;		line 317 in file "mcc_generated_files/uart/src/uart1.c"
 37271 ;; Parameters:    Size  Location     Type
 37272 ;;		None
 37273 ;; Auto vars:     Size  Location     Type
 37274 ;;  tempRxHead      1   12[COMRAM] unsigned char 
 37275 ;;  regValue        1   11[COMRAM] unsigned char 
 37276 ;; Return value:  Size  Location     Type
 37277 ;;                  1    wreg      void 
 37278 ;; Registers used:
 37279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 37280 ;; Tracked objects:
 37281 ;;		On entry : 0/0
 37282 ;;		On exit  : 0/0
 37283 ;;		Unchanged: 0/0
 37284 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37289 ;;Total ram usage:        2 bytes
 37290 ;; Hardware stack levels used: 1
 37291 ;; Hardware stack levels required when called: 2
 37292 ;; This function calls:
 37293 ;;		NULL
 37294 ;;		_UART1_DefaultFramingErrorCallback
 37295 ;;		_UART1_DefaultOverrunErrorCallback
 37296 ;;		_UART1_DefaultParityErrorCallback
 37297 ;;		_UART1_RxDataHandler
 37298 ;; This function is called by:
 37299 ;;		_UART1_Initialize
 37300 ;;		_UART1_Receive_Vector_ISR
 37301 ;; This function uses a non-reentrant model
 37302 ;;
 37303                           
 37304                           	psect	text140
 37305   01486C                     __ptext140:
 37306                           	callstack 0
 37307   01486C                     _UART1_ReceiveISR:
 37308                           	callstack 114
 37309   01486C                     
 37310                           ;mcc_generated_files/uart/src/uart1.c: 319:     uint8_t regValue;;mcc_generated_files/ua
      +                          rt/src/uart1.c: 320:  uint8_t tempRxHead;;mcc_generated_files/uart/src/uart1.c: 322:    
      +                           uart1RxStatusBuffer[uart1RxHead].status = 0;
 37311   01486C  504C               	movf	_uart1RxHead^(0+1280),w,c	;volatile
 37312   01486E  0D02               	mullw	2
 37313   014870  0E34               	movlw	low _uart1RxStatusBuffer
 37314   014872  24F3               	addwf	243,w,c
 37315   014874  6ED9               	movwf	fsr2l,c
 37316   014876  0E07               	movlw	high _uart1RxStatusBuffer
 37317   014878  20F4               	addwfc	prodh,w,c
 37318   01487A  6EDA               	movwf	fsr2h,c
 37319   01487C  6ADE               	clrf	postinc2,c
 37320   01487E  6ADD               	clrf	postdec2,c
 37321   014880                     
 37322                           ;mcc_generated_files/uart/src/uart1.c: 324:     if(1 == U1ERRIRbits.FERIF)
 37323   014880  0102               	movlb	2	; () banked
 37324   014882  A7B2               	btfss	178,3,b	;volatile
 37325   014884  EF46  F0A4         	goto	i2u732_41
 37326   014888  EF48  F0A4         	goto	i2u732_40
 37327   01488C                     i2u732_41:
 37328   01488C  EF6A  F0A4         	goto	i2l8559
 37329   014890                     i2u732_40:
 37330   014890                     
 37331                           ; BSR set to: 2
 37332                           ;mcc_generated_files/uart/src/uart1.c: 325:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          326:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 37333   014890  504C               	movf	_uart1RxHead^(0+1280),w,c	;volatile
 37334   014892  0D02               	mullw	2
 37335   014894  0E34               	movlw	low _uart1RxStatusBuffer
 37336   014896  24F3               	addwf	243,w,c
 37337   014898  6ED9               	movwf	fsr2l,c
 37338   01489A  0E07               	movlw	high _uart1RxStatusBuffer
 37339   01489C  20F4               	addwfc	prodh,w,c
 37340   01489E  6EDA               	movwf	fsr2h,c
 37341   0148A0  0107               	movlb	7	; () banked
 37342   0148A2  82DF               	bsf	indf2,1,c
 37343   0148A4                     
 37344                           ; BSR set to: 7
 37345                           ;mcc_generated_files/uart/src/uart1.c: 327:         if(((void*)0) != UART1_FramingErrorH
      +                          andler)
 37346   0148A4  0106               	movlb	6	; () banked
 37347   0148A6  51BB               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 37348   0148A8  11BC               	iorwf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 37349   0148AA  11BD               	iorwf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 37350   0148AC  B4D8               	btfsc	status,2,c
 37351   0148AE  EF5B  F0A4         	goto	i2u733_41
 37352   0148B2  EF5D  F0A4         	goto	i2u733_40
 37353   0148B6                     i2u733_41:
 37354   0148B6  EF6A  F0A4         	goto	i2l8559
 37355   0148BA                     i2u733_40:
 37356   0148BA                     
 37357                           ; BSR set to: 6
 37358                           ;mcc_generated_files/uart/src/uart1.c: 328:         {;mcc_generated_files/uart/src/uart1
      +                          .c: 329:             UART1_FramingErrorHandler();
 37359   0148BA  D802               	call	i2u734_48
 37360   0148BC  EF6A  F0A4         	goto	i2u734_49
 37361   0148C0                     i2u734_48:
 37362   0148C0  0005               	push	
 37363   0148C2  6EFA               	movwf	pclath,c
 37364   0148C4  51BB               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 37365   0148C6  6EFD               	movwf	tosl,c
 37366   0148C8  51BC               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 37367   0148CA  6EFE               	movwf	tosh,c
 37368   0148CC  51BD               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 37369   0148CE  6EFF               	movwf	tosu,c
 37370   0148D0  50FA               	movf	pclath,w,c
 37371   0148D2  0012               	return		;indir
 37372   0148D4                     i2u734_49:
 37373   0148D4                     i2l8559:
 37374                           
 37375                           ;mcc_generated_files/uart/src/uart1.c: 332:     if(1 == U1ERRIRbits.RXFOIF)
 37376   0148D4  0102               	movlb	2	; () banked
 37377   0148D6  A3B2               	btfss	178,1,b	;volatile
 37378   0148D8  EF70  F0A4         	goto	i2u735_41
 37379   0148DC  EF72  F0A4         	goto	i2u735_40
 37380   0148E0                     i2u735_41:
 37381   0148E0  EF94  F0A4         	goto	i2l8567
 37382   0148E4                     i2u735_40:
 37383   0148E4                     
 37384                           ; BSR set to: 2
 37385                           ;mcc_generated_files/uart/src/uart1.c: 333:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          334:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 37386   0148E4  504C               	movf	_uart1RxHead^(0+1280),w,c	;volatile
 37387   0148E6  0D02               	mullw	2
 37388   0148E8  0E34               	movlw	low _uart1RxStatusBuffer
 37389   0148EA  24F3               	addwf	243,w,c
 37390   0148EC  6ED9               	movwf	fsr2l,c
 37391   0148EE  0E07               	movlw	high _uart1RxStatusBuffer
 37392   0148F0  20F4               	addwfc	prodh,w,c
 37393   0148F2  6EDA               	movwf	fsr2h,c
 37394   0148F4  0107               	movlb	7	; () banked
 37395   0148F6  84DF               	bsf	indf2,2,c
 37396   0148F8                     
 37397                           ; BSR set to: 7
 37398                           ;mcc_generated_files/uart/src/uart1.c: 335:         if(((void*)0) != UART1_OverrunErrorH
      +                          andler)
 37399   0148F8  0106               	movlb	6	; () banked
 37400   0148FA  51B8               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 37401   0148FC  11B9               	iorwf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 37402   0148FE  11BA               	iorwf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 37403   014900  B4D8               	btfsc	status,2,c
 37404   014902  EF85  F0A4         	goto	i2u736_41
 37405   014906  EF87  F0A4         	goto	i2u736_40
 37406   01490A                     i2u736_41:
 37407   01490A  EF94  F0A4         	goto	i2l8567
 37408   01490E                     i2u736_40:
 37409   01490E                     
 37410                           ; BSR set to: 6
 37411                           ;mcc_generated_files/uart/src/uart1.c: 336:         {;mcc_generated_files/uart/src/uart1
      +                          .c: 337:             UART1_OverrunErrorHandler();
 37412   01490E  D802               	call	i2u737_48
 37413   014910  EF94  F0A4         	goto	i2u737_49
 37414   014914                     i2u737_48:
 37415   014914  0005               	push	
 37416   014916  6EFA               	movwf	pclath,c
 37417   014918  51B8               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 37418   01491A  6EFD               	movwf	tosl,c
 37419   01491C  51B9               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 37420   01491E  6EFE               	movwf	tosh,c
 37421   014920  51BA               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 37422   014922  6EFF               	movwf	tosu,c
 37423   014924  50FA               	movf	pclath,w,c
 37424   014926  0012               	return		;indir
 37425   014928                     i2u737_49:
 37426   014928                     i2l8567:
 37427                           
 37428                           ;mcc_generated_files/uart/src/uart1.c: 340:     if(1 == U1ERRIRbits.PERIF)
 37429   014928  0102               	movlb	2	; () banked
 37430   01492A  ADB2               	btfss	178,6,b	;volatile
 37431   01492C  EF9A  F0A4         	goto	i2u738_41
 37432   014930  EF9C  F0A4         	goto	i2u738_40
 37433   014934                     i2u738_41:
 37434   014934  EFBE  F0A4         	goto	i2l8575
 37435   014938                     i2u738_40:
 37436   014938                     
 37437                           ; BSR set to: 2
 37438                           ;mcc_generated_files/uart/src/uart1.c: 341:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          342:         uart1RxStatusBuffer[uart1RxHead].perr = 1;
 37439   014938  504C               	movf	_uart1RxHead^(0+1280),w,c	;volatile
 37440   01493A  0D02               	mullw	2
 37441   01493C  0E34               	movlw	low _uart1RxStatusBuffer
 37442   01493E  24F3               	addwf	243,w,c
 37443   014940  6ED9               	movwf	fsr2l,c
 37444   014942  0E07               	movlw	high _uart1RxStatusBuffer
 37445   014944  20F4               	addwfc	prodh,w,c
 37446   014946  6EDA               	movwf	fsr2h,c
 37447   014948  0107               	movlb	7	; () banked
 37448   01494A  80DF               	bsf	indf2,0,c
 37449   01494C                     
 37450                           ; BSR set to: 7
 37451                           ;mcc_generated_files/uart/src/uart1.c: 343:         if(((void*)0) != UART1_ParityErrorHa
      +                          ndler)
 37452   01494C  0106               	movlb	6	; () banked
 37453   01494E  51B5               	movf	_UART1_ParityErrorHandler& (0+255),w,b
 37454   014950  11B6               	iorwf	(_UART1_ParityErrorHandler+1)& (0+255),w,b
 37455   014952  11B7               	iorwf	(_UART1_ParityErrorHandler+2)& (0+255),w,b
 37456   014954  B4D8               	btfsc	status,2,c
 37457   014956  EFAF  F0A4         	goto	i2u739_41
 37458   01495A  EFB1  F0A4         	goto	i2u739_40
 37459   01495E                     i2u739_41:
 37460   01495E  EFBE  F0A4         	goto	i2l8575
 37461   014962                     i2u739_40:
 37462   014962                     
 37463                           ; BSR set to: 6
 37464                           ;mcc_generated_files/uart/src/uart1.c: 344:         {;mcc_generated_files/uart/src/uart1
      +                          .c: 345:             UART1_ParityErrorHandler();
 37465   014962  D802               	call	i2u740_48
 37466   014964  EFBE  F0A4         	goto	i2u740_49
 37467   014968                     i2u740_48:
 37468   014968  0005               	push	
 37469   01496A  6EFA               	movwf	pclath,c
 37470   01496C  51B5               	movf	_UART1_ParityErrorHandler& (0+255),w,b
 37471   01496E  6EFD               	movwf	tosl,c
 37472   014970  51B6               	movf	(_UART1_ParityErrorHandler+1)& (0+255),w,b
 37473   014972  6EFE               	movwf	tosh,c
 37474   014974  51B7               	movf	(_UART1_ParityErrorHandler+2)& (0+255),w,b
 37475   014976  6EFF               	movwf	tosu,c
 37476   014978  50FA               	movf	pclath,w,c
 37477   01497A  0012               	return		;indir
 37478   01497C                     i2u740_49:
 37479   01497C                     i2l8575:
 37480                           
 37481                           ;mcc_generated_files/uart/src/uart1.c: 349:     regValue = U1RXB;
 37482   01497C  C2A1 F50C          	movff	673,UART1_ReceiveISR@regValue	;volatile
 37483   014980                     
 37484                           ;mcc_generated_files/uart/src/uart1.c: 351:     tempRxHead = (uart1RxHead + 1U) & ((8U) 
      +                          - 1U);
 37485   014980  284C               	incf	_uart1RxHead^(0+1280),w,c	;volatile
 37486   014982  0B07               	andlw	7
 37487   014984  6E0D               	movwf	UART1_ReceiveISR@tempRxHead^(0+1280),c
 37488   014986                     
 37489                           ;mcc_generated_files/uart/src/uart1.c: 352:     if (tempRxHead == uart1RxTail)
 37490   014986  504B               	movf	_uart1RxTail^(0+1280),w,c	;volatile
 37491   014988  180D               	xorwf	UART1_ReceiveISR@tempRxHead^(0+1280),w,c
 37492   01498A  A4D8               	btfss	status,2,c
 37493   01498C  EFCA  F0A4         	goto	i2u741_41
 37494   014990  EFCC  F0A4         	goto	i2u741_40
 37495   014994                     i2u741_41:
 37496   014994  EFCE  F0A4         	goto	i2l8583
 37497   014998                     i2u741_40:
 37498   014998  EFD9  F0A4         	goto	i2l8589
 37499   01499C                     i2l8583:
 37500                           
 37501                           ;mcc_generated_files/uart/src/uart1.c: 357:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          358:         uart1RxBuffer[uart1RxHead] = regValue;
 37502   01499C  0E4E               	movlw	low _uart1RxBuffer
 37503   01499E  244C               	addwf	_uart1RxHead^(0+1280),w,c	;volatile
 37504   0149A0  6ED9               	movwf	fsr2l,c
 37505   0149A2  6ADA               	clrf	fsr2h,c
 37506   0149A4  0E07               	movlw	high _uart1RxBuffer
 37507   0149A6  22DA               	addwfc	fsr2h,f,c
 37508   0149A8  C50C  F4DF         	movff	UART1_ReceiveISR@regValue,indf2
 37509   0149AC                     
 37510                           ;mcc_generated_files/uart/src/uart1.c: 359:   uart1RxHead = tempRxHead;
 37511   0149AC  C50D  F54C         	movff	UART1_ReceiveISR@tempRxHead,_uart1RxHead	;volatile
 37512   0149B0                     
 37513                           ;mcc_generated_files/uart/src/uart1.c: 360:   uart1RxCount++;
 37514   0149B0  2A4A               	incf	_uart1RxCount^(0+1280),f,c	;volatile
 37515   0149B2                     i2l8589:
 37516                           
 37517                           ;mcc_generated_files/uart/src/uart1.c: 363:     if(((void*)0) != UART1_RxCompleteInterru
      +                          ptHandler)
 37518   0149B2  0106               	movlb	6	; () banked
 37519   0149B4  51A9               	movf	_UART1_RxCompleteInterruptHandler& (0+255),w,b
 37520   0149B6  11AA               	iorwf	(_UART1_RxCompleteInterruptHandler+1)& (0+255),w,b
 37521   0149B8  11AB               	iorwf	(_UART1_RxCompleteInterruptHandler+2)& (0+255),w,b
 37522   0149BA  B4D8               	btfsc	status,2,c
 37523   0149BC  EFE2  F0A4         	goto	i2u742_41
 37524   0149C0  EFE4  F0A4         	goto	i2u742_40
 37525   0149C4                     i2u742_41:
 37526   0149C4  EFF1  F0A4         	goto	i2l938
 37527   0149C8                     i2u742_40:
 37528   0149C8                     
 37529                           ; BSR set to: 6
 37530                           ;mcc_generated_files/uart/src/uart1.c: 364:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          365:         (*UART1_RxCompleteInterruptHandler)();
 37531   0149C8  D802               	call	i2u743_48
 37532   0149CA  EFF1  F0A4         	goto	i2u743_49
 37533   0149CE                     i2u743_48:
 37534   0149CE  0005               	push	
 37535   0149D0  6EFA               	movwf	pclath,c
 37536   0149D2  51A9               	movf	_UART1_RxCompleteInterruptHandler& (0+255),w,b
 37537   0149D4  6EFD               	movwf	tosl,c
 37538   0149D6  51AA               	movf	(_UART1_RxCompleteInterruptHandler+1)& (0+255),w,b
 37539   0149D8  6EFE               	movwf	tosh,c
 37540   0149DA  51AB               	movf	(_UART1_RxCompleteInterruptHandler+2)& (0+255),w,b
 37541   0149DC  6EFF               	movwf	tosu,c
 37542   0149DE  50FA               	movf	pclath,w,c
 37543   0149E0  0012               	return		;indir
 37544   0149E2                     i2u743_49:
 37545   0149E2                     i2l938:
 37546   0149E2  0012               	return		;funcret
 37547   0149E4                     __end_of_UART1_ReceiveISR:
 37548                           	callstack 0
 37549                           
 37550 ;; *************** function _UART1_RxDataHandler *****************
 37551 ;; Defined at:
 37552 ;;		line 60 in file "main.c"
 37553 ;; Parameters:    Size  Location     Type
 37554 ;;		None
 37555 ;; Auto vars:     Size  Location     Type
 37556 ;;		None
 37557 ;; Return value:  Size  Location     Type
 37558 ;;                  1    wreg      void 
 37559 ;; Registers used:
 37560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37561 ;; Tracked objects:
 37562 ;;		On entry : 0/0
 37563 ;;		On exit  : 0/0
 37564 ;;		Unchanged: 0/0
 37565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37570 ;;Total ram usage:        0 bytes
 37571 ;; Hardware stack levels used: 1
 37572 ;; Hardware stack levels required when called: 1
 37573 ;; This function calls:
 37574 ;;		_UART1_IsRxReady
 37575 ;;		_UART1_Read
 37576 ;; This function is called by:
 37577 ;;		_main
 37578 ;;		_UART1_ReceiveISR
 37579 ;; This function uses a non-reentrant model
 37580 ;;
 37581                           
 37582                           	psect	text141
 37583   0166E2                     __ptext141:
 37584                           	callstack 0
 37585   0166E2                     _UART1_RxDataHandler:
 37586                           	callstack 114
 37587   0166E2                     
 37588                           ;main.c: 61:     if (UART1_IsRxReady()) {
 37589   0166E2  EC75  F0B4         	call	_UART1_IsRxReady	;wreg free
 37590   0166E6  0900               	iorlw	0
 37591   0166E8  B4D8               	btfsc	status,2,c
 37592   0166EA  EF79  F0B3         	goto	i2u661_41
 37593   0166EE  EF7B  F0B3         	goto	i2u661_40
 37594   0166F2                     i2u661_41:
 37595   0166F2  EF81  F0B3         	goto	i2l1061
 37596   0166F6                     i2u661_40:
 37597   0166F6                     
 37598                           ;main.c: 62:         receivedByte = UART1_Read();
 37599   0166F6  EC28  F0B2         	call	_UART1_Read	;wreg free
 37600   0166FA  0106               	movlb	6	; () banked
 37601   0166FC  6FDD               	movwf	_receivedByte& (0+255),b	;volatile
 37602   0166FE                     
 37603                           ; BSR set to: 6
 37604                           ;main.c: 63:         newDataReceived = 1;
 37605   0166FE  0E01               	movlw	1
 37606   016700  6FDC               	movwf	_newDataReceived& (0+255),b	;volatile
 37607   016702                     i2l1061:
 37608   016702  0012               	return		;funcret
 37609   016704                     __end_of_UART1_RxDataHandler:
 37610                           	callstack 0
 37611                           
 37612 ;; *************** function _UART1_Read *****************
 37613 ;; Defined at:
 37614 ;;		line 295 in file "mcc_generated_files/uart/src/uart1.c"
 37615 ;; Parameters:    Size  Location     Type
 37616 ;;		None
 37617 ;; Auto vars:     Size  Location     Type
 37618 ;;  readValue       1   10[COMRAM] unsigned char 
 37619 ;;  tempRxTail      1    9[COMRAM] unsigned char 
 37620 ;; Return value:  Size  Location     Type
 37621 ;;                  1    wreg      unsigned char 
 37622 ;; Registers used:
 37623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37624 ;; Tracked objects:
 37625 ;;		On entry : 0/0
 37626 ;;		On exit  : 0/0
 37627 ;;		Unchanged: 0/0
 37628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37633 ;;Total ram usage:        2 bytes
 37634 ;; Hardware stack levels used: 1
 37635 ;; This function calls:
 37636 ;;		Nothing
 37637 ;; This function is called by:
 37638 ;;		_UART1_RxDataHandler
 37639 ;; This function uses a non-reentrant model
 37640 ;;
 37641                           
 37642                           	psect	text142
 37643   016450                     __ptext142:
 37644                           	callstack 0
 37645   016450                     _UART1_Read:
 37646                           	callstack 114
 37647   016450                     
 37648                           ;mcc_generated_files/uart/src/uart1.c: 298:     uint8_t tempRxTail;;mcc_generated_files/
      +                          uart/src/uart1.c: 300:     readValue = uart1RxBuffer[uart1RxTail];
 37649   016450  0E4E               	movlw	low _uart1RxBuffer
 37650   016452  244B               	addwf	_uart1RxTail^(0+1280),w,c	;volatile
 37651   016454  6ED9               	movwf	fsr2l,c
 37652   016456  6ADA               	clrf	fsr2h,c
 37653   016458  0E07               	movlw	high _uart1RxBuffer
 37654   01645A  22DA               	addwfc	fsr2h,f,c
 37655   01645C  50DF               	movf	indf2,w,c
 37656   01645E  6E0B               	movwf	UART1_Read@readValue^(0+1280),c
 37657   016460                     
 37658                           ;mcc_generated_files/uart/src/uart1.c: 301:     tempRxTail = (uart1RxTail + 1U) & ((8U) 
      +                          - 1U);
 37659   016460  284B               	incf	_uart1RxTail^(0+1280),w,c	;volatile
 37660   016462  0B07               	andlw	7
 37661   016464  6E0A               	movwf	UART1_Read@tempRxTail^(0+1280),c
 37662   016466                     
 37663                           ;mcc_generated_files/uart/src/uart1.c: 302:     uart1RxTail = tempRxTail;
 37664   016466  C50A  F54B         	movff	UART1_Read@tempRxTail,_uart1RxTail	;volatile
 37665   01646A                     
 37666                           ;mcc_generated_files/uart/src/uart1.c: 303:     PIE4bits.U1RXIE = 0;
 37667   01646A  90A2               	bcf	162,0,c	;volatile
 37668   01646C                     
 37669                           ;mcc_generated_files/uart/src/uart1.c: 304:     if(0U != uart1RxCount)
 37670   01646C  504A               	movf	_uart1RxCount^(0+1280),w,c	;volatile
 37671   01646E  B4D8               	btfsc	status,2,c
 37672   016470  EF3C  F0B2         	goto	i2u616_41
 37673   016474  EF3E  F0B2         	goto	i2u616_40
 37674   016478                     i2u616_41:
 37675   016478  EF3F  F0B2         	goto	i2l7445
 37676   01647C                     i2u616_40:
 37677   01647C                     
 37678                           ;mcc_generated_files/uart/src/uart1.c: 305:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          306:         uart1RxCount--;
 37679   01647C  064A               	decf	_uart1RxCount^(0+1280),f,c	;volatile
 37680   01647E                     i2l7445:
 37681                           
 37682                           ;mcc_generated_files/uart/src/uart1.c: 308:     PIE4bits.U1RXIE = 1;
 37683   01647E  80A2               	bsf	162,0,c	;volatile
 37684   016480                     
 37685                           ;mcc_generated_files/uart/src/uart1.c: 309:     return readValue;
 37686   016480  500B               	movf	UART1_Read@readValue^(0+1280),w,c
 37687   016482  0012               	return		;funcret
 37688   016484                     __end_of_UART1_Read:
 37689                           	callstack 0
 37690                           
 37691 ;; *************** function _UART1_IsRxReady *****************
 37692 ;; Defined at:
 37693 ;;		line 273 in file "mcc_generated_files/uart/src/uart1.c"
 37694 ;; Parameters:    Size  Location     Type
 37695 ;;		None
 37696 ;; Auto vars:     Size  Location     Type
 37697 ;;		None
 37698 ;; Return value:  Size  Location     Type
 37699 ;;                  1    wreg      _Bool 
 37700 ;; Registers used:
 37701 ;;		wreg, status,2
 37702 ;; Tracked objects:
 37703 ;;		On entry : 0/0
 37704 ;;		On exit  : 0/0
 37705 ;;		Unchanged: 0/0
 37706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37711 ;;Total ram usage:        0 bytes
 37712 ;; Hardware stack levels used: 1
 37713 ;; This function calls:
 37714 ;;		Nothing
 37715 ;; This function is called by:
 37716 ;;		_UART1_RxDataHandler
 37717 ;; This function uses a non-reentrant model
 37718 ;;
 37719                           
 37720                           	psect	text143
 37721   0168EA                     __ptext143:
 37722                           	callstack 0
 37723   0168EA                     _UART1_IsRxReady:
 37724                           	callstack 114
 37725   0168EA                     
 37726                           ;mcc_generated_files/uart/src/uart1.c: 275:     return (uart1RxCount ? 1 : 0);
 37727   0168EA  504A               	movf	_uart1RxCount^(0+1280),w,c	;volatile
 37728   0168EC  A4D8               	btfss	status,2,c
 37729   0168EE  EF7B  F0B4         	goto	i2u614_41
 37730   0168F2  EF7E  F0B4         	goto	i2u614_40
 37731   0168F6                     i2u614_41:
 37732   0168F6  0E01               	movlw	1
 37733   0168F8  EF7F  F0B4         	goto	i2u615_40
 37734   0168FC                     i2u614_40:
 37735   0168FC  0E00               	movlw	0
 37736   0168FE                     i2u615_40:
 37737   0168FE  0012               	return		;funcret
 37738   016900                     __end_of_UART1_IsRxReady:
 37739                           	callstack 0
 37740                           
 37741 ;; *************** function _UART1_DefaultParityErrorCallback *****************
 37742 ;; Defined at:
 37743 ;;		line 434 in file "mcc_generated_files/uart/src/uart1.c"
 37744 ;; Parameters:    Size  Location     Type
 37745 ;;		None
 37746 ;; Auto vars:     Size  Location     Type
 37747 ;;		None
 37748 ;; Return value:  Size  Location     Type
 37749 ;;                  1    wreg      void 
 37750 ;; Registers used:
 37751 ;;		None
 37752 ;; Tracked objects:
 37753 ;;		On entry : 0/0
 37754 ;;		On exit  : 0/0
 37755 ;;		Unchanged: 0/0
 37756 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37761 ;;Total ram usage:        0 bytes
 37762 ;; Hardware stack levels used: 1
 37763 ;; This function calls:
 37764 ;;		Nothing
 37765 ;; This function is called by:
 37766 ;;		_UART1_Initialize
 37767 ;;		_UART1_ReceiveISR
 37768 ;; This function uses a non-reentrant model
 37769 ;;
 37770                           
 37771                           	psect	text144
 37772   016A64                     __ptext144:
 37773                           	callstack 0
 37774   016A64                     _UART1_DefaultParityErrorCallback:
 37775                           	callstack 115
 37776   016A64  0012               	return		;funcret
 37777   016A66                     __end_of_UART1_DefaultParityErrorCallback:
 37778                           	callstack 0
 37779                           
 37780 ;; *************** function _UART1_DefaultOverrunErrorCallback *****************
 37781 ;; Defined at:
 37782 ;;		line 429 in file "mcc_generated_files/uart/src/uart1.c"
 37783 ;; Parameters:    Size  Location     Type
 37784 ;;		None
 37785 ;; Auto vars:     Size  Location     Type
 37786 ;;		None
 37787 ;; Return value:  Size  Location     Type
 37788 ;;                  1    wreg      void 
 37789 ;; Registers used:
 37790 ;;		None
 37791 ;; Tracked objects:
 37792 ;;		On entry : 0/0
 37793 ;;		On exit  : 0/0
 37794 ;;		Unchanged: 0/0
 37795 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37800 ;;Total ram usage:        0 bytes
 37801 ;; Hardware stack levels used: 1
 37802 ;; This function calls:
 37803 ;;		Nothing
 37804 ;; This function is called by:
 37805 ;;		_UART1_Initialize
 37806 ;;		_UART1_ReceiveISR
 37807 ;; This function uses a non-reentrant model
 37808 ;;
 37809                           
 37810                           	psect	text145
 37811   016A66                     __ptext145:
 37812                           	callstack 0
 37813   016A66                     _UART1_DefaultOverrunErrorCallback:
 37814                           	callstack 115
 37815   016A66  0012               	return		;funcret
 37816   016A68                     __end_of_UART1_DefaultOverrunErrorCallback:
 37817                           	callstack 0
 37818                           
 37819 ;; *************** function _UART1_DefaultFramingErrorCallback *****************
 37820 ;; Defined at:
 37821 ;;		line 424 in file "mcc_generated_files/uart/src/uart1.c"
 37822 ;; Parameters:    Size  Location     Type
 37823 ;;		None
 37824 ;; Auto vars:     Size  Location     Type
 37825 ;;		None
 37826 ;; Return value:  Size  Location     Type
 37827 ;;                  1    wreg      void 
 37828 ;; Registers used:
 37829 ;;		None
 37830 ;; Tracked objects:
 37831 ;;		On entry : 0/0
 37832 ;;		On exit  : 0/0
 37833 ;;		Unchanged: 0/0
 37834 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37839 ;;Total ram usage:        0 bytes
 37840 ;; Hardware stack levels used: 1
 37841 ;; This function calls:
 37842 ;;		Nothing
 37843 ;; This function is called by:
 37844 ;;		_UART1_Initialize
 37845 ;;		_UART1_ReceiveISR
 37846 ;; This function uses a non-reentrant model
 37847 ;;
 37848                           
 37849                           	psect	text146
 37850   016A68                     __ptext146:
 37851                           	callstack 0
 37852   016A68                     _UART1_DefaultFramingErrorCallback:
 37853                           	callstack 115
 37854   016A68  0012               	return		;funcret
 37855   016A6A                     __end_of_UART1_DefaultFramingErrorCallback:
 37856                           	callstack 0
 37857                           
 37858 ;; *************** function _UART1_Transmit_Vector_ISR *****************
 37859 ;; Defined at:
 37860 ;;		line 393 in file "mcc_generated_files/uart/src/uart1.c"
 37861 ;; Parameters:    Size  Location     Type
 37862 ;;		None
 37863 ;; Auto vars:     Size  Location     Type
 37864 ;;		None
 37865 ;; Return value:  Size  Location     Type
 37866 ;;                  1    wreg      void 
 37867 ;; Registers used:
 37868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37869 ;; Tracked objects:
 37870 ;;		On entry : 0/0
 37871 ;;		On exit  : 0/0
 37872 ;;		Unchanged: 0/0
 37873 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37878 ;;Total ram usage:        0 bytes
 37879 ;; Hardware stack levels used: 1
 37880 ;; Hardware stack levels required when called: 1
 37881 ;; This function calls:
 37882 ;;		_UART1_TransmitISR
 37883 ;; This function is called by:
 37884 ;;		Interrupt level 2
 37885 ;; This function uses a non-reentrant model
 37886 ;;
 37887                           
 37888                           	psect	text147
 37889   016A54                     __ptext147:
 37890                           	callstack 0
 37891   016A54                     _UART1_Transmit_Vector_ISR:
 37892                           	callstack 116
 37893   016A54                     
 37894                           ;mcc_generated_files/uart/src/uart1.c: 395:     UART1_TransmitISR();
 37895   016A54  EC0D  F0B2         	call	_UART1_TransmitISR	;wreg free
 37896   016A58  0011               	retfie		f
 37897   016A5A                     __end_of_UART1_Transmit_Vector_ISR:
 37898                           	callstack 0
 37899                           
 37900 ;; *************** function _UART1_TransmitISR *****************
 37901 ;; Defined at:
 37902 ;;		line 398 in file "mcc_generated_files/uart/src/uart1.c"
 37903 ;; Parameters:    Size  Location     Type
 37904 ;;		None
 37905 ;; Auto vars:     Size  Location     Type
 37906 ;;  tempTxTail      1   15[COMRAM] unsigned char 
 37907 ;; Return value:  Size  Location     Type
 37908 ;;                  1    wreg      void 
 37909 ;; Registers used:
 37910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37911 ;; Tracked objects:
 37912 ;;		On entry : 0/0
 37913 ;;		On exit  : 0/0
 37914 ;;		Unchanged: 0/0
 37915 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 37916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37920 ;;Total ram usage:        1 bytes
 37921 ;; Hardware stack levels used: 1
 37922 ;; This function calls:
 37923 ;;		Nothing
 37924 ;; This function is called by:
 37925 ;;		_UART1_Initialize
 37926 ;;		_UART1_Transmit_Vector_ISR
 37927 ;; This function uses a non-reentrant model
 37928 ;;
 37929                           
 37930                           	psect	text148
 37931   01641A                     __ptext148:
 37932                           	callstack 0
 37933   01641A                     _UART1_TransmitISR:
 37934                           	callstack 116
 37935   01641A                     
 37936                           ;mcc_generated_files/uart/src/uart1.c: 400:     uint8_t tempTxTail;;mcc_generated_files/
      +                          uart/src/uart1.c: 402:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining)
 37937   01641A  0E08               	movlw	8
 37938   01641C  604D               	cpfslt	_uart1TxBufferRemaining^(0+1280),c	;volatile
 37939   01641E  EF13  F0B2         	goto	i2u744_41
 37940   016422  EF15  F0B2         	goto	i2u744_40
 37941   016426                     i2u744_41:
 37942   016426  EF26  F0B2         	goto	i2l953
 37943   01642A                     i2u744_40:
 37944   01642A                     
 37945                           ;mcc_generated_files/uart/src/uart1.c: 403:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          404:        U1TXB = uart1TxBuffer[uart1TxTail];
 37946   01642A  0E56               	movlw	low _uart1TxBuffer
 37947   01642C  244E               	addwf	_uart1TxTail^(0+1280),w,c	;volatile
 37948   01642E  6ED9               	movwf	fsr2l,c
 37949   016430  6ADA               	clrf	fsr2h,c
 37950   016432  0E07               	movlw	high _uart1TxBuffer
 37951   016434  22DA               	addwfc	fsr2h,f,c
 37952   016436  50DF               	movf	indf2,w,c
 37953   016438  0102               	movlb	2	; () banked
 37954   01643A  6FA3               	movwf	163,b	;volatile
 37955   01643C                     
 37956                           ; BSR set to: 2
 37957                           ;mcc_generated_files/uart/src/uart1.c: 405:        tempTxTail = (uart1TxTail + 1U) & ((8
      +                          U) - 1U);
 37958   01643C  284E               	incf	_uart1TxTail^(0+1280),w,c	;volatile
 37959   01643E  0B07               	andlw	7
 37960   016440  6E10               	movwf	UART1_TransmitISR@tempTxTail^(0+1280),c
 37961   016442                     
 37962                           ; BSR set to: 2
 37963                           ;mcc_generated_files/uart/src/uart1.c: 407:        uart1TxTail = tempTxTail;
 37964   016442  C510  F54E         	movff	UART1_TransmitISR@tempTxTail,_uart1TxTail	;volatile
 37965   016446                     
 37966                           ; BSR set to: 2
 37967                           ;mcc_generated_files/uart/src/uart1.c: 408:        uart1TxBufferRemaining++;
 37968   016446  2A4D               	incf	_uart1TxBufferRemaining^(0+1280),f,c	;volatile
 37969                           
 37970                           ;mcc_generated_files/uart/src/uart1.c: 409:     }
 37971   016448  EF27  F0B2         	goto	i2l956
 37972   01644C                     i2l953:
 37973                           
 37974                           ;mcc_generated_files/uart/src/uart1.c: 411:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          412:         PIE4bits.U1TXIE = 0;
 37975   01644C  92A2               	bcf	162,1,c	;volatile
 37976   01644E                     i2l956:
 37977   01644E  0012               	return		;funcret
 37978   016450                     __end_of_UART1_TransmitISR:
 37979                           	callstack 0
 37980                           
 37981                           ;
 37982                           ; H/W Interrupt Vector Table @ 0x8
 37983                           ;
 37984                           
 37985                           	psect	ivt0x8
 37986   000008                     __pivt0x8:
 37987                           	callstack 0
 37988   000008                     ivt0x8_base:
 37989                           	callstack 0
 37990                           
 37991                           ; Vector 0 : SWINT
 37992   000008  5A97               	dw	_Default_ISR shr (0+2)
 37993                           
 37994                           ; Vector 1 : HLVD
 37995   00000A  5A97               	dw	_Default_ISR shr (0+2)
 37996                           
 37997                           ; Vector 2 : OSF
 37998   00000C  5A97               	dw	_Default_ISR shr (0+2)
 37999                           
 38000                           ; Vector 3 : CSW
 38001   00000E  5A97               	dw	_Default_ISR shr (0+2)
 38002                           
 38003                           ; Vector 4 : Undefined
 38004   000010  0040               	dw	ivt0x8_undefint shr (0+2)
 38005                           
 38006                           ; Vector 5 : CLC1
 38007   000012  5A97               	dw	_Default_ISR shr (0+2)
 38008                           
 38009                           ; Vector 6 : Undefined
 38010   000014  0040               	dw	ivt0x8_undefint shr (0+2)
 38011                           
 38012                           ; Vector 7 : IOC
 38013   000016  5A97               	dw	_Default_ISR shr (0+2)
 38014                           
 38015                           ; Vector 8 : INT0
 38016   000018  59D6               	dw	_INT0_ISR shr (0+2)
 38017                           
 38018                           ; Vector 9 : ZCD
 38019   00001A  5A97               	dw	_Default_ISR shr (0+2)
 38020                           
 38021                           ; Vector 10 : AD
 38022   00001C  5A97               	dw	_Default_ISR shr (0+2)
 38023                           
 38024                           ; Vector 11 : ACT
 38025   00001E  5A97               	dw	_Default_ISR shr (0+2)
 38026                           
 38027                           ; Vector 12 : CMP1
 38028   000020  5A97               	dw	_Default_ISR shr (0+2)
 38029                           
 38030                           ; Vector 13 : SMT1
 38031   000022  5A97               	dw	_Default_ISR shr (0+2)
 38032                           
 38033                           ; Vector 14 : SMT1PRA
 38034   000024  5A97               	dw	_Default_ISR shr (0+2)
 38035                           
 38036                           ; Vector 15 : SMT1PRW
 38037   000026  5A97               	dw	_Default_ISR shr (0+2)
 38038                           
 38039                           ; Vector 16 : ADT
 38040   000028  5A97               	dw	_Default_ISR shr (0+2)
 38041                           
 38042                           ; Vector 17 : Undefined
 38043   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
 38044                           
 38045                           ; Vector 18 : Undefined
 38046   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
 38047                           
 38048                           ; Vector 19 : Undefined
 38049   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
 38050                           
 38051                           ; Vector 20 : DMA1SCNT
 38052   000030  5A97               	dw	_Default_ISR shr (0+2)
 38053                           
 38054                           ; Vector 21 : DMA1DCNT
 38055   000032  5A97               	dw	_Default_ISR shr (0+2)
 38056                           
 38057                           ; Vector 22 : DMA1OR
 38058   000034  5A97               	dw	_Default_ISR shr (0+2)
 38059                           
 38060                           ; Vector 23 : DMA1A
 38061   000036  5A97               	dw	_Default_ISR shr (0+2)
 38062                           
 38063                           ; Vector 24 : SPI1RX
 38064   000038  5A97               	dw	_Default_ISR shr (0+2)
 38065                           
 38066                           ; Vector 25 : SPI1TX
 38067   00003A  5A97               	dw	_Default_ISR shr (0+2)
 38068                           
 38069                           ; Vector 26 : SPI1
 38070   00003C  5A97               	dw	_Default_ISR shr (0+2)
 38071                           
 38072                           ; Vector 27 : TMR2
 38073   00003E  5A97               	dw	_Default_ISR shr (0+2)
 38074                           
 38075                           ; Vector 28 : TMR1
 38076   000040  5A97               	dw	_Default_ISR shr (0+2)
 38077                           
 38078                           ; Vector 29 : TMR1G
 38079   000042  5A97               	dw	_Default_ISR shr (0+2)
 38080                           
 38081                           ; Vector 30 : CCP1
 38082   000044  5A97               	dw	_Default_ISR shr (0+2)
 38083                           
 38084                           ; Vector 31 : TMR0
 38085   000046  5A97               	dw	_Default_ISR shr (0+2)
 38086                           
 38087                           ; Vector 32 : U1RX
 38088   000048  5A35               	dw	_UART1_Receive_Vector_ISR shr (0+2)
 38089                           
 38090                           ; Vector 33 : U1TX
 38091   00004A  5A95               	dw	_UART1_Transmit_Vector_ISR shr (0+2)
 38092                           
 38093                           ; Vector 34 : U1E
 38094   00004C  5A97               	dw	_Default_ISR shr (0+2)
 38095                           
 38096                           ; Vector 35 : U1
 38097   00004E  5A97               	dw	_Default_ISR shr (0+2)
 38098                           
 38099                           ; Vector 36 : Undefined
 38100   000050  0040               	dw	ivt0x8_undefint shr (0+2)
 38101                           
 38102                           ; Vector 37 : Undefined
 38103   000052  0040               	dw	ivt0x8_undefint shr (0+2)
 38104                           
 38105                           ; Vector 38 : PWM1PR
 38106   000054  5A97               	dw	_Default_ISR shr (0+2)
 38107                           
 38108                           ; Vector 39 : PWM1
 38109   000056  5A97               	dw	_Default_ISR shr (0+2)
 38110                           
 38111                           ; Vector 40 : SPI2RX
 38112   000058  5A97               	dw	_Default_ISR shr (0+2)
 38113                           
 38114                           ; Vector 41 : SPI2TX
 38115   00005A  5A97               	dw	_Default_ISR shr (0+2)
 38116                           
 38117                           ; Vector 42 : SPI2
 38118   00005C  5A97               	dw	_Default_ISR shr (0+2)
 38119                           
 38120                           ; Vector 43 : Undefined
 38121   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
 38122                           
 38123                           ; Vector 44 : TMR3
 38124   000060  5A97               	dw	_Default_ISR shr (0+2)
 38125                           
 38126                           ; Vector 45 : TMR3G
 38127   000062  5A97               	dw	_Default_ISR shr (0+2)
 38128                           
 38129                           ; Vector 46 : PWM2PR
 38130   000064  5A97               	dw	_Default_ISR shr (0+2)
 38131                           
 38132                           ; Vector 47 : PWM2
 38133   000066  5A97               	dw	_Default_ISR shr (0+2)
 38134                           
 38135                           ; Vector 48 : INT1
 38136   000068  59DC               	dw	_INT1_ISR shr (0+2)
 38137                           
 38138                           ; Vector 49 : CLC2
 38139   00006A  5A97               	dw	_Default_ISR shr (0+2)
 38140                           
 38141                           ; Vector 50 : CWG1
 38142   00006C  5A97               	dw	_Default_ISR shr (0+2)
 38143                           
 38144                           ; Vector 51 : NCO1
 38145   00006E  5A97               	dw	_Default_ISR shr (0+2)
 38146                           
 38147                           ; Vector 52 : DMA2SCNT
 38148   000070  5A97               	dw	_Default_ISR shr (0+2)
 38149                           
 38150                           ; Vector 53 : DMA2DCNT
 38151   000072  5A97               	dw	_Default_ISR shr (0+2)
 38152                           
 38153                           ; Vector 54 : DMA2OR
 38154   000074  5A97               	dw	_Default_ISR shr (0+2)
 38155                           
 38156                           ; Vector 55 : DMA2A
 38157   000076  5A97               	dw	_Default_ISR shr (0+2)
 38158                           
 38159                           ; Vector 56 : I2C1RX
 38160   000078  5A4F               	dw	_I2C1_RX_ISR shr (0+2)
 38161                           
 38162                           ; Vector 57 : I2C1TX
 38163   00007A  5A54               	dw	_I2C1_TX_ISR shr (0+2)
 38164                           
 38165                           ; Vector 58 : I2C1
 38166   00007C  5615               	dw	_I2C1_ISR shr (0+2)
 38167                           
 38168                           ; Vector 59 : I2C1E
 38169   00007E  54C2               	dw	_I2C1_ERROR_ISR shr (0+2)
 38170                           
 38171                           ; Vector 60 : Undefined
 38172   000080  0040               	dw	ivt0x8_undefint shr (0+2)
 38173                           
 38174                           ; Vector 61 : CLC3
 38175   000082  5A97               	dw	_Default_ISR shr (0+2)
 38176                           
 38177                           ; Vector 62 : PWM3PR
 38178   000084  5A97               	dw	_Default_ISR shr (0+2)
 38179                           
 38180                           ; Vector 63 : PWM3
 38181   000086  5A97               	dw	_Default_ISR shr (0+2)
 38182                           
 38183                           ; Vector 64 : U2RX
 38184   000088  5A97               	dw	_Default_ISR shr (0+2)
 38185                           
 38186                           ; Vector 65 : U2TX
 38187   00008A  5A97               	dw	_Default_ISR shr (0+2)
 38188                           
 38189                           ; Vector 66 : U2E
 38190   00008C  5A97               	dw	_Default_ISR shr (0+2)
 38191                           
 38192                           ; Vector 67 : U2
 38193   00008E  5A97               	dw	_Default_ISR shr (0+2)
 38194                           
 38195                           ; Vector 68 : TMR5
 38196   000090  5A97               	dw	_Default_ISR shr (0+2)
 38197                           
 38198                           ; Vector 69 : TMR5G
 38199   000092  5A97               	dw	_Default_ISR shr (0+2)
 38200                           
 38201                           ; Vector 70 : CCP2
 38202   000094  5A97               	dw	_Default_ISR shr (0+2)
 38203                           
 38204                           ; Vector 71 : SCAN
 38205   000096  5A97               	dw	_Default_ISR shr (0+2)
 38206                           
 38207                           ; Vector 72 : U3RX
 38208   000098  5A97               	dw	_Default_ISR shr (0+2)
 38209                           
 38210                           ; Vector 73 : U3TX
 38211   00009A  5A97               	dw	_Default_ISR shr (0+2)
 38212                           
 38213                           ; Vector 74 : U3E
 38214   00009C  5A97               	dw	_Default_ISR shr (0+2)
 38215                           
 38216                           ; Vector 75 : U3
 38217   00009E  5A97               	dw	_Default_ISR shr (0+2)
 38218                           
 38219                           ; Vector 76 : Undefined
 38220   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
 38221                           
 38222                           ; Vector 77 : CLC4
 38223   0000A2  5A97               	dw	_Default_ISR shr (0+2)
 38224                           
 38225                           ; Vector 78 : Undefined
 38226   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
 38227                           
 38228                           ; Vector 79 : Undefined
 38229   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
 38230                           
 38231                           ; Vector 80 : INT2
 38232   0000A8  59E2               	dw	_INT2_ISR shr (0+2)
 38233                           
 38234                           ; Vector 81 : CLC5
 38235   0000AA  5A97               	dw	_Default_ISR shr (0+2)
 38236                           
 38237                           ; Vector 82 : CWG2
 38238   0000AC  5A97               	dw	_Default_ISR shr (0+2)
 38239                           
 38240                           ; Vector 83 : NCO2
 38241   0000AE  5A97               	dw	_Default_ISR shr (0+2)
 38242                           
 38243                           ; Vector 84 : DMA3SCNT
 38244   0000B0  5A97               	dw	_Default_ISR shr (0+2)
 38245                           
 38246                           ; Vector 85 : DMA3DCNT
 38247   0000B2  5A97               	dw	_Default_ISR shr (0+2)
 38248                           
 38249                           ; Vector 86 : DMA3OR
 38250   0000B4  5A97               	dw	_Default_ISR shr (0+2)
 38251                           
 38252                           ; Vector 87 : DMA3A
 38253   0000B6  5A97               	dw	_Default_ISR shr (0+2)
 38254                           
 38255                           ; Vector 88 : CCP3
 38256   0000B8  5A97               	dw	_Default_ISR shr (0+2)
 38257                           
 38258                           ; Vector 89 : CLC6
 38259   0000BA  5A97               	dw	_Default_ISR shr (0+2)
 38260                           
 38261                           ; Vector 90 : CWG3
 38262   0000BC  5A97               	dw	_Default_ISR shr (0+2)
 38263                           
 38264                           ; Vector 91 : TMR4
 38265   0000BE  5A97               	dw	_Default_ISR shr (0+2)
 38266                           
 38267                           ; Vector 92 : DMA4SCNT
 38268   0000C0  5A97               	dw	_Default_ISR shr (0+2)
 38269                           
 38270                           ; Vector 93 : DMA4DCNT
 38271   0000C2  5A97               	dw	_Default_ISR shr (0+2)
 38272                           
 38273                           ; Vector 94 : DMA4OR
 38274   0000C4  5A97               	dw	_Default_ISR shr (0+2)
 38275                           
 38276                           ; Vector 95 : DMA4A
 38277   0000C6  5A97               	dw	_Default_ISR shr (0+2)
 38278                           
 38279                           ; Vector 96 : U4RX
 38280   0000C8  5A97               	dw	_Default_ISR shr (0+2)
 38281                           
 38282                           ; Vector 97 : U4TX
 38283   0000CA  5A97               	dw	_Default_ISR shr (0+2)
 38284                           
 38285                           ; Vector 98 : U4E
 38286   0000CC  5A97               	dw	_Default_ISR shr (0+2)
 38287                           
 38288                           ; Vector 99 : U4
 38289   0000CE  5A97               	dw	_Default_ISR shr (0+2)
 38290                           
 38291                           ; Vector 100 : DMA5SCNT
 38292   0000D0  5A97               	dw	_Default_ISR shr (0+2)
 38293                           
 38294                           ; Vector 101 : DMA5DCNT
 38295   0000D2  5A97               	dw	_Default_ISR shr (0+2)
 38296                           
 38297                           ; Vector 102 : DMA5OR
 38298   0000D4  5A97               	dw	_Default_ISR shr (0+2)
 38299                           
 38300                           ; Vector 103 : DMA5A
 38301   0000D6  5A97               	dw	_Default_ISR shr (0+2)
 38302                           
 38303                           ; Vector 104 : U5RX
 38304   0000D8  5A97               	dw	_Default_ISR shr (0+2)
 38305                           
 38306                           ; Vector 105 : U5TX
 38307   0000DA  5A97               	dw	_Default_ISR shr (0+2)
 38308                           
 38309                           ; Vector 106 : U5E
 38310   0000DC  5A97               	dw	_Default_ISR shr (0+2)
 38311                           
 38312                           ; Vector 107 : U5
 38313   0000DE  5A97               	dw	_Default_ISR shr (0+2)
 38314                           
 38315                           ; Vector 108 : DMA6SCNT
 38316   0000E0  5A97               	dw	_Default_ISR shr (0+2)
 38317                           
 38318                           ; Vector 109 : DMA6DCNT
 38319   0000E2  5A97               	dw	_Default_ISR shr (0+2)
 38320                           
 38321                           ; Vector 110 : DMA6OR
 38322   0000E4  5A97               	dw	_Default_ISR shr (0+2)
 38323                           
 38324                           ; Vector 111 : DMA6A
 38325   0000E6  5A97               	dw	_Default_ISR shr (0+2)
 38326                           
 38327                           ; Vector 112 : Undefined
 38328   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
 38329                           
 38330                           ; Vector 113 : CLC7
 38331   0000EA  5A97               	dw	_Default_ISR shr (0+2)
 38332                           
 38333                           ; Vector 114 : CMP2
 38334   0000EC  5A97               	dw	_Default_ISR shr (0+2)
 38335                           
 38336                           ; Vector 115 : NCO3
 38337   0000EE  5A97               	dw	_Default_ISR shr (0+2)
 38338                           
 38339                           ; Vector 116 : Undefined
 38340   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
 38341                           
 38342                           ; Vector 117 : Undefined
 38343   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
 38344                           
 38345                           ; Vector 118 : Undefined
 38346   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
 38347                           
 38348                           ; Vector 119 : Undefined
 38349   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
 38350                           
 38351                           ; Vector 120 : NVM
 38352   0000F8  5A97               	dw	_Default_ISR shr (0+2)
 38353                           
 38354                           ; Vector 121 : CLC8
 38355   0000FA  5A97               	dw	_Default_ISR shr (0+2)
 38356                           
 38357                           ; Vector 122 : CRC
 38358   0000FC  5A97               	dw	_Default_ISR shr (0+2)
 38359                           
 38360                           ; Vector 123 : TMR6
 38361   0000FE  5A97               	dw	_Default_ISR shr (0+2)
 38362   000100                     ivt0x8_undefint:
 38363                           	callstack 0
 38364   000100  00FF               	reset	
 38365                           
 38366                           	psect	rparam
 38367   000001                     ___rparam_used  equ	1
 38368   000000                     ___param_bank   equ	0
 38369   000000                     __Lparam        equ	__Lrparam
 38370   000000                     __Hparam        equ	__Hrparam
 38371                           
 38372                           	psect	config
 38373                           
 38374                           ;Config register CONFIG1 @ 0x300000
 38375                           ;	External Oscillator Selection
 38376                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 38377                           ;	Reset Oscillator Selection
 38378                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 38379   300000                     	org	3145728
 38380   300000  8F                 	db	143
 38381                           
 38382                           ;Config register CONFIG2 @ 0x300001
 38383                           ;	Clock out Enable bit
 38384                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 38385                           ;	PRLOCKED One-Way Set Enable bit
 38386                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 38387                           ;	Clock Switch Enable bit
 38388                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 38389                           ;	Fail-Safe Clock Monitor Enable bit
 38390                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 38391   300001                     	org	3145729
 38392   300001  FF                 	db	255
 38393                           
 38394                           ;Config register CONFIG3 @ 0x300002
 38395                           ;	MCLR Enable bit
 38396                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 38397                           ;	Power-up timer selection bits
 38398                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 38399                           ;	Multi-vector enable bit
 38400                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 38401                           ;	IVTLOCK bit One-way set enable bit
 38402                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 38403                           ;	Low Power BOR Enable bit
 38404                           ;	LPBOREN = OFF, Low-Power BOR disabled
 38405                           ;	Brown-out Reset Enable bits
 38406                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 38407   300002                     	org	3145730
 38408   300002  FF                 	db	255
 38409                           
 38410                           ;Config register CONFIG4 @ 0x300003
 38411                           ;	Brown-out Reset Voltage Selection bits
 38412                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 38413                           ;	ZCD Disable bit
 38414                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 38415                           ;	PPSLOCK bit One-Way Set Enable bit
 38416                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 38417                           ;	Stack Full/Underflow Reset Enable bit
 38418                           ;	STVREN = ON, Stack full/underflow will cause Reset
 38419                           ;	Low Voltage Programming Enable bit
 38420                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 38421                           ;	Extended Instruction Set Enable bit
 38422                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 38423   300003                     	org	3145731
 38424   300003  FF                 	db	255
 38425                           
 38426                           ;Config register CONFIG5 @ 0x300004
 38427                           ;	WDT Period selection bits
 38428                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 38429                           ;	WDT operating mode
 38430                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 38431   300004                     	org	3145732
 38432   300004  9F                 	db	159
 38433                           
 38434                           ;Config register CONFIG6 @ 0x300005
 38435                           ;	WDT Window Select bits
 38436                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 38437                           ;	WDT input clock selector
 38438                           ;	WDTCCS = SC, Software Control
 38439   300005                     	org	3145733
 38440   300005  FF                 	db	255
 38441                           
 38442                           ;Config register CONFIG7 @ 0x300006
 38443                           ;	Boot Block Size selection bits
 38444                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 38445                           ;	Boot Block enable bit
 38446                           ;	BBEN = OFF, Boot block disabled
 38447                           ;	Storage Area Flash enable bit
 38448                           ;	SAFEN = OFF, SAF disabled
 38449                           ;	Background Debugger
 38450                           ;	DEBUG = 0x1, unprogrammed default
 38451   300006                     	org	3145734
 38452   300006  FF                 	db	255
 38453                           
 38454                           ;Config register CONFIG8 @ 0x300007
 38455                           ;	Boot Block Write Protection bit
 38456                           ;	WRTB = OFF, Boot Block not Write protected
 38457                           ;	Configuration Register Write Protection bit
 38458                           ;	WRTC = OFF, Configuration registers not Write protected
 38459                           ;	Data EEPROM Write Protection bit
 38460                           ;	WRTD = OFF, Data EEPROM not Write protected
 38461                           ;	SAF Write protection bit
 38462                           ;	WRTSAF = OFF, SAF not Write Protected
 38463                           ;	Application Block write protection bit
 38464                           ;	WRTAPP = OFF, Application Block not write protected
 38465   300007                     	org	3145735
 38466   300007  FF                 	db	255
 38467                           
 38468                           ;Config register CONFIG10 @ 0x300009
 38469                           ;	PFM and Data EEPROM Code Protection bit
 38470                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 38471   300009                     	org	3145737
 38472   300009  FF                 	db	255
 38473                           tosu	equ	0x4FF
 38474                           tosh	equ	0x4FE
 38475                           tosl	equ	0x4FD
 38476                           stkptr	equ	0x4FC
 38477                           pclatu	equ	0x4FB
 38478                           pclath	equ	0x4FA
 38479                           pcl	equ	0x4F9
 38480                           tblptru	equ	0x4F8
 38481                           tblptrh	equ	0x4F7
 38482                           tblptrl	equ	0x4F6
 38483                           tablat	equ	0x4F5
 38484                           prodh	equ	0x4F4
 38485                           prodl	equ	0x4F3
 38486                           indf0	equ	0x4EF
 38487                           postinc0	equ	0x4EE
 38488                           postdec0	equ	0x4ED
 38489                           preinc0	equ	0x4EC
 38490                           plusw0	equ	0x4EB
 38491                           fsr0h	equ	0x4EA
 38492                           fsr0l	equ	0x4E9
 38493                           wreg	equ	0x4E8
 38494                           indf1	equ	0x4E7
 38495                           postinc1	equ	0x4E6
 38496                           postdec1	equ	0x4E5
 38497                           preinc1	equ	0x4E4
 38498                           plusw1	equ	0x4E3
 38499                           fsr1h	equ	0x4E2
 38500                           fsr1l	equ	0x4E1
 38501                           bsr	equ	0x4E0
 38502                           indf2	equ	0x4DF
 38503                           postinc2	equ	0x4DE
 38504                           postdec2	equ	0x4DD
 38505                           preinc2	equ	0x4DC
 38506                           plusw2	equ	0x4DB
 38507                           fsr2h	equ	0x4DA
 38508                           fsr2l	equ	0x4D9
 38509                           status	equ	0x4D8

Data Sizes:
    Strings     549
    Constant    90
    Data        28
    BSS         332
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      79
    BANK5           160    158     159
    BANK6           256    121     249
    BANK7           256      0     212
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    DetectAdvancedGestures@data	PTR struct . size(2) Largest target is 28
		 -> mpu_data(BANK7[28]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fixedDisease	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[23]), 

    fixedPatientName	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    fixedPhone	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_3(CODE[22]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    I2C1_Callback	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    I2C1_Host$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    I2C1_Host$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> I2C1_Deinitialize(), 

    I2C1_Host$ErrorGet	PTR FTN()enum E17286 size(3) Largest target is 1
		 -> I2C1_ErrorGet(), 

    I2C1_Host$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> I2C1_Initialize(), 

    I2C1_Host$IsBusy	PTR FTN()_Bool  size(3) Largest target is 1
		 -> I2C1_IsBusy(), 

    I2C1_Host$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_Read(), 

    I2C1_Host$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    I2C1_Host$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(3) Largest target is 1
		 -> NULL(), 

    I2C1_Host$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_Write(), 

    I2C1_Host$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_WriteRead(), 

    I2C1_Write@data	PTR unsigned char  size(2) Largest target is 2
		 -> MPU6050_WriteRegister@tx_buffer(COMRAM[2]), PCF_Wr@tmp(COMRAM[1]), 

    I2C1_WriteRead@readData	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadRegister@data_read(COMRAM[1]), MPU6050_ReadSensorRaw@rawData(BANK5[14]), 

    I2C1_WriteRead@writeData	PTR unsigned char  size(2) Largest target is 1
		 -> MPU6050_ReadRegister@reg_addr(COMRAM[1]), MPU6050_ReadSensorRaw@reg_addr(BANK5[1]), 

    i2c1Status$readPtr	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadRegister@data_read(COMRAM[1]), MPU6050_ReadSensorRaw@rawData(BANK5[14]), NULL(NULL[0]), 

    i2c1Status$writePtr	PTR unsigned char  size(2) Largest target is 2
		 -> MPU6050_ReadRegister@reg_addr(COMRAM[1]), MPU6050_ReadSensorRaw@reg_addr(BANK5[1]), MPU6050_WriteRegister@tx_buffer(COMRAM[2]), PCF_Wr@tmp(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_lcd_puts@str	PTR unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), STR_1(CODE[19]), STR_2(CODE[23]), STR_23(CODE[16]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    MPU6050_GetMovement@data	PTR struct . size(2) Largest target is 28
		 -> mpu_data(BANK7[28]), 

    MPU6050_ReadSensorData@data	PTR struct . size(2) Largest target is 28
		 -> mpu_data(BANK7[28]), 

    MPU6050_ReadSensorRaw@accelX	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@ax(BANK5[2]), MPU6050_ReadSensorData@ax_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@accelY	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@ay(BANK5[2]), MPU6050_ReadSensorData@ay_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@accelZ	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@az(BANK5[2]), MPU6050_ReadSensorData@az_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@gyroX	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@gx(BANK5[2]), MPU6050_ReadSensorData@gx_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@gyroY	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@gy(BANK5[2]), MPU6050_ReadSensorData@gy_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@gyroZ	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@gz(BANK5[2]), MPU6050_ReadSensorData@gz_raw(BANK5[2]), 

    MPU6050_ReadSensorRaw@temp	PTR short  size(2) Largest target is 2
		 -> MPU6050_Calibrate@temp(BANK5[2]), MPU6050_ReadSensorData@temp_raw(BANK5[2]), 

    NULL$0	PTR struct i2c_transfer_setup size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK6[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK6[2]), 

    S130$readPtr	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadRegister@data_read(COMRAM[1]), MPU6050_ReadSensorRaw@rawData(BANK5[14]), NULL(NULL[0]), 

    S130$writePtr	PTR unsigned char  size(2) Largest target is 2
		 -> MPU6050_ReadRegister@reg_addr(COMRAM[1]), MPU6050_ReadSensorRaw@reg_addr(BANK5[1]), MPU6050_WriteRegister@tx_buffer(COMRAM[2]), PCF_Wr@tmp(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    S3687$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), 

    S3687$source	PTR const unsigned char  size(2) Largest target is 0

    S42$2$1	PTR unsigned char  size(2) Largest target is 2
		 -> MPU6050_WriteRegister@tx_buffer(COMRAM[2]), PCF_Wr@tmp(COMRAM[1]), 

    S42$3$1	PTR unsigned char  size(2) Largest target is 0

    S42$4$1	PTR unsigned char  size(2) Largest target is 1
		 -> MPU6050_ReadRegister@reg_addr(COMRAM[1]), MPU6050_ReadSensorRaw@reg_addr(BANK5[1]), 

    S42$4$3	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadRegister@data_read(COMRAM[1]), MPU6050_ReadSensorRaw@rawData(BANK5[14]), 

    S42$8$0	PTR FTN()void  size(3) Largest target is 0

    S42$CallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> I2C1_CallbackRegister(), 

    S42$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> I2C1_Deinitialize(), 

    S42$ErrorGet	PTR FTN()enum E17286 size(3) Largest target is 1
		 -> I2C1_ErrorGet(), 

    S42$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> I2C1_Initialize(), 

    S42$IsBusy	PTR FTN()_Bool  size(3) Largest target is 1
		 -> I2C1_IsBusy(), 

    S42$Read	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_Read(), 

    S42$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S42$TransferSetup	PTR FTN(PTR struct i2c_transfer_setup,unsigned long ,)_Bool  size(3) Largest target is 1
		 -> NULL(), 

    S42$Write	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_Write(), 

    S42$WriteRead	PTR FTN(unsigned short ,PTR unsigned char ,unsigned int ,PTR unsigned char ,unsigned int ,)_Bool  size(3) Largest target is 1
		 -> I2C1_WriteRead(), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK6[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[49]), STR_24(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK7[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), STR_28(CODE[4]), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultCallback(), NULL(), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    TMR4_PeriodMatchCallback	PTR FTN()void  size(3) Largest target is 1
		 -> TMR4_DefaultPeriodMatchCallback(), NULL(), 

    UART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), NULL(), 

    UART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), NULL(), 

    UART1_ParityErrorCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    UART1_ParityErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), NULL(), 

    UART1_RxCompleteCallbackRegister@callbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_RxDataHandler(), 

    UART1_RxCompleteInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_RxDataHandler(), NULL(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_ReceiveISR(), NULL(), 

    UART1_sendString@str	PTR const unsigned char  size(2) Largest target is 64
		 -> main@alert_str(BANK6[64]), STR_10(CODE[20]), STR_11(CODE[22]), STR_12(CODE[20]), 
		 -> STR_13(CODE[24]), STR_14(CODE[4]), STR_15(CODE[16]), STR_16(CODE[13]), 
		 -> STR_17(CODE[17]), STR_18(CODE[15]), STR_19(CODE[20]), STR_20(CODE[21]), 
		 -> STR_21(CODE[22]), STR_4(CODE[39]), STR_5(CODE[35]), STR_6(CODE[33]), 
		 -> STR_7(CODE[32]), STR_8(CODE[21]), STR_9(CODE[18]), 

    UART1_TxCompleteInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_TransmitISR(), NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK6[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[49]), STR_24(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK6[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK6[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[49]), STR_24(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[49]), STR_24(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK6[11]), 


Critical Paths under _main in COMRAM

    _main->_HC_SR04_Read_Distance_CM
    _efgtoa->___fladd
    _pad->_fputs
    _fputs->_fputc
    _i2c_lcd_puts->_i2c_lcd_write
    _i2c_lcd_write->__lcd_send
    _i2c_lcd_init->_i2c_lcd_clear
    _i2c_lcd_clear->_i2c_lcd_command
    _i2c_lcd_goto->_i2c_lcd_command
    _i2c_lcd_command->__lcd_send
    __lcd_send->__write_nibble
    __write_nibble->_PCF_Wr
    _PCF_Wr->_I2C1_Write
    _UART1_sendString->_UART1_Write
    _SYSTEM_Initialize->_INTERRUPT_Initialize
    _UART1_Initialize->_UART1_FramingErrorCallbackRegister
    _UART1_Initialize->_UART1_OverrunErrorCallbackRegister
    _UART1_Initialize->_UART1_ParityErrorCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _Robot_Stop->_Motors_SynchronizedStop
    _Motors_SynchronizedDirection->_Motors_SynchronizedStart
    _Motors_SynchronizedStop->_Motor_SetSpeed
    _Motors_SynchronizedStart->_Motor_SetSpeed
    _Motors_StopAll->_Motor_Stop
    _Motor_Stop->_Motor_SetSpeed
    _Motor_SetSpeed->_ConvertPercentToPWM
    _ConvertPercentToPWM->___lldiv
    _MPU6050_ReadSensorData->___fladd
    _MPU6050_Init->_MPU6050_ReadRegister
    _MPU6050_WriteRegister->_I2C1_Write
    _I2C1_Write->_I2C1_IsBusy
    _MPU6050_ReadRegister->_I2C1_WriteRead
    _MPU6050_GetMovement->___fladd
    _sqrtf->___fladd
    _atan2f->___fladd
    _atanf->___fladd
    _DetectAdvancedGestures->___fladd
    ___flge->___fladd
    ___flsub->___fladd
    ___fladd->___flmul
    _MPU6050_ReadSensorRaw->_I2C1_WriteRead
    _I2C1_WriteRead->_I2C1_IsBusy
    _I2C1_WriteStart->_I2C1_AddrTransmit
    _I2C1_WriteStart->_I2C1_CounterSet
    ___fldiv->___fladd
    _HC_SR04_Measure_Echo_Time->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _HC_SR04_Get_Filtered_Value->___lldiv
    ___lldiv->___lmul
    _HC_SR04_Add_To_Filter->___awmod

Critical Paths under _I2C1_ISR in COMRAM

    _I2C1_StopSend->i2_I2C1_CounterSet
    _I2C1_ReadStart->i2_I2C1_AddrTransmit

Critical Paths under _I2C1_ERROR_ISR in COMRAM

    _I2C1_StopSend->i2_I2C1_CounterSet

Critical Paths under _I2C1_RX_ISR in COMRAM

    None.

Critical Paths under _I2C1_TX_ISR in COMRAM

    _I2C1_TX_ISR->_I2C1_DataTransmit

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _UART1_Receive_Vector_ISR in COMRAM

    _UART1_Receive_Vector_ISR->_UART1_ReceiveISR
    _UART1_RxDataHandler->_UART1_Read

Critical Paths under _UART1_Transmit_Vector_ISR in COMRAM

    _UART1_Transmit_Vector_ISR->_UART1_TransmitISR

Critical Paths under _main in BANK5

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _Robot_TurnRight->_Motors_SynchronizedDirection
    _Robot_TurnLeft->_Motors_SynchronizedDirection
    _Robot_MoveForward->_Motors_SynchronizedDirection
    _Robot_MoveBackward->_Motors_SynchronizedDirection
    _Motors_SynchronizedDirection->_Motors_SynchronizedStart
    _MPU6050_ReadSensorData->___fldiv
    _MPU6050_GetMovement->_atan2f
    _sqrtf->___fladd
    _atan2f->_atanf
    _atanf->_fabsf
    _DetectAdvancedGestures->_fabsf
    _fabsf->___fldiv
    ___flge->___fladd
    _MPU6050_Calibrate->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    _HC_SR04_Read_Distance_CM->___fldiv
    ___fldiv->_sqrtf
    _HC_SR04_Measure_Echo_Time->___fltol
    ___fltol->___flmul

Critical Paths under _I2C1_ISR in BANK5

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK5

    None.

Critical Paths under _I2C1_RX_ISR in BANK5

    None.

Critical Paths under _I2C1_TX_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK5

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_MPU6050_GetMovement
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _MPU6050_GetMovement->_atan2f

Critical Paths under _I2C1_ISR in BANK6

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK6

    None.

Critical Paths under _I2C1_RX_ISR in BANK6

    None.

Critical Paths under _I2C1_TX_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK6

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _I2C1_ISR in BANK7

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK7

    None.

Critical Paths under _I2C1_RX_ISR in BANK7

    None.

Critical Paths under _I2C1_TX_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK7

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _I2C1_ISR in BANK8

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK8

    None.

Critical Paths under _I2C1_RX_ISR in BANK8

    None.

Critical Paths under _I2C1_TX_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK8

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _I2C1_ISR in BANK9

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK9

    None.

Critical Paths under _I2C1_RX_ISR in BANK9

    None.

Critical Paths under _I2C1_TX_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK9

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _I2C1_ISR in BANK10

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK10

    None.

Critical Paths under _I2C1_RX_ISR in BANK10

    None.

Critical Paths under _I2C1_TX_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK10

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _I2C1_ISR in BANK11

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK11

    None.

Critical Paths under _I2C1_RX_ISR in BANK11

    None.

Critical Paths under _I2C1_TX_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK11

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _I2C1_ISR in BANK12

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK12

    None.

Critical Paths under _I2C1_RX_ISR in BANK12

    None.

Critical Paths under _I2C1_TX_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK12

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _I2C1_ISR in BANK13

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK13

    None.

Critical Paths under _I2C1_RX_ISR in BANK13

    None.

Critical Paths under _I2C1_TX_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK13

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _I2C1_ISR in BANK14

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK14

    None.

Critical Paths under _I2C1_RX_ISR in BANK14

    None.

Critical Paths under _I2C1_TX_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK14

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _I2C1_ISR in BANK15

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK15

    None.

Critical Paths under _I2C1_RX_ISR in BANK15

    None.

Critical Paths under _I2C1_TX_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK15

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _I2C1_ISR in BANK16

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK16

    None.

Critical Paths under _I2C1_RX_ISR in BANK16

    None.

Critical Paths under _I2C1_TX_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK16

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _I2C1_ISR in BANK17

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK17

    None.

Critical Paths under _I2C1_RX_ISR in BANK17

    None.

Critical Paths under _I2C1_TX_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK17

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _I2C1_ISR in BANK18

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK18

    None.

Critical Paths under _I2C1_RX_ISR in BANK18

    None.

Critical Paths under _I2C1_TX_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK18

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _I2C1_ISR in BANK19

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK19

    None.

Critical Paths under _I2C1_RX_ISR in BANK19

    None.

Critical Paths under _I2C1_TX_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK19

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _I2C1_ISR in BANK20

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK20

    None.

Critical Paths under _I2C1_RX_ISR in BANK20

    None.

Critical Paths under _I2C1_TX_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK20

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _I2C1_ISR in BANK21

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK21

    None.

Critical Paths under _I2C1_RX_ISR in BANK21

    None.

Critical Paths under _I2C1_TX_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK21

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _I2C1_ISR in BANK22

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK22

    None.

Critical Paths under _I2C1_RX_ISR in BANK22

    None.

Critical Paths under _I2C1_TX_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK22

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _I2C1_ISR in BANK23

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK23

    None.

Critical Paths under _I2C1_RX_ISR in BANK23

    None.

Critical Paths under _I2C1_TX_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK23

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _I2C1_ISR in BANK24

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK24

    None.

Critical Paths under _I2C1_RX_ISR in BANK24

    None.

Critical Paths under _I2C1_TX_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK24

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _I2C1_ISR in BANK25

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK25

    None.

Critical Paths under _I2C1_RX_ISR in BANK25

    None.

Critical Paths under _I2C1_TX_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK25

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _I2C1_ISR in BANK26

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK26

    None.

Critical Paths under _I2C1_RX_ISR in BANK26

    None.

Critical Paths under _I2C1_TX_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK26

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _I2C1_ISR in BANK27

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK27

    None.

Critical Paths under _I2C1_RX_ISR in BANK27

    None.

Critical Paths under _I2C1_TX_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK27

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _I2C1_ISR in BANK28

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK28

    None.

Critical Paths under _I2C1_RX_ISR in BANK28

    None.

Critical Paths under _I2C1_TX_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK28

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _I2C1_ISR in BANK29

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK29

    None.

Critical Paths under _I2C1_RX_ISR in BANK29

    None.

Critical Paths under _I2C1_TX_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK29

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _I2C1_ISR in BANK30

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK30

    None.

Critical Paths under _I2C1_RX_ISR in BANK30

    None.

Critical Paths under _I2C1_TX_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK30

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _I2C1_ISR in BANK31

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK31

    None.

Critical Paths under _I2C1_RX_ISR in BANK31

    None.

Critical Paths under _I2C1_TX_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK31

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _I2C1_ISR in BANK32

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK32

    None.

Critical Paths under _I2C1_RX_ISR in BANK32

    None.

Critical Paths under _I2C1_TX_ISR in BANK32

    None.

Critical Paths under _Default_ISR in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK32

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _I2C1_ISR in BANK33

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK33

    None.

Critical Paths under _I2C1_RX_ISR in BANK33

    None.

Critical Paths under _I2C1_TX_ISR in BANK33

    None.

Critical Paths under _Default_ISR in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK33

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _I2C1_ISR in BANK34

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK34

    None.

Critical Paths under _I2C1_RX_ISR in BANK34

    None.

Critical Paths under _I2C1_TX_ISR in BANK34

    None.

Critical Paths under _Default_ISR in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK34

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _I2C1_ISR in BANK35

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK35

    None.

Critical Paths under _I2C1_RX_ISR in BANK35

    None.

Critical Paths under _I2C1_TX_ISR in BANK35

    None.

Critical Paths under _Default_ISR in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK35

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _I2C1_ISR in BANK36

    None.

Critical Paths under _I2C1_ERROR_ISR in BANK36

    None.

Critical Paths under _I2C1_RX_ISR in BANK36

    None.

Critical Paths under _I2C1_TX_ISR in BANK36

    None.

Critical Paths under _Default_ISR in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Critical Paths under _UART1_Receive_Vector_ISR in BANK36

    None.

Critical Paths under _UART1_Transmit_Vector_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0   95470
                                             50 BANK6     71    71      0
            _HC_SR04_Get_Last_Status
                       _HC_SR04_Init
           _HC_SR04_Read_Distance_CM
                  _MPU6050_Calibrate
                _MPU6050_GetMovement
                       _MPU6050_Init
             _MPU6050_ReadSensorData
                  _Motors_Initialize
                 _Robot_MoveBackward
                  _Robot_MoveForward
                         _Robot_Stop
                     _Robot_TurnLeft
                    _Robot_TurnRight
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                         _TMR0_Start
   _UART1_RxCompleteCallbackRegister
                        _UART1_Write
                   _UART1_sendString
                             ___flge
                           ___xxtofl
                      _i2c_lcd_clear
                       _i2c_lcd_goto
                       _i2c_lcd_init
                       _i2c_lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   16980
                                             21 BANK6     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   16650
                                             13 BANK6      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    10      6   16423
                                            156 BANK5      2     2      0
                                              0 BANK6     13     7      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     182
                                             16 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   15266
                                            103 BANK5     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4      77
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6     707
                                             32 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     331
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     232
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             83 BANK5     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_puts                                         2     0      2     842
                                             31 COMRAM     2     0      2
                      _i2c_lcd_write
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_write                                        1     1      0     787
                                             30 COMRAM     1     1      0
                          __lcd_send
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         2     2      0    1970
                                             33 COMRAM     2     2      0
                             _PCF_Wr
                      _i2c_lcd_clear
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_clear                                        1     1      0     845
                                             32 COMRAM     1     1      0
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_goto                                         6     5      1     981
                                             32 COMRAM     6     5      1
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_command                                      2     2      0     845
                                             30 COMRAM     2     2      0
                          __lcd_send
 ---------------------------------------------------------------------------------
 (3) __lcd_send                                            2     1      1     758
                                             28 COMRAM     2     1      1
                             _PCF_Wr
                      __write_nibble
 ---------------------------------------------------------------------------------
 (4) __write_nibble                                        1     1      0     396
                                             27 COMRAM     1     1      0
                             _PCF_Wr
 ---------------------------------------------------------------------------------
 (5) _PCF_Wr                                               3     3      0     280
                                             24 COMRAM     3     3      0
                        _I2C1_IsBusy
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (1) _UART1_sendString                                     2     0      2     145
                                             18 COMRAM     2     0      2
                    _UART1_IsTxReady
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (2) _UART1_Write                                          2     2      0      81
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART1_IsTxReady                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_RxCompleteCallbackRegister                     3     0      3      45
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     227
                    _CCP1_Initialize
                    _CCP2_Initialize
                   _CLOCK_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     135
 _UART1_FramingErrorCallbackRegister
 _UART1_OverrunErrorCallbackRegister
  _UART1_ParityErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _UART1_ParityErrorCallbackRegister                    3     0      3      45
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_OverrunErrorCallbackRegister                   3     0      3      45
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_FramingErrorCallbackRegister                   3     0      3      45
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      2     2      0       0
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      92
                                             19 COMRAM     1     1      0
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      23
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
              _I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (3) _I2C1_InterruptsEnable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Robot_TurnRight                                      2     0      2    3652
                                             17 BANK5      2     0      2
       _Motors_SynchronizedDirection
 ---------------------------------------------------------------------------------
 (1) _Robot_TurnLeft                                       2     0      2    3652
                                             17 BANK5      2     0      2
       _Motors_SynchronizedDirection
 ---------------------------------------------------------------------------------
 (1) _Robot_Stop                                           0     0      0    1212
            _Motors_SynchronizedStop
 ---------------------------------------------------------------------------------
 (1) _Robot_MoveForward                                    2     0      2    3652
                                             17 BANK5      2     0      2
       _Motors_SynchronizedDirection
 ---------------------------------------------------------------------------------
 (1) _Robot_MoveBackward                                   2     0      2    3652
                                             17 BANK5      2     0      2
       _Motors_SynchronizedDirection
 ---------------------------------------------------------------------------------
 (2) _Motors_SynchronizedDirection                         8     5      3    3615
                                              9 BANK5      8     5      3
           _Motors_SynchronizedStart
            _Motors_SynchronizedStop
 ---------------------------------------------------------------------------------
 (3) _Motors_SynchronizedStop                              1     1      0    1212
                                             47 COMRAM     1     1      0
                 _Motor_SetDirection
                     _Motor_SetSpeed
 ---------------------------------------------------------------------------------
 (3) _Motors_SynchronizedStart                            12     9      3    2109
                                             47 COMRAM     3     0      3
                                              0 BANK5      9     9      0
                 _Motor_SetDirection
                     _Motor_SetSpeed
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     166
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Motors_Initialize                                    0     0      0    1306
                     _Motors_StopAll
 ---------------------------------------------------------------------------------
 (2) _Motors_StopAll                                       0     0      0    1306
                         _Motor_Stop
 ---------------------------------------------------------------------------------
 (3) _Motor_Stop                                           1     1      0    1306
                                             47 COMRAM     1     1      0
                 _Motor_SetDirection
                     _Motor_SetSpeed
 ---------------------------------------------------------------------------------
 (4) _Motor_SetSpeed                                       3     1      2    1050
                                             44 COMRAM     3     1      2
                 _CCP1_LoadDutyValue
                 _CCP2_LoadDutyValue
                _ConvertPercentToPWM
 ---------------------------------------------------------------------------------
 (5) _ConvertPercentToPWM                                  3     1      2     447
                                             41 COMRAM     3     1      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      94
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _CCP2_LoadDutyValue                                   4     2      2     114
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _CCP1_LoadDutyValue                                   4     2      2     114
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Motor_SetDirection                                   4     3      1     162
                                             16 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _MPU6050_ReadSensorData                              16    14      2    9433
                                             83 BANK5     16    14      2
              _MPU6050_ReadSensorRaw
                            ___fladd
                            ___fldiv
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         2     2      0     709
                                             32 COMRAM     2     2      0
               _MPU6050_ReadRegister
              _MPU6050_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _MPU6050_WriteRegister                                5     4      1     336
                                             24 COMRAM     5     4      1
                        _I2C1_IsBusy
                         _I2C1_Write
 ---------------------------------------------------------------------------------
 (6) _I2C1_Write                                           7     1      6     178
                                             17 COMRAM     7     1      6
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadRegister                                 4     4      0     373
                                             28 COMRAM     4     4      0
                        _I2C1_IsBusy
                     _I2C1_WriteRead
 ---------------------------------------------------------------------------------
 (1) _MPU6050_GetMovement                                 27    25      2   32521
                                            153 BANK5      2     0      2
                                             25 BANK6     25    25      0
             _DetectAdvancedGestures
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                             _atan2f
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4     730
                                             21 BANK5     37    33      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              41    33      8   20678
                                            137 BANK5     16     8      8
                                              0 BANK6     25    25      0
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (3) _atanf                                               46    42      4   11786
                                             91 BANK5     46    42      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     140
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      50
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _DetectAdvancedGestures                              18    16      2    3685
                                             91 BANK5     18    16      2
                            ___fladd
                             ___flge
                              _fabsf
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4      62
                                             83 BANK5      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     218
                                             21 BANK5     12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Calibrate                                   44    44      0    6299
                                             83 BANK5     44    44      0
              _MPU6050_ReadSensorRaw
                            ___fldiv
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3229
                                             21 BANK5      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3080
                                             42 COMRAM     8     8      0
                                             13 BANK5      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadSensorRaw                               32    18     14     810
                                             28 COMRAM    16     2     14
                                              0 BANK5     16    16      0
                        _I2C1_IsBusy
                     _I2C1_WriteRead
 ---------------------------------------------------------------------------------
 (3) _I2C1_WriteRead                                      11     1     10     226
                                             17 COMRAM    11     1     10
                        _I2C1_IsBusy
                    _I2C1_WriteStart
 ---------------------------------------------------------------------------------
 (7) _I2C1_WriteStart                                      0     0      0      58
                  _I2C1_AddrTransmit
                    _I2C1_CounterSet
                 _I2C1_RestartEnable
                     _I2C1_StartSend
 ---------------------------------------------------------------------------------
 (8) _I2C1_StartSend                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_RestartEnable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_CounterSet                                      1     1      0      29
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_AddrTransmit                                    1     1      0      29
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_IsBusy                                          1     1      0      24
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _HC_SR04_Read_Distance_CM                             9     7      2    6195
                                             50 COMRAM     1     1      0
                                             83 BANK5      8     6      2
              _HC_SR04_Add_To_Filter
         _HC_SR04_Get_Filtered_Value
          _HC_SR04_Measure_Echo_Time
              _HC_SR04_Trigger_Pulse
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1173
                                             58 BANK5     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (2) _HC_SR04_Trigger_Pulse                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HC_SR04_Measure_Echo_Time                           22    18      4    3432
                                             17 BANK5     22    18      4
                    _TMR0_CounterGet
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     352
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     355
                                             42 COMRAM     6     6      0
                                             13 BANK5      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2325
                                             30 COMRAM    12     4      8
                                              0 BANK5     13    13      0
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR0_CounterGet                                      8     6      2      69
                                             16 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _HC_SR04_Get_Filtered_Value                          12    10      2     491
                                             41 COMRAM     4     2      2
                                              0 BANK5      8     8      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     253
                                             28 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _HC_SR04_Add_To_Filter                                2     0      2     321
                                             22 COMRAM     2     0      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _HC_SR04_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HC_SR04_Get_Last_Status                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            0     0      0     116
                         _I2C1_Close
                     _I2C1_ReadStart
                _I2C1_RestartDisable
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0      58
                    _I2C1_CounterGet
                  _I2C1_DataTransmit
                _I2C1_RestartDisable
                  i2_I2C1_CounterSet
 ---------------------------------------------------------------------------------
 (12) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataTransmit                                   1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_CounterGet                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_ReadStart                                      0     0      0      58
                i2_I2C1_AddrTransmit
                  i2_I2C1_CounterSet
                   i2_I2C1_StartSend
 ---------------------------------------------------------------------------------
 (12) i2_I2C1_StartSend                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_I2C1_CounterSet                                   1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_I2C1_AddrTransmit                                 1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Close                                          0     0      0       0
                   _I2C1_BufferClear
               _I2C1_ErrorFlagsClear
               _I2C1_InterruptsClear
 ---------------------------------------------------------------------------------
 (12) _I2C1_InterruptsClear                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorFlagsClear                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BufferClear                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C1_ERROR_ISR                                      0     0      0      58
                      _I2C1_BusReset
                        _I2C1_IsAddr
                      _I2C1_IsBusCol
                  _I2C1_IsBusTimeOut
                        _I2C1_IsData
                        _I2C1_IsNack
                      _I2C1_StopSend
 ---------------------------------------------------------------------------------
 (11) _I2C1_StopSend                                       0     0      0      58
                    _I2C1_CounterGet
                  _I2C1_DataTransmit
                _I2C1_RestartDisable
                  i2_I2C1_CounterSet
 ---------------------------------------------------------------------------------
 (12) i2_I2C1_CounterSet                                   1     1      0      29
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_RestartDisable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataTransmit                                   1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_CounterGet                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsNack                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsBusTimeOut                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsBusCol                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_IsAddr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_BusReset                                       0     0      0       0
                   _I2C1_BufferClear
               _I2C1_ErrorFlagsClear
               _I2C1_InterruptsClear
             _I2C1_InterruptsDisable
            i2_I2C1_InterruptsEnable
 ---------------------------------------------------------------------------------
 (12) i2_I2C1_InterruptsEnable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_InterruptsDisable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_InterruptsClear                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ErrorFlagsClear                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BufferClear                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C1_RX_ISR                                         0     0      0       0
                   _I2C1_DataReceive
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataReceive                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C1_TX_ISR                                         0     0      0      29
                  _I2C1_DataTransmit
 ---------------------------------------------------------------------------------
 (11) _I2C1_DataTransmit                                   1     1      0      29
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            2     2      0       0
                                              3 COMRAM     2     2      0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            2     2      0       0
                                              5 COMRAM     2     2      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                                NULL *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT2_ISR                                            2     2      0       0
                                              7 COMRAM     2     2      0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT2_CallBack                                       0     0      0       0
                                NULL *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_Receive_Vector_ISR                            2     2      0     115
                                             13 COMRAM     2     2      0
                   _UART1_ReceiveISR
 ---------------------------------------------------------------------------------
 (11) _UART1_ReceiveISR                                    2     2      0     115
                                             11 COMRAM     2     2      0
                                NULL *
  _UART1_DefaultFramingErrorCallback *
  _UART1_DefaultOverrunErrorCallback *
   _UART1_DefaultParityErrorCallback *
                _UART1_RxDataHandler *
 ---------------------------------------------------------------------------------
 (12) _UART1_RxDataHandler                                 0     0      0      47
                    _UART1_IsRxReady
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (13) _UART1_Read                                          2     2      0      47
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (13) _UART1_IsRxReady                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultParityErrorCallback                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultOverrunErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UART1_DefaultFramingErrorCallback                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_Transmit_Vector_ISR                           0     0      0      23
                  _UART1_TransmitISR
 ---------------------------------------------------------------------------------
 (11) _UART1_TransmitISR                                   1     1      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HC_SR04_Get_Last_Status
   _HC_SR04_Init
   _HC_SR04_Read_Distance_CM
     _HC_SR04_Add_To_Filter
       ___awmod
     _HC_SR04_Get_Filtered_Value
       ___lldiv
         ___lmul (ARG)
     _HC_SR04_Measure_Echo_Time
       _TMR0_CounterGet
       ___flmul
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _HC_SR04_Trigger_Pulse
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _sqrtf (ARG)
         ___fladd (ARG)
         ___flmul (ARG)
     ___fltol
     ___xxtofl
   _MPU6050_Calibrate
     _MPU6050_ReadSensorRaw
       _I2C1_IsBusy
       _I2C1_WriteRead
         _I2C1_IsBusy
         _I2C1_WriteStart
           _I2C1_AddrTransmit
           _I2C1_CounterSet
           _I2C1_RestartEnable
           _I2C1_StartSend
     ___fldiv
     ___flsub
     ___xxtofl
   _MPU6050_GetMovement
     _DetectAdvancedGestures
       ___fladd
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
       _fabsf
         ___fldiv (ARG)
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flneg
     _atan2f
       ___fladd
       ___fldiv
       ___flneg
       ___flsub
       ___fpclassifyf
       _atanf
         ___fladd
         ___fldiv
         ___flmul
         ___flneg
         ___flsub
         ___fpclassifyf
         _fabsf
       _fabsf
       _sqrtf (ARG)
     _sqrtf
   _MPU6050_Init
     _MPU6050_ReadRegister
       _I2C1_IsBusy
       _I2C1_WriteRead
     _MPU6050_WriteRegister
       _I2C1_IsBusy
       _I2C1_Write
         _I2C1_IsBusy
         _I2C1_WriteStart
   _MPU6050_ReadSensorData
     _MPU6050_ReadSensorRaw
     ___fladd
     ___fldiv
     ___flsub
     ___xxtofl
   _Motors_Initialize
     _Motors_StopAll
       _Motor_Stop
         _Motor_SetDirection
         _Motor_SetSpeed
           _CCP1_LoadDutyValue
           _CCP2_LoadDutyValue
           _ConvertPercentToPWM
             ___lldiv
             ___lmul
   _Robot_MoveBackward
     _Motors_SynchronizedDirection
       _Motors_SynchronizedStart
         _Motor_SetDirection
         _Motor_SetSpeed
         ___lwdiv
       _Motors_SynchronizedStop
         _Motor_SetDirection
         _Motor_SetSpeed
   _Robot_MoveForward
     _Motors_SynchronizedDirection
   _Robot_Stop
     _Motors_SynchronizedStop
   _Robot_TurnLeft
     _Motors_SynchronizedDirection
   _Robot_TurnRight
     _Motors_SynchronizedDirection
   _SYSTEM_Initialize
     _CCP1_Initialize
     _CCP2_Initialize
     _CLOCK_Initialize
     _I2C1_Initialize
       _I2C1_InterruptsEnable
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
     _UART1_Initialize
       _UART1_FramingErrorCallbackRegister
       _UART1_OverrunErrorCallbackRegister
       _UART1_ParityErrorCallbackRegister
   _TMR0_Initialize
   _TMR0_Start
   _UART1_RxCompleteCallbackRegister
   _UART1_Write
   _UART1_sendString
     _UART1_IsTxReady
     _UART1_Write
   ___flge
   ___xxtofl
   _i2c_lcd_clear
     _i2c_lcd_command
       __lcd_send
         _PCF_Wr
           _I2C1_IsBusy
           _I2C1_Write
         __write_nibble
           _PCF_Wr
   _i2c_lcd_goto
     _i2c_lcd_command
   _i2c_lcd_init
     _PCF_Wr
     _i2c_lcd_clear
     _i2c_lcd_command
   _i2c_lcd_puts
     _i2c_lcd_write
       __lcd_send
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _I2C1_ISR (ROOT)
   _I2C1_Close
     _I2C1_BufferClear
     _I2C1_ErrorFlagsClear
     _I2C1_InterruptsClear
   _I2C1_ReadStart
     i2_I2C1_AddrTransmit
     i2_I2C1_CounterSet
     i2_I2C1_StartSend
   _I2C1_RestartDisable
   _I2C1_StopSend
     _I2C1_CounterGet
     _I2C1_DataTransmit
     _I2C1_RestartDisable
     i2_I2C1_CounterSet

 _I2C1_ERROR_ISR (ROOT)
   _I2C1_BusReset
     _I2C1_BufferClear
     _I2C1_ErrorFlagsClear
     _I2C1_InterruptsClear
     _I2C1_InterruptsDisable
     i2_I2C1_InterruptsEnable
   _I2C1_IsAddr
   _I2C1_IsBusCol
   _I2C1_IsBusTimeOut
   _I2C1_IsData
   _I2C1_IsNack
   _I2C1_StopSend
     _I2C1_CounterGet
     _I2C1_DataTransmit
     _I2C1_RestartDisable
     i2_I2C1_CounterSet

 _I2C1_RX_ISR (ROOT)
   _I2C1_DataReceive

 _I2C1_TX_ISR (ROOT)
   _I2C1_DataTransmit

 _Default_ISR (ROOT)

 _INT0_ISR (ROOT)
   _INT0_CallBack
     NULL(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     NULL(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     NULL(Fake) *
     _INT2_DefaultInterruptHandler *

 _UART1_Receive_Vector_ISR (ROOT)
   _UART1_ReceiveISR
     NULL(Fake) *
     _UART1_DefaultFramingErrorCallback *
     _UART1_DefaultOverrunErrorCallback *
     _UART1_DefaultParityErrorCallback *
     _UART1_RxDataHandler *
       _UART1_IsRxReady
       _UART1_Read

 _UART1_Transmit_Vector_ISR (ROOT)
   _UART1_TransmitISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh         472      0       0      0.0%
BITBIGSFRllllh     471      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0     212     82.8%
BITBANK6           256      0       0      0.0%
BANK6              256    121     249     97.3%
BITBIGSFRllllll    172      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160    158     159     99.4%
BITBIGSFRlh        138      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     51      79     83.2%
BITBIGSFRllh        12      0       0      0.0%
BITBIGSFRlllllh      5      0       0      0.0%
BITBIGSFRlllh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     716      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Jul 19 10:22:18 2025

                  _TMR4_DefaultPeriodMatchCallback 0000                  _Motors_SynchronizedDirection$3158 056F  
                               ?i2_I2C1_CounterSet 0501                                       ___fldiv@aexp 05B2  
                                     ___fldiv@bexp 05B1                                     I2C1_Write@data 0514  
                         I2C1_WriteRead@readLength 051A                                       ___fldiv@sign 05AA  
                                  ??_I2C1_IsBusCol 0502                                                 _pi FDD5  
                    Robot_TurnRight@speed_pwm_duty 0571                                    ??_I2C1_BusReset 0502  
                      UART1_TransmitISR@tempTxTail 0510                            __end_of_CCP1_Initialize 680E  
                           ??_MPU6050_ReadRegister 051D                                ??i2_I2C1_CounterSet 0502  
                                              l140 659A                                                l132 5FAC  
                                              l124 5FFE                                                l117 5E52  
                                              l311 6926                                                l208 69E6  
                                              l217 6A2C                                                l242 6912  
                                              l413 6992                                                l190 633A  
                                              l272 63AA                                                l267 680C  
                                              l196 6A26                                                l293 6372  
                                              l701 65C0                                                l366 59F4  
                                              l199 69EE                                                l383 69AE  
                                              l439 6570                                                l288 67F6  
                                              l625 65E6                                                l398 69A0  
                                              l911 67E0                                                l576 5190  
              Motors_SynchronizedStart@current_pwm 0567                                                l942 617A  
                                              l849 57BE                                                l945 617C  
                                              l973 66BE                                                l981 667A  
                                              l969 66E0                                                l977 669C  
                                              _GIE 26B7                                      _i2c_lcd_clear 67B6  
                                              _aT0 FDCD                                                _aT1 FDC9  
                                              _aT2 FDC5                                                _aT3 FDC1  
                                              _aT4 FDBD                         ??_INT0_SetInterruptHandler 0514  
                HC_SR04_Measure_Echo_Time@end_time 0581                                                _pad 5C5E  
                        __end_of_I2C1_DataTransmit 69F8                                       ___awmod@sign 0516  
                                  _TMR2_Initialize 65C2                                                prod 04F3  
                                              tosl 04FD                                                wreg 04E8  
                                    _i2c_lcd_write 67A0                                      _INT0_CallBack 6484  
                                     ___flmul@aexp 0561                                       ___flmul@bexp 0566  
                                     ___flmul@sign 0560                                       ___flmul@temp 056B  
                                     ___flmul@prod 0567                       Motor_SetSpeed@pwm_duty_value 052D  
                                    _INT1_CallBack 64B6                           _UART1_ParityErrorHandler 06B5  
                                 __end_of_I2C1_ISR 58E6                                       ___fltol@exp1 0530  
                                             l1101 1528                                               l1070 5BE8  
                                             l1303 32B6                                               l1143 5AF6  
                                             l1313 3982                                               l1153 5940  
                                             l2210 22AA                                               l1154 5970  
                                             l1162 4B40                                               l2203 2202  
                                             l2204 21F0                                               l1316 395A  
                                             l2140 5C54                                               l1172 6132  
                                             l1309 2B1E                                               l1181 67CA  
                                             l1165 67B4                                               l1077 125E  
                                             l1422 673E                                               l1158 62E0  
                                             l1078 125E                                               l2311 4482  
                                             l2231 3648                                               l1343 6546  
                                             l1159 6300                                               l2304 43EA  
                                             l1425 674A                                               l2233 34AC  
                                             l1249 5A76                                               l1450 69C0  
                                             l1434 3DF6                                               l2242 34F2  
                                             l1530 4E66                                               l1522 5526  
                                             l1514 6A20                                               l1178 5D96  
                                             l1355 6720                                               l2307 4546  
                                             l2243 3510                                               l2219 61C4  
                                             l1275 41D8                                               l1259 5850  
                                             l2147 5C5C                                               l1187 60E8  
                                             l1452 69C2                                               l1428 6754  
                                             l2244 3568                                               l2236 3470  
                                             l1612 4392                                               l2245 3556  
                                             l1461 486A                                               l1269 46DA  
                                             l2413 1182                                               l2341 196E  
                                             l2333 188E                                               l1541 4E76  
                                             l1621 5306                                               l1349 6A14  
                                             l1454 69CA                                               l2270 25A4  
                                             l2318 44DE                                               l1462 4720  
                                             l1534 4E6C                                               l1630 6838  
                                             l2271 25C2                                               l2263 23AE  
                                             l2191 21C2                                               l1615 624A  
                                             l1448 69BE                                               l2280 26D0  
                                             l2272 261A                                               l2336 1E2E  
                                             l1536 4E6E                                               l1528 4E64  
                                             l1624 684E                                               l2600 50D2  
                                             l2273 2608                                               l2177 201A  
                                             l1561 4EDC                                               l1553 4ED2  
                                             l1545 4E7C                                               l1633 6822  
                                             l1482 5EAC                                               l1490 524E  
                                             l1466 4830                                               l2194 2134  
                                             l2186 22E6                                               l2178 2008  
                                             l1570 4EEA                                               l1642 6A1A  
                                             l2267 270E                                               l2179 1FCE  
                                             l2419 0B3C                                               l1299 5474  
                                             l1555 4ED4                                               l1547 4E7E  
                                             l1539 4E74                                               l1627 6864  
                                             l2611 6A5A                                               l2531 5000  
                                             l2620 2F02                                               l1572 4EEC  
                                             l1564 4EE2                                               l1660 5D24  
                                             l2444 604E                                               l1469 4862  
                                             l2437 6418                                               l2365 1C0A  
                                             l1661 5D34                                               l1478 6A32  
                                             l1574 4F3C                                               l1566 4EE4  
                                             l1646 5DF8                                               l2375 1CF2  
                                             l2367 1BCE                                               l2631 2E2C  
                                             l1559 4EDA                                               l1591 69BC  
                                             l2471 5C74                                               l2519 07DC  
                                             l2535 5008                                               l2624 2D0A  
                                             l2608 6208                                               l1489 51E6  
                                             l2633 2E9A                                               l1585 673C  
                                             l2641 62C4                                               l2545 3A54  
                                             l1914 4D08                                               l2562 5F02  
                                             l1683 5722                                               l1923 63E2  
                                             l2571 3F50                                               l2475 5CCA  
                                             l2491 01D6                                               l2555 3BCE  
                                             l1676 5712                                               l2628 2D68  
                                             l1908 567E                                               l2389 4E4C  
                                             l2582 5F58                                               l2486 09FA  
                                             l1919 4D4E                                               l2568 400C  
                                             l7001 5C94                                               l2489 0392  
                                             l1946 4C48                                               l6211 69E2  
                                             l7011 5F04                                               l7003 5C98  
                                             l2588 609E                                               l1893 55D4  
                                             l6221 6586                                               l6213 69EA  
                                             l7101 4E50                                               l6301 5CCC  
                                             l7021 3E18                                               l7013 5F12  
                                             l7005 5CB6                                               ?_pad 0521  
                                             l6223 6596                                               l6215 6A22  
                                             l6231 6314                                               l6303 5CDC  
                                             l7031 3F04                                               l7023 3E70  
                                             l7015 5F26                                               l7007 628A  
                                             l6225 6598                                               l6217 6A28  
                                             l6233 631A                                               l6241 5FAE  
                                             l6305 5CEA                                               l8001 5748  
                                             l7041 3FEC                                               l7033 3F40  
                                             l7025 3E84                                               l7009 6292  
                                             l6219 6572                                               l6235 632A  
                                             l6251 5FD2                                               l6243 5FB0  
                                             l7115 4EF2                                               l7107 4E84  
                                             l6307 5CFA                                               l7131 5C04  
                                             l8011 5752                                               l8003 574A  
                                             l7043 3FFC                                               l7027 3E92  
                                             l7035 3F74                                               l7019 3DF8  
                                             l7051 6070                                               l6237 632E  
                                             l6229 6302                                               l6261 5FF8  
                                             l6253 5FDA                                               l6245 5FC4  
                                             l8101 5A52                                               l7117 4F2C  
                                             l7109 4EBE                                               l6309 5D04  
                                             l7141 5C3E                                               l7133 5C0C  
                                             l8021 5764                                               l8013 5754  
                                             l8005 574C                                               l7061 62D8  
                                             l7037 3FB0                                               l7053 6074  
                                             l6239 6336                                               l8111 57C4  
                                             l6255 5FE2                                               l6247 5FC8  
                                             l6263 5FFC                                               l8103 5A5A  
                                             l7143 5C46                                               l7135 5C14  
                                             l7127 5BEA                                               l8031 5774  
                                             l8023 5768                                               l8015 5758  
                                             l8007 574E                                               l7071 62F8  
                                             l7063 62DE                                               l7039 3FC4  
                                             l7055 6080                                               l7047 6050  
                                             l6271 502E                                               l7401 5FA2  
                                             l7073 63E4                                               l8113 57CC  
                                             l6257 5FF2                                               l6249 5FD0  
                                             l8105 5A6E                                               l7145 5C48  
                                             l7137 5C22                                               l7129 5BF2  
                                             l8041 57B0                                               l8033 5784  
                                             l8025 576C                                               l8017 575C  
                                             l8009 5750                                               l6281 5A7A  
                                             l6601 5962                                               l7065 62E2  
                                             l7049 6064                                               l7057 6084  
                                             l6273 5038                                               l7403 5FA6  
                                             l7075 6404                                               l8123 582A  
                                             l8115 57D4                                               l6259 5FF4  
                                             l7147 5C4E                                               l7139 5C28  
                                             l7411 6994                                               l8051 57BC  
                                             l8043 57B2                                               l8035 5794  
                                             l8027 576E                                               l8019 5760  
                                             l6291 5ABE                                               l6283 5A7C  
                                             l6603 5968                                               l7067 62E8  
                                             l7059 62C8                                               l6275 5056  
                                             l6267 500A                                               l6531 61E4  
                                             l6701 34D8                                               l6621 32E6  
                                             l6613 32B8                                               l7405 5FAA  
                                             l8141 459E                                               l8133 4548  
                                             l7077 6408                                               l8125 5832  
                                             l8117 57E8                                               l8109 57C2  
                                             l6541 6394                                               l7413 6986  
                                             l7421 66B2                                               l8045 57B6  
                                             l8037 57A4                                               l8029 5772  
                                             l8053 67CC                                               l8061 614C  
                                             l6285 5A84                                               l7069 62F0  
                                             l6277 508C                                               l6269 501C  
                                             l6533 61E8                                               l6711 354E  
                                             l6703 34E2                                               l6631 331E  
                                             l6623 32F6                                               l6615 32C6  
                                             l8151 45DC                                               l8135 4552  
                                             l8127 5846                                               l8119 5816  
                                             l6543 63A2                                               l6535 6374  
                                             l6551 633C                                               l7415 66C0  
                                             l7423 667C                                               l8047 57B8  
                                             l8039 57AE                                               l8071 6178  
                                             l8063 615C                                               l6295 5AD2  
                                             l6287 5A8C                                               l6527 61C6  
                                             l7601 4534                                               l6721 35BC  
                                             l6705 34F0                                               l6641 334A  
                                             l6633 3324                                               l6625 3306  
                                             l6617 32D4                                               l8161 4692  
                                             l8153 4602                                               l8145 45B2  
                                             l8137 455A                                               l8321 2B94  
                                             l8129 584E                                               l6545 63A6  
                                             l6537 637C                                               l6561 636E  
                                             l6553 6344                                               l7409 69A2  
                                             l7417 66D4                                               l7425 6690  
                                             l8049 57BA                                               l8065 616C  
                                             l8057 6136                                               l6297 5ADA  
                                             l6289 5AA0                                               l8081 67BC  
                                             l6529 61D2                                               l7531 5540  
                                             l7603 4536                                               l6731 3622  
                                             l6715 3578                                               l6723 35C0  
                                             l6707 3502                                               l6651 3382  
                                             l6643 335A                                               l6635 332A  
                                             l6627 3308                                               l6619 32D6  
                                             l8163 46B6                                               l8155 4626  
                                             l8147 45BA                                               l8139 456E  
                                             l8331 2BE4                                               l8323 2BA2  
                                             l8315 2B20                                               l8091 5A04  
                                             l6539 6384                                               l6555 634C  
                                             l7419 669E                                               l8067 6172  
                                             l8059 6144                                               l6299 5AEE  
                                             l6571 58FC                                               l7451 60EC  
                                             l8083 67A2                                               l7371 4F46  
                                             l7541 5574                                               l7533 5544  
                                             l7525 5528                                               l7461 6704  
                                             l6741 363E                                               l6733 3624  
                                             l6725 35DA                                               l6717 3584  
                                             l6709 3520                                               l6653 3398  
                                             l6645 336A                                               l6637 3338  
                                             l6629 330E                                               l8157 464A  
                                             l8149 45CE                                               l6901 4C7A  
                                             l8333 2C12                                               l8325 2BB2  
                                             l8317 2B30                                               l8093 5A0C  
                                             l6557 635C                                               l7381 6900  
                                             l8069 6176                                               l6581 5922  
                                             l6573 58FE                                               l7453 60F6  
                                             l8085 67AC                                               l7373 4F6E  
                                             l7551 55AE                                               l7543 557C  
                                             l7535 5552                                               l7527 552A  
                                             l7463 670C                                               l6735 3628  
                                             l6727 35F0                                               l6719 3592  
                                             l6671 33EC                                               l6655 33A8  
                                             l6663 33C8                                               l6647 336C  
                                             l6639 333A                                               l7391 5F80  
                                             l7383 5F5A                                               l8159 466E  
                                             l6911 4CE8                                               l6903 4C8A  
                                             l8351 2CC8                                               l8319 2B66  
                                             l8095 5A20                                               l8087 59F8  
                                             l6559 636A                                               l6591 5942  
                                             l6583 5928                                               l6575 590C  
                                             l6567 58E8                                               l7455 6106  
                                             l8079 67B6                                               l7375 4FA8  
                                             l7545 558A                                               l7553 55B4  
                                             l7537 555A                                               l7529 5538  
                                             l8441 5E88                                               l7465 6718  
                                             l7561 4396                                               l6737 3636  
                                             l6729 360A                                               l6681 343C  
                                             l6673 3406                                               l6665 33D8  
                                             l6657 33B0                                               l6649 3372  
                                             l7393 5F88                                               l7385 5F5C  
                                             l6913 4CF6                                               l6905 4CB8  
                                             l6921 63AC                                               l8361 2D82  
                                             l8353 2CD4                                               l8337 2C26  
                                             l8345 2C54                                               l8329 2BC6  
                                             l8097 5A3E                                               l8089 59FC  
                                             l7801 6914                                               l6593 5948  
                                             l6585 592A                                               l6577 5912  
                                             l6569 58F6                                               l7457 6118  
                                             l7377 4FC6                                               l7369 4F3E  
                                             l7555 55C4                                               l7547 55A0  
                                             l7539 556C                                               l8443 5E98  
                                             l7563 43A6                                               l6739 363C  
                                             l6691 3498                                               l6683 344C  
                                             l6675 3416                                               l6667 33D8  
                                             l6659 33B4                                               l7395 5F90  
                                             l7387 5F70                                               l6915 4D46  
                                             l6907 4CC8                                               l6923 63C2  
                                             l8371 2E46                                               l8363 2DA2  
                                             l8355 2CE2                                               l8347 2CAA  
                                             l8339 2C34                                               l7803 691A  
                                             l7811 5972                                               l8611 5B78  
                                             l6595 5950                                               l6587 5938  
                                             l6579 5914                                               l7459 612A  
                                             l7379 4FD4                                               l7557 55CC  
                                             l7549 55A8                                               l8445 5EA8  
                                             l8437 5E54                                               l9501 56BA  
                                             l7581 446C                                               l7573 4424  
                                             l7565 43B4                                               l8381 6740  
                                             l6693 349A                                               l6685 3460  
                                             l6677 3426                                               l7397 5F98  
                                             l7389 5F74                                               l6917 4D4C  
                                             l6909 4CD6                                               l6925 63D2  
                                             l8373 2E5C                                               l8365 2DB6  
                                             l8357 2D4A                                               l8349 2CBE  
                                             l7805 691C                                               l7821 598C  
                                             l7813 5974                                               l7901 5128  
                                             l8541 6560                                               l8605 665A  
                                             l8613 5B8C                                               l6597 5952  
                                             l6589 593E                                               l8701 4B24  
                                             l8621 49E4                                               l8439 5E6C  
                                             l9511 5702                                               l9503 56C8  
                                             l7591 44EC                                               l7583 4478  
                                             l7575 442C                                               l7567 43FA  
                                             l8383 6748                                               l6695 34AA  
                                             l6687 346E                                               l6679 3436  
                                             l7399 5FA0                                               l8375 2E72  
                                             l8367 2DF4                                               l8359 2D58  
                                             l7807 6922                                               l7831 59AC  
                                             l7823 599A                                               l7815 597C  
                                             l7911 5136                                               l7903 512A  
                                             l8543 6564                                               l8535 6548  
                                             l8607 666E                                               l8615 5BB2  
                                             l6599 5960                                               l8711 60B2  
                                             l8703 4B2A                                               l8631 4A34  
                                             l8623 49FC                                               l9513 570C  
                                             l9505 56D2                                               l7593 44EE  
                                             l7585 44B4                                               l7577 4438  
                                             l7569 4410                                               l8385 6752  
                                             l6697 34BC                                               l6689 347A  
                                             l9601 1FDC                                               l9521 1E4E  
                                             l8369 2E3C                                               l7809 6924  
                                             l7761 5E12                                               l7753 5DFA  
                                             l7841 59B6                                               l7833 59AE  
                                             l7825 599C                                               l7817 5988  
                                             l7921 514E                                               l7913 5138  
                                             l7905 512C                                               l8545 6568  
                                             l8537 6558                                               l8617 5BB6  
                                             l8609 5B74                                               l8713 60C2  
                                             l8705 4B32                                               l8641 4A52  
                                             l8633 4A38                                               l8625 49FE  
                                             l8721 5D60                                               l9507 56F0  
                                             l7595 44F2                                               l7587 44C0  
                                             l7579 446A                                               l6699 34D2  
                                             l9611 2006                                               l9603 1FE8  
                                             l9523 1E5E                                               l9531 1E86  
                                             l9515 1E30                                               l8731 53DC  
                                             l7771 5E28                                               l7763 5E1C  
                                             l7755 5E0C                                               l7851 59CE  
                                             l7843 59B8                                               l7835 59B0  
                                             l7827 59A6                                               l7819 598A  
                                             l7931 517E                                               l7923 5150  
                                             l7915 513A                                               l7907 512E  
                                             l8547 656C                                               l8539 655C  
                                             l8715 60D2                                               l8707 4B38  
                                             l8651 4A78                                               l8643 4A58  
                                             l8635 4A3A                                               l8627 4A04  
                                             l8723 5D64                                               l6891 5652  
                                             l6883 55D6                                               l9509 5700  
                                             l7597 4516                                               l7589 44CE  
                                             l9701 22C6                                               l9621 205C  
                                             l9613 2028                                               l9605 1FEC  
                                             l9541 1EB6                                               l9533 1E96  
                                             l9525 1E6E                                               l9517 1E3E  
                                             l6981 4DE2                                               l6973 4D50  
                                             l8741 5434                                               l8733 53E6  
                                             l8725 53C0                                               l7781 5E38  
                                             l7773 5E30                                               l7765 5E20  
                                             l7757 5E0E                                               l7853 59D0  
                                             l7845 59BA                                               l7837 59B2  
                                             l7829 59AA                                               l7941 5188  
                                             l7933 5180                                               l7925 5176  
                                             l7917 513C                                               l7909 5134  
                                             l7861 50D4                                               l8709 60A2  
                                             l8661 4A90                                               l8653 4A7A  
                                             l8645 4A60                                               l8637 4A40  
                                             l8629 4A1C                                               l8717 5D36  
                                             l6893 5676                                               l6885 5604  
                                             l7599 4526                                               l9703 22D4  
                                             l9631 2096                                               l9623 206A  
                                             l9615 2038                                               l9607 1FFA  
                                             l9551 1EF6                                               l9543 1EC4  
                                             l9535 1E9C                                               l9527 1E7E  
                                             l9519 1E4C                                               l6991 4E44  
                                             l6975 4D70                                               l8751 5472  
                                             l8743 543E                                               l8735 53FE  
                                             l8727 53D6                                               l9711 5DAA  
                                             l7791 5E44                                               l7783 5E3A  
                                             l7775 5E32                                               l7767 5E24  
                                             l7759 5E10                                               l7855 59E0  
                                             l7847 59CA                                               l7839 59B4  
                                             l7943 518A                                               l7935 5182  
                                             l7927 517A                                               l7919 5142  
                                             l7871 50E0                                               l7863 50D6  
                                             l7951 6520                                               l8671 4AB2  
                                             l8663 4AA0                                               l8655 4A80  
                                             l8647 4A62                                               l8639 4A50  
                                             l8719 5D3A                                               l6895 567C  
                                             l6887 5614                                               l9801 2594  
                                             l9721 2304                                               l9705 22D6  
                                             l9641 2102                                               l9633 2098  
                                             l9625 2078                                               l9609 1FFC  
                                             l9561 1F2E                                               l9553 1EF8  
                                             l9545 1EC6                                               l9537 1EAE  
                                             l9529 1E80                                               l6977 4DAE  
                                             l6985 4DEE                                               l8745 5450  
                                             l8737 5420                                               l9713 5DAE  
                                             l7793 67F8                                               l7785 5E3C  
                                             l7777 5E34                                               l7769 5E26  
                                             l7857 59E2                                               l7849 59CC  
                                             l7945 518C                                               l7937 5184  
                                             l7929 517C                                               l7881 50F0  
                                             l7873 50E2                                               l7865 50DA  
                                             l7953 6530                                               l7961 65C8  
                                             l8681 4ADC                                               l8673 4AB8  
                                             l8665 4AA2                                               l8657 4A88  
                                             l8649 4A68                                               l6889 5642  
                                             l8907 6A2E                                               l9803 25A2  
                                             l9731 233C                                               l9723 2306  
                                             l9651 215A                                               l9643 2104  
                                             l9635 20A2                                               l9627 2084  
                                             l9619 204C                                               l9571 1F42  
                                             l9563 1F32                                               l9547 1ED6  
                                             l9555 1EFE                                               l9539 1EB0  
                                             l6899 4C4A                                               l6987 4E00  
                                             l6979 4DD6                                               l8747 545A  
                                             l8739 542A                                               l9491 52A8  
                                             l7795 6802                                               l7787 5E40  
                                             l7779 5E36                                               l7859 59E4  
                                             l7947 518E                                               l7939 5186  
                                             l7891 511E                                               l7883 50F2  
                                             l7875 50EA                                               l7867 50DC  
                                             l7955 653E                                               l7971 65DE  
                                             l7963 65CA                                               l8691 4B04  
                                             l8683 4ADE                                               l8675 4AC8  
                                             l8667 4AA8                                               l8659 4A8A  
                                             l6995 5C5E                                               l9493 5680  
                                             l9813 262A                                               l9821 2672  
                                             l9805 25B4                                               l9741 2368  
                                             l9733 234C                                               l9725 2316  
                                             l9717 22E8                                               l9661 2188  
                                             l9645 2114                                               l9629 2088  
                                             l9637 20A8                                               l9581 1F56  
                                             l9573 1F46                                               l9565 1F36  
                                             l9557 1F0E                                               l9549 1EE6  
                                             l8749 546C                                               l9709 5D9A  
                                             l9901 54A8                                               l7797 67E2  
                                             l7789 5E42                                               l7893 5120  
                                             l7885 5104                                               l7877 50EC  
                                             l7869 50DE                                               l7957 6540  
                                             l7949 651A                                               l7973 65E0  
                                             l7965 65CC                                               l7981 65A6  
                                             l8693 4B0A                                               l8685 4AEC  
                                             l8677 4ACE                                               l8669 4AB0  
                                             l6997 5C6C                                               l9495 5690  
                                             l9831 26D4                                               l9823 268C  
                                             l9815 2636                                               l9807 25D2  
                                             l9751 23BE                                               l9743 2378  
                                             l9735 2352                                               l9727 2326  
                                             l9719 22F6                                               l9663 2196  
                                             l9655 216E                                               l9671 21B4  
                                             l9639 20CE                                               l9647 2124  
                                             l9591 1F6A                                               l9583 1F5A  
                                             l9575 1F4A                                               l9567 1F3A  
                                             l9559 1F20                                               l9911 5502  
                                             l9903 54C4                                               l7799 67EC  
                                             l7895 5122                                               l7887 511A  
                                             l7879 50EE                                               l7967 65CE  
                                             l7959 65C2                                               l7983 65A8  
                                             l7975 659C                                               l7991 5724  
                                             l8695 4B12                                               l8687 4AEE  
                                             l8679 4AD4                                               l6999 5C80  
                                             l9497 56A6                                               l9841 26FE  
                                             l9833 26E4                                               l9825 26A0  
                                             l9817 2644                                               l9809 2600  
                                             l9761 23F8                                               l9753 23CE  
                                             l9745 2388                                               l9737 2358  
                                             l9729 2336                                               l9681 221E  
                                             l9673 21D2                                               l9665 219E  
                                             l9657 2178                                               l9649 214A  
                                             l9585 1F5E                                               l9577 1F4E  
                                             l9569 1F3E                                               l9593 1F6E  
                                             l9913 550E                                               l9905 54D2  
                                             l7897 5124                                               l7889 511C  
                                             l7969 65D0                                               l7985 65AA  
                                             l7977 65A2                                               l7993 5726  
                                             l8697 4B18                                               l8689 4AF4  
                                             l9921 0026                                               l8787 69C4  
                                             l9499 56AE                                               l9835 26F2  
                                             l9827 26BA                                               l9819 266E  
                                             l9771 244A                                               l9763 240E  
                                             l9747 2398                                               l9739 2366  
                                             l9851 4B42                                               l9691 2288  
                                             l9683 222C                                               l9675 21E8  
                                             l9667 21A2                                               l9659 2186  
                                             l9595 1F9A                                               l9587 1F62  
                                             l9579 1F52                                               l9907 54E2  
                                             l7899 5126                                               l7987 65B8  
                                             l7979 65A4                                               l7995 5734  
                                             l8699 4B20                                               l9931 007C  
                                             l9923 004A                                               l9915 0000  
                                             l9837 26F4                                               l9829 26CA  
                                             l9781 2490                                               l9773 2458  
                                             l9765 241A                                               l9757 23E2  
                                             l9749 239E                                               l9861 4B9A  
                                             l9853 4B5A                                               l9693 22A8  
                                             l9685 2266                                               l9669 21B2  
                                             l9597 1FB6                                               l9589 1F66  
                                             l9845 617E                                               l9909 54F2  
                                             l7989 65BA                                               l7997 5742  
                                             l8789 6A10                                               l9941 00CC  
                                             l9933 0088                                               l9925 0054  
                                             l9917 0014                                               l9839 26FA  
                                             l9791 24FE                                               l9783 24AA  
                                             l9775 2464                                               l9767 2432  
                                             l9759 23EE                                               l9863 4BAA  
                                             l9695 22B8                                               l9679 2212  
                                             l9687 2268                                               l9599 1FC6  
                                             l9847 6190                                               l7999 5746  
                                             l9951 0100                                               l9943 00D0  
                                             l9935 0090                                               l9927 005C  
                                             l9919 0022                                               STR_1 FF80  
                                             STR_2 FEAD                                               l9793 2528  
                                             l9785 24BA                                               l9777 2474  
                                             l9769 243E                                               l9873 4BD4  
                                             l9865 4BAE                                               l9857 4B6E  
                                             l9697 22BE                                               l9689 2278  
                                             l9961 015C                                               l9945 00D6  
                                             l9929 006C                                               l9937 0094  
                                             STR_3 FEF0                                               STR_4 FE0A  
                                             l9795 255E                                               l9787 24D6  
                                             l9779 2480                                               l9891 4C38  
                                             l9883 4BFC                                               l9875 4BDE  
                                             l9867 4BBC                                               l9859 4B98  
                                             l9699 22C0                                               l9963 0162  
                                             l9947 00DE                                               l9939 00BA  
                                             l9955 0120                                               STR_5 FE31  
                                             STR_6 FE54                                               l9797 256C  
                                             l9789 24E2                                               l9885 4C08  
                                             l9877 4BE8                                               l9981 01EC  
                                             l9965 016A                                               l9957 0146  
                                             l9973 0186                                               l9949 00F6  
                                             STR_7 FE75                                               STR_8 FF06  
                                             l9799 258A                                               l9887 4C18  
                                             l9895 5478                                               l9991 02E2  
                                             l9983 0220                                               l9975 01A0  
                                             l9959 0158                                               STR_9 FF93  
                                             l9889 4C28                                               l9897 548E  
                                             l9993 0316                                               l9985 025E  
                                             l9899 5496                                               l9995 031E  
                                             l9987 0292                                               l9979 01E6  
                                _I2C1_Deinitialize 0000                                               l9989 02CE  
                                             l9999 035E                                      ?_i2c_lcd_init 0501  
                                    ?_i2c_lcd_goto 0521                                               _LATA 04BE  
                                             _LATB 04BF                                               _LATC 04C0  
                                             _LATD 04C1                                               _LATE 04C2  
                                             _LATF 04C3                                               u5000 3520  
                                             u4200 6596                                               u5001 351C  
                                             u4201 6592                                               u5010 354E  
                                             u4210 6314                                               _T2PR 0323  
                                             u5011 354A                                               u4211 6310  
                                             u5020 3564                                               u4220 632A  
                                             u4300 5AEE                                               u5021 3560  
                                             u4221 6326                                               u4301 5AEA  
                                             u5030 3578                                               u4230 5FC4  
                                             u4310 5CEA                                               u5031 3574  
                                             u4231 5FC0                                               u4311 5CE6  
                                             u5040 3592                                               u4320 5D24  
                                             u4240 501C                                               u5041 358E  
                                             u4321 5D20                                               u4241 5018  
                                             u5050 35DA                                               u4250 502E  
                                             _T4PR 032F                                               u5051 35D6  
                                             u4251 502A                                               u5060 360A  
                                             u6100 5F70                                               u5300 4C7A  
                                             u4260 5056                                               u5061 3606  
                                             u6101 5F6C                                               u5301 4C76  
                                             u4261 5052                                               u5070 3636  
                                             u4190 6586                                               u5310 4CB8  
                                             u6110 66D4                                               u4270 508C  
                                             u5071 3632                                               u4191 6582  
                                             u5311 4CB4                                               u6111 66D0  
                                             u4271 5088                                               u5320 4CD6  
                                             u7000 2DF4                                               u6120 66B2  
                                             u4280 5AA0                                               u5321 4CD2  
                                             u7001 2DF0                                               u6121 66AE  
                                             u4281 5A9C                                               u5330 4CF6  
                                             u7010 2E5C                                               u6130 6690  
                                             u4290 5ACE                                               u5331 4CF2  
                                             u7011 2E58                                               u6131 668C  
                                             u4291 5ACA                                               u6300 55C4  
                                             u5340 4D46                                               u7020 2E72  
                                             u5500 5C6C                                               u6301 55C0  
                                             u5341 4D42                                               u7021 2E6E  
                                             u5501 5C68                                               u7110 5E98  
                                             u6310 43A6                                               u5350 63C2  
                                             u5430 4D90                                               u5270 5604  
                                             u5510 5CB6                                               u7111 5E94  
                                             u6311 43A2                                               u5351 63BE  
                                             u5271 5600                                               u5511 5CB2  
                                             u7120 5EA8                                               u6400 4534  
                                             u6320 43B4                                               u5440 4DAE  
                                             u4800 58F6                                               u5280 5642  
                                             u5600 3F40                                               u5520 62C4  
                                             u6080 4F6E                                               u7121 5EA4  
                                             u6401 4530                                               u6321 43B0  
                                             u5441 4DAA                                               u4801 58F2  
                                             u5281 563E                                               u5601 3F3C  
                                             u5521 62C0                                               u6081 4F6A  
                                             u6250 5538                                               u6330 4410  
                                             u5450 4DD6                                               u4810 590C  
                                             u6170 6106                                               u5290 5676  
                                             u5610 3F94                                               u5530 5F12  
                                             u6090 5000                                               u6251 5534  
                                             u6331 440C                                               u5451 4DD2  
                                             u5435 4D86                                               u7035 2EDE  
                                             u4811 5908                                               u6171 6102  
                                             u5291 5672                                               u5531 5F0E  
                                             u6091 4FFC                                               u6260 5552  
                                             u6340 4466                                               u4900 335A  
                                             u5460 4E00                                               u4820 5922  
                                             u6180 6118                                               u5620 3FB0  
                                             u5540 3E42                                               u6261 554E  
                                             u6341 4462                                               u4901 3356  
                                             u5461 4DFC                                               u4821 591E  
                                             u6181 6114                                               u5621 3FAC  
                                             u6270 556C                                               u6350 44B0  
                                             u4910 3398                                               u5710 4E60  
                                             u4830 5938                                               u5630 3FEC  
                                             u5550 3E70                                               u4750 6208  
                                             u6271 5568                                               u6351 44AC  
                                             u4911 3394                                               u5711 4E5C  
                                             u4831 5934                                               u5631 3FE8  
                                             u5615 3F8A                                               u5551 3E6C  
                                             u4751 6204                                               u6280 558A  
                                             u6360 44CE                                               u4920 33D8  
                                             u5480 4E3A                                               u5720 4ECE  
                                             u4760 6394                                               u9000 5502  
                                             u6600 615C                                               u5560 3E92  
                                             u5640 609E                                               u6281 5586  
                                             u6361 44CA                                               u4921 33D4  
                                             u5481 4E34                                               u5721 4ECA  
                                             u4761 6390                                               u9001 54FE  
                                             u6601 6158                                               u5561 3E8E  
                                             u5545 3E38                                               u5641 609A  
                                             u6290 55A0                                               u6370 44DE  
                                             u4930 344C                                               u4850 32D4  
                                             u5490 4E3C                                               u5730 5C04  
                                             u5650 62D8                                               u9010 0022  
                                             u6291 559C                                               u6371 44DA  
                                             u4931 3448                                               u4851 32D0  
                                             u5475 4E12                                               u5731 5C00  
                                             u5651 62D4                                               u9011 001E  
                                             u6380 44EC                                               u4940 346E  
                                             u4860 32E6                                               u6700 45CE  
                                             u8300 1E4C                                               u6620 5A20  
                                             u4780 635C                                               u5740 5C22  
                                             u7500 60C2                                               u5580 3F00  
                                             u9100 0292                                               u9020 006C  
                                             u6381 44E8                                               u4941 346A  
                                             u4861 32E2                                               u6701 45CA  
                                             u8301 1E48                                               u6621 5A1C  
                                             u4781 6358                                               u5741 5C1E  
                                             u7501 60BE                                               u5581 3EFC  
                                             u9101 028E                                               u9021 0068  
                                             u6390 4526                                               u4950 3498  
                                             u4870 32F6                                               u8310 1E5E  
                                             u6630 5A4E                                               u5750 5C3E  
                                             u7510 60D2                                               u5590 3F24  
                                             u9110 02CE                                               u9030 007C  
                                             u6391 4522                                               u4951 3494  
                                             u4871 32F2                                               u8311 1E5A  
                                             u6631 5A4A                                               u4775 6396  
                                             u5751 5C3A                                               u7511 60CE  
                                             u5575 3EA6                                               u9111 02CA  
                                             u9031 0078                                               u4960 34BC  
                                             u4880 3338                                               u8400 1FB2  
                                             u8320 1E6E                                               u6640 5A6E  
                                             u7520 5D5C                                               u5576 3EB0  
                                             u9200 0610                                               u9120 035A  
                                             u9040 00BA                                               u4961 34B8  
                                             u4881 3334                                               u8401 1FAC  
                                             u8321 1E6A                                               u6641 5A6A  
                                             u5577 3EC0                                               u9201 060C  
                                             u9121 0356                                               u9041 00B6  
                                             u4970 34D2                                               u4890 334A  
                                             u8410 1FB4                                               u8330 1EAE  
                                             u6650 57E8                                               u7450 666E  
                                             u6570 67DE                                               u7530 5D86  
                                             u9210 0620                                               u9130 0392  
                                             u9050 00CC                                               u4971 34CE  
                                             u4891 3346                                               u8331 1EAA  
                                             u6651 57E4                                               u4795 635E  
                                             u7451 666A                                               u6571 67D8  
                                             u5595 3F1A                                               u9211 061C  
                                             u9131 038E                                               u9051 00C8  
                                             u4980 34F0                                               u8500 20CE  
                                             u8420 1FDC                                               u8340 1EC4  
                                             u6900 2B66                                               u6660 5826  
                                             u6580 67E0                                               u7460 5B8C  
                                             u7540 5D96                                               u9300 09A6  
                                             u9220 06BC                                               u9140 03AA  
                                             u9060 0146                                               u4981 34EC  
                                             u8501 20CA                                               u8421 1FD8  
                                             u8341 1EC0                                               u6901 2B62  
                                             u6661 5822                                               u6565 59A4  
                                             u7461 5B88                                               u7541 5D92  
                                             u9301 09A0                                               u9221 06B8  
                                             u9141 03A6                                               u9061 0142  
                                             u8270 56A6                                               u4990 3510  
                                             u8510 2114                                               u8430 1FFA  
                                             u8350 1ED6                                               u6910 2B94  
                                             u6670 5846                                               u7550 53D6  
                                             u6566 59A6                                               u6590 6144  
                                             u7470 5BAE                                               u9310 09A8  
                                             u9230 0708                                               u9150 03E0  
                                             u9070 0158                                               u8271 56A2  
                                             u4991 350C                                               u8511 2110  
                                             u8431 1FF6                                               u8351 1ED2  
                                             u6911 2B90                                               u6671 5842  
                                             u7551 53D2                                               u6591 6140  
                                             u7527 5D52                                               u9231 0704  
                                             u9151 03DC                                               u9071 0154  
                                             u8280 56C8                                               u6680 456E  
                                             u8600 21FE                                               u8520 214A  
                                             u8440 201A                                               u8360 1EE6  
                                             u9400 0A20                                               u6920 2BA2  
                                             u7480 5BD8                                               u9320 09BC  
                                             u9240 07B4                                               u9160 03EE  
                                             u9080 01D2                                               u8281 56C4  
                                             u6681 456A                                               u8601 21FA  
                                             u8521 2146                                               u8441 2016  
                                             u8361 1EE2                                               u6921 2B9E  
                                             u7537 5D7C                                               u9321 09B8  
                                             u9241 07B0                                               u9161 03EA  
                                             u9081 01CE                                               u8290 56F0  
                                             u6690 45AE                                               u8610 2212  
                                             u8530 215A                                               u8450 2028  
                                             u8370 1F20                                               u9410 0A3A  
                                             u6930 2BE4                                               u9330 425E  
                                             u7490 5BE8                                               u9250 07EE  
                                             u9170 0418                                               u9090 025E  
                                             u8291 56EC                                               u6691 45AA  
                                             u8611 220E                                               u8531 2156  
                                             u8451 2024                                               u8371 1F1C  
                                             u9411 0A36                                               u6931 2BE0  
                                             u9331 425A                                               u7491 5BE4  
                                             u9251 07EA                                               u9171 0414  
                                             u9091 025A                                               u8700 2304  
                                             u8620 222C                                               u8540 2186  
                                             u8460 2038                                               u8380 1F2E  
                                             u9500 117E                                               u9420 0A60  
                                             u6940 2C12                                               u9340 4280  
                                             u9260 07FC                                               u9180 0562  
                                             u8701 2300                                               u8621 2228  
                                             u8541 2182                                               u8461 2034  
                                             u8381 1F2A                                               u9501 117A  
                                             u9421 0A5C                                               u6941 2C0E  
                                             u9341 427C                                               u7477 5BA4  
                                             u9261 07F8                                               u9181 055E  
                                             u8710 2316                                               u8630 2266  
                                             u8550 2196                                               u8470 206A  
                                             u8390 1F9A                                               u9430 0AD0  
                                             u6950 2C34                                               u9350 42C8  
                                             u9270 0850                                               u9190 05CA  
                                             u9510 39AC                                               u8711 2312  
                                             u8631 2262                                               u8551 2192  
                                             u8471 2066                                               u8391 1F96  
                                             u9431 0ACC                                               u6951 2C30  
                                             u9351 42C4                                               u7487 5BCE  
                                             u9271 084C                                               u9191 05C6  
                                             u9511 39A8                                               u8800 25C2  
                                             u8720 2326                                               u8640 2278  
                                             u8560 21B2                                               u8480 2078  
                                             u9440 0B22                                               u9600 18CC  
                                             u9360 42F6                                               u9280 0924  
                                             u9520 39F4                                               u8801 25BE  
                                             u8721 2322                                               u8641 2274  
                                             u8561 21AE                                               u8481 2074  
                                             u9441 0B1E                                               u9601 18C8  
                                             u9361 42F2                                               u9281 0920  
                                             u9521 39F0                                               u8810 25D2  
                                             u8730 2366                                               u8650 2288  
                                             u8570 21C2                                               u8490 2096  
                                             u9450 0B38                                               u9610 1916  
                                             u6970 2CAA                                               u9370 433E  
                                             u9290 0940                                               u9530 3A9A  
                                             u8811 25CE                                               u8731 2362  
                                             u8651 2284                                               u8571 21BE  
                                             u8491 2092                                               u9451 0B34  
                                             u6971 2CA6                                               u9371 433A  
                                             u9291 093C                                               u9531 3A96  
                                             u8820 2600                                               u8740 2378  
                                             u8900 4B8E                                               u8660 22A8  
                                             u8580 21D2                                               u9540 40D4  
                                             u9460 0B7E                                               u9700 1BDE  
                                             u9620 1940                                               u6980 2CE2  
                                             u9380 4392                                               u8821 25FC  
                                             u8741 2374                                               u8661 22A4  
                                             u8581 21CE                                               u9541 40D0  
                                             u9461 0B7A                                               u9701 1BDA  
                                             u6981 2CDE                                               u6965 2C68  
                                             u9381 438E                                               u8830 2616  
                                             u8750 2388                                               u8910 4BBC  
                                             u8670 22B8                                               u8590 21E8  
                                             u9550 4108                                               u9470 0B94  
                                             u9390 0A1E                                               u9710 1C18  
                                             u9630 196A                                               u6990 2D58  
                                             u6966 2C72                                               u8831 2612  
                                             u8751 2384                                               u8911 4BB8  
                                             u8671 22B4                                               u8591 21E4  
                                             u9551 4104                                               u9471 0B90  
                                             u9391 0A18                                               u9711 1C14  
                                             u9631 1966                                               u9615 190A  
                                             u6991 2D54                                               u6967 2C82  
                                             u9800 51B4                                               u8840 262A  
                                             u8760 23BE                                               u8920 4BD0  
                                             u8680 22D4                                               u9560 413C  
                                             u9480 0CD8                                               u9720 1C6C  
                                             u9640 19EA                                               u9801 51B0  
                                             u8841 2626                                               u8761 23BA  
                                             u8921 4BCC                                               u8905 4B84  
                                             u8681 22D0                                               u9561 4138  
                                             u9481 0CD4                                               u9721 1C68  
                                             u9641 19E6                                               u9625 1936  
                                             u9810 51DA                                               u8850 2644  
                                             u8770 23CE                                               u8930 4BF8  
                                             u9730 3C1E                                               u9570 41D0  
                                             u9490 0FA8                                               u9650 19F8  
                                             u8690 5DAA                                               u9811 51D6  
                                             u8851 2640                                               u8771 23CA  
                                             u8931 4BF4                                               u9731 3C1A  
                                             u9571 41CC                                               u9491 0FA4  
                                             u9651 19F4                                               u8691 5DA6  
                                             u9820 5228                                               u8860 268C  
                                             u8780 2548                                               u8940 4C18  
                                             u9740 3C48                                               u9660 1A40  
                                             u9580 1830                                               u9900 5EF8  
                                             u9821 5224                                               u8861 2688  
                                             u8941 4C14                                               u9741 3C44  
                                             u9661 1A3C                                               u9581 182C  
                                             u9901 5EF4                                               u8870 26BA  
                                             u8790 25A2                                               u8950 4C28  
                                             u9750 3C96                                               u9910 2F16  
                                             u9670 1A5C                                               u9590 1856  
                                             u9830 526C                                      ?_i2c_lcd_puts 0520  
                                             u8871 26B6                                               u8791 259E  
                                             u8951 4C24                                               u9751 3C92  
                                             u9911 2F12                                               u9671 1A58  
                                             u9591 1852                                               u9831 5268  
                                             u8880 26F2                                               u9760 3CB0  
                                             u9920 30BA                                               u9680 1BB0  
                                             u8960 548E                                               u9840 5280  
                                             u8881 26EE                                               u8785 253E  
                                             u9761 3CAC                                               u9921 30B6  
                                             u9681 1BAC                                               u8961 548A  
                                             u9841 527C                                               u8890 4B5A  
                                             u9770 3D0A                                               u9690 1BCE  
                                             u9930 2722                                               u8970 54A8  
                                             u9850 5294                                               u8891 4B56  
                                             u9771 3D06                                               u9691 1BCA  
                                             u9931 271E                                               u8971 54A4  
                                             u9851 5290                                               u9780 3D24  
                                             u8980 54C4                                               u9860 52A8  
                                             u9781 3D20                                               u9941 2AE0  
                                             u8981 54C0                                               u9861 52A4  
                                             u9790 3D48                                               u8990 54E2  
                                             u9870 52C0                                               u9791 3D44  
                                             u9951 2AFA                                               u8991 54DE  
                                             u9871 52BA                                               u9960 38A6  
                                             u9880 52C2                                               u9961 38A2  
                                             u9970 38E0                                               u9890 52D4  
                                             u9971 38DC                                               u9891 52D0  
                                             u9980 391A                                               u9981 3916  
                                             u9990 3954                                               u9991 3950  
                Motors_SynchronizedDirection@dir_a 0570                  Motors_SynchronizedDirection@dir_b 0569  
                                             _WPUA 0401                                               _WPUB 0409  
                                             _WPUC 0411                                               _WPUD 0419  
                                             _WPUE 0421                                               _WPUF 0429  
                                    _INT2_CallBack 64E8                         __end_of_CCP2_LoadDutyValue 6374  
                                 ??_I2C1_ReadStart 0502                                    ??_I2C1_StopSend 0503  
                                I2C1_Write@address 0512                                               _dbuf 075E  
                          __end_of_CCP2_Initialize 67F8                                               _labs 5F04  
                                             _main 1184                                               _prec 06CE  
                                             pad@i 0528                            ??_MPU6050_ReadSensorRaw 052B  
                                             pad@p 0525                                               fsr0h 04EA  
                                             fsr1h 04E2                                               indf0 04EF  
                                             fsr2h 04DA                                               fsr0l 04E9  
                                             indf2 04DF                                               fsr1l 04E1  
                                             fsr2l 04D9                                     ??_HC_SR04_Init 0511  
                                             _word 0549                          __end_ofi2_I2C1_CounterSet 6A00  
                          __end_of_TMR0_CounterGet 6722                                      ___fpclassifyf 4D50  
                        ?_INT2_SetInterruptHandler 0511                                               prodh 04F4  
                                             prodl 04F3                                  ?i2_I2C1_StartSend 0501  
                                             start 0102                                    ___fldiv@new_exp 05AB  
                                    __write_nibble 58E6                                    _UART1_IsRxReady 68EA  
                                  _UART1_IsTxReady 67CC                                 ??i2_I2C1_StartSend 0501  
                                     ___param_bank 0000                                 _CCP1_LoadDutyValue 6374  
                                       _i2c1Status 0534                                        ?_UART1_Read 0501  
                                            ??_pad 0527                                  ??_I2C1_CounterGet 0502  
                                ??_I2C1_CounterSet 0511                            __end_of_TMR0_Initialize 6548  
                                 __end_of_INT0_ISR 6770                                   __end_of_INT1_ISR 6788  
                                 __end_of_INT2_ISR 67A0                                  ?_I2C1_BufferClear 0501  
                                            l10001 039A                                              l10011 03CE  
                                            l10003 03AA                                              l10101 0866  
                                            l10013 03E0                                              l10021 0420  
                                            l10005 03B6                                              l10103 086C  
                                            l10111 0906                                              l10031 0508  
                                            l10023 0428                                              l10015 03EE  
                                            l10007 03C0                                              l10201 0A60  
                                            l10121 0986                                              l10113 0924  
                                            l10105 08C4                                              l10041 05CA  
                                            l10033 053E                                              l10025 0438  
                                            l10017 0406                                              l10009 03C8  
                                            l10203 0A74                                              l10131 09DA  
                                            l10123 0994                                              l10115 0940  
                                            l10107 08FA                                              l10051 0664  
                                            l10043 05DE                                              l10027 044C  
                                            l10035 0544                                              l10019 0418  
                                            l10221 0B66                                              l10205 0ABE  
                                            l10213 0B0C                                              l10141 41F2  
                                            l10125 09AC                                              l10117 0948  
                                            l10109 0902                                              l10053 06BC  
                                            l10061 070C                                              l10045 0610  
                                            l10037 0562                                              l10029 04B0  
                                            l10301 3A4C                                              l10231 0C40  
                                            l10223 0B7E                                              l10215 0B22  
                                            l10207 0AD0                                              l10135 6724  
                                            l10151 4248                                              l10143 4204  
                                            l10127 09BC                                              l10119 0956  
                                            l10071 073A                                              l10063 071C  
                                            l10055 06C0                                              l10047 0620  
                                            l10039 0596                                              l10311 3AD2  
                                            l10241 0D86                                              l10225 0B94  
                                            l10233 0CC2                                              l10209 0AE4  
                                            l10401 19F8                                              l10137 6732  
                                            l10161 42B2                                              l10153 425E  
                                            l10145 4212                                              l10129 09D2  
                                            l10081 080C                                              l10073 07B4  
                                            l10065 0724                                              l10057 06F4  
                                            l10049 0630                                              l10305 3A5A  
                                            l10251 0ED6                                              l10235 0CD8  
                                            l10227 0B96                                              l10243 0DBA  
                                            l10219 0B42                                              l10403 1A0E  
                                            l10171 431E                                              l10163 42C8  
                                            l10155 4280                                              l10147 4220  
                                            l10139 41DE                                              l10091 0832  
                                            l10083 0810                                              l10075 07D4  
                                            l10067 0726                                              l10059 0708  
                                            l10315 3B06                                              l10307 3A7A  
                                            l10331 3BA2                                              l10501 3C5E  
                                            l10341 406C                                              l10261 1000  
                                            l10253 0F0A                                              l10245 0DEE  
                                            l10237 0CDC                                              l10229 0C3C  
                                            l10421 1A8C                                              l10413 1A60  
                                            l10173 4328                                              l10157 42A0  
                                            l10165 42D4                                              l10181 4378  
                                            l10149 423A                                              l10093 0838  
                                            l10085 0816                                              l10077 07EE  
                                            l10069 072E                                              l10325 3B74  
                                            l10317 3B1C                                              l10309 3A9E  
                                            l10511 3CB0                                              l10343 409E  
                                            l10271 1118                                              l10255 0F64  
                                            l10247 0E22                                              l10239 0D82  
                                            l10191 09FC                                              l10431 1AB8  
                                            l10407 1A24                                              l11151 4F06  
                                            l10167 42F6                                              l10159 42A8  
                                            l10183 620A                                              l10087 081E  
                                            l10079 07FC                                              l10095 083E  
                                            l10319 3B42                                              l10327 3B90  
                                            l10521 3D0E                                              l10513 3CBC  
                                            l10601 2F82                                              l10353 4142  
                                            l10345 40D4                                              l10337 400E  
                                            l10273 116C                                              l10265 1038  
                                            l10257 0F98                                              l10249 0E7C  
                                            l10193 0A0C                                              l10441 1B0A  
                                            l10433 1ADE                                              l10425 1AA2  
                                            l10417 1A76                                              l10409 1A40  
                                            l10169 4316                                              l10177 4342  
                                            l10185 6226                                              l10097 0850  
                                            l10089 082E                                              l10281 3984  
                                            l10531 3D80                                              l10515 3CD2  
                                            l10523 3D16                                              l10507 3C9A  
                                            l10611 3048                                              l10603 2FBE  
                                            l10355 41D0                                              l10347 4108  
                                            l10339 403A                                              l10267 1090  
                                            l10259 0FA8                                              l10195 0A22  
                                            l10451 1B36                                              l10371 18AE  
                                            l10363 180A                                              l10179 435E  
                                            l10187 6236                                              l10099 0862  
                                            l10291 39F4                                              l10283 39AC  
                                            l11147 1602                                              l10541 51BE  
                                            l10533 3D98                                              l10525 3D24  
                                            l10509 3CA2                                              l10701 46EE  
                                            l10621 30BA                                              l10613 306A  
                                            l10605 2FE2                                              l10349 413C  
                                            l10269 10E4                                              l10197 0A24  
                                            l10445 1B20                                              l10437 1AF4  
                                            l10453 1B5C                                              l10381 1952  
                                            l10373 18CC                                              l10365 1830  
                                            l11149 4E98                                              l10189 6240  
                                            l10293 3A02                                              l10285 39BA  
                                            l10551 5214                                              l10543 51C6  
                                            l10527 3D30                                              l10711 473E  
                                            l10615 308C                                              l10607 3004  
                                            l10359 41D6                                              l10199 0A3A  
                                            l10471 1D06                                              l10463 1C18  
                                            l10455 1BB0                                              l10367 1856  
                                            l10623 683A                                              l10631 680E  
                                            l10295 3A1E                                              l10287 39C8  
                                            l10553 5216                                              l10545 51DA  
                                            l10537 5192                                              l10529 3D48  
                                            l10721 4788                                              l10713 4742  
                                            l10705 46FC                                              l10617 309E  
                                            l10609 3026                                              l10465 1C6C  
                                            l10457 1BDE                                              l10385 1982  
                                            l10377 18F4                                              l10641 2AE8  
                                            l10633 2710                                              l10561 5254  
                                            l10625 6850                                              l10297 3A2E  
                                            l10289 39CC                                              l10801 129E  
                                            l10555 5228                                              l10539 51B4  
                                            l10491 3C1E                                              l10731 4834  
                                            l10723 47F0                                              l10715 4756  
                                            l10707 470A                                              l10619 30A4  
                                            l10475 1D2E                                              l10467 1C82  
                                            l10459 1BF4                                              l10395 19AE  
                                            l10379 1950                                              l10651 37B6  
                                            l10643 2B02                                              l10571 52AC  
                                            l10563 525A                                              l10627 6A16  
                                            l10299 3A44                                              l10811 12F8  
                                            l10803 12B8                                              l10549 51EC  
                                            l10733 4846                                              l10725 4806  
                                            l10717 476E                                              l10709 471A  
                                            l10469 1CCA                                              l10485 1E0E  
                                            l10389 1998                                              l10397 19D4  
                                            l10653 37E2                                              l10645 364A  
                                            l10637 2726                                              l10573 52D4  
                                            l10565 526C                                              l10629 6824  
                                            l10581 5EBA                                              l10741 6012  
                                            l10821 1330                                              l10813 1304  
                                            l10805 12D4                                              l10495 3C32  
                                            l10487 3BD0                                              l10727 481C  
                                            l10591 2F04                                              l10479 1D9E  
                                            l10399 19EA                                              l10655 3816  
                                            l10647 3698                                              l10639 2AD2  
                                            l10559 69B0                                              l10575 52D8  
                                            l10567 5280                                              l10583 5ED8  
                                            l10743 601A                                              l10911 157A  
                                            l10903 153E                                              l10823 1334  
                                            l10815 130C                                              l10807 12E4  
                                            l10751 1184                                              l10489 3BE6  
                                            l10497 3C3A                                              l10681 3920  
                                            l10673 38E6                                              l10665 38AC  
                                            l10657 3870                                              l10649 36F2  
                                            l10577 52F2                                              l10569 5294  
                                            l10585 5EF8                                              l10745 6022  
                                            l10921 15BA                                              l10913 1588  
                                            l10905 154C                                              l10841 1384  
                                            l10833 1362                                              l10817 131A  
                                            l10809 12EA                                              l10761 11BC  
                                            l10753 1188                                              l10499 3C48  
                                            l10595 2F1A                                              l10691 397A  
                                            l10683 3954                                              l10675 391A  
                                            l10667 38E0                                              l10659 38A6  
                                            l10579 5EAE                                              l10747 603E  
                                            l10739 6000                                              l10923 15CA  
                                            l10915 1598                                              l10907 155C  
                                            l10931 15EE                                              l10851 13C8  
                                            l10843 138E                                              l10835 1370  
                                            l10827 1344                                              l10819 1326  
                                            l10771 11EC                                              l10763 11C0  
                                            l10755 119A                                              l10589 6A1C  
                                            l10941 166C                                              l10925 15DA  
                                            l10917 15A6                                              l10909 156A  
                                            l10933 1638                                              l10861 13FC  
                                            l10853 13CC                                              l10845 139A  
                                            l10829 1352                                              l10781 1234  
                                            l10773 1204                                              l10765 11CA  
                                            l10757 119E                                              l10695 3980  
                                            l10687 395A                                              l10951 171C  
                                            l10943 1678                                              l10935 163E  
                                            l10927 15DE                                              l10919 15B6  
                                            l10863 1408                                              l10855 13D6  
                                            l10847 13A4                                              l10839 1380  
                                            l10871 1420                                              l10791 126E  
                                            l10775 1218                                              l10783 1252  
                                            l10767 11D6                                              l10759 11B8  
                                            l10689 396A                                              l10961 175E  
                                            l10953 1720                                              l10945 168C  
                                            l10937 164E                                              l10881 1496  
                                            l10865 1410                                              l10857 13E2  
                                            l10849 13B0                                              l10873 1456  
                                            l10793 1288                                              l10785 1262  
                                            l10777 1224                                              l10769 11E0  
                                            l10699 46DC                                              l10971 17C0  
                                            l10963 176A                                              l10955 1744  
                                            l10947 16E4                                              l10939 1664  
                                            l10891 14E0                                              l10883 14A6  
                                            l10875 146E                                              l10859 13EC  
                                            l10795 1294                                              l10787 1266  
                                            l10779 1228                                              l10973 17C4  
                                            l10965 1790                                              l10957 1750  
                                            l10949 1718                                              l10981 17F0  
                                            l10893 14F2                                              l10885 14B8  
                                            l10877 1476                                              l10789 126A  
                                            l10975 17CE                                              l10967 179A  
                                            l10959 1754                                              l10983 17FA  
                                            l10895 1504                                              l10887 14C0  
                                            l10879 1484                                              l10977 17DA  
                                            l10969 17A6                                              l10897 1516  
                                            l10889 14D0                                              l10979 17E4  
                                            l10899 152A                                      ___fltol@sign1 052F  
                                __end_of_I2C1_Host FD9D                                              ?_labs 0511  
                              ?_CCP1_LoadDutyValue 0511                                    __end_of___fladd 22E8  
                                            ?_main 0501                                     ?_i2c_lcd_clear 0501  
                                  __end_of___fldiv 364A                                    __end_of___flneg 63E4  
                                            STR_10 FF58                                              STR_11 FEC4  
                                            STR_12 FF44                                              STR_20 FF1B  
                                            STR_21 FEDA                                              STR_13 FE95  
                                            STR_14 FFFA                                              STR_22 FDD9  
                                            STR_23 FFC6                                              STR_15 FFB6  
                                            STR_16 FFE5                                              STR_24 FF6C  
                                            STR_25 FFF2                                              STR_17 FFA5  
                                            STR_18 FFD6                                              STR_19 FF30  
                                            STR_28 FFF6                                    __end_of___awmod 55D6  
                                  __end_of___flmul 2710                                    __end_of___flsub 61C6  
                                  __end_of___fltol 4C4A                                              u10000 397A  
                                            u10001 3976                                              u10010 46EE  
                                  __end_of___lldiv 5724                                              u10011 46EA  
                                            u10020 473E                                              u10100 146E  
                                            u10021 473A                                              u10101 146A  
                                            u10030 476E                                              u10110 14A6  
                                            u10031 476A                                              u10111 14A2  
                                            u10040 4806                                              u10200 164E  
                                            u10120 14B8                                              u10041 4802  
                                            u10201 164A                                              u10121 14B4  
                                            u10050 481C                                              u10210 1664  
                                            u10130 14D0                                              u10051 4818  
                                            u10211 1660                                              u10131 14CC  
                                            u10060 4846                                              u10220 168C  
                                            u10140 14E0                                              u10061 4842  
                                            u10221 1688                                              u10141 14DC  
                                            u10230 16E4                                              u10150 14F2  
                                            u10070 1218                                              u10231 16E0  
                                            u10151 14EE                                              u10071 1214  
                                            u10240 1718                                              u10160 1504  
                                            u10080 12D4                                              u10241 1714  
                                            u10161 1500                                              u10081 12D0  
                                            u10170 1516                                              u10090 12E4  
                                            u10171 1512                                              u10091 12E0  
                                            u10180 1528                                              u10181 1524  
                         i2I2C1_CounterSet@counter 0502                                              u10190 153A  
                                            u10191 1536                                              u10407 12AA  
                                            u10417 13BC                                              u10507 4A82  
                                            u10427 17B2                                              u10517 4A96  
                                            u10437 67AE                                              u10607 4B3A  
                                            u10527 4AAA                                              u10447 49EE  
                                            u10367 11AA                                              u10617 67C2  
                                            u10537 4ABE                                              u10457 4A0E  
                                            u10377 11F8                                              _U1P1H 02A6  
                                            u10707 5AF0                                              u10627 611E  
                                            u10547 4AD6                                              u10467 4A26  
                                            u10387 1240                                              _U1P2H 02A8  
                                            u10717 5E2A                                              u10637 612C  
                                            u10557 4AE6                                              u10477 4A46  
                                            u10397 127A                                              _U1P1L 02A5  
                                            _U1P3H 02AA                                              u10807 5A54  
                                            u10727 52E4                                              u10647 62EA  
                                            u10567 4AFA                                              u10487 4A5A  
                                            _T2CON 0324                                              _U1P2L 02A7  
                                            u10817 5A70                                              u10737 622C  
                                            u10657 594A                                              u10577 4B0C  
                                            u10497 4A6E                                              _U1P3L 02A9  
                                            u10907 6742                                              u10827 57CE  
                                            u10747 41FA                                              u10667 595A  
                                            u10587 4B1A                                              u10917 674C  
                                            u10837 582C                                              u10757 422C  
                                            u10677 596A                                              u10597 4B2C  
                                            u10927 3C34                                              u10847 5848  
                                            u10767 436A                                              u10687 5A86  
                                            u10937 3C9C                                              u10857 3094  
                                            u10777 53F0                                              u10697 5AD4  
                                            u10947 3D10                                              u10867 4554  
                                            u10787 5412                                              u10877 45B4  
                                            u10797 5A06                                              u10887 45D0  
                                            _T4CON 0330                                              u10897 4710  
                                            _IOCAF 0407                                              _T2HLT 0325  
                                            _IOCBF 040F                                              _IOCCF 0417  
                                            _IOCAN 0406                                              _IOCEF 0427  
                                            _IOCAP 0405                                              _IOCBN 040E  
                                            _IOCBP 040D                                              _IOCCN 0416  
                                            _IOCCP 0415                                              _IOCEN 0426  
                                            _T4HLT 0331                                              _IOCEP 0425  
                                  __end_of___lwdiv 5C5E                                              _T2TMR 0322  
                                            _U1UIR 02B1                                              _T2RST 0327  
                                            _U1RXB 02A1                                              i2l202 69F6  
                                            _U1TXB 02A3                                              i2l211 6A3E  
                                            i2l220 6A38                                              _T4TMR 032E  
                                            i2l205 6A50                                              i2l214 6288  
                                            i2l230 68BC                                              i2l151 58BC  
                                            i2l208 69FE                                              i2l224 660C  
                                            i2l401 6A60                                              i2l233 68A6  
                                            i2l410 6518                                              i2l242 693A  
                                            i2l154 58E4                                              _T4RST 0333  
                                            i2l227 687A                                              i2l171 53BE  
                                            i2l251 69DE                                              i2l236 6890  
                                            i2l181 6962                                              i2l245 6984  
                                            i2l157 58E4                                              i2l149 587A  
                                            i2l406 6796                                              i2l254 6A0E  
                                            i2l239 68D2                                              i2l416 6A62  
                                            i2l176 694E                                              i2l168 53B8  
                                            i2l248 6A4A                                              i2l193 6658  
                                            i2l185 6632                                              i2l371 6A5C  
                                            i2l380 64B4                                              i2l196 6A44  
                                            i2l391 677E                                              i2l199 6A06  
                                            i2l376 6766                                              i2l386 6A5E  
                                            i2l395 64E6                                              i2l921 6482  
                                            i2l908 68FE                                              i2l950 6A58  
                                            i2l926 68E0                                              i2l953 644C  
                                            i2l962 6A66                                              i2l938 49E2  
                                            i2l956 644E                                              i2l965 6A64  
                                            i2l959 6A68                                 ??_I2C1_BufferClear 0502  
                                            _OSCEN 00B3                                       vfpfcnvrt@fmt 0602  
                                            _TMR0H 0319                                              _TMR0L 0318  
                                   ?_i2c_lcd_write 0501                                              _TRISA 04C6  
                                            _TRISB 04C7                                     ?_INT0_CallBack 0501  
                                            _TRISC 04C8                                              _TRISD 04C9  
                                            _TRISE 04CA                                              _TRISF 04CB  
                                      _Default_ISR 6A5C                             _DetectAdvancedGestures 400E  
                                 ??_I2C1_StartSend 0511                                    _TMR4_Initialize 659C  
                              ___lmul@multiplicand 0515                           _current_motor_directions 0541  
                                  _i2c_lcd_command 60EA                                  ??_I2C1_Initialize 0511  
                                     _accel_offset 0685         __end_of_UART1_FramingErrorCallbackRegister 66E2  
             ??_UART1_FramingErrorCallbackRegister 0514                ?_UART1_FramingErrorCallbackRegister 0511  
               _UART1_FramingErrorCallbackRegister 66C0                                     ?_INT1_CallBack 0501  
                                      ?_TMR0_Start 0501                                              _fabsf 63E4  
                                            _atanf 09FC                                              _flags 06D8  
                                    ?_MPU6050_Init 0501                     ??_INT1_DefaultInterruptHandler 0506  
                          MPU6050_GetMovement@data 05F9                                read_prec_or_width@c 0517  
                                            _errno 06CA                                read_prec_or_width@n 0518  
                                            _fputc 500A                                              _pi_lo FDD1  
                                            _fputs 61C6                           ??_MPU6050_ReadSensorData 0533  
                                   ??_i2c_lcd_init 0522                                     ??_i2c_lcd_goto 0522  
                                            labs@a 0511                                              pad@fp 0521  
                                   ??_i2c_lcd_puts 0522                                              _width 06CC  
                                            _putch 6A5A                                              main@i 0676  
                                            _sqrtf 2B20                                     ?_INT2_CallBack 0501  
                         _INT1_SetInterruptHandler 6994                          ?_HC_SR04_Read_Distance_CM 05B3  
                         ??_I2C1_InterruptsDisable 0502                                              pclath 04FA  
                                 ??_I2C1_WriteRead 051C                                              pclatu 04FB  
                                  _tmr0PeriodCount 0545                                              tablat 04F5  
                            I2C1_DataTransmit@data 0503                                              plusw1 04E3  
                                            plusw2 04DB                               ??_CCP1_LoadDutyValue 0513  
                                            status 04D8                                    __end_of_sprintf 6050  
                                   ?___fpclassifyf 0511                       MPU6050_ReadSensorRaw@rawData 0560  
                          ??_MPU6050_WriteRegister 051A                                     ?__write_nibble 0501  
                     DetectAdvancedGestures@abs_ax 05C1                       DetectAdvancedGestures@abs_ay 05C5  
                     DetectAdvancedGestures@abs_az 05C9                             Motor_SetSpeed@motor_id 052F  
                                     ??_I2C1_Close 0501                        ??_UART1_Transmit_Vector_ISR 0511  
                                     ??_I2C1_Write 0518                                    __initialization 5AF8  
                     MPU6050_Calibrate@temp_accelX 05B9                       MPU6050_Calibrate@temp_accelY 05BD  
                     MPU6050_Calibrate@temp_accelZ 05C1                                       __end_of_labs 5F5A  
                                     __end_of_main 180A                                  _I2C1_IsBusTimeOut 6892  
                 _UART1_RxCompleteInterruptHandler 06A9                                 ?_I2C1_IsBusTimeOut 0501  
                          __end_of_TMR2_Initialize 65E8                    _HC_SR04_Get_Filtered_Value$3080 0564  
                                     ?_UART1_Write 0501                                      main@alert_str 0634  
                                           ??_labs 0515                                             ??_main 0632  
                                 ?_CCP1_Initialize 0501                                      __activetblptr 0003  
                               _Robot_MoveBackward 6850                   __end_of_UART1_Receive_Vector_ISR 68EA  
                          _Motors_SynchronizedStop 620A                                ??_I2C1_IsBusTimeOut 0502  
                       __end_of_read_prec_or_width 500A                                   _UART1_Initialize 5724  
  UART1_RxCompleteCallbackRegister@callbackHandler 0511   UART1_ParityErrorCallbackRegister@callbackHandler 0511  
UART1_OverrunErrorCallbackRegister@callbackHandler 0511  UART1_FramingErrorCallbackRegister@callbackHandler 0511  
                                   ??_MPU6050_Init 0521                                 __end_of_I2C1_Close 665A  
                                _movement_detector 0700                                             ?_fabsf 05B3  
                 __end_of_Motors_SynchronizedStart 4394                                             ?_atanf 05BB  
                            _I2C1_InterruptsEnable 6900                                             ?_fputc 0511  
                                           _ACTCON 00AC                                ?_Robot_MoveBackward 0571  
                                           ?_fputs 051A                                             _CCPR1H 0341  
                                           _CCPR2H 0345                                             _CCPR1L 0340  
                                           _CCPR2L 0344                                 __end_of_I2C1_Write 6000  
                       Motor_SetDirection@motor_id 0514                                   _UART1_ReceiveISR 486C  
                                           _ANSELA 0400                                             ?_putch 0501  
                                           _ANSELB 0408                                             _ANSELC 0410  
                                           _ANSELD 0418                                             _ANSELE 0420  
                                           _ANSELF 0428                                             _T0CON0 031A  
                                           _T0CON1 031B                                             ?_sqrtf 0575  
                                           _RB1I2C 0289                                             _RB2I2C 0288  
                                           _U1CON0 02AB                                             _U1CON1 02AC  
                                           _U1CON2 02AD                                             _RC3I2C 0287  
                                           _RC4I2C 0286                                             _U1BRGH 02AF  
                                           _U1FIFO 02B0                                             _U1BRGL 02AE  
                    __end_of_HC_SR04_Trigger_Pulse 6756                      __end_of_HC_SR04_Add_To_Filter 5EAE  
                                           _RB1PPS 020A                                             _RB2PPS 020B  
                                           _RC2PPS 0213                                             _ODCONA 0402  
                                           _ODCONB 040A                                             _ODCONC 0412  
                                           _RC6PPS 0217                                             _ODCOND 041A  
                                           _ODCONE 0422                                             _ODCONF 042A  
                                           _RC7PPS 0218                                             i2l1061 6702  
                                           i2l5011 664C                                             i2l5003 6634  
                                           i2l5013 6650                                             i2l5005 6636  
                                           i2l5031 625C                                             i2l5015 6654  
                                           i2l5007 663C                                             i2l5041 6274  
                                           i2l5033 6264                                             i2l5025 68A8  
                                           i2l5009 6644                                             i2l5051 627E  
                                           i2l5043 6276                                             i2l5035 6268  
                                           i2l5053 6280                                             i2l5045 6278  
                                           i2l5037 626A                                             i2l5029 624C  
                                           i2l5055 6284                                             i2l5047 627A  
                                           i2l5039 626C                                             i2l5071 6892  
                                           i2l5063 6866                                             i2l4271 69D6  
                                           i2l4265 6976                                             i2l5057 6286  
                                           i2l5049 627C                                             i2l4273 6A08  
                                           i2l5059 68BE                                             i2l5067 687C  
                                           i2l4275 6A3A                                             i2l4267 6A34  
                                           i2l4269 6A46                                             _INLVLA 0404  
                                           _INLVLB 040C                                             _INLVLC 0414  
                                           _INLVLD 041C                                             _INLVLE 0424  
                                           _INLVLF 042C                                             i2l9011 693C  
                                           i2l9003 5398                                             i2l9021 6778  
                                           i2l9013 694A                                             i2l9005 53AC  
                                           i2l7431 6450                                             i2l9023 677A  
                                           i2l9015 6950                                             i2l9007 53B0  
                                           i2l7441 646C                                             i2l7433 6450  
                                           i2l8073 66E2                                             i2l9025 6790  
                                           i2l9017 6760                                             i2l9009 53BC  
                                           i2l7427 68EA                                             i2l7443 647C  
                                           i2l7435 6460                                             i2l8075 66F6  
                                           i2l9027 6792                                             i2l9019 6762  
                                           i2l7445 647E                                             i2l7437 6466  
                                           i2l8077 66FE                                             i2l9053 68DC  
                                           i2l8501 69FA                                             i2l9055 6A54  
                                           i2l7447 6480                                             i2l7439 646A  
                                           i2l8503 660E                                             i2l8511 65E8  
                                           i2l8601 6446                                             i2l4993 6928  
                                           i2l8505 6620                                             i2l8521 69F2  
                                           i2l8513 65EC                                             i2l8531 64E8  
                                           i2l8523 6484                                             i2l4987 6A40  
                                           i2l8507 6626                                             i2l8515 6600  
                                           i2l8533 64FE                                             i2l8525 649A  
                                           i2l8517 6A4C                                             i2l8509 662E  
                                           i2l8551 4880                                             i2l8527 64B6  
                          __end_of_UART1_IsRxReady 6900                                             i2l8561 48E4  
                                           i2l8553 4890                                             i2l8529 64CC  
                                           i2l8571 494C                                             i2l8563 48F8  
                                           i2l8555 48A4                                             i2l8573 4962  
                                           i2l8565 490E                                             i2l8557 48BA  
                                           i2l8549 486C                                             i2l8591 49C8  
                                           i2l8583 499C                                             i2l8575 497C  
                                           i2l8567 4928                                             i2l8559 48D4  
                                           i2l8593 641A                                             i2l8585 49AC  
                                           i2l8577 4980                                             i2l8569 4938  
                                           i2l8595 642A                                             i2l8587 49B0  
                                           i2l8579 4986                                             i2l8499 6A02  
                                           i2l8597 643C                                             i2l8589 49B2  
                                           i2l8599 6442                                             i2l8951 5854  
                                           i2l8961 58A6                                             i2l8953 5864  
                                           i2l8971 58D8                                             i2l8963 58AC  
                                           i2l8955 5872                                             i2l8981 5324  
                                           i2l8973 58DC                                             i2l8965 58B4  
                                           i2l8957 5888                                             i2l8991 535C  
                                           i2l8983 532C                                             i2l8975 5308  
                                           i2l8959 5896                                             i2l8985 5340  
                                           i2l8993 5364                                             i2l8977 531C  
                                           i2l8969 58CA                                             i2l8995 5378  
                                           i2l8987 5354                                             i2l8979 5320  
                                           i2l8997 538C                                             i2l8989 5358  
                                           i2l8999 5390                                             _PCF_Wr 5A78  
                          __end_of_UART1_IsTxReady 67E2                                             _OSCFRQ 00B1  
                              _ConvertPercentToPWM 5D98                                   ?_CCP2_Initialize 0501  
                                 __end_of___xxtofl 4548                                   ?_TMR0_CounterGet 0511  
                                 _fixedPatientName 06EE                          __end_of_I2C1_IsBusTimeOut 68A8  
                                     _CCPTMRS0bits 034C                                       vfprintf@cfmt 0613  
                   MPU6050_ReadSensorData@temp_raw 05C1                                             ___flge 4C4A  
                                           ___fleq 55D6                                         _Motor_Stop 6722  
                                           ___lmul 5CCC                               ??_Robot_MoveBackward 0533  
                                        ??___fladd 052B                                          ??___fldiv 05A2  
                                        ??___flneg 0515                                          ??___awmod 0515  
                                        ??___flmul 0527                                             _atan2f 180A  
                                        ??___flsub 0533                                          ??___fltol 052B  
                                        ??___lldiv 0525                                         _Robot_Stop 6A16  
                                           _efgtoa 0000                                             _atanhi FDAD  
                                        ??___lwdiv 0515                                             _atanlo FD9D  
                                           _floorf 3DF8                                    ??_i2c_lcd_clear 0521  
                                           fabsf@u 05B7                                             fabsf@x 05B3  
                                           _memcpy 6050                                   ?_TMR0_Initialize 0501  
                             read_prec_or_width@ap 0513                                 _I2C1_RestartEnable 6A28  
                          __end_of_TMR4_Initialize 65C2                                          ?_I2C1_ISR 0501  
                                           clear_0 5B3E                                             clear_1 5B4A  
                                           clear_2 5B5A                       Robot_TurnLeft@speed_pwm_duty 0571  
                             ?_ConvertPercentToPWM 052A                                    ___awmod@divisor 0513  
                          __end_of_i2c_lcd_command 6134                                             atanf@w 05DC  
                                           atanf@x 05BB                                             atanf@z 05E1  
                                           isa$std 0001                                    ___awmod@counter 0515  
                                           pad@buf 0523                                    ??_i2c_lcd_write 051F  
                                  ??_INT0_CallBack 0504                                  ?_CLOCK_Initialize 0501  
                                           _strcpy 628A                                 i2c_lcd_command@cmd 0520  
                             __end_of_HC_SR04_Init 69CC                                             fputc@c 0511  
                        _UART1_Transmit_Vector_ISR 6A54               __end_of_INT2_DefaultInterruptHandler 6A64  
                     _INT2_DefaultInterruptHandler 6A62                                             fputs@c 051E  
                                           fputs@i 051F                                             fputs@s 051A  
                         _current_motor_speeds_pwm 069D                                    ??_INT1_CallBack 0506  
                               ??_CLOCK_Initialize 0511                                    ___fpclassifyf@e 0519  
                                  ___fpclassifyf@u 051B                                    ___fpclassifyf@x 0511  
                              ?_I2C1_RestartEnable 0501                                  ??_I2C1_WriteStart 0512  
                                     __mediumconst FD7E                                             tblptrh 04F7  
                                           tblptrl 04F6                                             tblptru 04F8  
       __end_of_UART1_OverrunErrorCallbackRegister 66C0               ??_UART1_OverrunErrorCallbackRegister 0514  
              ?_UART1_OverrunErrorCallbackRegister 0511                 _UART1_OverrunErrorCallbackRegister 669E  
                      CCP2_LoadDutyValue@dutyValue 0513                                             putch@c 0501  
                                  ??_INT2_CallBack 0508                                   __end_of_vfprintf 5F04  
                                           sqrtf@i 0582                                             sqrtf@m 058E  
         INT2_SetInterruptHandler@InterruptHandler 0511           INT1_SetInterruptHandler@InterruptHandler 0511  
         INT0_SetInterruptHandler@InterruptHandler 0511                                             sqrtf@q 0586  
                                           sqrtf@r 0592                                             sqrtf@s 057E  
                                           sqrtf@t 058A                                             sqrtf@x 0575  
                                   _Motor_SetSpeed 5476                                          ??_sprintf 0533  
                                       ___flge@ff1 0575                                    ??___fpclassifyf 0515  
                                       ___flge@ff2 0579                                       ___xxtofl@arg 051B  
                                     ___xxtofl@exp 051A                                  _SYSTEM_Initialize 6548  
                                     ___xxtofl@val 0511                                         ___fleq@ff1 0511  
                                       ___fleq@ff2 0515                                 i2c_lcd_goto@F17405 06E6  
                                    ??_I2C1_RX_ISR 0503                                         __accesstop 0560  
                          __end_of__initialization 5B6E                                      ??_I2C1_TX_ISR 0504  
                                  ??__write_nibble 051C                                      ??_I2C1_IsAddr 0502  
                    MPU6050_ReadSensorRaw@reg_addr 056F                                      ??_I2C1_IsData 0502  
                                        ?_INT0_ISR 0501                                      ??_I2C1_IsNack 0502  
                                        ?_INT1_ISR 0501                                         ___flneg@f1 0511  
                                        ?_INT2_ISR 0501                                      ??_I2C1_IsBusy 0511  
                     ??_HC_SR04_Get_Filtered_Value 052C                                 ?_SYSTEM_Initialize 0501  
                      MPU6050_ReadSensorRaw@accelX 051D                                      ___rparam_used 0001  
                      MPU6050_ReadSensorRaw@accelY 051F                        MPU6050_ReadSensorRaw@accelZ 0521  
                                       ___fltol@f1 056D                HC_SR04_Measure_Echo_Time@start_time 057F  
                             ??_I2C1_RestartEnable 0511                                     __pcstackCOMRAM 0501  
                      MPU6050_ReadSensorRaw@result 056E                                       __pidataBANK6 6964  
                                     __pidataBANK7 69CC                                ??_SYSTEM_Initialize 0515  
                                    __end_of_fabsf 641A                                      __end_of_atanf 1184  
                                   ivt0x8_undefint 0100                                      __end_of_fputc 50D4  
                                    __end_of_pi_lo FDD5                                      __end_of_fputs 620A  
                             __end_of_i2c_lcd_init 4B42                               __end_of_i2c_lcd_goto 60EA  
                      MPU6050_Calibrate@temp_gyroX 05C5                        MPU6050_Calibrate@temp_gyroY 05C9  
                      MPU6050_Calibrate@temp_gyroZ 05CD                                    _I2C1_IsBusy$599 0511  
                             __end_of_i2c_lcd_puts 5D98                              ??_ConvertPercentToPWM 052C  
                                    __end_of_putch 6A5C                                      __end_of_sqrtf 2F04  
                                       ??_I2C1_ISR 0502                                   ?_TMR2_Initialize 0501  
                        ??_Motors_SynchronizedStop 0530                                I2C1_Write@retStatus 0518  
                                       __end_of_pi FDD9                     MPU6050_WriteRegister@tx_buffer 051B  
                                  i2c_lcd_goto@col 0526                                    i2c_lcd_goto@row 0521  
                      MPU6050_WriteRegister@result 051D                   __end_of_INT2_SetInterruptHandler 6994  
                        _UART1_FramingErrorHandler 06BB                                _MPU6050_GetMovement 364A  
                           __end_of_Motor_SetSpeed 5528                      ?_INT2_DefaultInterruptHandler 0501  
                           ?_I2C1_InterruptsEnable 0501                                   _gyro_lsb_per_dps 06DE  
                                _MPU6050_Calibrate 2F04                                            ??_fabsf 0533  
                                          ??_atanf 0533                           _UART1_Receive_Vector_ISR 68D4  
                                          ??_fputc 0515                          __end_of_SYSTEM_Initialize 6572  
                                          ??_fputs 051E                                          PCF_Wr@tmp 051B  
                               ?_MPU6050_Calibrate 0501                                            ??_putch 0511  
                                          ??_sqrtf 0579                                         __pbssBANK5 05FE  
                                       __pbssBANK6 0679                                         __pbssBANK7 0700  
                                  i2c_lcd_puts@str 0520                                            ?_PCF_Wr 0501  
                                 ?_UART1_IsRxReady 0501                          MPU6050_ReadSensorRaw@temp 0523  
                         _Motors_SynchronizedStart 41DA                                   ?_UART1_IsTxReady 0501  
                            _INT0_InterruptHandler 06C4                                         ??_INT0_ISR 0504  
                                       ??_INT1_ISR 0506                                         ??_INT2_ISR 0508  
                                       _atanf$4451 05D3                                         _atanf$4452 05BF  
                                       _atanf$4453 05D7                                         _atanf$4454 05C3  
                                       _atanf$4455 05C7                              _TMR0_OverflowCallback 06F0  
                                  i2c_lcd_write@ch 051F                                    _I2C1_CounterGet 6A3A  
                                  _I2C1_CounterSet 69E0                                ??_MPU6050_Calibrate 05B3  
                                          IVTBASEH 045E                                            IVTBASEL 045D  
                                          IVTBASEU 045F                      __end_of_MPU6050_ReadSensorRaw 46DC  
                             ?_MPU6050_GetMovement 05F9                                __end_of_I2C1_RX_ISR 6950  
       Motors_SynchronizedDirection@pwm_duty_value 056A                                __end_of_I2C1_TX_ISR 6964  
                              __end_of_I2C1_IsAddr 68D4                                     _Motors_StopAll 69B0  
                                          ?___flge 0575                                        ?_Motor_Stop 0501  
                                          ?___fleq 0511                                __end_of_I2C1_IsData 6892  
                              __end_of_I2C1_IsNack 687C                                            ?___lmul 0511  
                              __end_of_I2C1_IsBusy 659C                               __end_of_MPU6050_Init 5476  
                                     ??_UART1_Read 050A                                            _I2C1CLK 029C  
                                          _I2C1CNT 028D                                            _I2C1ERR 0297  
                                          _I2C1PIE 029B                                            _I2C1PIR 029A  
                                          _I2C1RXB 028B                                            _I2C1TXB 028C  
                           _MPU6050_ReadSensorData 2710                                            ?_atan2f 05E9  
                               _CCP2_LoadDutyValue 633C                           ?_HC_SR04_Get_Last_Status 0501  
                                      ?_Robot_Stop 0501                                            ?_efgtoa 05C7  
                                  __lcd_send@value 051E                                    _I2C1_Initialize 5DFA  
                                          _CCP1CON 0342                                            _CCP2CON 0346  
                                   _Robot_TurnLeft 6824                                            ?_floorf 05B3  
                           _I2C1_InterruptsDisable 6976                                            ?_memcpy 0511  
                             main@current_distance 0674                                     ___lmul@product 0519  
                                 ?_TMR4_Initialize 0501                              __end_of_I2C1_IsBusCol 68BE  
                                 ?_i2c_lcd_command 0501                            ?_DetectAdvancedGestures 05BB  
                 __end_of_HC_SR04_Read_Distance_CM 486C                                            ?_strcpy 0511  
                            __end_of_I2C1_BusReset 628A                                            _U1ERRIE 02B3  
                                          _U1ERRIR 02B2                                ?_CCP2_LoadDutyValue 0511  
                                        _I2C1STAT1 0299                         ??_INT1_SetInterruptHandler 0514  
                                          _INT0PPS 023E                                       ?_Default_ISR 0501  
                                          _U1RXCHK 02A2                          __end_of_MPU6050_Calibrate 32B8  
                                          _U1TXCHK 02A4                                            _U1RXPPS 0272  
                                        ?___xxtofl 0511                              I2C1_WriteRead@address 0512  
                                        _I2C1_Read 0000                                          _I2C1_Host FD7F  
                                          _OSCCON1 00AD                                            _OSCCON3 00AF  
                                  ?_Motor_SetSpeed 052D                                            _IVTLOCK 0459  
                          i2_I2C1_InterruptsEnable 6928                                  __end_of__lcd_send 6302  
                                          _OSCTUNE 00B0                                       ??_TMR0_Start 0511  
                                          _SLRCONA 0403                                            _SLRCONB 040B  
                                          _SLRCONC 0413                                            _SLRCOND 041B  
                                          _SLRCONE 0423                                            _SLRCONF 042B  
                             main@current_movement 0678                                         _fixedPhone 06EA  
                               __end_of_UART1_Read 6484                               ??_CCP2_LoadDutyValue 0513  
                        ?_INT0_SetInterruptHandler 0511                          INTERRUPT_Initialize@state 0514  
                            __end_of_I2C1_StopSend 660E                              ??_MPU6050_GetMovement 0533  
                           __end_of_Motors_StopAll 69BE                                            __Hparam 0000  
                                          __Lparam 0000                           __end_of_UART1_Initialize 57C0  
                    __end_of_MPU6050_WriteRegister 5A78                               UART1_Read@tempRxTail 050A  
                           __end_of_Robot_TurnLeft 683A                                            ___fladd 1E30  
                                          ___fldiv 32B8                                            ___flneg 63AC  
                                          ___awmod 5528                                            ___flmul 22E8  
                                          ___flsub 617E                                            ___fltol 4B42  
                                          ___lldiv 5680                           __end_of_UART1_ReceiveISR 49E4  
                                          ___lwdiv 5BEA                                          ?_vfprintf 060D  
                   __end_of_DetectAdvancedGestures 41DA                                 __end_of_TMR0_Start 6A16  
                     __end_of_I2C1_InterruptsClear 6A4C                                            __pcinit 5AF8  
                                          __ramtop 2600                                            __ptext0 1184  
                                          __ptext1 6000                                            __ptext2 5EAE  
                                          __ptext3 3984                                            __ptext4 4F3E  
                                          __ptext5 0000                                            __ptext6 628A  
                                          __ptext7 5C5E                                            __ptext8 61C6  
                                          __ptext9 500A                                          _T2CONbits 0324  
                             I2C1_Write@dataLength 0516                                            atan2f@m 0618  
                            read_prec_or_width@fmt 0511                                _I2C1_RestartDisable 6A34  
                                          atan2f@x 05ED                                            atan2f@y 05E9  
                                          atan2f@z 060C                                        _I2C1ERRbits 0297  
                                       ??___xxtofl 0515                                   ___awmod@dividend 0511  
                                        _T4CONbits 0330                           ??_PIN_MANAGER_Initialize 0511  
                                      _I2C1PIEbits 029B                                          _T2HLTbits 0325  
                                          atanf@s1 05CB                                            atanf@s2 05CF  
                                          atanf@id 05E0                                            atanf@ix 05E5  
                                          efgtoa@c 05CD                                            efgtoa@d 05DB  
                                          efgtoa@e 05DF                                            efgtoa@f 05C9  
                                          efgtoa@g 05F2                                            efgtoa@h 05E9  
                                          efgtoa@i 05E7                                            efgtoa@l 05ED  
                                          efgtoa@m 05DD                                            efgtoa@n 05F6  
                                          efgtoa@p 05D2                                            efgtoa@t 05D4  
                                          efgtoa@u 05F8                                            efgtoa@w 05E1  
                                      _I2C1PIRbits 029A                                          _T4HLTbits 0331  
                                        _PIE11bits 04A9                            __end_of_I2C1_CounterGet 6A40  
                      HC_SR04_Get_Filtered_Value@i 0566                            __end_of_I2C1_CounterSet 69E8  
                                          _sprintf 6000                               end_of_initialization 5B6E  
                                        _U1UIRbits 02B1                                            floorf@e 05C1  
                                        _T2RSTbits 0327                                            floorf@m 05BD  
                         _INT2_SetInterruptHandler 6986                                            floorf@u 05C3  
                                          floorf@x 05B3                     ??_INT2_DefaultInterruptHandler 0508  
                                ??_Robot_TurnRight 0533                 __end_of_HC_SR04_Get_Filtered_Value 5250  
                       _HC_SR04_Get_Filtered_Value 5192                                            memcpy@d 0517  
                                          memcpy@n 0515                                          _PIR10bits 04B8  
                                        _T4RSTbits 0333                                            memcpy@s 0519  
                                        _PIR11bits 04B9                                            fputc@fp 0513  
                                      _I2C1_RX_ISR 693C                                            fputs@fp 051C  
                                      _I2C1_TX_ISR 6950                                        _I2C1_IsAddr 68BE  
                       ?_HC_SR04_Measure_Echo_Time 0571                                        _I2C1_IsData 687C  
                     MPU6050_ReadRegister@reg_addr 051F                                        _I2C1_IsNack 6866  
                               _read_prec_or_width 4F3E                                        _I2C1_IsBusy 6572  
                            I2C1_AddrTransmit@addr 0511                                          i2u1095_47 626E  
                             ?_I2C1_RestartDisable 0501                                       _HC_SR04_Init 69BE  
                          __end_of_I2C1_Initialize 5E54                                    ___lldiv@divisor 0521  
                  __end_of_HC_SR04_Get_Last_Status 6A34                                    ?_Motors_StopAll 0501  
                                  ___lldiv@counter 0529                                       _buffer_index 0548  
                                __end_of_vfpfcnvrt 3BD0                                       PCF_Wr@result 051A  
                                       efgtoa@mode 05D9                                         efgtoa@sign 05F1  
                                 _UART1_sendString 5B74                                    ?_Robot_TurnLeft 0571  
                                          postdec1 04E5                                            postdec2 04DD  
                              ?_read_prec_or_width 0511                                            postinc0 04EE  
                                          postinc1 04E6                                            postinc2 04DE  
                                 vfpfcnvrt@convarg 0606                                   _I2C1_DataReceive 6A4C  
                                  _I2C1_WriteStart 6302                                         ??_vfprintf 0533  
                                          sqrtf@ix 0596                                  UART1_Write@txData 0512  
                              _UART1_RxDataHandler 66E2                                            strcpy@d 0515  
         __end_of_UART1_DefaultParityErrorCallback 6A66                 ??_UART1_DefaultParityErrorCallback 050A  
                ?_UART1_DefaultParityErrorCallback 0501                   _UART1_DefaultParityErrorCallback 6A64  
           Motors_SynchronizedStart@final_pwm_duty 0531                                          _PORTAbits 04CE  
                            _INT1_InterruptHandler 06C1                         __end_of_Motor_SetDirection 4F3E  
                        ??i2_I2C1_InterruptsEnable 0502                                        ___fladd@grs 0532  
                                _is_reversing_flag 06DB                                      ___xxtofl@sign 0519  
                                        _TRISAbits 04C6                                          _TRISDbits 04C9  
                         _HC_SR04_Read_Distance_CM 46DC                                       _fixedDisease 06EC  
             __end_of_Motors_SynchronizedDirection 5308                       _Motors_SynchronizedDirection 5250  
                             ??_read_prec_or_width 0515                                        ___fldiv@grs 05AD  
                                      ___fldiv@rem 05A6                   _UART1_TxCompleteInterruptHandler 06AF  
                             ?_UART1_RxDataHandler 0501                                       _i2c_lcd_init 49E4  
                                     _i2c_lcd_goto 60A0                                       _i2c_lcd_puts 5D36  
                                _UART1_TransmitISR 641A                                        ___flmul@grs 0562  
                            _HC_SR04_Trigger_Pulse 673E                                        _CCP1CONbits 0342  
                            _HC_SR04_Add_To_Filter 5E54                                        _CCP2CONbits 0346  
                                   __end_of_PCF_Wr 5AF8                              ??_I2C1_RestartDisable 0502  
                               ?_UART1_TransmitISR 0501                           _MPU6050_GetMovement$4444 0619  
                         _MPU6050_GetMovement$4445 061D                           _MPU6050_GetMovement$4446 0621  
                         _MPU6050_GetMovement$4447 0625                  __end_of_HC_SR04_Measure_Echo_Time 3DF8  
                                   _last_timestamp 06D0                            I2C1_WriteRead@retStatus 051C  
                  _TMR2_DefaultPeriodMatchCallback 0000                                ??_UART1_TransmitISR 0510  
                     __end_of_INTERRUPT_Initialize 59F6                                     _I2C1_ERROR_ISR 5308  
                                   __end_of___flge 4D50                                     __end_of___fleq 5680  
             __end_of_INT0_DefaultInterruptHandler 6A60                       _INT0_DefaultInterruptHandler 6A5E  
                                   __end_of___lmul 5D36                                        vfpfcnvrt@ap 0604  
                                      vfpfcnvrt@cp 060B                                        vfpfcnvrt@fp 0600  
                                   __end_of_atan2f 1E30                                     __end_of_efgtoa 09FC  
                                   __end_of_atanhi FDBD                                     __end_of_atanlo FDAD  
                                   __end_of_floorf 400E                   Robot_MoveBackward@speed_pwm_duty 0571  
                            __end_of_i2c_lcd_clear 67CC                         ??_UART1_Receive_Vector_ISR 050E  
                                   __end_of_memcpy 60A0                                i2_I2C1_AddrTransmit 6A00  
                                       floorf@F521 0691                                  _last_echo_time_us 06A1  
                                 i2_I2C1_StartSend 6A40                            ??_I2C1_InterruptsEnable 0511  
                            __end_of_i2c_lcd_write 67B6                              __end_of_INT0_CallBack 64B6  
                                   __end_of_strcpy 62C6                                start_initialization 5AF8  
                       ??_Motors_SynchronizedStart 0560                                        __end_of_aT0 FDD1  
                                      __end_of_aT1 FDCD                                        __end_of_aT2 FDC9  
                                      __end_of_aT3 FDC5                                        __end_of_aT4 FDC1  
                            __end_of_INT1_CallBack 64E8                                        __end_of_pad 5CCC  
                        MPU6050_WriteRegister@data 0519                            I2C1_WriteRead@writeData 0514  
                             _TMR0_DefaultCallback 0000                                   ?_I2C1_CounterGet 0501  
                                     _MPU6050_Init 53C0                                   ?_I2C1_CounterSet 0501  
                        __end_of_UART1_TransmitISR 6450                              ??_UART1_RxDataHandler 050C  
                       MPU6050_ReadSensorData@data 05B3                      ?_Motors_SynchronizedDirection 0569  
                                       ivt0x8_base 0008                              __end_of_INT2_CallBack 651A  
                                 _I2C1_BufferClear 6A08                                           ??_PCF_Wr 0519  
                                    _uart1RxBuffer 074E        HC_SR04_Measure_Echo_Time@timeout_counter_us 0583  
                             ?i2_I2C1_AddrTransmit 0501                               _I2C1_InterruptsClear 6A46  
                            __end_of___fpclassifyf 4E4E                                      _uart1TxBuffer 0756  
                               _sensor_initialized 06D9                            __end_of_I2C1_WriteStart 633C  
                            __end_of__write_nibble 5972                                  _Motors_Initialize 6A1C  
                                _Robot_MoveForward 683A                                   ?_I2C1_Initialize 0501  
                          ?_MPU6050_ReadSensorData 05B3                        __end_of_ConvertPercentToPWM 5DFA  
                           __end_of_I2C1_ERROR_ISR 53C0                                 ?_Motors_Initialize 0501  
                          ?_I2C1_InterruptsDisable 0501                                        vfprintf@fmt 060F  
                                     ??_Motor_Stop 0530                     TMR0_CounterGet@counterHighByte 0518  
                               ?_Robot_MoveForward 0571                                           ??___flge 057D  
                                         ??___fleq 0519                                           ??___lmul 0519  
                                         ??_atan2f 05F1                                       ??_Robot_Stop 0531  
                                         ??_efgtoa 05CE                      MPU6050_GetMovement@roll_accel 0629  
                                      __pdataBANK6 06DE                                        __pdataBANK7 07CA  
                                         ??_floorf 05B7                                           ??_memcpy 0517  
                                      _atan2f$4450 0608                                        _atan2f$4448 0600  
                                      _atan2f$4449 0604                                         PCF_Wr@data 0519  
                              ??_Motors_Initialize 0531                           UART1_ReceiveISR@regValue 050C  
                    ?_INT0_DefaultInterruptHandler 0501                                   ??_Motor_SetSpeed 052F  
                              ??_Robot_MoveForward 0533      HC_SR04_Measure_Echo_Time@pulse_duration_ticks 057B  
                     __end_of_I2C1_ErrorFlagsClear 69E0                                           ??_strcpy 0515  
                                        ___fladd@a 0571                                          ___fladd@b 056D  
                                        ___fldiv@a 059E                                          ___fldiv@b 059A  
                                        ___flmul@a 0523                                          ___flmul@b 051F  
                                      __pbssCOMRAM 0534                      ConvertPercentToPWM@percentage 052C  
                                        ___flsub@a 0579                                          ___flsub@b 0575  
                 __end_of_INT0_SetInterruptHandler 69B0                                      __pcstackBANK5 0560  
                                    __pcstackBANK6 0600                   CCP2_LoadDutyValue@dutycycleValue 0511  
                       MPU6050_ReadSensorRaw@gyroX 0525                         MPU6050_ReadSensorRaw@gyroY 0527  
                       MPU6050_ReadSensorRaw@gyroZ 0529                           _UART1_RxInterruptHandler 06AC  
                              _mpu6050_initialized 05FE                                 __end_of_Motor_Stop 673E  
                                        __lcd_send 62C6                             ?_HC_SR04_Trigger_Pulse 0501  
                           ?_HC_SR04_Add_To_Filter 0517                              ??i2_I2C1_AddrTransmit 0501  
                            ?_I2C1_InterruptsClear 0501                                 __end_of_Robot_Stop 6A1C  
                          i2I2C1_AddrTransmit@addr 0501                          __end_of_Motors_Initialize 6A22  
                            _INT2_InterruptHandler 06BE                          __end_of_Robot_MoveForward 6850  
                   __end_of_MPU6050_ReadSensorData 2B20                                  ??_CCP1_Initialize 0511  
                     __end_of_MPU6050_ReadRegister 5852                                          __pnvBANK6 06F0  
                   __end_of_I2C1_InterruptsDisable 6986                                        _efgtoa$3808 05D6  
                                 ___lwdiv@dividend 0511                             _PIN_MANAGER_Initialize 50D4  
                         _TMR4_PeriodMatchCallback 06F3                                    ?_I2C1_ERROR_ISR 0501  
                                ?_UART1_Initialize 0501                                     _I2C1_ReadStart 660E  
                         ?_Motors_SynchronizedStop 0501                                     __lcd_send@mode 051D  
                            _MPU6050_ReadSensorRaw 4548                                      __pmediumconst FD7E  
                                         ?___fladd 056D                                UART1_Read@readValue 050B  
                                         ?___fldiv 059A                                          __ptext100 5E54  
                                        __ptext101 5528                                          __ptext110 6A40  
                                        __ptext102 69BE                                           ?___flneg 0511  
                                        __ptext111 69F8                                          __ptext103 6A2E  
                                        __ptext120 6892                                          __ptext112 6A00  
                                        __ptext104 5854                                          __ptext121 68A8  
                                        __ptext113 6634                                          __ptext105 65E8  
                                        __ptext130 6758                                          __ptext122 68BE  
                                        __ptext114 6A46                                          __ptext106 6A34  
                                        __ptext131 6484                                          __ptext123 624C  
                                        __ptext115 69D6                                          __ptext107 69F0  
                                        __ptext140 486C                                          __ptext132 6A5E  
                                        __ptext124 6928                                          __ptext116 6A08  
                                        __ptext108 6A3A                                          __ptext141 66E2  
                                        __ptext133 6770                                          __ptext125 6976  
                                        __ptext117 5308                                          __ptext109 660E  
                                        __ptext142 6450                                          __ptext134 64B6  
                                        __ptext126 693C                                          __ptext118 6866  
                                        __ptext143 68EA                                          __ptext135 6A60  
                                        __ptext127 6A4C                                          __ptext119 687C  
                                        __ptext144 6A64                                          __ptext136 6788  
                                        __ptext128 6950                                          __ptext145 6A66  
                                        __ptext137 64E8                                          __ptext129 6A5C  
                                        __ptext146 6A68                                          __ptext138 6A62  
                                        __ptext147 6A54                                          __ptext139 68D4  
                                        __ptext148 641A                                           ?___awmod 0511  
                                         ?___flmul 051F                                           ?___flsub 0575  
                                         ?___fltol 056D                                           ?___lldiv 051D  
                                         _I2C1ADB1 028F                              UART1_Write@tempTxHead 0511  
                                         ?___lwdiv 0511                                 ??_UART1_Initialize 0514  
                                         _I2C1CON0 0294                                           _I2C1CON1 0295  
                                         _I2C1CON2 0296                                  ?_UART1_ReceiveISR 0501  
                                         _I2C1_ISR 5854                                   _uart1RxLastError 06D6  
                                    ??_UART1_Write 0511                                 ??_UART1_ReceiveISR 050C  
                                        fabsf@F465 0695                                        __smallconst FD7E  
                                ??_CCP2_Initialize 0511                            i2c_lcd_goto@row_offsets 0522  
                       ??_INT2_SetInterruptHandler 0514                                    _Robot_TurnRight 680E  
                              MPU6050_Calibrate@ax 05D1                                MPU6050_Calibrate@ay 05D3  
                              MPU6050_Calibrate@az 05D5                                MPU6050_Calibrate@gx 05D7  
                              MPU6050_Calibrate@gy 05D9                                MPU6050_Calibrate@gz 05DB  
                                ??_TMR0_CounterGet 0513                         UART1_ReceiveISR@tempRxHead 050D  
                           I2C1_CounterSet@counter 0511                           __end_of_UART1_sendString 5BEA  
                      TMR0_CounterGet@counterValue 0515                                   ___lwdiv@quotient 0515  
                                         ?_sprintf 0615                   CCP1_LoadDutyValue@dutycycleValue 0511  
                         __end_of_I2C1_DataReceive 6A52                                           _T2CLKCON 0326  
                                      _U1ERRIRbits 02B2                                           _T4CLKCON 0332  
                                  _newDataReceived 06DC                               _INTERRUPT_Initialize 5972  
                                       _I2C1SDAPPS 0270                                         ?__lcd_send 051D  
                      __end_of_MPU6050_GetMovement 3984                                         _I2C1SCLPPS 0271  
                                 ??_Motors_StopAll 0531                                   _CLOCK_Initialize 6914  
                                ??_TMR0_Initialize 0511                        ?_HC_SR04_Get_Filtered_Value 052A  
                                     _receivedByte 06DD                                     _I2C1_StartSend 6A22  
                                     ?_I2C1_RX_ISR 0501                                           _INT0_ISR 6758  
                                     ?_I2C1_TX_ISR 0501                                           _INT1_ISR 6770  
                                     ?_I2C1_IsAddr 0501                                           _INT2_ISR 6788  
                       MPU6050_ReadRegister@result 051E                                       ?_I2C1_IsData 0501  
                                     ?_I2C1_IsNack 0501                                           _LATDbits 04C1  
                    _Motors_SynchronizedStart$3150 0563                      _Motors_SynchronizedStart$3151 0565  
                                     ?_I2C1_IsBusy 0501           __end_of_UART1_RxCompleteCallbackRegister 667C  
               ??_UART1_RxCompleteCallbackRegister 0514                  ?_UART1_RxCompleteCallbackRegister 0511  
                 _UART1_RxCompleteCallbackRegister 665A                        ??_HC_SR04_Measure_Echo_Time 0575  
                            _I2C1_CallbackRegister 0000                                   ??_Robot_TurnLeft 0533  
                        ?_INT1_SetInterruptHandler 0511                     ??_Motors_SynchronizedDirection 056C  
     Motors_SynchronizedDirection@direction_change 056E                                           _IPR1bits 0363  
                                         _PIE1bits 049F                                           _IPR4bits 0366  
                                         _PIE3bits 04A1                                   ?_I2C1_WriteStart 0501  
                                         _PIE4bits 04A2                                           _IPR7bits 0369  
                                         _PIE7bits 04A5                                         _I2C1_Close 6634  
                                         _IVTBASEH 045E                                           _IVTBASEL 045D  
                           __end_of_I2C1_ReadStart 6634                                           _IVTBASEU 045F  
                                         i2u310_40 68D2                                           i2u311_40 6878  
                                         i2u311_41 6872                                           i2u311_46 687A  
                                         i2u312_40 688E                                           i2u312_41 6888  
                                         i2u312_46 6890                                           i2u313_40 68A4  
                                         i2u313_41 689E                                           i2u313_46 68A6  
                                         i2u308_40 68BA                                           i2u308_41 68B4  
                                         i2u308_46 68BC                                           i2u309_40 68D0  
                                         i2u309_41 68CA                                      _I2C1STAT0bits 0298  
                                    _I2C1STAT1bits 0299                                           _PIR1bits 04AF  
                                         _PIR3bits 04B1                                           i2u614_40 68FC  
                                         i2u614_41 68F6                                           i2u615_40 68FE  
                                         i2u616_40 647C                                           i2u616_41 6478  
                                         i2u730_40 64FE                                           i2u730_41 64FA  
                                      _buffer_full 0547                                          atanf@sign 05DB  
                                         _PIR6bits 04B4                                           i2u732_40 4890  
                                         i2u731_48 6504                                           i2u724_40 6620  
                                         i2u732_41 488C                                           i2u731_49 6518  
                                         i2u724_41 661C                                         _I2C1_Write 5FAE  
                                         i2u661_40 66F6                                           i2u741_40 4998  
                                         i2u740_48 4968                                           i2u733_40 48BA  
                                         i2u725_40 6600                                           i2u661_41 66F2  
                                         i2u741_41 4994                                           i2u740_49 497C  
                                         i2u733_41 48B6                                           i2u725_41 65FC  
                                         i2u742_40 49C8                                           i2u726_40 649A  
                                         i2u742_41 49C4                                           i2u726_41 6496  
                                         i2u735_40 48E4                                           i2u734_48 48C0  
                                         i2u735_41 48E0                                           i2u734_49 48D4  
                                         i2u744_40 642A                                           i2u743_48 49CE  
                                         i2u736_40 490E                                           i2u728_40 64CC  
                                         i2u727_48 64A0                                           i2u744_41 6426  
                                         i2u743_49 49E2                                           i2u736_41 490A  
                                         i2u728_41 64C8                                           i2u727_49 64B4  
                                         i2u738_40 4938                                           i2u737_48 4914  
                                         i2u729_48 64D2                                           i2u738_41 4934  
                                         i2u737_49 4928                                           i2u729_49 64E6  
                                         i2u739_40 4962                                           i2u739_41 495E  
                                         i2u780_40 58D8                                           i2u780_41 58D4  
                                         i2u781_40 531C                                           i2u781_41 5318  
                                         i2u782_40 5340                                           i2u774_40 5864  
                                         i2u782_41 533C                                           i2u774_41 5860  
                                         i2u783_40 5354                                           i2u775_40 5872  
                                         i2u783_41 5350                                           i2u775_41 586E  
                                         i2u784_40 5378                                           i2u776_40 5888  
                                         i2u784_41 5374                                           i2u776_41 5884  
                                         i2u785_40 538C                                           i2u777_40 5896  
                                         i2u785_41 5388                                           i2u777_41 5892  
                                         i2u786_40 53AC                                           i2u778_40 58A6  
                                         i2u786_41 53A8                                           i2u778_41 58A2  
                                   _I2C1_WriteRead 5F5A                                           i2u779_40 58CA  
                                         i2u779_41 58C6                         DetectAdvancedGestures@data 05BB  
           HC_SR04_Read_Distance_CM@distance_float 05B5                              _MPU6050_WriteRegister 59F6  
                                      _distance_cm 06A5                         ??_HC_SR04_Read_Distance_CM 0533  
                   MPU6050_GetMovement@pitch_accel 062D                                          _vfpfcnvrt 3984  
             MPU6050_GetMovement@advanced_movement 0631                             I2C1_WriteRead@readData 0518  
                   ??_INT0_DefaultInterruptHandler 0504                                __end_of_UART1_Write 617E  
                                       vfpfcnvrt@c 060A                                        _INTCON0bits 04D6  
                                ___lmul@multiplier 0511                                          copy_data0 5B0C  
                                        copy_data1 5B2C                              ?_INTERRUPT_Initialize 0501  
                           __end_of_I2C1_StartSend 6A28                         __end_of_CCP1_LoadDutyValue 63AC  
                           ??_I2C1_InterruptsClear 0502                           _INT0_SetInterruptHandler 69A2  
                            MPU6050_Calibrate@temp 05B7                                 _Motor_SetDirection 4E4E  
                           _uart1TxBufferRemaining 054D                                  ??_TMR2_Initialize 0511  
                         __end_ofi2_I2C1_StartSend 6A46                    __end_of_Motors_SynchronizedStop 624C  
                             _I2C1_ErrorFlagsClear 69D6                                       _uart1RxCount 054A  
                              UART1_sendString@str 0513                             __end_of_I2C1_WriteRead 5FAE  
                                         __Hrparam 0000                                    ?_I2C1_ReadStart 0501  
                              ?_Motor_SetDirection 0511                             ?_MPU6050_ReadSensorRaw 051D  
                                        memcpy@tmp 051B                                         vfprintf@ap 0611  
                                         __Lrparam 0000                                         vfprintf@fp 060D  
                                  _accel_lsb_per_g 06E2                                      _I2C1_Callback 06C7  
                          __end_of_Robot_TurnRight 6824                      TMR0_CounterGet@counterLowByte 0517  
                         __end_of_I2C1_BufferClear 6A10                                         ?_vfpfcnvrt 0600  
                          MPU6050_ReadRegister@reg 051D                                        _last_status 06DA  
                        _HC_SR04_Measure_Echo_Time 3BD0                                  ??_UART1_IsRxReady 050A  
                                    _I2C1_IsBusCol 68A8                                  ??_UART1_IsTxReady 0511  
                               ___fpclassifyf@F465 0699                                      _I2C1_BusReset 624C  
                                       sprintf@fmt 0617          __end_of_UART1_DefaultFramingErrorCallback 6A6A  
              ??_UART1_DefaultFramingErrorCallback 050A                 ?_UART1_DefaultFramingErrorCallback 0501  
                _UART1_DefaultFramingErrorCallback 6A68                                      _sensor_config 07CA  
                                         ___xxtofl 4394                               ??_Motor_SetDirection 0512  
                             _MPU6050_ReadRegister 57C0                                         _T0CON0bits 031A  
                    __end_of_I2C1_InterruptsEnable 6914                            _HC_SR04_Get_Last_Status 6A2E  
                                     _I2C1CON0bits 0294                                       _I2C1CON1bits 0295  
                               Motor_Stop@motor_id 0530                                           __pivt0x8 0008  
                                  ___lwdiv@divisor 0513                                      _I2C1_ErrorGet 0000  
                                  ___lwdiv@counter 0517                                           __ptext10 6A5A  
                                         __ptext11 6050                                           __ptext20 60EA  
                                         __ptext12 5F04                                           __ptext21 62C6  
                                         __ptext13 3DF8                                           __ptext30 5724  
                                         __ptext22 58E6                                           __ptext14 55D6  
                                         __ptext31 667C                                           __ptext23 5A78  
                                         __ptext15 5D36                                           __ptext40 6994  
                                         __ptext32 669E                                           __ptext24 5B74  
                                         __ptext16 67A0                                           __ptext41 69A2  
                                         __ptext33 66C0                                           __ptext25 6134  
                                         __ptext17 49E4                                           __ptext50 683A  
                                         __ptext42 5DFA                                           __ptext34 659C  
                                         __ptext26 67CC                                           __ptext18 67B6  
                                         __ptext51 6850                                           __ptext43 6900  
                                         __ptext35 65C2                                           __ptext27 665A  
                                         __ptext19 60A0                                           __ptext60 5D98  
                                         __ptext52 5250                                           __ptext44 6914  
                                         __ptext36 651A                                           __ptext28 6A10  
                                         __ptext61 5CCC                                           __ptext53 620A  
                                         __ptext45 67E2                                           __ptext37 50D4  
                                         __ptext29 6548                                           __ptext70 364A  
                                         __ptext62 633C                                           __ptext54 41DA  
                                         __ptext46 67F8                                           __ptext38 5972  
                                         __ptext71 2B20                                           __ptext63 6374  
                                         __ptext55 5BEA                                           __ptext47 680E  
                                         __ptext39 6986                                           __ptext80 617E  
                                         __ptext72 180A                                           __ptext64 4E4E  
                                         __ptext56 6A1C                                           __ptext48 6824  
                                         __ptext81 1E30                                           __ptext73 09FC  
                                         __ptext65 2710                                           __ptext57 69B0  
                                         __ptext49 6A16                                           __ptext90 46DC  
                                         __ptext82 4548                                           __ptext74 4D50  
                                         __ptext66 53C0                                           __ptext58 6722  
                                         __ptext91 32B8                                           __ptext83 5F5A  
                                         __ptext75 63AC                                           __ptext67 59F6  
                                         __ptext59 5476                                           __ptext92 673E  
                                         __ptext84 6302                                           __ptext76 400E  
                                         __ptext68 5FAE                                           __ptext93 3BD0  
                                         __ptext85 6A22                                           __ptext77 63E4  
                                         __ptext69 57C0                                           __ptext94 4394  
                                         __ptext86 6A28                                           __ptext78 4C4A  
                                         __ptext95 4B42                                           __ptext87 69E0  
                                         __ptext79 2F04                                           __ptext96 22E8  
                                         __ptext88 69E8                                           __ptext97 6704  
                                         __ptext89 6572                                           __ptext98 5192  
                                         __ptext99 5680                          HC_SR04_Read_Distance_CM@i 05B9  
                                       _U1CON0bits 02AB                                         _U1CON1bits 02AC  
                      __end_of_I2C1_RestartDisable 6A3A                                    ?_I2C1_StartSend 0501  
                                      ??__lcd_send 051E                                         strcpy@dest 0511  
                               MPU6050_Calibrate@i 05DD                                  ??_TMR4_Initialize 0511  
                                _I2C1_AddrTransmit 69E8                                           atan2f@ix 0610  
                                         atan2f@iy 0614                                  ??_i2c_lcd_command 051F  
                            ?_I2C1_ErrorFlagsClear 0501                      MPU6050_ReadRegister@data_read 0520  
                       ?_UART1_Transmit_Vector_ISR 0501                                        ?_I2C1_Close 0501  
                                  ?_I2C1_WriteRead 0512                                 ?_I2C1_AddrTransmit 0501  
                         ??_DetectAdvancedGestures 0533                                        _IVTLOCKbits 0459  
                                    _I2C1_StopSend 65E8                                   _last_distance_cm 0543  
                                         _mpu_data 07AE                         __end_of_Robot_MoveBackward 6866  
                                      ?_I2C1_Write 0512                                           efgtoa@fp 05C7  
                                         efgtoa@ne 05D0                                           efgtoa@pp 05D8  
                                         efgtoa@ou 05E3                          _UART1_OverrunErrorHandler 06B8  
                           ?_MPU6050_WriteRegister 0519                                           isa$xinst 0000  
                                         _vfprintf 5EAE                           ?i2_I2C1_InterruptsEnable 0501  
                              ??_I2C1_AddrTransmit 0511                    Robot_MoveForward@speed_pwm_duty 0571  
                        I2C1_WriteRead@writeLength 0516                        Motor_SetDirection@direction 0511  
                                   ?_I2C1_IsBusCol 0501                                        _UART1_Write 6134  
             __end_of_INT1_DefaultInterruptHandler 6A62                       _INT1_DefaultInterruptHandler 6A60  
                                   ?_I2C1_BusReset 0501                                      ??_Default_ISR 0504  
                            ?_MPU6050_ReadRegister 0501                                    _distance_buffer 0744  
                      __end_of_UART1_RxDataHandler 6704                        CCP1_LoadDutyValue@dutyValue 0513  
                                      _uart1RxHead 054C                                        _uart1TxHead 054F  
                     MPU6050_ReadSensorData@ax_raw 05B5                       MPU6050_ReadSensorData@ay_raw 05B7  
                                      _uart1RxTail 054B                       MPU6050_ReadSensorData@az_raw 05B9  
                                      _uart1TxTail 054E                                           memcpy@d1 0511  
                                         memcpy@s1 0513                       MPU6050_ReadSensorData@gx_raw 05BB  
                     MPU6050_ReadSensorData@gy_raw 05BD                       MPU6050_ReadSensorData@gz_raw 05BF  
                                  _CCP1_Initialize 67F8                            ??_HC_SR04_Trigger_Pulse 0511  
                           ??_INTERRUPT_Initialize 0514                            ??_HC_SR04_Add_To_Filter 0519  
                             __write_nibble@nibble 051C                                           intlevel2 0000  
                        __end_of_I2C1_AddrTransmit 69F0                                          sprintf@ap 061D  
                                      _gyro_offset 0679                          ?_UART1_Receive_Vector_ISR 0501  
                                 ___lldiv@dividend 051D                                   ??_I2C1_ERROR_ISR 0503  
                          ?_PIN_MANAGER_Initialize 0501                         __end_of_I2C1_RestartEnable 6A2E  
                                        strcpy@src 0513                                     ?_I2C1_StopSend 0501  
                  HC_SR04_Get_Filtered_Value@count 0567                      Motors_SynchronizedStart@dir_a 0562  
                    Motors_SynchronizedStart@dir_b 0530                         main@hcsr04_trigger_counter 06D2  
                        ?_Motors_SynchronizedStart 0530                  __end_of_UART1_Transmit_Vector_ISR 6A5A  
                              _uart1RxStatusBuffer 0734                                    _CCP2_Initialize 67E2  
                    HC_SR04_Get_Filtered_Value@sum 0560                                        efgtoa@nmode 05DA  
                                  _TMR0_CounterGet 6704                                         _UART1_Read 6450  
                                 ?_Robot_TurnRight 0571                                        ??_vfpfcnvrt 05FC  
                         __end_of_CLOCK_Initialize 6928                          ??_HC_SR04_Get_Last_Status 0511  
                                         sprintf@f 061F                                           sprintf@s 0615  
                    ?_INT1_DefaultInterruptHandler 0501                                   ___lldiv@quotient 0525  
                                  _TMR0_Initialize 651A                   __end_of_INT1_SetInterruptHandler 69A2  
        __end_of_UART1_DefaultOverrunErrorCallback 6A68                ??_UART1_DefaultOverrunErrorCallback 050A  
               ?_UART1_DefaultOverrunErrorCallback 0501                  _UART1_DefaultOverrunErrorCallback 6A66  
                      __end_ofi2_I2C1_AddrTransmit 6A08                                  _I2C1_DataTransmit 69F0  
                                       _TMR0_Start 6A10                           _UART1_TxInterruptHandler 06B2  
                                ?_UART1_sendString 0513                                      ___fladd@signs 052F  
                              __end_of_Default_ISR 6A5E                                 ?_I2C1_DataTransmit 0501  
                                ?_I2C1_DataReceive 0501                     __end_of_PIN_MANAGER_Initialize 5192  
                               ??_UART1_sendString 0515                             main@mpu_update_counter 06D4  
                           ??_I2C1_ErrorFlagsClear 0502                                       ___fladd@aexp 0530  
                                     ___fladd@bexp 0531                        _DetectAdvancedGestures$4443 05BD  
        __end_of_UART1_ParityErrorCallbackRegister 669E                ??_UART1_ParityErrorCallbackRegister 0514  
               ?_UART1_ParityErrorCallbackRegister 0511                  _UART1_ParityErrorCallbackRegister 667C  
                               ??_I2C1_DataReceive 0503                           MPU6050_WriteRegister@reg 051A  
                                    ?_HC_SR04_Init 0501                                ??_I2C1_DataTransmit 0503  
                                i2_I2C1_CounterSet 69F8                    __end_ofi2_I2C1_InterruptsEnable 693C  
                         _TMR2_PeriodMatchCallback 06F6                      HC_SR04_Add_To_Filter@distance 0517  
